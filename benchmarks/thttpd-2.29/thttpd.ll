; ModuleID = 'thttpd.bc'
source_filename = "llvm-link"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.15.0"

%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sFILEX = type opaque
%struct.__sbuf = type { i8*, i32 }
%struct.throttletab = type { i8*, i64, i64, i64, i64, i32 }
%struct.httpd_server = type { i8*, i8*, i16, i8*, i32, i32, i8*, i8*, i32, i8*, i32, i32, i32, %struct.__sFILE*, i32, i32, i32, i8*, i8*, i32 }
%union.ClientData = type { i8* }
%struct.connecttab = type { i32, i32, %struct.httpd_conn*, [10 x i32], i32, i64, i64, i64, i64, %struct.TimerStruct*, %struct.TimerStruct*, i64, i64, i64, i64 }
%struct.httpd_conn = type { i32, %struct.httpd_server*, %union.httpd_sockaddr, i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i8*, i8*, i32, i32, i32, i32, i64, i64, i32, i32, %struct.stat, i32, i8* }
%union.httpd_sockaddr = type { %struct.sockaddr_storage }
%struct.sockaddr_storage = type { i8, i8, [6 x i8], i64, [112 x i8] }
%struct.stat = type { i32, i16, i16, i64, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64, i32, i32, i32, i32, [2 x i64] }
%struct.timespec = type { i64, i64 }
%struct.TimerStruct = type { void (i8*, %struct.timeval*)*, %union.ClientData, i64, i32, %struct.timeval, %struct.TimerStruct*, %struct.TimerStruct*, i32 }
%struct.timeval = type { i64, i32 }
%struct.mime_entry = type { i8*, i64, i8*, i64 }
%struct.passwd = type { i8*, i8*, i32, i32, i64, i8*, i8*, i8*, i8*, i64 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, i8*, %struct.sockaddr*, %struct.addrinfo* }
%struct.sockaddr = type { i8, i8, [14 x i8] }
%struct.iovec = type { i8*, i64 }
%struct.sockaddr_in6 = type { i8, i8, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon }
%union.anon = type { [4 x i32] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.DIR = type { i32, i64, i64, i8*, i32, i64, i64, i32, %struct._opaque_pthread_mutex_t, %struct._telldir* }
%struct._opaque_pthread_mutex_t = type { i64, [56 x i8] }
%struct._telldir = type opaque
%struct.dirent = type { i64, i64, i16, i16, i8, [1024 x i8] }

@terminate = global i32 0, align 4, !dbg !0
@stats_time = common global i64 0, align 8, !dbg !477
@start_time = common global i64 0, align 8, !dbg !475
@stats_connections = common global i64 0, align 8, !dbg !479
@stats_bytes = common global i64 0, align 8, !dbg !481
@stats_simultaneous = common global i32 0, align 4, !dbg !483
@.str = private unnamed_addr constant [10 x i8] c"sensitive\00", section "llvm.metadata"
@.str.1 = private unnamed_addr constant [9 x i8] c"thttpd.c\00", section "llvm.metadata"
@argv0 = internal global i8* null, align 8, !dbg !413
@.str.2 = private unnamed_addr constant [29 x i8] c"can't find any valid address\00", align 1
@__stderrp = external global %struct.__sFILE*, align 8
@.str.3 = private unnamed_addr constant [34 x i8] c"%s: can't find any valid address\0A\00", align 1
@numthrottles = internal global i32 0, align 4, !dbg !461
@maxthrottles = internal global i32 0, align 4, !dbg !463
@throttles = internal global %struct.throttletab* null, align 8, !dbg !459
@throttlefile = internal global i8* null, align 8, !dbg !445
@user = internal global i8* null, align 8, !dbg !451
@.str.4 = private unnamed_addr constant [23 x i8] c"unknown user - '%.80s'\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"%s: unknown user - '%s'\0A\00", align 1
@logfile = internal global i8* null, align 8, !dbg !443
@.str.6 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@no_log = internal global i32 0, align 4, !dbg !425
@.str.7 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@__stdoutp = external global %struct.__sFILE*, align 8
@.str.8 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"%.80s - %m\00", align 1
@.str.10 = private unnamed_addr constant [67 x i8] c"logfile is not an absolute path, you may not be able to re-open it\00", align 1
@.str.11 = private unnamed_addr constant [72 x i8] c"%s: logfile is not an absolute path, you may not be able to re-open it\0A\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"fchown logfile - %m\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"fchown logfile\00", align 1
@dir = internal global i8* null, align 8, !dbg !419
@.str.14 = private unnamed_addr constant [11 x i8] c"chdir - %m\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"chdir\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@debug = internal global i32 0, align 4, !dbg !415
@__stdinp = external global %struct.__sFILE*, align 8
@.str.17 = private unnamed_addr constant [12 x i8] c"daemon - %m\00", align 1
@pidfile = internal global i8* null, align 8, !dbg !449
@.str.18 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@max_connects = internal global i32 0, align 4, !dbg !469
@.str.20 = private unnamed_addr constant [31 x i8] c"fdwatch initialization failure\00", align 1
@do_chroot = internal global i32 0, align 4, !dbg !423
@.str.21 = private unnamed_addr constant [12 x i8] c"chroot - %m\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"chroot\00", align 1
@.str.23 = private unnamed_addr constant [74 x i8] c"logfile is not within the chroot tree, you will not be able to re-open it\00", align 1
@.str.24 = private unnamed_addr constant [79 x i8] c"%s: logfile is not within the chroot tree, you will not be able to re-open it\0A\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"chroot chdir - %m\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"chroot chdir\00", align 1
@data_dir = internal global i8* null, align 8, !dbg !421
@.str.27 = private unnamed_addr constant [20 x i8] c"data_dir chdir - %m\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"data_dir chdir\00", align 1
@got_hup = internal global i32 0, align 4, !dbg !485
@got_usr1 = internal global i32 0, align 4, !dbg !488
@watchdog_flag = internal global i32 0, align 4, !dbg !490
@hostname = internal global i8* null, align 8, !dbg !447
@port = internal global i16 0, align 2, !dbg !417
@cgi_pattern = internal global i8* null, align 8, !dbg !433
@cgi_limit = internal global i32 0, align 4, !dbg !435
@charset = internal global i8* null, align 8, !dbg !453
@p3p = internal global i8* null, align 8, !dbg !455
@max_age = internal global i32 0, align 4, !dbg !457
@no_symlink_check = internal global i32 0, align 4, !dbg !427
@do_vhost = internal global i32 0, align 4, !dbg !429
@do_global_passwd = internal global i32 0, align 4, !dbg !431
@url_pattern = internal global i8* null, align 8, !dbg !437
@local_pattern = internal global i8* null, align 8, !dbg !441
@no_empty_referrers = internal global i32 0, align 4, !dbg !439
@hs = internal global %struct.httpd_server* null, align 8, !dbg !492
@JunkClientData = external global %union.ClientData, align 8
@.str.29 = private unnamed_addr constant [30 x i8] c"tmr_create(occasional) failed\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"tmr_create(idle) failed\00", align 1
@.str.31 = private unnamed_addr constant [36 x i8] c"tmr_create(update_throttles) failed\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"tmr_create(show_stats) failed\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"setgroups - %m\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"setgid - %m\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"initgroups - %m\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"setuid - %m\00", align 1
@.str.37 = private unnamed_addr constant [58 x i8] c"started as root without requesting chroot(), warning only\00", align 1
@connects = internal global %struct.connecttab* null, align 8, !dbg !465
@.str.38 = private unnamed_addr constant [38 x i8] c"out of memory allocating a connecttab\00", align 1
@first_free_connect = internal global i32 0, align 4, !dbg !471
@num_connects = internal global i32 0, align 4, !dbg !467
@httpd_conn_count = internal global i32 0, align 4, !dbg !473
@.str.39 = private unnamed_addr constant [13 x i8] c"fdwatch - %m\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"exiting\00", align 1
@.str.43 = private unnamed_addr constant [39 x i8] c"up %ld seconds, stats for %ld seconds:\00", align 1
@.str.44 = private unnamed_addr constant [104 x i8] c"  thttpd - %ld connections (%g/sec), %d max simultaneous, %lld bytes (%g/sec), %d httpd_conns allocated\00", align 1
@.str.124 = private unnamed_addr constant [33 x i8] c"replacing non-null wakeup_timer!\00", align 1
@.str.125 = private unnamed_addr constant [37 x i8] c"tmr_create(wakeup_connection) failed\00", align 1
@.str.126 = private unnamed_addr constant [25 x i8] c"write - %m sending %.80s\00", align 1
@.str.50 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.123 = private unnamed_addr constant [56 x i8] c"throttle sending count was negative - shouldn't happen!\00", align 1
@.str.130 = private unnamed_addr constant [33 x i8] c"replacing non-null linger_timer!\00", align 1
@.str.131 = private unnamed_addr constant [43 x i8] c"tmr_create(linger_clear_connection) failed\00", align 1
@.str.120 = private unnamed_addr constant [22 x i8] c"too many connections!\00", align 1
@.str.121 = private unnamed_addr constant [36 x i8] c"the connects free list is messed up\00", align 1
@.str.122 = private unnamed_addr constant [39 x i8] c"out of memory allocating an httpd_conn\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"re-opening logfile\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"re-opening %.80s - %m\00", align 1
@.str.127 = private unnamed_addr constant [70 x i8] c"throttle #%d '%.80s' rate %ld greatly exceeding limit %ld; %d sending\00", align 1
@.str.128 = private unnamed_addr constant [62 x i8] c"throttle #%d '%.80s' rate %ld exceeding limit %ld; %d sending\00", align 1
@.str.129 = private unnamed_addr constant [65 x i8] c"throttle #%d '%.80s' rate %ld lower than minimum %ld; %d sending\00", align 1
@.str.132 = private unnamed_addr constant [35 x i8] c"%.80s connection timed out reading\00", align 1
@.str.133 = private unnamed_addr constant [35 x i8] c"%.80s connection timed out sending\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"/tmp\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c"child wait - %m\00", align 1
@.str.41 = private unnamed_addr constant [25 x i8] c"exiting due to signal %d\00", align 1
@.str.76 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.113 = private unnamed_addr constant [20 x i8] c" %4900[^ \09] %ld-%ld\00", align 1
@.str.114 = private unnamed_addr constant [16 x i8] c" %4900[^ \09] %ld\00", align 1
@.str.115 = private unnamed_addr constant [33 x i8] c"unparsable line in %.80s - %.80s\00", align 1
@.str.116 = private unnamed_addr constant [38 x i8] c"%s: unparsable line in %.80s - %.80s\0A\00", align 1
@.str.117 = private unnamed_addr constant [3 x i8] c"|/\00", align 1
@.str.118 = private unnamed_addr constant [39 x i8] c"out of memory allocating a throttletab\00", align 1
@.str.119 = private unnamed_addr constant [44 x i8] c"%s: out of memory allocating a throttletab\0A\00", align 1
@.str.106 = private unnamed_addr constant [31 x i8] c"out of memory copying a string\00", align 1
@.str.107 = private unnamed_addr constant [36 x i8] c"%s: out of memory copying a string\0A\00", align 1
@.str.109 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.110 = private unnamed_addr constant [26 x i8] c"getaddrinfo %.80s - %.80s\00", align 1
@.str.111 = private unnamed_addr constant [25 x i8] c"%s: getaddrinfo %s - %s\0A\00", align 1
@.str.112 = private unnamed_addr constant [39 x i8] c"%.80s - sockaddr too small (%lu < %lu)\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"nobody\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"-V\00", align 1
@.str.52 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.53 = private unnamed_addr constant [22 x i8] c"thttpd/2.29 23May2018\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"-C\00", align 1
@.str.55 = private unnamed_addr constant [3 x i8] c"-p\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"-r\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"-nor\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"-dd\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"-s\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"-nos\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"-u\00", align 1
@.str.63 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"-t\00", align 1
@.str.65 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"-l\00", align 1
@.str.67 = private unnamed_addr constant [3 x i8] c"-v\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"-nov\00", align 1
@.str.69 = private unnamed_addr constant [3 x i8] c"-g\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c"-nog\00", align 1
@.str.71 = private unnamed_addr constant [3 x i8] c"-i\00", align 1
@.str.72 = private unnamed_addr constant [3 x i8] c"-T\00", align 1
@.str.73 = private unnamed_addr constant [3 x i8] c"-P\00", align 1
@.str.74 = private unnamed_addr constant [3 x i8] c"-M\00", align 1
@.str.75 = private unnamed_addr constant [3 x i8] c"-D\00", align 1
@.str.108 = private unnamed_addr constant [219 x i8] c"usage:  %s [-C configfile] [-p port] [-d dir] [-r|-nor] [-dd data_dir] [-s|-nos] [-v|-nov] [-g|-nog] [-u user] [-c cgipat] [-t throttles] [-h host] [-l logfile] [-i pidfile] [-T charset] [-P P3P] [-M maxage] [-V] [-D]\0A\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c" \09\0A\0D\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.80 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"nochroot\00", align 1
@.str.82 = private unnamed_addr constant [9 x i8] c"data_dir\00", align 1
@.str.83 = private unnamed_addr constant [15 x i8] c"nosymlinkcheck\00", align 1
@.str.84 = private unnamed_addr constant [13 x i8] c"symlinkcheck\00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"cgipat\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"cgilimit\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"urlpat\00", align 1
@.str.89 = private unnamed_addr constant [16 x i8] c"noemptyreferers\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"noemptyreferrers\00", align 1
@.str.91 = private unnamed_addr constant [9 x i8] c"localpat\00", align 1
@.str.92 = private unnamed_addr constant [10 x i8] c"throttles\00", align 1
@.str.93 = private unnamed_addr constant [5 x i8] c"host\00", align 1
@.str.94 = private unnamed_addr constant [8 x i8] c"logfile\00", align 1
@.str.95 = private unnamed_addr constant [6 x i8] c"vhost\00", align 1
@.str.96 = private unnamed_addr constant [8 x i8] c"novhost\00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c"globalpasswd\00", align 1
@.str.98 = private unnamed_addr constant [15 x i8] c"noglobalpasswd\00", align 1
@.str.99 = private unnamed_addr constant [8 x i8] c"pidfile\00", align 1
@.str.100 = private unnamed_addr constant [8 x i8] c"charset\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"p3p\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c"max_age\00", align 1
@.str.103 = private unnamed_addr constant [32 x i8] c"%s: unknown config option '%s'\0A\00", align 1
@.str.105 = private unnamed_addr constant [34 x i8] c"%s: value required for %s option\0A\00", align 1
@.str.104 = private unnamed_addr constant [37 x i8] c"%s: no value required for %s option\0A\00", align 1
@httpd_err400title = global i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10.3, i32 0, i32 0), align 8, !dbg !494
@.str.10.3 = private unnamed_addr constant [12 x i8] c"Bad Request\00", align 1
@httpd_err400form = global i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.11.6, i32 0, i32 0), align 8, !dbg !674
@.str.11.6 = private unnamed_addr constant [69 x i8] c"Your request has bad syntax or is inherently impossible to satisfy.\0A\00", align 1
@httpd_err408title = global i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12.9, i32 0, i32 0), align 8, !dbg !676
@.str.12.9 = private unnamed_addr constant [16 x i8] c"Request Timeout\00", align 1
@httpd_err408form = global i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.13.12, i32 0, i32 0), align 8, !dbg !678
@.str.13.12 = private unnamed_addr constant [54 x i8] c"No request appeared within a reasonable time period.\0A\00", align 1
@httpd_err503title = global i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.14.15, i32 0, i32 0), align 8, !dbg !680
@.str.14.15 = private unnamed_addr constant [31 x i8] c"Service Temporarily Overloaded\00", align 1
@httpd_err503form = global i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.15.18, i32 0, i32 0), align 8, !dbg !682
@.str.15.18 = private unnamed_addr constant [79 x i8] c"The requested URL '%.80s' is temporarily overloaded.  Please try again later.\0A\00", align 1
@.str.134 = private unnamed_addr constant [41 x i8] c"out of memory allocating an httpd_server\00", align 1
@.str.1.135 = private unnamed_addr constant [31 x i8] c"out of memory copying hostname\00", align 1
@httpd_initialize.ghnbuf = internal global [256 x i8] zeroinitializer, align 16, !dbg !666
@.str.2.136 = private unnamed_addr constant [34 x i8] c"out of memory copying cgi_pattern\00", align 1
@.str.3.137 = private unnamed_addr constant [3 x i8] c"|/\00", align 1
@.str.4.138 = private unnamed_addr constant [26 x i8] c"out of memory copying cwd\00", align 1
@.str.5.139 = private unnamed_addr constant [34 x i8] c"out of memory copying url_pattern\00", align 1
@.str.6.140 = private unnamed_addr constant [36 x i8] c"out of memory copying local_pattern\00", align 1
@.str.7.143 = private unnamed_addr constant [26 x i8] c"%.80s starting on port %d\00", align 1
@.str.8.144 = private unnamed_addr constant [22 x i8] c"thttpd/2.29 23May2018\00", align 1
@.str.9.147 = private unnamed_addr constant [33 x i8] c"%.80s starting on %.80s, port %d\00", align 1
@httpd_ntoa.str = internal global [200 x i8] zeroinitializer, align 16, !dbg !684
@.str.60.148 = private unnamed_addr constant [8 x i8] c"::ffff:\00", align 1
@enc_tab = internal global [3 x %struct.mime_entry] [%struct.mime_entry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.104.175, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.105.176, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.106.177, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107.178, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108.179, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.109.180, i32 0, i32 0), i64 0 }], align 16, !dbg !823
@typ_tab = internal global [193 x %struct.mime_entry] [%struct.mime_entry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.110.149, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111.150, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112.151, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113.152, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114.153, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.115.154, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116.155, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.117.156, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.118.157, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.119.158, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120.159, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.121.160, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122.161, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.121.160, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.123.162, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.121.160, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.124.163, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.125.164, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.126.165, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127.166, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.128.167, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127.166, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.129.168, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.130.169, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.131.170, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.132.171, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133.172, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.134.173, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.135, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111.150, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.136, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.138, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.139, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.140, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.141, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.142, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.143, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.144, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.145, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.146, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.147, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.148, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.149, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.150, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.151, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.152, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.153, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.154, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.155, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.156, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.155, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.157, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.158, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.158, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111.150, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.161, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111.150, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.162, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.163, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.164, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.165, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.166, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111.150, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.167, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.168, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.169, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.155, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.170, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.119.158, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.172, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.173, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111.150, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.175, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.176, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.155, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.177, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.178, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.179, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.178, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.180, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.178, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.181, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.178, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.182, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.178, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.183, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.184, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.185, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.186, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.187, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.188, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.189, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.190, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.191, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69.174, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.192, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69.174, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.193, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.194, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.195, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.196, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.198, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.199, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.198, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.200, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.201, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.202, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.203, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.204, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.205, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.206, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.205, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.207, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.205, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.208, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.205, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.209, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.210, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.211, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.212, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.213, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.214, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.215, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.216, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.217, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.218, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.219, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111.150, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.220, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.221, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.222, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111.150, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.223, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.224, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.225, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.226, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.227, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.228, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.229, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.230, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.231, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.232, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.233, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.212, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.234, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.212, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.235, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.236, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.237, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.238, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.239, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.228, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.240, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.241, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.242, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.243, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.244, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.245, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.246, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.245, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.247, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.248, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.249, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.250, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.251, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.250, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.252, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.250, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.253, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.245, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.254, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.255, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.256, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.232, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.257, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.243, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.258, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.259, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.260, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.139, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.261, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111.150, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.262, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.263, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.265, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.266, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.267, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.268, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.269, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.270, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.271, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.272, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.273, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.274, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.275, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.276, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.277, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.278, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.279, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.280, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.281, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.282, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.283, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.284, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.285, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.286, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.119.158, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.287, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.241, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.288, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.289, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.290, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.291, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.292, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.293, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.294, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.295, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.296, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.297, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.298, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.291, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.299, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.300, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.301, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.302, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.303, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.304, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.305, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.306, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.307, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.308, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.309, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.310, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.311, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.310, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.312, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.313, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.314, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.315, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.316, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.232, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.317, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.318, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.319, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.320, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.321, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.320, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.322, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.320, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.323, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.320, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.324, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.325, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.326, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.325, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.327, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.130.169, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.328, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111.150, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.329, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.330, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.331, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.332, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.333, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.334, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.335, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.336, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.337, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.338, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.339, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.340, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.341, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.342, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.343, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.344, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.345, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.346, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.347, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.346, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.348, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.349, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.350, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.351, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.352, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.354, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.355, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.356, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.357, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.358, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.359, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.360, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.361, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.362, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.300, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.363, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.364, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.365, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.366, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.367, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.368, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.369, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.370, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.371, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.370, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.372, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.373, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.374, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.373, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.375, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.300, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.376, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.377, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.378, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.379, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.380, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.125.164, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.381, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.382, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.383, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.384, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.385, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.386, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.387, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.388, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.389, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.390, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.391, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.392, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.393, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.394, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.395, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.396, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.397, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.398, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.399, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.400, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.401, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.402, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.403, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.404, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.405, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.406, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.407, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.408, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.409, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.410, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.411, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.412, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.413, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.414, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.415, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.416, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.417, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.386, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.418, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.332, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.419, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.420, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.421, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.422, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.423, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.424, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.425, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.424, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.426, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.427, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.428, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.165, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.429, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.430, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.431, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.165, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.432, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.433, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.434, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.435, i32 0, i32 0), i64 0 }, %struct.mime_entry { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.436, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.437, i32 0, i32 0), i64 0 }], align 16, !dbg !826
@.str.110.149 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.111.150 = private unnamed_addr constant [25 x i8] c"application/octet-stream\00", align 1
@.str.112.151 = private unnamed_addr constant [4 x i8] c"aab\00", align 1
@.str.113.152 = private unnamed_addr constant [29 x i8] c"application/x-authorware-bin\00", align 1
@.str.114.153 = private unnamed_addr constant [4 x i8] c"aam\00", align 1
@.str.115.154 = private unnamed_addr constant [29 x i8] c"application/x-authorware-map\00", align 1
@.str.116.155 = private unnamed_addr constant [4 x i8] c"aas\00", align 1
@.str.117.156 = private unnamed_addr constant [29 x i8] c"application/x-authorware-seg\00", align 1
@.str.118.157 = private unnamed_addr constant [3 x i8] c"ai\00", align 1
@.str.119.158 = private unnamed_addr constant [23 x i8] c"application/postscript\00", align 1
@.str.120.159 = private unnamed_addr constant [4 x i8] c"aif\00", align 1
@.str.121.160 = private unnamed_addr constant [13 x i8] c"audio/x-aiff\00", align 1
@.str.122.161 = private unnamed_addr constant [5 x i8] c"aifc\00", align 1
@.str.123.162 = private unnamed_addr constant [5 x i8] c"aiff\00", align 1
@.str.124.163 = private unnamed_addr constant [4 x i8] c"asc\00", align 1
@.str.125.164 = private unnamed_addr constant [23 x i8] c"text/plain; charset=%s\00", align 1
@.str.126.165 = private unnamed_addr constant [4 x i8] c"asf\00", align 1
@.str.127.166 = private unnamed_addr constant [15 x i8] c"video/x-ms-asf\00", align 1
@.str.128.167 = private unnamed_addr constant [4 x i8] c"asx\00", align 1
@.str.129.168 = private unnamed_addr constant [3 x i8] c"au\00", align 1
@.str.130.169 = private unnamed_addr constant [12 x i8] c"audio/basic\00", align 1
@.str.131.170 = private unnamed_addr constant [4 x i8] c"avi\00", align 1
@.str.132.171 = private unnamed_addr constant [16 x i8] c"video/x-msvideo\00", align 1
@.str.133.172 = private unnamed_addr constant [6 x i8] c"bcpio\00", align 1
@.str.134.173 = private unnamed_addr constant [20 x i8] c"application/x-bcpio\00", align 1
@.str.135 = private unnamed_addr constant [4 x i8] c"bin\00", align 1
@.str.136 = private unnamed_addr constant [4 x i8] c"bmp\00", align 1
@.str.137 = private unnamed_addr constant [10 x i8] c"image/bmp\00", align 1
@.str.138 = private unnamed_addr constant [4 x i8] c"cdf\00", align 1
@.str.139 = private unnamed_addr constant [21 x i8] c"application/x-netcdf\00", align 1
@.str.140 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@.str.141 = private unnamed_addr constant [22 x i8] c"application/x-java-vm\00", align 1
@.str.142 = private unnamed_addr constant [5 x i8] c"cpio\00", align 1
@.str.143 = private unnamed_addr constant [19 x i8] c"application/x-cpio\00", align 1
@.str.144 = private unnamed_addr constant [4 x i8] c"cpt\00", align 1
@.str.145 = private unnamed_addr constant [27 x i8] c"application/mac-compactpro\00", align 1
@.str.146 = private unnamed_addr constant [4 x i8] c"crl\00", align 1
@.str.147 = private unnamed_addr constant [24 x i8] c"application/x-pkcs7-crl\00", align 1
@.str.148 = private unnamed_addr constant [4 x i8] c"crt\00", align 1
@.str.149 = private unnamed_addr constant [27 x i8] c"application/x-x509-ca-cert\00", align 1
@.str.150 = private unnamed_addr constant [4 x i8] c"csh\00", align 1
@.str.151 = private unnamed_addr constant [18 x i8] c"application/x-csh\00", align 1
@.str.152 = private unnamed_addr constant [4 x i8] c"css\00", align 1
@.str.153 = private unnamed_addr constant [21 x i8] c"text/css; charset=%s\00", align 1
@.str.154 = private unnamed_addr constant [4 x i8] c"dcr\00", align 1
@.str.155 = private unnamed_addr constant [23 x i8] c"application/x-director\00", align 1
@.str.156 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.157 = private unnamed_addr constant [4 x i8] c"djv\00", align 1
@.str.158 = private unnamed_addr constant [15 x i8] c"image/vnd.djvu\00", align 1
@.str.159 = private unnamed_addr constant [5 x i8] c"djvu\00", align 1
@.str.160 = private unnamed_addr constant [4 x i8] c"dll\00", align 1
@.str.161 = private unnamed_addr constant [4 x i8] c"dms\00", align 1
@.str.162 = private unnamed_addr constant [4 x i8] c"doc\00", align 1
@.str.163 = private unnamed_addr constant [19 x i8] c"application/msword\00", align 1
@.str.164 = private unnamed_addr constant [4 x i8] c"dtd\00", align 1
@.str.165 = private unnamed_addr constant [21 x i8] c"text/xml; charset=%s\00", align 1
@.str.166 = private unnamed_addr constant [5 x i8] c"dump\00", align 1
@.str.167 = private unnamed_addr constant [4 x i8] c"dvi\00", align 1
@.str.168 = private unnamed_addr constant [18 x i8] c"application/x-dvi\00", align 1
@.str.169 = private unnamed_addr constant [4 x i8] c"dxr\00", align 1
@.str.170 = private unnamed_addr constant [4 x i8] c"eps\00", align 1
@.str.171 = private unnamed_addr constant [4 x i8] c"etx\00", align 1
@.str.172 = private unnamed_addr constant [14 x i8] c"text/x-setext\00", align 1
@.str.173 = private unnamed_addr constant [4 x i8] c"exe\00", align 1
@.str.174 = private unnamed_addr constant [3 x i8] c"ez\00", align 1
@.str.175 = private unnamed_addr constant [25 x i8] c"application/andrew-inset\00", align 1
@.str.176 = private unnamed_addr constant [4 x i8] c"fgd\00", align 1
@.str.177 = private unnamed_addr constant [3 x i8] c"fh\00", align 1
@.str.178 = private unnamed_addr constant [17 x i8] c"image/x-freehand\00", align 1
@.str.179 = private unnamed_addr constant [4 x i8] c"fh4\00", align 1
@.str.180 = private unnamed_addr constant [4 x i8] c"fh5\00", align 1
@.str.181 = private unnamed_addr constant [4 x i8] c"fh7\00", align 1
@.str.182 = private unnamed_addr constant [4 x i8] c"fhc\00", align 1
@.str.183 = private unnamed_addr constant [4 x i8] c"gif\00", align 1
@.str.184 = private unnamed_addr constant [10 x i8] c"image/gif\00", align 1
@.str.185 = private unnamed_addr constant [5 x i8] c"gtar\00", align 1
@.str.186 = private unnamed_addr constant [19 x i8] c"application/x-gtar\00", align 1
@.str.187 = private unnamed_addr constant [4 x i8] c"hdf\00", align 1
@.str.188 = private unnamed_addr constant [18 x i8] c"application/x-hdf\00", align 1
@.str.189 = private unnamed_addr constant [4 x i8] c"hqx\00", align 1
@.str.190 = private unnamed_addr constant [25 x i8] c"application/mac-binhex40\00", align 1
@.str.191 = private unnamed_addr constant [4 x i8] c"htm\00", align 1
@.str.69.174 = private unnamed_addr constant [22 x i8] c"text/html; charset=%s\00", align 1
@.str.192 = private unnamed_addr constant [5 x i8] c"html\00", align 1
@.str.193 = private unnamed_addr constant [4 x i8] c"ice\00", align 1
@.str.194 = private unnamed_addr constant [24 x i8] c"x-conference/x-cooltalk\00", align 1
@.str.195 = private unnamed_addr constant [4 x i8] c"ief\00", align 1
@.str.196 = private unnamed_addr constant [10 x i8] c"image/ief\00", align 1
@.str.197 = private unnamed_addr constant [5 x i8] c"iges\00", align 1
@.str.198 = private unnamed_addr constant [11 x i8] c"model/iges\00", align 1
@.str.199 = private unnamed_addr constant [4 x i8] c"igs\00", align 1
@.str.200 = private unnamed_addr constant [3 x i8] c"iv\00", align 1
@.str.201 = private unnamed_addr constant [23 x i8] c"application/x-inventor\00", align 1
@.str.202 = private unnamed_addr constant [4 x i8] c"jar\00", align 1
@.str.203 = private unnamed_addr constant [27 x i8] c"application/x-java-archive\00", align 1
@.str.204 = private unnamed_addr constant [5 x i8] c"jfif\00", align 1
@.str.205 = private unnamed_addr constant [11 x i8] c"image/jpeg\00", align 1
@.str.206 = private unnamed_addr constant [4 x i8] c"jpe\00", align 1
@.str.207 = private unnamed_addr constant [5 x i8] c"jpeg\00", align 1
@.str.208 = private unnamed_addr constant [4 x i8] c"jpg\00", align 1
@.str.209 = private unnamed_addr constant [3 x i8] c"js\00", align 1
@.str.210 = private unnamed_addr constant [25 x i8] c"application/x-javascript\00", align 1
@.str.211 = private unnamed_addr constant [4 x i8] c"kar\00", align 1
@.str.212 = private unnamed_addr constant [11 x i8] c"audio/midi\00", align 1
@.str.213 = private unnamed_addr constant [4 x i8] c"kml\00", align 1
@.str.214 = private unnamed_addr constant [37 x i8] c"application/vnd.google-earth.kml+xml\00", align 1
@.str.215 = private unnamed_addr constant [4 x i8] c"kmz\00", align 1
@.str.216 = private unnamed_addr constant [33 x i8] c"application/vnd.google-earth.kmz\00", align 1
@.str.217 = private unnamed_addr constant [6 x i8] c"latex\00", align 1
@.str.218 = private unnamed_addr constant [20 x i8] c"application/x-latex\00", align 1
@.str.219 = private unnamed_addr constant [4 x i8] c"lha\00", align 1
@.str.220 = private unnamed_addr constant [4 x i8] c"loc\00", align 1
@.str.221 = private unnamed_addr constant [20 x i8] c"application/xml-loc\00", align 1
@.str.222 = private unnamed_addr constant [4 x i8] c"lzh\00", align 1
@.str.223 = private unnamed_addr constant [4 x i8] c"m3u\00", align 1
@.str.224 = private unnamed_addr constant [16 x i8] c"audio/x-mpegurl\00", align 1
@.str.225 = private unnamed_addr constant [4 x i8] c"man\00", align 1
@.str.226 = private unnamed_addr constant [24 x i8] c"application/x-troff-man\00", align 1
@.str.227 = private unnamed_addr constant [7 x i8] c"mathml\00", align 1
@.str.228 = private unnamed_addr constant [23 x i8] c"application/mathml+xml\00", align 1
@.str.229 = private unnamed_addr constant [3 x i8] c"me\00", align 1
@.str.230 = private unnamed_addr constant [23 x i8] c"application/x-troff-me\00", align 1
@.str.231 = private unnamed_addr constant [5 x i8] c"mesh\00", align 1
@.str.232 = private unnamed_addr constant [11 x i8] c"model/mesh\00", align 1
@.str.233 = private unnamed_addr constant [4 x i8] c"mid\00", align 1
@.str.234 = private unnamed_addr constant [5 x i8] c"midi\00", align 1
@.str.235 = private unnamed_addr constant [4 x i8] c"mif\00", align 1
@.str.236 = private unnamed_addr constant [20 x i8] c"application/vnd.mif\00", align 1
@.str.237 = private unnamed_addr constant [5 x i8] c"mime\00", align 1
@.str.238 = private unnamed_addr constant [15 x i8] c"message/rfc822\00", align 1
@.str.239 = private unnamed_addr constant [4 x i8] c"mml\00", align 1
@.str.240 = private unnamed_addr constant [4 x i8] c"mov\00", align 1
@.str.241 = private unnamed_addr constant [16 x i8] c"video/quicktime\00", align 1
@.str.242 = private unnamed_addr constant [6 x i8] c"movie\00", align 1
@.str.243 = private unnamed_addr constant [18 x i8] c"video/x-sgi-movie\00", align 1
@.str.244 = private unnamed_addr constant [4 x i8] c"mp2\00", align 1
@.str.245 = private unnamed_addr constant [11 x i8] c"audio/mpeg\00", align 1
@.str.246 = private unnamed_addr constant [4 x i8] c"mp3\00", align 1
@.str.247 = private unnamed_addr constant [4 x i8] c"mp4\00", align 1
@.str.248 = private unnamed_addr constant [10 x i8] c"video/mp4\00", align 1
@.str.249 = private unnamed_addr constant [4 x i8] c"mpe\00", align 1
@.str.250 = private unnamed_addr constant [11 x i8] c"video/mpeg\00", align 1
@.str.251 = private unnamed_addr constant [5 x i8] c"mpeg\00", align 1
@.str.252 = private unnamed_addr constant [4 x i8] c"mpg\00", align 1
@.str.253 = private unnamed_addr constant [5 x i8] c"mpga\00", align 1
@.str.254 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@.str.255 = private unnamed_addr constant [23 x i8] c"application/x-troff-ms\00", align 1
@.str.256 = private unnamed_addr constant [4 x i8] c"msh\00", align 1
@.str.257 = private unnamed_addr constant [3 x i8] c"mv\00", align 1
@.str.258 = private unnamed_addr constant [4 x i8] c"mxu\00", align 1
@.str.259 = private unnamed_addr constant [18 x i8] c"video/vnd.mpegurl\00", align 1
@.str.260 = private unnamed_addr constant [3 x i8] c"nc\00", align 1
@.str.261 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str.262 = private unnamed_addr constant [4 x i8] c"oda\00", align 1
@.str.263 = private unnamed_addr constant [16 x i8] c"application/oda\00", align 1
@.str.264 = private unnamed_addr constant [4 x i8] c"ogg\00", align 1
@.str.265 = private unnamed_addr constant [16 x i8] c"application/ogg\00", align 1
@.str.266 = private unnamed_addr constant [4 x i8] c"pac\00", align 1
@.str.267 = private unnamed_addr constant [34 x i8] c"application/x-ns-proxy-autoconfig\00", align 1
@.str.268 = private unnamed_addr constant [4 x i8] c"pbm\00", align 1
@.str.269 = private unnamed_addr constant [24 x i8] c"image/x-portable-bitmap\00", align 1
@.str.270 = private unnamed_addr constant [4 x i8] c"pdb\00", align 1
@.str.271 = private unnamed_addr constant [15 x i8] c"chemical/x-pdb\00", align 1
@.str.272 = private unnamed_addr constant [4 x i8] c"pdf\00", align 1
@.str.273 = private unnamed_addr constant [16 x i8] c"application/pdf\00", align 1
@.str.274 = private unnamed_addr constant [4 x i8] c"pgm\00", align 1
@.str.275 = private unnamed_addr constant [25 x i8] c"image/x-portable-graymap\00", align 1
@.str.276 = private unnamed_addr constant [4 x i8] c"pgn\00", align 1
@.str.277 = private unnamed_addr constant [24 x i8] c"application/x-chess-pgn\00", align 1
@.str.278 = private unnamed_addr constant [4 x i8] c"png\00", align 1
@.str.279 = private unnamed_addr constant [10 x i8] c"image/png\00", align 1
@.str.280 = private unnamed_addr constant [4 x i8] c"pnm\00", align 1
@.str.281 = private unnamed_addr constant [24 x i8] c"image/x-portable-anymap\00", align 1
@.str.282 = private unnamed_addr constant [4 x i8] c"ppm\00", align 1
@.str.283 = private unnamed_addr constant [24 x i8] c"image/x-portable-pixmap\00", align 1
@.str.284 = private unnamed_addr constant [4 x i8] c"ppt\00", align 1
@.str.285 = private unnamed_addr constant [30 x i8] c"application/vnd.ms-powerpoint\00", align 1
@.str.286 = private unnamed_addr constant [3 x i8] c"ps\00", align 1
@.str.287 = private unnamed_addr constant [3 x i8] c"qt\00", align 1
@.str.288 = private unnamed_addr constant [3 x i8] c"ra\00", align 1
@.str.289 = private unnamed_addr constant [18 x i8] c"audio/x-realaudio\00", align 1
@.str.290 = private unnamed_addr constant [4 x i8] c"ram\00", align 1
@.str.291 = private unnamed_addr constant [21 x i8] c"audio/x-pn-realaudio\00", align 1
@.str.292 = private unnamed_addr constant [4 x i8] c"ras\00", align 1
@.str.293 = private unnamed_addr constant [19 x i8] c"image/x-cmu-raster\00", align 1
@.str.294 = private unnamed_addr constant [4 x i8] c"rdf\00", align 1
@.str.295 = private unnamed_addr constant [20 x i8] c"application/rdf+xml\00", align 1
@.str.296 = private unnamed_addr constant [4 x i8] c"rgb\00", align 1
@.str.297 = private unnamed_addr constant [12 x i8] c"image/x-rgb\00", align 1
@.str.298 = private unnamed_addr constant [3 x i8] c"rm\00", align 1
@.str.299 = private unnamed_addr constant [5 x i8] c"roff\00", align 1
@.str.300 = private unnamed_addr constant [20 x i8] c"application/x-troff\00", align 1
@.str.301 = private unnamed_addr constant [4 x i8] c"rpm\00", align 1
@.str.302 = private unnamed_addr constant [28 x i8] c"audio/x-pn-realaudio-plugin\00", align 1
@.str.303 = private unnamed_addr constant [4 x i8] c"rss\00", align 1
@.str.304 = private unnamed_addr constant [20 x i8] c"application/rss+xml\00", align 1
@.str.305 = private unnamed_addr constant [4 x i8] c"rtf\00", align 1
@.str.306 = private unnamed_addr constant [21 x i8] c"text/rtf; charset=%s\00", align 1
@.str.307 = private unnamed_addr constant [4 x i8] c"rtx\00", align 1
@.str.308 = private unnamed_addr constant [26 x i8] c"text/richtext; charset=%s\00", align 1
@.str.309 = private unnamed_addr constant [4 x i8] c"sgm\00", align 1
@.str.310 = private unnamed_addr constant [22 x i8] c"text/sgml; charset=%s\00", align 1
@.str.311 = private unnamed_addr constant [5 x i8] c"sgml\00", align 1
@.str.312 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@.str.313 = private unnamed_addr constant [17 x i8] c"application/x-sh\00", align 1
@.str.314 = private unnamed_addr constant [5 x i8] c"shar\00", align 1
@.str.315 = private unnamed_addr constant [19 x i8] c"application/x-shar\00", align 1
@.str.316 = private unnamed_addr constant [5 x i8] c"silo\00", align 1
@.str.317 = private unnamed_addr constant [4 x i8] c"sit\00", align 1
@.str.318 = private unnamed_addr constant [22 x i8] c"application/x-stuffit\00", align 1
@.str.319 = private unnamed_addr constant [4 x i8] c"skd\00", align 1
@.str.320 = private unnamed_addr constant [19 x i8] c"application/x-koan\00", align 1
@.str.321 = private unnamed_addr constant [4 x i8] c"skm\00", align 1
@.str.322 = private unnamed_addr constant [4 x i8] c"skp\00", align 1
@.str.323 = private unnamed_addr constant [4 x i8] c"skt\00", align 1
@.str.324 = private unnamed_addr constant [4 x i8] c"smi\00", align 1
@.str.325 = private unnamed_addr constant [17 x i8] c"application/smil\00", align 1
@.str.326 = private unnamed_addr constant [5 x i8] c"smil\00", align 1
@.str.327 = private unnamed_addr constant [4 x i8] c"snd\00", align 1
@.str.328 = private unnamed_addr constant [3 x i8] c"so\00", align 1
@.str.329 = private unnamed_addr constant [4 x i8] c"spl\00", align 1
@.str.330 = private unnamed_addr constant [27 x i8] c"application/x-futuresplash\00", align 1
@.str.331 = private unnamed_addr constant [4 x i8] c"src\00", align 1
@.str.332 = private unnamed_addr constant [26 x i8] c"application/x-wais-source\00", align 1
@.str.333 = private unnamed_addr constant [4 x i8] c"stc\00", align 1
@.str.334 = private unnamed_addr constant [38 x i8] c"application/vnd.sun.xml.calc.template\00", align 1
@.str.335 = private unnamed_addr constant [4 x i8] c"std\00", align 1
@.str.336 = private unnamed_addr constant [38 x i8] c"application/vnd.sun.xml.draw.template\00", align 1
@.str.337 = private unnamed_addr constant [4 x i8] c"sti\00", align 1
@.str.338 = private unnamed_addr constant [41 x i8] c"application/vnd.sun.xml.impress.template\00", align 1
@.str.339 = private unnamed_addr constant [4 x i8] c"stw\00", align 1
@.str.340 = private unnamed_addr constant [40 x i8] c"application/vnd.sun.xml.writer.template\00", align 1
@.str.341 = private unnamed_addr constant [8 x i8] c"sv4cpio\00", align 1
@.str.342 = private unnamed_addr constant [22 x i8] c"application/x-sv4cpio\00", align 1
@.str.343 = private unnamed_addr constant [7 x i8] c"sv4crc\00", align 1
@.str.344 = private unnamed_addr constant [21 x i8] c"application/x-sv4crc\00", align 1
@.str.345 = private unnamed_addr constant [4 x i8] c"svg\00", align 1
@.str.346 = private unnamed_addr constant [14 x i8] c"image/svg+xml\00", align 1
@.str.347 = private unnamed_addr constant [5 x i8] c"svgz\00", align 1
@.str.348 = private unnamed_addr constant [4 x i8] c"swf\00", align 1
@.str.349 = private unnamed_addr constant [30 x i8] c"application/x-shockwave-flash\00", align 1
@.str.350 = private unnamed_addr constant [4 x i8] c"sxc\00", align 1
@.str.351 = private unnamed_addr constant [29 x i8] c"application/vnd.sun.xml.calc\00", align 1
@.str.352 = private unnamed_addr constant [4 x i8] c"sxd\00", align 1
@.str.353 = private unnamed_addr constant [29 x i8] c"application/vnd.sun.xml.draw\00", align 1
@.str.354 = private unnamed_addr constant [4 x i8] c"sxg\00", align 1
@.str.355 = private unnamed_addr constant [38 x i8] c"application/vnd.sun.xml.writer.global\00", align 1
@.str.356 = private unnamed_addr constant [4 x i8] c"sxi\00", align 1
@.str.357 = private unnamed_addr constant [32 x i8] c"application/vnd.sun.xml.impress\00", align 1
@.str.358 = private unnamed_addr constant [4 x i8] c"sxm\00", align 1
@.str.359 = private unnamed_addr constant [29 x i8] c"application/vnd.sun.xml.math\00", align 1
@.str.360 = private unnamed_addr constant [4 x i8] c"sxw\00", align 1
@.str.361 = private unnamed_addr constant [31 x i8] c"application/vnd.sun.xml.writer\00", align 1
@.str.362 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.363 = private unnamed_addr constant [4 x i8] c"tar\00", align 1
@.str.364 = private unnamed_addr constant [18 x i8] c"application/x-tar\00", align 1
@.str.365 = private unnamed_addr constant [4 x i8] c"tcl\00", align 1
@.str.366 = private unnamed_addr constant [18 x i8] c"application/x-tcl\00", align 1
@.str.367 = private unnamed_addr constant [4 x i8] c"tex\00", align 1
@.str.368 = private unnamed_addr constant [18 x i8] c"application/x-tex\00", align 1
@.str.369 = private unnamed_addr constant [5 x i8] c"texi\00", align 1
@.str.370 = private unnamed_addr constant [22 x i8] c"application/x-texinfo\00", align 1
@.str.371 = private unnamed_addr constant [8 x i8] c"texinfo\00", align 1
@.str.372 = private unnamed_addr constant [4 x i8] c"tif\00", align 1
@.str.373 = private unnamed_addr constant [11 x i8] c"image/tiff\00", align 1
@.str.374 = private unnamed_addr constant [5 x i8] c"tiff\00", align 1
@.str.375 = private unnamed_addr constant [3 x i8] c"tr\00", align 1
@.str.376 = private unnamed_addr constant [4 x i8] c"tsp\00", align 1
@.str.377 = private unnamed_addr constant [20 x i8] c"application/dsptype\00", align 1
@.str.378 = private unnamed_addr constant [4 x i8] c"tsv\00", align 1
@.str.379 = private unnamed_addr constant [38 x i8] c"text/tab-separated-values; charset=%s\00", align 1
@.str.380 = private unnamed_addr constant [4 x i8] c"txt\00", align 1
@.str.381 = private unnamed_addr constant [6 x i8] c"ustar\00", align 1
@.str.382 = private unnamed_addr constant [20 x i8] c"application/x-ustar\00", align 1
@.str.383 = private unnamed_addr constant [4 x i8] c"vcd\00", align 1
@.str.384 = private unnamed_addr constant [21 x i8] c"application/x-cdlink\00", align 1
@.str.385 = private unnamed_addr constant [5 x i8] c"vrml\00", align 1
@.str.386 = private unnamed_addr constant [11 x i8] c"model/vrml\00", align 1
@.str.387 = private unnamed_addr constant [3 x i8] c"vx\00", align 1
@.str.388 = private unnamed_addr constant [23 x i8] c"video/x-rad-screenplay\00", align 1
@.str.389 = private unnamed_addr constant [4 x i8] c"wav\00", align 1
@.str.390 = private unnamed_addr constant [12 x i8] c"audio/x-wav\00", align 1
@.str.391 = private unnamed_addr constant [4 x i8] c"wax\00", align 1
@.str.392 = private unnamed_addr constant [15 x i8] c"audio/x-ms-wax\00", align 1
@.str.393 = private unnamed_addr constant [5 x i8] c"wbmp\00", align 1
@.str.394 = private unnamed_addr constant [19 x i8] c"image/vnd.wap.wbmp\00", align 1
@.str.395 = private unnamed_addr constant [6 x i8] c"wbxml\00", align 1
@.str.396 = private unnamed_addr constant [26 x i8] c"application/vnd.wap.wbxml\00", align 1
@.str.397 = private unnamed_addr constant [3 x i8] c"wm\00", align 1
@.str.398 = private unnamed_addr constant [14 x i8] c"video/x-ms-wm\00", align 1
@.str.399 = private unnamed_addr constant [4 x i8] c"wma\00", align 1
@.str.400 = private unnamed_addr constant [15 x i8] c"audio/x-ms-wma\00", align 1
@.str.401 = private unnamed_addr constant [4 x i8] c"wmd\00", align 1
@.str.402 = private unnamed_addr constant [21 x i8] c"application/x-ms-wmd\00", align 1
@.str.403 = private unnamed_addr constant [4 x i8] c"wml\00", align 1
@.str.404 = private unnamed_addr constant [17 x i8] c"text/vnd.wap.wml\00", align 1
@.str.405 = private unnamed_addr constant [5 x i8] c"wmlc\00", align 1
@.str.406 = private unnamed_addr constant [25 x i8] c"application/vnd.wap.wmlc\00", align 1
@.str.407 = private unnamed_addr constant [5 x i8] c"wmls\00", align 1
@.str.408 = private unnamed_addr constant [23 x i8] c"text/vnd.wap.wmlscript\00", align 1
@.str.409 = private unnamed_addr constant [6 x i8] c"wmlsc\00", align 1
@.str.410 = private unnamed_addr constant [31 x i8] c"application/vnd.wap.wmlscriptc\00", align 1
@.str.411 = private unnamed_addr constant [4 x i8] c"wmv\00", align 1
@.str.412 = private unnamed_addr constant [15 x i8] c"video/x-ms-wmv\00", align 1
@.str.413 = private unnamed_addr constant [4 x i8] c"wmx\00", align 1
@.str.414 = private unnamed_addr constant [15 x i8] c"video/x-ms-wmx\00", align 1
@.str.415 = private unnamed_addr constant [4 x i8] c"wmz\00", align 1
@.str.416 = private unnamed_addr constant [21 x i8] c"application/x-ms-wmz\00", align 1
@.str.417 = private unnamed_addr constant [4 x i8] c"wrl\00", align 1
@.str.418 = private unnamed_addr constant [5 x i8] c"wsrc\00", align 1
@.str.419 = private unnamed_addr constant [4 x i8] c"wvx\00", align 1
@.str.420 = private unnamed_addr constant [15 x i8] c"video/x-ms-wvx\00", align 1
@.str.421 = private unnamed_addr constant [4 x i8] c"xbm\00", align 1
@.str.422 = private unnamed_addr constant [16 x i8] c"image/x-xbitmap\00", align 1
@.str.423 = private unnamed_addr constant [4 x i8] c"xht\00", align 1
@.str.424 = private unnamed_addr constant [34 x i8] c"application/xhtml+xml; charset=%s\00", align 1
@.str.425 = private unnamed_addr constant [6 x i8] c"xhtml\00", align 1
@.str.426 = private unnamed_addr constant [4 x i8] c"xls\00", align 1
@.str.427 = private unnamed_addr constant [25 x i8] c"application/vnd.ms-excel\00", align 1
@.str.428 = private unnamed_addr constant [4 x i8] c"xml\00", align 1
@.str.429 = private unnamed_addr constant [4 x i8] c"xpm\00", align 1
@.str.430 = private unnamed_addr constant [16 x i8] c"image/x-xpixmap\00", align 1
@.str.431 = private unnamed_addr constant [4 x i8] c"xsl\00", align 1
@.str.432 = private unnamed_addr constant [4 x i8] c"xwd\00", align 1
@.str.433 = private unnamed_addr constant [20 x i8] c"image/x-xwindowdump\00", align 1
@.str.434 = private unnamed_addr constant [4 x i8] c"xyz\00", align 1
@.str.435 = private unnamed_addr constant [15 x i8] c"chemical/x-xyz\00", align 1
@.str.436 = private unnamed_addr constant [4 x i8] c"zip\00", align 1
@.str.437 = private unnamed_addr constant [16 x i8] c"application/zip\00", align 1
@.str.104.175 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@.str.105.176 = private unnamed_addr constant [9 x i8] c"compress\00", align 1
@.str.106.177 = private unnamed_addr constant [3 x i8] c"gz\00", align 1
@.str.107.178 = private unnamed_addr constant [5 x i8] c"gzip\00", align 1
@.str.108.179 = private unnamed_addr constant [3 x i8] c"uu\00", align 1
@.str.109.180 = private unnamed_addr constant [11 x i8] c"x-uuencode\00", align 1
@.str.62.181 = private unnamed_addr constant [41 x i8] c"unknown sockaddr family on listen socket\00", align 1
@.str.63.182 = private unnamed_addr constant [18 x i8] c"socket %.80s - %m\00", align 1
@.str.64.183 = private unnamed_addr constant [29 x i8] c"setsockopt SO_REUSEADDR - %m\00", align 1
@.str.65.184 = private unnamed_addr constant [16 x i8] c"bind %.80s - %m\00", align 1
@.str.66.185 = private unnamed_addr constant [19 x i8] c"fcntl F_GETFL - %m\00", align 1
@.str.67.186 = private unnamed_addr constant [20 x i8] c"fcntl O_NDELAY - %m\00", align 1
@.str.68.187 = private unnamed_addr constant [12 x i8] c"listen - %m\00", align 1
@sub_process = internal global i32 0, align 4, !dbg !692
@str_alloc_count = internal global i32 0, align 4, !dbg !694
@str_alloc_size = internal global i64 0, align 8, !dbg !696
@.str.16.198 = private unnamed_addr constant [49 x i8] c"out of memory reallocating a string to %ld bytes\00", align 1
@.str.17.201 = private unnamed_addr constant [17 x i8] c"%s/%s/err%d.html\00", align 1
@.str.18.202 = private unnamed_addr constant [7 x i8] c"errors\00", align 1
@.str.19.203 = private unnamed_addr constant [14 x i8] c"%s/err%d.html\00", align 1
@.str.29.204 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.70.205 = private unnamed_addr constant [322 x i8] c"<!DOCTYPE html PUBLIC \22-//W3C//DTD HTML 4.01 Transitional//EN\22 \22http://www.w3.org/TR/html4/loose.dtd\22>\0A\0A<html>\0A\0A  <head>\0A    <meta http-equiv=\22Content-type\22 content=\22text/html;charset=UTF-8\22>\0A    <title>%d %s</title>\0A  </head>\0A\0A  <body bgcolor=\22#cc9999\22 text=\22#000000\22 link=\22#2020ff\22 vlink=\22#4040cc\22>\0A\0A    <h2>%d %s</h2>\0A\00", align 1
@.str.71.206 = private unnamed_addr constant [9 x i8] c"**MSIE**\00", align 1
@.str.72.207 = private unnamed_addr constant [6 x i8] c"<!--\0A\00", align 1
@.str.73.208 = private unnamed_addr constant [79 x i8] c"Padding so that MSIE deigns to show this error instead of its own canned one.\0A\00", align 1
@.str.74.209 = private unnamed_addr constant [5 x i8] c"-->\0A\00", align 1
@.str.85.210 = private unnamed_addr constant [74 x i8] c"    <hr>\0A\0A    <address><a href=\22%s\22>%s</a></address>\0A\0A  </body>\0A\0A</html>\0A\00", align 1
@.str.86.211 = private unnamed_addr constant [37 x i8] c"http://www.acme.com/software/thttpd/\00", align 1
@.str.75.212 = private unnamed_addr constant [26 x i8] c"%a, %d %b %Y %H:%M:%S GMT\00", align 1
@ok206title = internal global i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84.221, i32 0, i32 0), align 8, !dbg !698
@.str.76.213 = private unnamed_addr constant [114 x i8] c"%.20s %d %s\0D\0AServer: %s\0D\0AContent-Type: %s\0D\0ADate: %s\0D\0ALast-Modified: %s\0D\0AAccept-Ranges: bytes\0D\0AConnection: close\0D\0A\00", align 1
@.str.77.214 = private unnamed_addr constant [35 x i8] c"Cache-Control: no-cache,no-store\0D\0A\00", align 1
@.str.78.215 = private unnamed_addr constant [23 x i8] c"Content-Encoding: %s\0D\0A\00", align 1
@.str.79.216 = private unnamed_addr constant [60 x i8] c"Content-Range: bytes %lld-%lld/%lld\0D\0AContent-Length: %lld\0D\0A\00", align 1
@.str.80.217 = private unnamed_addr constant [23 x i8] c"Content-Length: %lld\0D\0A\00", align 1
@.str.81.218 = private unnamed_addr constant [10 x i8] c"P3P: %s\0D\0A\00", align 1
@.str.82.219 = private unnamed_addr constant [41 x i8] c"Cache-Control: max-age=%d\0D\0AExpires: %s\0D\0A\00", align 1
@.str.83.220 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.84.221 = private unnamed_addr constant [16 x i8] c"Partial Content\00", align 1
@.str.87.222 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.20.223 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.21.224 = private unnamed_addr constant [5 x i8] c"HEAD\00", align 1
@.str.22.225 = private unnamed_addr constant [5 x i8] c"POST\00", align 1
@.str.23.226 = private unnamed_addr constant [4 x i8] c"PUT\00", align 1
@.str.24.227 = private unnamed_addr constant [7 x i8] c"DELETE\00", align 1
@.str.25.228 = private unnamed_addr constant [6 x i8] c"TRACE\00", align 1
@.str.26.229 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.27.232 = private unnamed_addr constant [12 x i8] c"accept - %m\00", align 1
@.str.28.233 = private unnamed_addr constant [24 x i8] c"unknown sockaddr family\00", align 1
@.str.30.238 = private unnamed_addr constant [5 x i8] c" \09\0A\0D\00", align 1
@.str.31.239 = private unnamed_addr constant [9 x i8] c"HTTP/0.9\00", align 1
@.str.32.240 = private unnamed_addr constant [9 x i8] c"HTTP/1.0\00", align 1
@.str.33.241 = private unnamed_addr constant [8 x i8] c"http://\00", align 1
@err501title = internal global i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88.283, i32 0, i32 0), align 8, !dbg !700
@err501form = internal global i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.89.282, i32 0, i32 0), align 8, !dbg !702
@.str.34.242 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.35.243 = private unnamed_addr constant [9 x i8] c"Referer:\00", align 1
@.str.36.244 = private unnamed_addr constant [3 x i8] c" \09\00", align 1
@.str.37.245 = private unnamed_addr constant [10 x i8] c"Referrer:\00", align 1
@.str.38.246 = private unnamed_addr constant [12 x i8] c"User-Agent:\00", align 1
@.str.39.247 = private unnamed_addr constant [6 x i8] c"Host:\00", align 1
@.str.40.248 = private unnamed_addr constant [8 x i8] c"Accept:\00", align 1
@.str.41.249 = private unnamed_addr constant [32 x i8] c"%.80s way too much Accept: data\00", align 1
@.str.42.250 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.43.251 = private unnamed_addr constant [17 x i8] c"Accept-Encoding:\00", align 1
@.str.44.252 = private unnamed_addr constant [41 x i8] c"%.80s way too much Accept-Encoding: data\00", align 1
@.str.45.253 = private unnamed_addr constant [17 x i8] c"Accept-Language:\00", align 1
@.str.46.254 = private unnamed_addr constant [19 x i8] c"If-Modified-Since:\00", align 1
@.str.47.255 = private unnamed_addr constant [23 x i8] c"unparsable time: %.80s\00", align 1
@.str.48.256 = private unnamed_addr constant [8 x i8] c"Cookie:\00", align 1
@.str.49.257 = private unnamed_addr constant [7 x i8] c"Range:\00", align 1
@.str.50.258 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.51.259 = private unnamed_addr constant [10 x i8] c"Range-If:\00", align 1
@.str.52.260 = private unnamed_addr constant [10 x i8] c"If-Range:\00", align 1
@.str.53.261 = private unnamed_addr constant [14 x i8] c"Content-Type:\00", align 1
@.str.54.262 = private unnamed_addr constant [16 x i8] c"Content-Length:\00", align 1
@.str.55.263 = private unnamed_addr constant [15 x i8] c"Authorization:\00", align 1
@.str.56.264 = private unnamed_addr constant [12 x i8] c"Connection:\00", align 1
@.str.57.265 = private unnamed_addr constant [11 x i8] c"keep-alive\00", align 1
@err500title = internal global i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.92.273, i32 0, i32 0), align 8, !dbg !801
@err500form = internal global i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.93.272, i32 0, i32 0), align 8, !dbg !803
@.str.58.266 = private unnamed_addr constant [44 x i8] c"%.80s URL \22%.80s\22 goes outside the web tree\00", align 1
@err403title = internal global i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.97.268, i32 0, i32 0), align 8, !dbg !816
@.str.59.267 = private unnamed_addr constant [95 x i8] c"The requested URL '%.80s' resolves to a file outside the permitted web server directory tree.\0A\00", align 1
@.str.97.268 = private unnamed_addr constant [10 x i8] c"Forbidden\00", align 1
@expand_symlinks.checked = internal global i8* null, align 8, !dbg !805
@expand_symlinks.maxchecked = internal global i64 0, align 8, !dbg !812
@expand_symlinks.rest = internal global i8* null, align 8, !dbg !810
@expand_symlinks.maxrest = internal global i64 0, align 8, !dbg !814
@.str.94.269 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.95.270 = private unnamed_addr constant [20 x i8] c"readlink %.80s - %m\00", align 1
@.str.96.271 = private unnamed_addr constant [27 x i8] c"too many symlinks in %.80s\00", align 1
@.str.93.272 = private unnamed_addr constant [65 x i8] c"There was an unusual problem serving the requested URL '%.80s'.\0A\00", align 1
@.str.92.273 = private unnamed_addr constant [15 x i8] c"Internal Error\00", align 1
@.str.90.274 = private unnamed_addr constant [17 x i8] c"getsockname - %m\00", align 1
@vhost_map.tempfilename = internal global i8* null, align 8, !dbg !704
@vhost_map.maxtempfilename = internal global i64 0, align 8, !dbg !799
@.str.91.275 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.98.276 = private unnamed_addr constant [3 x i8] c"//\00", align 1
@.str.99.277 = private unnamed_addr constant [3 x i8] c"./\00", align 1
@.str.100.278 = private unnamed_addr constant [4 x i8] c"/./\00", align 1
@.str.101.279 = private unnamed_addr constant [4 x i8] c"../\00", align 1
@.str.102.280 = private unnamed_addr constant [5 x i8] c"/../\00", align 1
@.str.103.281 = private unnamed_addr constant [4 x i8] c"/..\00", align 1
@.str.89.282 = private unnamed_addr constant [65 x i8] c"The requested method '%.80s' is not implemented by this server.\0A\00", align 1
@.str.88.283 = private unnamed_addr constant [16 x i8] c"Not Implemented\00", align 1
@.str.541 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.542 = private unnamed_addr constant [14 x i8] c"/%.100s%.200s\00", align 1
@.str.543 = private unnamed_addr constant [7 x i8] c"%.200s\00", align 1
@.str.544 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str.545 = private unnamed_addr constant [18 x i8] c"%d/%b/%Y:%H:%M:%S\00", align 1
@.str.546 = private unnamed_addr constant [10 x i8] c"%s %c%04d\00", align 1
@.str.547 = private unnamed_addr constant [65 x i8] c"%.80s - %.80s [%s] \22%.80s %.300s %.80s\22 %d %s \22%.200s\22 \22%.200s\22\0A\00", align 1
@.str.548 = private unnamed_addr constant [59 x i8] c"%.80s - %.80s \22%.80s %.200s %.80s\22 %d %s \22%.200s\22 \22%.200s\22\00", align 1
@.str.444 = private unnamed_addr constant [56 x i8] c"%.80s URL \22%.80s\22 resolves to a non world-readable file\00", align 1
@.str.445 = private unnamed_addr constant [74 x i8] c"The requested URL '%.80s' resolves to a file that is not world-readable.\0A\00", align 1
@err404title = internal global i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.457, i32 0, i32 0), align 8, !dbg !845
@err404form = internal global i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.458, i32 0, i32 0), align 8, !dbg !847
@really_start_request.index_names = internal global [6 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.438, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.439, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.440, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.441, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.442, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.443, i32 0, i32 0)], align 16, !dbg !838
@really_start_request.indexname = internal global i8* null, align 8, !dbg !831
@really_start_request.maxindexname = internal global i64 0, align 8, !dbg !836
@.str.446 = private unnamed_addr constant [68 x i8] c"%.80s URL \22%.80s\22 tried to index a directory with indexing disabled\00", align 1
@.str.447 = private unnamed_addr constant [79 x i8] c"The requested URL '%.80s' resolves to a directory that has indexing disabled.\0A\00", align 1
@.str.448 = private unnamed_addr constant [62 x i8] c"%.80s URL \22%.80s\22 resolves to a non-world-readable index file\00", align 1
@.str.449 = private unnamed_addr constant [81 x i8] c"The requested URL '%.80s' resolves to an index file that is not world-readable.\0A\00", align 1
@really_start_request.dirname = internal global i8* null, align 8, !dbg !841
@really_start_request.maxdirname = internal global i64 0, align 8, !dbg !843
@.str.450 = private unnamed_addr constant [10 x i8] c".htpasswd\00", align 1
@.str.451 = private unnamed_addr constant [49 x i8] c"%.80s URL \22%.80s\22 tried to retrieve an auth file\00", align 1
@.str.452 = private unnamed_addr constant [85 x i8] c"The requested URL '%.80s' is an authorization file, retrieving it is not permitted.\0A\00", align 1
@.str.453 = private unnamed_addr constant [46 x i8] c"%.80s URL \22%.80s\22 is executable but isn't CGI\00", align 1
@.str.454 = private unnamed_addr constant [124 x i8] c"The requested URL '%.80s' resolves to a file which is marked executable but is not a CGI file; retrieving it is forbidden.\0A\00", align 1
@.str.455 = private unnamed_addr constant [45 x i8] c"%.80s URL \22%.80s\22 has pathinfo but isn't CGI\00", align 1
@.str.456 = private unnamed_addr constant [109 x i8] c"The requested URL '%.80s' resolves to a file plus CGI-style pathinfo, but the file is not a valid CGI file.\0A\00", align 1
@ok200title = internal global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.539, i32 0, i32 0), align 8, !dbg !950
@err304title = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.540, i32 0, i32 0), align 8, !dbg !952
@.str.540 = private unnamed_addr constant [13 x i8] c"Not Modified\00", align 1
@.str.539 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.538 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.474 = private unnamed_addr constant [10 x i8] c"fork - %m\00", align 1
@.str.493 = private unnamed_addr constant [41 x i8] c"spawned CGI process %d for file '%.200s'\00", align 1
@.str.494 = private unnamed_addr constant [34 x i8] c"tmr_create(cgi_kill child) failed\00", align 1
@.str.490 = private unnamed_addr constant [22 x i8] c"killed CGI process %d\00", align 1
@.str.491 = private unnamed_addr constant [29 x i8] c"tmr_create(cgi_kill2) failed\00", align 1
@.str.492 = private unnamed_addr constant [27 x i8] c"hard-killed CGI process %d\00", align 1
@.str.495 = private unnamed_addr constant [10 x i8] c"pipe - %m\00", align 1
@.str.496 = private unnamed_addr constant [5 x i8] c"nph-\00", align 1
@.str.497 = private unnamed_addr constant [18 x i8] c"execve %.80s - %m\00", align 1
@.str.530 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.531 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.532 = private unnamed_addr constant [6 x i8] c"HTTP/\00", align 1
@.str.533 = private unnamed_addr constant [10 x i8] c"Location:\00", align 1
@.str.534 = private unnamed_addr constant [8 x i8] c"Status:\00", align 1
@err302title = internal global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.462, i32 0, i32 0), align 8, !dbg !865
@err401title = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.469, i32 0, i32 0), align 8, !dbg !902
@err451title = internal global i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.537, i32 0, i32 0), align 8, !dbg !948
@.str.535 = private unnamed_addr constant [10 x i8] c"Something\00", align 1
@.str.536 = private unnamed_addr constant [17 x i8] c"HTTP/1.0 %d %s\0D\0A\00", align 1
@.str.537 = private unnamed_addr constant [30 x i8] c"Unavailable For Legal Reasons\00", align 1
@.str.469 = private unnamed_addr constant [13 x i8] c"Unauthorized\00", align 1
@.str.462 = private unnamed_addr constant [6 x i8] c"Found\00", align 1
@.str.498 = private unnamed_addr constant [8 x i8] c"PATH=%s\00", align 1
@.str.499 = private unnamed_addr constant [38 x i8] c"/usr/local/bin:/usr/ucb:/bin:/usr/bin\00", align 1
@make_envp.envp = internal global [50 x i8*] zeroinitializer, align 16, !dbg !933
@.str.500 = private unnamed_addr constant [19 x i8] c"SERVER_SOFTWARE=%s\00", align 1
@.str.501 = private unnamed_addr constant [15 x i8] c"SERVER_NAME=%s\00", align 1
@.str.502 = private unnamed_addr constant [26 x i8] c"GATEWAY_INTERFACE=CGI/1.1\00", align 1
@.str.503 = private unnamed_addr constant [19 x i8] c"SERVER_PROTOCOL=%s\00", align 1
@.str.504 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.505 = private unnamed_addr constant [15 x i8] c"SERVER_PORT=%s\00", align 1
@.str.506 = private unnamed_addr constant [18 x i8] c"REQUEST_METHOD=%s\00", align 1
@.str.507 = private unnamed_addr constant [14 x i8] c"PATH_INFO=/%s\00", align 1
@.str.480 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.508 = private unnamed_addr constant [19 x i8] c"PATH_TRANSLATED=%s\00", align 1
@.str.509 = private unnamed_addr constant [16 x i8] c"SCRIPT_NAME=/%s\00", align 1
@.str.510 = private unnamed_addr constant [16 x i8] c"QUERY_STRING=%s\00", align 1
@.str.511 = private unnamed_addr constant [15 x i8] c"REMOTE_ADDR=%s\00", align 1
@.str.512 = private unnamed_addr constant [16 x i8] c"HTTP_REFERER=%s\00", align 1
@.str.513 = private unnamed_addr constant [17 x i8] c"HTTP_REFERRER=%s\00", align 1
@.str.514 = private unnamed_addr constant [19 x i8] c"HTTP_USER_AGENT=%s\00", align 1
@.str.515 = private unnamed_addr constant [15 x i8] c"HTTP_ACCEPT=%s\00", align 1
@.str.516 = private unnamed_addr constant [24 x i8] c"HTTP_ACCEPT_ENCODING=%s\00", align 1
@.str.517 = private unnamed_addr constant [24 x i8] c"HTTP_ACCEPT_LANGUAGE=%s\00", align 1
@.str.518 = private unnamed_addr constant [15 x i8] c"HTTP_COOKIE=%s\00", align 1
@.str.519 = private unnamed_addr constant [16 x i8] c"CONTENT_TYPE=%s\00", align 1
@.str.520 = private unnamed_addr constant [13 x i8] c"HTTP_HOST=%s\00", align 1
@.str.521 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.522 = private unnamed_addr constant [18 x i8] c"CONTENT_LENGTH=%s\00", align 1
@.str.523 = private unnamed_addr constant [15 x i8] c"REMOTE_USER=%s\00", align 1
@.str.524 = private unnamed_addr constant [13 x i8] c"AUTH_TYPE=%s\00", align 1
@.str.525 = private unnamed_addr constant [6 x i8] c"Basic\00", align 1
@.str.526 = private unnamed_addr constant [3 x i8] c"TZ\00", align 1
@.str.527 = private unnamed_addr constant [6 x i8] c"TZ=%s\00", align 1
@.str.528 = private unnamed_addr constant [15 x i8] c"CGI_PATTERN=%s\00", align 1
@build_env.maxbuf = internal global i64 0, align 8, !dbg !946
@build_env.buf = internal global i8* null, align 8, !dbg !941
@.str.529 = private unnamed_addr constant [43 x i8] c"out of memory copying environment variable\00", align 1
@.str.473 = private unnamed_addr constant [19 x i8] c"opendir %.80s - %m\00", align 1
@.str.475 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.476 = private unnamed_addr constant [12 x i8] c"fdopen - %m\00", align 1
@.str.477 = private unnamed_addr constant [400 x i8] c"<!DOCTYPE html PUBLIC \22-//W3C//DTD HTML 4.01 Transitional//EN\22 \22http://www.w3.org/TR/html4/loose.dtd\22>\0A\0A<html>\0A\0A  <head>\0A    <meta http-equiv=\22Content-type\22 content=\22text/html;charset=UTF-8\22>\0A    <title>Index of %.80s</title>\0A  </head>\0A\0A  <body bgcolor=\22#99cc99\22 text=\22#000000\22 link=\22#2020ff\22 vlink=\22#4040cc\22>\0A\0A    <h2>Index of %.80s</h2>\0A\0A    <pre>\0Amode  links    bytes  last-changed  name\0A    <hr>\00", align 1
@ls.maxnames = internal global i32 0, align 4, !dbg !914
@ls.names = internal global i8* null, align 8, !dbg !917
@ls.nameptrs = internal global i8** null, align 8, !dbg !919
@.str.478 = private unnamed_addr constant [43 x i8] c"out of memory reallocating directory names\00", align 1
@ls.name = internal global i8* null, align 8, !dbg !921
@ls.maxname = internal global i64 0, align 8, !dbg !923
@ls.rname = internal global i8* null, align 8, !dbg !925
@ls.maxrname = internal global i64 0, align 8, !dbg !927
@.str.464 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.479 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@ls.encrname = internal global i8* null, align 8, !dbg !929
@ls.maxencrname = internal global i64 0, align 8, !dbg !931
@.str.481 = private unnamed_addr constant [8 x i8] c" -&gt; \00", align 1
@.str.482 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.483 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.484 = private unnamed_addr constant [58 x i8] c"%s %3ld  %10lld  %s  <a href=\22/%.500s%s\22>%.80s</a>%s%s%s\0A\00", align 1
@.str.485 = private unnamed_addr constant [30 x i8] c"    </pre>\0A  </body>\0A</html>\0A\00", align 1
@.str.486 = private unnamed_addr constant [51 x i8] c"spawned indexing process %d for directory '%.200s'\00", align 1
@.str.487 = private unnamed_addr constant [31 x i8] c"tmr_create(cgi_kill ls) failed\00", align 1
@.str.488 = private unnamed_addr constant [6 x i8] c"/_.-~\00", align 1
@.str.489 = private unnamed_addr constant [7 x i8] c"%%%02x\00", align 1
@.str.471 = private unnamed_addr constant [46 x i8] c"%.80s non-local referrer \22%.80s%.80s\22 \22%.80s\22\00", align 1
@.str.472 = private unnamed_addr constant [71 x i8] c"You must supply a local referrer to get URL '%.80s' from this server.\0A\00", align 1
@really_check_referrer.refhost = internal global i8* null, align 8, !dbg !909
@really_check_referrer.refhost_size = internal global i64 0, align 8, !dbg !912
@auth_check2.authpath = internal global i8* null, align 8, !dbg !869
@auth_check2.maxauthpath = internal global i64 0, align 8, !dbg !874
@.str.465 = private unnamed_addr constant [7 x i8] c"Basic \00", align 1
@auth_check2.maxprevauthpath = internal global i64 0, align 8, !dbg !878
@auth_check2.prevauthpath = internal global i8* null, align 8, !dbg !876
@auth_check2.prevmtime = internal global i64 0, align 8, !dbg !880
@auth_check2.prevuser = internal global i8* null, align 8, !dbg !882
@auth_check2.prevcryp = internal global i8* null, align 8, !dbg !886
@.str.466 = private unnamed_addr constant [47 x i8] c"%.80s auth file %.80s could not be opened - %m\00", align 1
@.str.467 = private unnamed_addr constant [113 x i8] c"The requested URL '%.80s' is protected by an authentication file, but the authentication file cannot be opened.\0A\00", align 1
@auth_check2.maxprevuser = internal global i64 0, align 8, !dbg !884
@auth_check2.maxprevcryp = internal global i64 0, align 8, !dbg !888
@b64_decode_table = internal global [256 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 62, i32 -1, i32 -1, i32 -1, i32 63, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16, !dbg !906
@send_authenticate.header = internal global i8* null, align 8, !dbg !890
@send_authenticate.maxheader = internal global i64 0, align 8, !dbg !895
@.str.468 = private unnamed_addr constant [8 x i8] c"%s%s\22\0D\0A\00", align 1
@send_authenticate.headstr = internal global [32 x i8] c"WWW-Authenticate: Basic realm=\22\00", align 16, !dbg !897
@err401form = internal global i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.470, i32 0, i32 0), align 8, !dbg !904
@.str.470 = private unnamed_addr constant [45 x i8] c"Authorization required for the URL '%.80s'.\0A\00", align 1
@.str.438 = private unnamed_addr constant [11 x i8] c"index.html\00", align 1
@.str.439 = private unnamed_addr constant [10 x i8] c"index.htm\00", align 1
@.str.440 = private unnamed_addr constant [12 x i8] c"index.xhtml\00", align 1
@.str.441 = private unnamed_addr constant [10 x i8] c"index.xht\00", align 1
@.str.442 = private unnamed_addr constant [12 x i8] c"Default.htm\00", align 1
@.str.443 = private unnamed_addr constant [10 x i8] c"index.cgi\00", align 1
@send_dirredirect.location = internal global i8* null, align 8, !dbg !849
@send_dirredirect.maxlocation = internal global i64 0, align 8, !dbg !856
@.str.459 = private unnamed_addr constant [7 x i8] c"%s/?%s\00", align 1
@.str.460 = private unnamed_addr constant [4 x i8] c"%s/\00", align 1
@send_dirredirect.header = internal global i8* null, align 8, !dbg !854
@send_dirredirect.maxheader = internal global i64 0, align 8, !dbg !858
@.str.461 = private unnamed_addr constant [7 x i8] c"%s%s\0D\0A\00", align 1
@send_dirredirect.headstr = internal global [11 x i8] c"Location: \00", align 1, !dbg !860
@err302form = internal global i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.463, i32 0, i32 0), align 8, !dbg !867
@.str.463 = private unnamed_addr constant [28 x i8] c"The actual URL is '%.80s'.\0A\00", align 1
@.str.458 = private unnamed_addr constant [57 x i8] c"The requested URL '%.80s' was not found on this server.\0A\00", align 1
@.str.457 = private unnamed_addr constant [10 x i8] c"Not Found\00", align 1
@.str.61.292 = private unnamed_addr constant [60 x i8] c"  libhttpd - %d strings allocated, %lu bytes (%g bytes/str)\00", align 1

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @main(i32 %argc, i8** %argv) #0 !dbg !959 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %cp = alloca i8*, align 8
  %pwd = alloca %struct.passwd*, align 8
  %uid = alloca i32, align 4
  %gid = alloca i32, align 4
  %cwd = alloca [1025 x i8], align 16
  %logfp = alloca %struct.__sFILE*, align 8
  %num_ready = alloca i32, align 4
  %cnum = alloca i32, align 4
  %c = alloca %struct.connecttab*, align 8
  %hc = alloca %struct.httpd_conn*, align 8
  %sa4 = alloca %union.httpd_sockaddr, align 8
  %sa6 = alloca %union.httpd_sockaddr, align 8
  %gotv4 = alloca i32, align 4
  %gotv6 = alloca i32, align 4
  %tv = alloca %struct.timeval, align 8
  %pidfp = alloca %struct.__sFILE*, align 8
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !962, metadata !DIExpression()), !dbg !963
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !964, metadata !DIExpression()), !dbg !965
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !966, metadata !DIExpression()), !dbg !967
  call void @llvm.dbg.declare(metadata %struct.passwd** %pwd, metadata !968, metadata !DIExpression()), !dbg !969
  %pwd1 = bitcast %struct.passwd** %pwd to i8*, !dbg !970
  call void @llvm.var.annotation(i8* %pwd1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0), i32 358), !dbg !970
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !971, metadata !DIExpression()), !dbg !972
  store i32 32767, i32* %uid, align 4, !dbg !972
  call void @llvm.dbg.declare(metadata i32* %gid, metadata !973, metadata !DIExpression()), !dbg !974
  store i32 32767, i32* %gid, align 4, !dbg !974
  call void @llvm.dbg.declare(metadata [1025 x i8]* %cwd, metadata !975, metadata !DIExpression()), !dbg !979
  call void @llvm.dbg.declare(metadata %struct.__sFILE** %logfp, metadata !980, metadata !DIExpression()), !dbg !981
  call void @llvm.dbg.declare(metadata i32* %num_ready, metadata !982, metadata !DIExpression()), !dbg !983
  call void @llvm.dbg.declare(metadata i32* %cnum, metadata !984, metadata !DIExpression()), !dbg !985
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c, metadata !986, metadata !DIExpression()), !dbg !987
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc, metadata !988, metadata !DIExpression()), !dbg !989
  call void @llvm.dbg.declare(metadata %union.httpd_sockaddr* %sa4, metadata !990, metadata !DIExpression()), !dbg !991
  call void @llvm.dbg.declare(metadata %union.httpd_sockaddr* %sa6, metadata !992, metadata !DIExpression()), !dbg !993
  call void @llvm.dbg.declare(metadata i32* %gotv4, metadata !994, metadata !DIExpression()), !dbg !995
  call void @llvm.dbg.declare(metadata i32* %gotv6, metadata !996, metadata !DIExpression()), !dbg !997
  call void @llvm.dbg.declare(metadata %struct.timeval* %tv, metadata !998, metadata !DIExpression()), !dbg !999
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !1000
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !1000
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !1000
  store i8* %1, i8** @argv0, align 8, !dbg !1001
  %2 = load i8*, i8** @argv0, align 8, !dbg !1002
  %call = call i8* @strrchr(i8* %2, i32 47), !dbg !1003
  store i8* %call, i8** %cp, align 8, !dbg !1004
  %3 = load i8*, i8** %cp, align 8, !dbg !1005
  %cmp = icmp ne i8* %3, null, !dbg !1007
  br i1 %cmp, label %if.then, label %if.else, !dbg !1008

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %cp, align 8, !dbg !1009
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !1009
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !1009
  br label %if.end, !dbg !1009

if.else:                                          ; preds = %entry
  %5 = load i8*, i8** @argv0, align 8, !dbg !1010
  store i8* %5, i8** %cp, align 8, !dbg !1011
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i8*, i8** %cp, align 8, !dbg !1012
  call void @openlog(i8* %6, i32 9, i32 24), !dbg !1013
  %7 = load i32, i32* %argc.addr, align 4, !dbg !1014
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !1015
  call void @parse_args(i32 %7, i8** %8), !dbg !1016
  call void @tzset(), !dbg !1017
  call void @lookup_hostname(%union.httpd_sockaddr* %sa4, i64 128, i32* %gotv4, %union.httpd_sockaddr* %sa6, i64 128, i32* %gotv6), !dbg !1018
  %9 = load i32, i32* %gotv4, align 4, !dbg !1019
  %tobool = icmp ne i32 %9, 0, !dbg !1019
  br i1 %tobool, label %if.end5, label %lor.lhs.false, !dbg !1021

lor.lhs.false:                                    ; preds = %if.end
  %10 = load i32, i32* %gotv6, align 4, !dbg !1022
  %tobool2 = icmp ne i32 %10, 0, !dbg !1022
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !1023

if.then3:                                         ; preds = %lor.lhs.false
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)), !dbg !1024
  %11 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !1026
  %12 = load i8*, i8** @argv0, align 8, !dbg !1027
  %call4 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %11, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i8* %12), !dbg !1028
  call void @exit(i32 1) #13, !dbg !1029
  unreachable, !dbg !1029

if.end5:                                          ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* @numthrottles, align 4, !dbg !1030
  store i32 0, i32* @maxthrottles, align 4, !dbg !1031
  store %struct.throttletab* null, %struct.throttletab** @throttles, align 8, !dbg !1032
  %13 = load i8*, i8** @throttlefile, align 8, !dbg !1033
  %cmp6 = icmp ne i8* %13, null, !dbg !1035
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !1036

if.then7:                                         ; preds = %if.end5
  %14 = load i8*, i8** @throttlefile, align 8, !dbg !1037
  call void @read_throttlefile(i8* %14), !dbg !1038
  br label %if.end8, !dbg !1038

if.end8:                                          ; preds = %if.then7, %if.end5
  %call9 = call i32 @getuid(), !dbg !1039
  %cmp10 = icmp eq i32 %call9, 0, !dbg !1041
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !1042

if.then11:                                        ; preds = %if.end8
  %15 = load i8*, i8** @user, align 8, !dbg !1043
  %call12 = call %struct.passwd* @getpwnam(i8* %15), !dbg !1045
  store %struct.passwd* %call12, %struct.passwd** %pwd, align 8, !dbg !1046
  %16 = load %struct.passwd*, %struct.passwd** %pwd, align 8, !dbg !1047
  %cmp13 = icmp eq %struct.passwd* %16, null, !dbg !1049
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !1050

if.then14:                                        ; preds = %if.then11
  %17 = load i8*, i8** @user, align 8, !dbg !1051
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %17), !dbg !1053
  %18 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !1054
  %19 = load i8*, i8** @argv0, align 8, !dbg !1055
  %20 = load i8*, i8** @user, align 8, !dbg !1056
  %call15 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8* %19, i8* %20), !dbg !1057
  call void @exit(i32 1) #13, !dbg !1058
  unreachable, !dbg !1058

if.end16:                                         ; preds = %if.then11
  %21 = load %struct.passwd*, %struct.passwd** %pwd, align 8, !dbg !1059
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %21, i32 0, i32 2, !dbg !1060
  %22 = load i32, i32* %pw_uid, align 8, !dbg !1060
  store i32 %22, i32* %uid, align 4, !dbg !1061
  %23 = load %struct.passwd*, %struct.passwd** %pwd, align 8, !dbg !1062
  %pw_gid = getelementptr inbounds %struct.passwd, %struct.passwd* %23, i32 0, i32 3, !dbg !1063
  %24 = load i32, i32* %pw_gid, align 4, !dbg !1063
  store i32 %24, i32* %gid, align 4, !dbg !1064
  br label %if.end17, !dbg !1065

if.end17:                                         ; preds = %if.end16, %if.end8
  %25 = load i8*, i8** @logfile, align 8, !dbg !1066
  %cmp18 = icmp ne i8* %25, null, !dbg !1068
  br i1 %cmp18, label %if.then19, label %if.else53, !dbg !1069

if.then19:                                        ; preds = %if.end17
  %26 = load i8*, i8** @logfile, align 8, !dbg !1070
  %call20 = call i32 @strcmp(i8* %26, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)), !dbg !1073
  %cmp21 = icmp eq i32 %call20, 0, !dbg !1074
  br i1 %cmp21, label %if.then22, label %if.else23, !dbg !1075

if.then22:                                        ; preds = %if.then19
  store i32 1, i32* @no_log, align 4, !dbg !1076
  store %struct.__sFILE* null, %struct.__sFILE** %logfp, align 8, !dbg !1078
  br label %if.end52, !dbg !1079

if.else23:                                        ; preds = %if.then19
  %27 = load i8*, i8** @logfile, align 8, !dbg !1080
  %call24 = call i32 @strcmp(i8* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)), !dbg !1082
  %cmp25 = icmp eq i32 %call24, 0, !dbg !1083
  br i1 %cmp25, label %if.then26, label %if.else27, !dbg !1084

if.then26:                                        ; preds = %if.else23
  %28 = load %struct.__sFILE*, %struct.__sFILE** @__stdoutp, align 8, !dbg !1085
  store %struct.__sFILE* %28, %struct.__sFILE** %logfp, align 8, !dbg !1086
  br label %if.end51, !dbg !1087

if.else27:                                        ; preds = %if.else23
  %29 = load i8*, i8** @logfile, align 8, !dbg !1088
  %call28 = call %struct.__sFILE* @"\01_fopen"(i8* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)), !dbg !1090
  store %struct.__sFILE* %call28, %struct.__sFILE** %logfp, align 8, !dbg !1091
  %30 = load %struct.__sFILE*, %struct.__sFILE** %logfp, align 8, !dbg !1092
  %cmp29 = icmp eq %struct.__sFILE* %30, null, !dbg !1094
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !1095

if.then30:                                        ; preds = %if.else27
  %31 = load i8*, i8** @logfile, align 8, !dbg !1096
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %31), !dbg !1098
  %32 = load i8*, i8** @logfile, align 8, !dbg !1099
  call void @perror(i8* %32) #14, !dbg !1100
  call void @exit(i32 1) #13, !dbg !1101
  unreachable, !dbg !1101

if.end31:                                         ; preds = %if.else27
  %33 = load i8*, i8** @logfile, align 8, !dbg !1102
  %arrayidx32 = getelementptr inbounds i8, i8* %33, i64 0, !dbg !1102
  %34 = load i8, i8* %arrayidx32, align 1, !dbg !1102
  %conv = sext i8 %34 to i32, !dbg !1102
  %cmp33 = icmp ne i32 %conv, 47, !dbg !1104
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !1105

if.then35:                                        ; preds = %if.end31
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 4, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.10, i64 0, i64 0)), !dbg !1106
  %35 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !1108
  %36 = load i8*, i8** @argv0, align 8, !dbg !1109
  %call36 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %35, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.11, i64 0, i64 0), i8* %36), !dbg !1110
  br label %if.end37, !dbg !1111

if.end37:                                         ; preds = %if.then35, %if.end31
  %37 = load %struct.__sFILE*, %struct.__sFILE** %logfp, align 8, !dbg !1112
  %call38 = call i32 @fileno(%struct.__sFILE* %37), !dbg !1113
  %call39 = call i32 (i32, i32, ...) @"\01_fcntl"(i32 %call38, i32 2, i32 1), !dbg !1114
  %call40 = call i32 @getuid(), !dbg !1115
  %cmp41 = icmp eq i32 %call40, 0, !dbg !1117
  br i1 %cmp41, label %if.then43, label %if.end50, !dbg !1118

if.then43:                                        ; preds = %if.end37
  %38 = load %struct.__sFILE*, %struct.__sFILE** %logfp, align 8, !dbg !1119
  %call44 = call i32 @fileno(%struct.__sFILE* %38), !dbg !1122
  %39 = load i32, i32* %uid, align 4, !dbg !1123
  %40 = load i32, i32* %gid, align 4, !dbg !1124
  %call45 = call i32 @fchown(i32 %call44, i32 %39, i32 %40), !dbg !1125
  %cmp46 = icmp slt i32 %call45, 0, !dbg !1126
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !1127

if.then48:                                        ; preds = %if.then43
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)), !dbg !1128
  call void @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0)) #14, !dbg !1130
  br label %if.end49, !dbg !1131

if.end49:                                         ; preds = %if.then48, %if.then43
  br label %if.end50, !dbg !1132

if.end50:                                         ; preds = %if.end49, %if.end37
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then26
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then22
  br label %if.end54, !dbg !1133

if.else53:                                        ; preds = %if.end17
  store %struct.__sFILE* null, %struct.__sFILE** %logfp, align 8, !dbg !1134
  br label %if.end54

if.end54:                                         ; preds = %if.else53, %if.end52
  %41 = load i8*, i8** @dir, align 8, !dbg !1135
  %cmp55 = icmp ne i8* %41, null, !dbg !1137
  br i1 %cmp55, label %if.then57, label %if.end63, !dbg !1138

if.then57:                                        ; preds = %if.end54
  %42 = load i8*, i8** @dir, align 8, !dbg !1139
  %call58 = call i32 @chdir(i8* %42), !dbg !1142
  %cmp59 = icmp slt i32 %call58, 0, !dbg !1143
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !1144

if.then61:                                        ; preds = %if.then57
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0)), !dbg !1145
  call void @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0)) #14, !dbg !1147
  call void @exit(i32 1) #13, !dbg !1148
  unreachable, !dbg !1148

if.end62:                                         ; preds = %if.then57
  br label %if.end63, !dbg !1149

if.end63:                                         ; preds = %if.end62, %if.end54
  %arraydecay = getelementptr inbounds [1025 x i8], [1025 x i8]* %cwd, i64 0, i64 0, !dbg !1150
  %call64 = call i8* @getcwd(i8* %arraydecay, i64 1024), !dbg !1151
  %arraydecay65 = getelementptr inbounds [1025 x i8], [1025 x i8]* %cwd, i64 0, i64 0, !dbg !1152
  %call66 = call i64 @strlen(i8* %arraydecay65), !dbg !1154
  %sub = sub i64 %call66, 1, !dbg !1155
  %arrayidx67 = getelementptr inbounds [1025 x i8], [1025 x i8]* %cwd, i64 0, i64 %sub, !dbg !1156
  %43 = load i8, i8* %arrayidx67, align 1, !dbg !1156
  %conv68 = sext i8 %43 to i32, !dbg !1156
  %cmp69 = icmp ne i32 %conv68, 47, !dbg !1157
  br i1 %cmp69, label %if.then71, label %if.end74, !dbg !1158

if.then71:                                        ; preds = %if.end63
  %arraydecay72 = getelementptr inbounds [1025 x i8], [1025 x i8]* %cwd, i64 0, i64 0, !dbg !1159
  %call73 = call i8* @__strcat_chk(i8* %arraydecay72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1025) #11, !dbg !1159
  br label %if.end74, !dbg !1160

if.end74:                                         ; preds = %if.then71, %if.end63
  %44 = load i32, i32* @debug, align 4, !dbg !1161
  %tobool75 = icmp ne i32 %44, 0, !dbg !1161
  br i1 %tobool75, label %if.else89, label %if.then76, !dbg !1163

if.then76:                                        ; preds = %if.end74
  %45 = load %struct.__sFILE*, %struct.__sFILE** @__stdinp, align 8, !dbg !1164
  %call77 = call i32 @fclose(%struct.__sFILE* %45), !dbg !1166
  %46 = load %struct.__sFILE*, %struct.__sFILE** %logfp, align 8, !dbg !1167
  %47 = load %struct.__sFILE*, %struct.__sFILE** @__stdoutp, align 8, !dbg !1169
  %cmp78 = icmp ne %struct.__sFILE* %46, %47, !dbg !1170
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !1171

if.then80:                                        ; preds = %if.then76
  %48 = load %struct.__sFILE*, %struct.__sFILE** @__stdoutp, align 8, !dbg !1172
  %call81 = call i32 @fclose(%struct.__sFILE* %48), !dbg !1173
  br label %if.end82, !dbg !1174

if.end82:                                         ; preds = %if.then80, %if.then76
  %49 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !1175
  %call83 = call i32 @fclose(%struct.__sFILE* %49), !dbg !1176
  %call84 = call i32 @"\01_daemon$1050"(i32 1, i32 1), !dbg !1177
  %cmp85 = icmp slt i32 %call84, 0, !dbg !1179
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !1180

if.then87:                                        ; preds = %if.end82
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)), !dbg !1181
  call void @exit(i32 1) #13, !dbg !1183
  unreachable, !dbg !1183

if.end88:                                         ; preds = %if.end82
  br label %if.end91, !dbg !1184

if.else89:                                        ; preds = %if.end74
  %call90 = call i32 @setsid(), !dbg !1185
  br label %if.end91

if.end91:                                         ; preds = %if.else89, %if.end88
  %50 = load i8*, i8** @pidfile, align 8, !dbg !1187
  %cmp92 = icmp ne i8* %50, null, !dbg !1189
  br i1 %cmp92, label %if.then94, label %if.end103, !dbg !1190

if.then94:                                        ; preds = %if.end91
  call void @llvm.dbg.declare(metadata %struct.__sFILE** %pidfp, metadata !1191, metadata !DIExpression()), !dbg !1193
  %51 = load i8*, i8** @pidfile, align 8, !dbg !1194
  %call95 = call %struct.__sFILE* @"\01_fopen"(i8* %51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)), !dbg !1195
  store %struct.__sFILE* %call95, %struct.__sFILE** %pidfp, align 8, !dbg !1193
  %52 = load %struct.__sFILE*, %struct.__sFILE** %pidfp, align 8, !dbg !1196
  %cmp96 = icmp eq %struct.__sFILE* %52, null, !dbg !1198
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !1199

if.then98:                                        ; preds = %if.then94
  %53 = load i8*, i8** @pidfile, align 8, !dbg !1200
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %53), !dbg !1202
  call void @exit(i32 1) #13, !dbg !1203
  unreachable, !dbg !1203

if.end99:                                         ; preds = %if.then94
  %54 = load %struct.__sFILE*, %struct.__sFILE** %pidfp, align 8, !dbg !1204
  %call100 = call i32 @getpid(), !dbg !1205
  %call101 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %54, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i32 %call100), !dbg !1206
  %55 = load %struct.__sFILE*, %struct.__sFILE** %pidfp, align 8, !dbg !1207
  %call102 = call i32 @fclose(%struct.__sFILE* %55), !dbg !1208
  br label %if.end103, !dbg !1209

if.end103:                                        ; preds = %if.end99, %if.end91
  %call104 = call i32 @fdwatch_get_nfiles(), !dbg !1210
  store i32 %call104, i32* @max_connects, align 4, !dbg !1211
  %56 = load i32, i32* @max_connects, align 4, !dbg !1212
  %cmp105 = icmp slt i32 %56, 0, !dbg !1214
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !1215

if.then107:                                       ; preds = %if.end103
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.20, i64 0, i64 0)), !dbg !1216
  call void @exit(i32 1) #13, !dbg !1218
  unreachable, !dbg !1218

if.end108:                                        ; preds = %if.end103
  %57 = load i32, i32* @max_connects, align 4, !dbg !1219
  %sub109 = sub nsw i32 %57, 10, !dbg !1219
  store i32 %sub109, i32* @max_connects, align 4, !dbg !1219
  %58 = load i32, i32* @do_chroot, align 4, !dbg !1220
  %tobool110 = icmp ne i32 %58, 0, !dbg !1220
  br i1 %tobool110, label %if.then111, label %if.end153, !dbg !1222

if.then111:                                       ; preds = %if.end108
  %arraydecay112 = getelementptr inbounds [1025 x i8], [1025 x i8]* %cwd, i64 0, i64 0, !dbg !1223
  %call113 = call i32 @chroot(i8* %arraydecay112), !dbg !1226
  %cmp114 = icmp slt i32 %call113, 0, !dbg !1227
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !1228

if.then116:                                       ; preds = %if.then111
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0)), !dbg !1229
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #14, !dbg !1231
  call void @exit(i32 1) #13, !dbg !1232
  unreachable, !dbg !1232

if.end117:                                        ; preds = %if.then111
  %59 = load i8*, i8** @logfile, align 8, !dbg !1233
  %cmp118 = icmp ne i8* %59, null, !dbg !1235
  br i1 %cmp118, label %land.lhs.true, label %if.end144, !dbg !1236

land.lhs.true:                                    ; preds = %if.end117
  %60 = load i8*, i8** @logfile, align 8, !dbg !1237
  %call120 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)), !dbg !1238
  %cmp121 = icmp ne i32 %call120, 0, !dbg !1239
  br i1 %cmp121, label %if.then123, label %if.end144, !dbg !1240

if.then123:                                       ; preds = %land.lhs.true
  %61 = load i8*, i8** @logfile, align 8, !dbg !1241
  %arraydecay124 = getelementptr inbounds [1025 x i8], [1025 x i8]* %cwd, i64 0, i64 0, !dbg !1244
  %arraydecay125 = getelementptr inbounds [1025 x i8], [1025 x i8]* %cwd, i64 0, i64 0, !dbg !1245
  %call126 = call i64 @strlen(i8* %arraydecay125), !dbg !1246
  %call127 = call i32 @strncmp(i8* %61, i8* %arraydecay124, i64 %call126), !dbg !1247
  %cmp128 = icmp eq i32 %call127, 0, !dbg !1248
  br i1 %cmp128, label %if.then130, label %if.else141, !dbg !1249

if.then130:                                       ; preds = %if.then123
  %62 = load i8*, i8** @logfile, align 8, !dbg !1250
  %63 = load i8*, i8** @logfile, align 8, !dbg !1250
  %arraydecay131 = getelementptr inbounds [1025 x i8], [1025 x i8]* %cwd, i64 0, i64 0, !dbg !1250
  %call132 = call i64 @strlen(i8* %arraydecay131), !dbg !1250
  %sub133 = sub i64 %call132, 1, !dbg !1250
  %arrayidx134 = getelementptr inbounds i8, i8* %63, i64 %sub133, !dbg !1250
  %64 = load i8*, i8** @logfile, align 8, !dbg !1250
  %arraydecay135 = getelementptr inbounds [1025 x i8], [1025 x i8]* %cwd, i64 0, i64 0, !dbg !1250
  %call136 = call i64 @strlen(i8* %arraydecay135), !dbg !1250
  %sub137 = sub i64 %call136, 1, !dbg !1250
  %arrayidx138 = getelementptr inbounds i8, i8* %64, i64 %sub137, !dbg !1250
  %call139 = call i64 @strlen(i8* %arrayidx138), !dbg !1250
  %add = add i64 %call139, 1, !dbg !1250
  %65 = load i8*, i8** @logfile, align 8, !dbg !1250
  %66 = call i64 @llvm.objectsize.i64.p0i8(i8* %65, i1 false, i1 true, i1 false), !dbg !1250
  %call140 = call i8* @__memmove_chk(i8* %62, i8* %arrayidx134, i64 %add, i64 %66) #11, !dbg !1250
  br label %if.end143, !dbg !1252

if.else141:                                       ; preds = %if.then123
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.23, i64 0, i64 0)), !dbg !1253
  %67 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !1255
  %68 = load i8*, i8** @argv0, align 8, !dbg !1256
  %call142 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %67, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.24, i64 0, i64 0), i8* %68), !dbg !1257
  br label %if.end143

if.end143:                                        ; preds = %if.else141, %if.then130
  br label %if.end144, !dbg !1258

if.end144:                                        ; preds = %if.end143, %land.lhs.true, %if.end117
  %arraydecay145 = getelementptr inbounds [1025 x i8], [1025 x i8]* %cwd, i64 0, i64 0, !dbg !1259
  %call146 = call i8* @__strcpy_chk(i8* %arraydecay145, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1025) #11, !dbg !1259
  %arraydecay147 = getelementptr inbounds [1025 x i8], [1025 x i8]* %cwd, i64 0, i64 0, !dbg !1260
  %call148 = call i32 @chdir(i8* %arraydecay147), !dbg !1262
  %cmp149 = icmp slt i32 %call148, 0, !dbg !1263
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !1264

if.then151:                                       ; preds = %if.end144
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0)), !dbg !1265
  call void @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0)) #14, !dbg !1267
  call void @exit(i32 1) #13, !dbg !1268
  unreachable, !dbg !1268

if.end152:                                        ; preds = %if.end144
  br label %if.end153, !dbg !1269

if.end153:                                        ; preds = %if.end152, %if.end108
  %69 = load i8*, i8** @data_dir, align 8, !dbg !1270
  %cmp154 = icmp ne i8* %69, null, !dbg !1272
  br i1 %cmp154, label %if.then156, label %if.end162, !dbg !1273

if.then156:                                       ; preds = %if.end153
  %70 = load i8*, i8** @data_dir, align 8, !dbg !1274
  %call157 = call i32 @chdir(i8* %70), !dbg !1277
  %cmp158 = icmp slt i32 %call157, 0, !dbg !1278
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !1279

if.then160:                                       ; preds = %if.then156
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i64 0, i64 0)), !dbg !1280
  call void @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0)) #14, !dbg !1282
  call void @exit(i32 1) #13, !dbg !1283
  unreachable, !dbg !1283

if.end161:                                        ; preds = %if.then156
  br label %if.end162, !dbg !1284

if.end162:                                        ; preds = %if.end161, %if.end153
  %call163 = call void (i32)* @sigset(i32 15, void (i32)* @handle_term), !dbg !1285
  %call164 = call void (i32)* @sigset(i32 2, void (i32)* @handle_term), !dbg !1286
  %call165 = call void (i32)* @sigset(i32 20, void (i32)* @handle_chld), !dbg !1287
  %call166 = call void (i32)* @sigset(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*)), !dbg !1288
  %call167 = call void (i32)* @sigset(i32 1, void (i32)* @handle_hup), !dbg !1289
  %call168 = call void (i32)* @sigset(i32 30, void (i32)* @handle_usr1), !dbg !1290
  %call169 = call void (i32)* @sigset(i32 31, void (i32)* @handle_usr2), !dbg !1291
  %call170 = call void (i32)* @sigset(i32 14, void (i32)* @handle_alrm), !dbg !1292
  store volatile i32 0, i32* @got_hup, align 4, !dbg !1293
  store volatile i32 0, i32* @got_usr1, align 4, !dbg !1294
  store volatile i32 0, i32* @watchdog_flag, align 4, !dbg !1295
  %call171 = call i32 @alarm(i32 360), !dbg !1296
  call void @tmr_init(), !dbg !1297
  %71 = load i8*, i8** @hostname, align 8, !dbg !1298
  %72 = load i32, i32* %gotv4, align 4, !dbg !1299
  %tobool172 = icmp ne i32 %72, 0, !dbg !1299
  br i1 %tobool172, label %cond.true, label %cond.false, !dbg !1299

cond.true:                                        ; preds = %if.end162
  br label %cond.end, !dbg !1299

cond.false:                                       ; preds = %if.end162
  br label %cond.end, !dbg !1299

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.httpd_sockaddr* [ %sa4, %cond.true ], [ null, %cond.false ], !dbg !1299
  %73 = load i32, i32* %gotv6, align 4, !dbg !1300
  %tobool173 = icmp ne i32 %73, 0, !dbg !1300
  br i1 %tobool173, label %cond.true174, label %cond.false175, !dbg !1300

cond.true174:                                     ; preds = %cond.end
  br label %cond.end176, !dbg !1300

cond.false175:                                    ; preds = %cond.end
  br label %cond.end176, !dbg !1300

cond.end176:                                      ; preds = %cond.false175, %cond.true174
  %cond177 = phi %union.httpd_sockaddr* [ %sa6, %cond.true174 ], [ null, %cond.false175 ], !dbg !1300
  %74 = load i16, i16* @port, align 2, !dbg !1301
  %75 = load i8*, i8** @cgi_pattern, align 8, !dbg !1302
  %76 = load i32, i32* @cgi_limit, align 4, !dbg !1303
  %77 = load i8*, i8** @charset, align 8, !dbg !1304
  %78 = load i8*, i8** @p3p, align 8, !dbg !1305
  %79 = load i32, i32* @max_age, align 4, !dbg !1306
  %arraydecay178 = getelementptr inbounds [1025 x i8], [1025 x i8]* %cwd, i64 0, i64 0, !dbg !1307
  %80 = load i32, i32* @no_log, align 4, !dbg !1308
  %81 = load %struct.__sFILE*, %struct.__sFILE** %logfp, align 8, !dbg !1309
  %82 = load i32, i32* @no_symlink_check, align 4, !dbg !1310
  %83 = load i32, i32* @do_vhost, align 4, !dbg !1311
  %84 = load i32, i32* @do_global_passwd, align 4, !dbg !1312
  %85 = load i8*, i8** @url_pattern, align 8, !dbg !1313
  %86 = load i8*, i8** @local_pattern, align 8, !dbg !1314
  %87 = load i32, i32* @no_empty_referrers, align 4, !dbg !1315
  %call179 = call %struct.httpd_server* @httpd_initialize(i8* %71, %union.httpd_sockaddr* %cond, %union.httpd_sockaddr* %cond177, i16 zeroext %74, i8* %75, i32 %76, i8* %77, i8* %78, i32 %79, i8* %arraydecay178, i32 %80, %struct.__sFILE* %81, i32 %82, i32 %83, i32 %84, i8* %85, i8* %86, i32 %87), !dbg !1316
  store %struct.httpd_server* %call179, %struct.httpd_server** @hs, align 8, !dbg !1317
  %88 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1318
  %cmp180 = icmp eq %struct.httpd_server* %88, null, !dbg !1320
  br i1 %cmp180, label %if.then182, label %if.end183, !dbg !1321

if.then182:                                       ; preds = %cond.end176
  call void @exit(i32 1) #13, !dbg !1322
  unreachable, !dbg !1322

if.end183:                                        ; preds = %cond.end176
  %89 = load i8*, i8** getelementptr inbounds (%union.ClientData, %union.ClientData* @JunkClientData, i32 0, i32 0), align 8, !dbg !1323
  %call184 = call %struct.TimerStruct* @tmr_create(%struct.timeval* null, void (i8*, %struct.timeval*)* @occasional, i8* %89, i64 120000, i32 1), !dbg !1323
  %cmp185 = icmp eq %struct.TimerStruct* %call184, null, !dbg !1325
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !1326

if.then187:                                       ; preds = %if.end183
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i64 0, i64 0)), !dbg !1327
  call void @exit(i32 1) #13, !dbg !1329
  unreachable, !dbg !1329

if.end188:                                        ; preds = %if.end183
  %90 = load i8*, i8** getelementptr inbounds (%union.ClientData, %union.ClientData* @JunkClientData, i32 0, i32 0), align 8, !dbg !1330
  %call189 = call %struct.TimerStruct* @tmr_create(%struct.timeval* null, void (i8*, %struct.timeval*)* @idle, i8* %90, i64 5000, i32 1), !dbg !1330
  %cmp190 = icmp eq %struct.TimerStruct* %call189, null, !dbg !1332
  br i1 %cmp190, label %if.then192, label %if.end193, !dbg !1333

if.then192:                                       ; preds = %if.end188
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0)), !dbg !1334
  call void @exit(i32 1) #13, !dbg !1336
  unreachable, !dbg !1336

if.end193:                                        ; preds = %if.end188
  %91 = load i32, i32* @numthrottles, align 4, !dbg !1337
  %cmp194 = icmp sgt i32 %91, 0, !dbg !1339
  br i1 %cmp194, label %if.then196, label %if.end202, !dbg !1340

if.then196:                                       ; preds = %if.end193
  %92 = load i8*, i8** getelementptr inbounds (%union.ClientData, %union.ClientData* @JunkClientData, i32 0, i32 0), align 8, !dbg !1341
  %call197 = call %struct.TimerStruct* @tmr_create(%struct.timeval* null, void (i8*, %struct.timeval*)* @update_throttles, i8* %92, i64 2000, i32 1), !dbg !1341
  %cmp198 = icmp eq %struct.TimerStruct* %call197, null, !dbg !1344
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !1345

if.then200:                                       ; preds = %if.then196
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31, i64 0, i64 0)), !dbg !1346
  call void @exit(i32 1) #13, !dbg !1348
  unreachable, !dbg !1348

if.end201:                                        ; preds = %if.then196
  br label %if.end202, !dbg !1349

if.end202:                                        ; preds = %if.end201, %if.end193
  %93 = load i8*, i8** getelementptr inbounds (%union.ClientData, %union.ClientData* @JunkClientData, i32 0, i32 0), align 8, !dbg !1350
  %call203 = call %struct.TimerStruct* @tmr_create(%struct.timeval* null, void (i8*, %struct.timeval*)* @show_stats, i8* %93, i64 3600000, i32 1), !dbg !1350
  %cmp204 = icmp eq %struct.TimerStruct* %call203, null, !dbg !1352
  br i1 %cmp204, label %if.then206, label %if.end207, !dbg !1353

if.then206:                                       ; preds = %if.end202
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i64 0, i64 0)), !dbg !1354
  call void @exit(i32 1) #13, !dbg !1356
  unreachable, !dbg !1356

if.end207:                                        ; preds = %if.end202
  %call208 = call i64 @time(i64* null), !dbg !1357
  store i64 %call208, i64* @stats_time, align 8, !dbg !1358
  store i64 %call208, i64* @start_time, align 8, !dbg !1359
  store i64 0, i64* @stats_connections, align 8, !dbg !1360
  store i64 0, i64* @stats_bytes, align 8, !dbg !1361
  store i32 0, i32* @stats_simultaneous, align 4, !dbg !1362
  %call209 = call i32 @getuid(), !dbg !1363
  %cmp210 = icmp eq i32 %call209, 0, !dbg !1365
  br i1 %cmp210, label %if.then212, label %if.end237, !dbg !1366

if.then212:                                       ; preds = %if.end207
  %call213 = call i32 @setgroups(i32 0, i32* null), !dbg !1367
  %cmp214 = icmp slt i32 %call213, 0, !dbg !1370
  br i1 %cmp214, label %if.then216, label %if.end217, !dbg !1371

if.then216:                                       ; preds = %if.then212
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i64 0, i64 0)), !dbg !1372
  call void @exit(i32 1) #13, !dbg !1374
  unreachable, !dbg !1374

if.end217:                                        ; preds = %if.then212
  %94 = load i32, i32* %gid, align 4, !dbg !1375
  %call218 = call i32 @setgid(i32 %94), !dbg !1377
  %cmp219 = icmp slt i32 %call218, 0, !dbg !1378
  br i1 %cmp219, label %if.then221, label %if.end222, !dbg !1379

if.then221:                                       ; preds = %if.end217
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0)), !dbg !1380
  call void @exit(i32 1) #13, !dbg !1382
  unreachable, !dbg !1382

if.end222:                                        ; preds = %if.end217
  %95 = load i8*, i8** @user, align 8, !dbg !1383
  %96 = load i32, i32* %gid, align 4, !dbg !1385
  %call223 = call i32 @initgroups(i8* %95, i32 %96), !dbg !1386
  %cmp224 = icmp slt i32 %call223, 0, !dbg !1387
  br i1 %cmp224, label %if.then226, label %if.end227, !dbg !1388

if.then226:                                       ; preds = %if.end222
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i64 0, i64 0)), !dbg !1389
  br label %if.end227, !dbg !1389

if.end227:                                        ; preds = %if.then226, %if.end222
  %97 = load i8*, i8** @user, align 8, !dbg !1390
  %call228 = call i32 @setlogin(i8* %97), !dbg !1391
  %98 = load i32, i32* %uid, align 4, !dbg !1392
  %call229 = call i32 @setuid(i32 %98), !dbg !1394
  %cmp230 = icmp slt i32 %call229, 0, !dbg !1395
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !1396

if.then232:                                       ; preds = %if.end227
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0)), !dbg !1397
  call void @exit(i32 1) #13, !dbg !1399
  unreachable, !dbg !1399

if.end233:                                        ; preds = %if.end227
  %99 = load i32, i32* @do_chroot, align 4, !dbg !1400
  %tobool234 = icmp ne i32 %99, 0, !dbg !1400
  br i1 %tobool234, label %if.end236, label %if.then235, !dbg !1402

if.then235:                                       ; preds = %if.end233
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 4, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.37, i64 0, i64 0)), !dbg !1403
  br label %if.end236, !dbg !1403

if.end236:                                        ; preds = %if.then235, %if.end233
  br label %if.end237, !dbg !1404

if.end237:                                        ; preds = %if.end236, %if.end207
  %100 = load i32, i32* @max_connects, align 4, !dbg !1405
  %conv238 = sext i32 %100 to i64, !dbg !1405
  %mul = mul i64 144, %conv238, !dbg !1405
  %call239 = call i8* @malloc(i64 %mul) #15, !dbg !1405
  %101 = bitcast i8* %call239 to %struct.connecttab*, !dbg !1405
  store %struct.connecttab* %101, %struct.connecttab** @connects, align 8, !dbg !1406
  %102 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !1407
  %cmp240 = icmp eq %struct.connecttab* %102, null, !dbg !1409
  br i1 %cmp240, label %if.then242, label %if.end243, !dbg !1410

if.then242:                                       ; preds = %if.end237
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38, i64 0, i64 0)), !dbg !1411
  call void @exit(i32 1) #13, !dbg !1413
  unreachable, !dbg !1413

if.end243:                                        ; preds = %if.end237
  store i32 0, i32* %cnum, align 4, !dbg !1414
  br label %for.cond, !dbg !1416

for.cond:                                         ; preds = %for.inc, %if.end243
  %103 = load i32, i32* %cnum, align 4, !dbg !1417
  %104 = load i32, i32* @max_connects, align 4, !dbg !1419
  %cmp244 = icmp slt i32 %103, %104, !dbg !1420
  br i1 %cmp244, label %for.body, label %for.end, !dbg !1421

for.body:                                         ; preds = %for.cond
  %105 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !1422
  %106 = load i32, i32* %cnum, align 4, !dbg !1424
  %idxprom = sext i32 %106 to i64, !dbg !1422
  %arrayidx246 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %105, i64 %idxprom, !dbg !1422
  %conn_state = getelementptr inbounds %struct.connecttab, %struct.connecttab* %arrayidx246, i32 0, i32 0, !dbg !1425
  store i32 0, i32* %conn_state, align 8, !dbg !1426
  %107 = load i32, i32* %cnum, align 4, !dbg !1427
  %add247 = add nsw i32 %107, 1, !dbg !1428
  %108 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !1429
  %109 = load i32, i32* %cnum, align 4, !dbg !1430
  %idxprom248 = sext i32 %109 to i64, !dbg !1429
  %arrayidx249 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %108, i64 %idxprom248, !dbg !1429
  %next_free_connect = getelementptr inbounds %struct.connecttab, %struct.connecttab* %arrayidx249, i32 0, i32 1, !dbg !1431
  store i32 %add247, i32* %next_free_connect, align 4, !dbg !1432
  %110 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !1433
  %111 = load i32, i32* %cnum, align 4, !dbg !1434
  %idxprom250 = sext i32 %111 to i64, !dbg !1433
  %arrayidx251 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %110, i64 %idxprom250, !dbg !1433
  %hc252 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %arrayidx251, i32 0, i32 2, !dbg !1435
  store %struct.httpd_conn* null, %struct.httpd_conn** %hc252, align 8, !dbg !1436
  br label %for.inc, !dbg !1437

for.inc:                                          ; preds = %for.body
  %112 = load i32, i32* %cnum, align 4, !dbg !1438
  %inc = add nsw i32 %112, 1, !dbg !1438
  store i32 %inc, i32* %cnum, align 4, !dbg !1438
  br label %for.cond, !dbg !1439, !llvm.loop !1440

for.end:                                          ; preds = %for.cond
  %113 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !1442
  %114 = load i32, i32* @max_connects, align 4, !dbg !1443
  %sub253 = sub nsw i32 %114, 1, !dbg !1444
  %idxprom254 = sext i32 %sub253 to i64, !dbg !1442
  %arrayidx255 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %113, i64 %idxprom254, !dbg !1442
  %next_free_connect256 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %arrayidx255, i32 0, i32 1, !dbg !1445
  store i32 -1, i32* %next_free_connect256, align 4, !dbg !1446
  store i32 0, i32* @first_free_connect, align 4, !dbg !1447
  store i32 0, i32* @num_connects, align 4, !dbg !1448
  store i32 0, i32* @httpd_conn_count, align 4, !dbg !1449
  %115 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1450
  %cmp257 = icmp ne %struct.httpd_server* %115, null, !dbg !1452
  br i1 %cmp257, label %if.then259, label %if.end270, !dbg !1453

if.then259:                                       ; preds = %for.end
  %116 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1454
  %listen4_fd = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %116, i32 0, i32 10, !dbg !1457
  %117 = load i32, i32* %listen4_fd, align 8, !dbg !1457
  %cmp260 = icmp ne i32 %117, -1, !dbg !1458
  br i1 %cmp260, label %if.then262, label %if.end264, !dbg !1459

if.then262:                                       ; preds = %if.then259
  %118 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1460
  %listen4_fd263 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %118, i32 0, i32 10, !dbg !1461
  %119 = load i32, i32* %listen4_fd263, align 8, !dbg !1461
  call void @fdwatch_add_fd(i32 %119, i8* null, i32 0), !dbg !1462
  br label %if.end264, !dbg !1462

if.end264:                                        ; preds = %if.then262, %if.then259
  %120 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1463
  %listen6_fd = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %120, i32 0, i32 11, !dbg !1465
  %121 = load i32, i32* %listen6_fd, align 4, !dbg !1465
  %cmp265 = icmp ne i32 %121, -1, !dbg !1466
  br i1 %cmp265, label %if.then267, label %if.end269, !dbg !1467

if.then267:                                       ; preds = %if.end264
  %122 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1468
  %listen6_fd268 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %122, i32 0, i32 11, !dbg !1469
  %123 = load i32, i32* %listen6_fd268, align 4, !dbg !1469
  call void @fdwatch_add_fd(i32 %123, i8* null, i32 0), !dbg !1470
  br label %if.end269, !dbg !1470

if.end269:                                        ; preds = %if.then267, %if.end264
  br label %if.end270, !dbg !1471

if.end270:                                        ; preds = %if.end269, %for.end
  %call271 = call i32 @gettimeofday(%struct.timeval* %tv, i8* null), !dbg !1472
  br label %while.cond, !dbg !1473

while.cond:                                       ; preds = %if.end370, %if.then329, %if.then312, %if.then296, %if.then290, %if.end270
  %124 = load i32, i32* @terminate, align 4, !dbg !1474
  %tobool272 = icmp ne i32 %124, 0, !dbg !1474
  br i1 %tobool272, label %lor.rhs, label %lor.end, !dbg !1475

lor.rhs:                                          ; preds = %while.cond
  %125 = load i32, i32* @num_connects, align 4, !dbg !1476
  %cmp273 = icmp sgt i32 %125, 0, !dbg !1477
  br label %lor.end, !dbg !1475

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %126 = phi i1 [ true, %while.cond ], [ %cmp273, %lor.rhs ]
  br i1 %126, label %while.body, label %while.end371, !dbg !1473

while.body:                                       ; preds = %lor.end
  %127 = load volatile i32, i32* @got_hup, align 4, !dbg !1478
  %tobool275 = icmp ne i32 %127, 0, !dbg !1478
  br i1 %tobool275, label %if.then276, label %if.end277, !dbg !1481

if.then276:                                       ; preds = %while.body
  call void @re_open_logfile(), !dbg !1482
  store volatile i32 0, i32* @got_hup, align 4, !dbg !1484
  br label %if.end277, !dbg !1485

if.end277:                                        ; preds = %if.then276, %while.body
  %call278 = call i64 @tmr_mstimeout(%struct.timeval* %tv), !dbg !1486
  %call279 = call i32 @fdwatch(i64 %call278), !dbg !1487
  store i32 %call279, i32* %num_ready, align 4, !dbg !1488
  %128 = load i32, i32* %num_ready, align 4, !dbg !1489
  %cmp280 = icmp slt i32 %128, 0, !dbg !1491
  br i1 %cmp280, label %if.then282, label %if.end292, !dbg !1492

if.then282:                                       ; preds = %if.end277
  %call283 = call i32* @__error(), !dbg !1493
  %129 = load i32, i32* %call283, align 4, !dbg !1493
  %cmp284 = icmp eq i32 %129, 4, !dbg !1496
  br i1 %cmp284, label %if.then290, label %lor.lhs.false286, !dbg !1497

lor.lhs.false286:                                 ; preds = %if.then282
  %call287 = call i32* @__error(), !dbg !1498
  %130 = load i32, i32* %call287, align 4, !dbg !1498
  %cmp288 = icmp eq i32 %130, 35, !dbg !1499
  br i1 %cmp288, label %if.then290, label %if.end291, !dbg !1500

if.then290:                                       ; preds = %lor.lhs.false286, %if.then282
  br label %while.cond, !dbg !1501, !llvm.loop !1502

if.end291:                                        ; preds = %lor.lhs.false286
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0)), !dbg !1504
  call void @exit(i32 1) #13, !dbg !1505
  unreachable, !dbg !1505

if.end292:                                        ; preds = %if.end277
  %call293 = call i32 @gettimeofday(%struct.timeval* %tv, i8* null), !dbg !1506
  %131 = load i32, i32* %num_ready, align 4, !dbg !1507
  %cmp294 = icmp eq i32 %131, 0, !dbg !1509
  br i1 %cmp294, label %if.then296, label %if.end297, !dbg !1510

if.then296:                                       ; preds = %if.end292
  call void @tmr_run(%struct.timeval* %tv), !dbg !1511
  br label %while.cond, !dbg !1513, !llvm.loop !1502

if.end297:                                        ; preds = %if.end292
  %132 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1514
  %cmp298 = icmp ne %struct.httpd_server* %132, null, !dbg !1516
  br i1 %cmp298, label %land.lhs.true300, label %if.end314, !dbg !1517

land.lhs.true300:                                 ; preds = %if.end297
  %133 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1518
  %listen6_fd301 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %133, i32 0, i32 11, !dbg !1519
  %134 = load i32, i32* %listen6_fd301, align 4, !dbg !1519
  %cmp302 = icmp ne i32 %134, -1, !dbg !1520
  br i1 %cmp302, label %land.lhs.true304, label %if.end314, !dbg !1521

land.lhs.true304:                                 ; preds = %land.lhs.true300
  %135 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1522
  %listen6_fd305 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %135, i32 0, i32 11, !dbg !1523
  %136 = load i32, i32* %listen6_fd305, align 4, !dbg !1523
  %call306 = call i32 @fdwatch_check_fd(i32 %136), !dbg !1524
  %tobool307 = icmp ne i32 %call306, 0, !dbg !1524
  br i1 %tobool307, label %if.then308, label %if.end314, !dbg !1525

if.then308:                                       ; preds = %land.lhs.true304
  %137 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1526
  %listen6_fd309 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %137, i32 0, i32 11, !dbg !1529
  %138 = load i32, i32* %listen6_fd309, align 4, !dbg !1529
  %call310 = call i32 @handle_newconnect(%struct.timeval* %tv, i32 %138), !dbg !1530
  %tobool311 = icmp ne i32 %call310, 0, !dbg !1530
  br i1 %tobool311, label %if.then312, label %if.end313, !dbg !1531

if.then312:                                       ; preds = %if.then308
  br label %while.cond, !dbg !1532, !llvm.loop !1502

if.end313:                                        ; preds = %if.then308
  br label %if.end314, !dbg !1533

if.end314:                                        ; preds = %if.end313, %land.lhs.true304, %land.lhs.true300, %if.end297
  %139 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1534
  %cmp315 = icmp ne %struct.httpd_server* %139, null, !dbg !1536
  br i1 %cmp315, label %land.lhs.true317, label %if.end331, !dbg !1537

land.lhs.true317:                                 ; preds = %if.end314
  %140 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1538
  %listen4_fd318 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %140, i32 0, i32 10, !dbg !1539
  %141 = load i32, i32* %listen4_fd318, align 8, !dbg !1539
  %cmp319 = icmp ne i32 %141, -1, !dbg !1540
  br i1 %cmp319, label %land.lhs.true321, label %if.end331, !dbg !1541

land.lhs.true321:                                 ; preds = %land.lhs.true317
  %142 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1542
  %listen4_fd322 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %142, i32 0, i32 10, !dbg !1543
  %143 = load i32, i32* %listen4_fd322, align 8, !dbg !1543
  %call323 = call i32 @fdwatch_check_fd(i32 %143), !dbg !1544
  %tobool324 = icmp ne i32 %call323, 0, !dbg !1544
  br i1 %tobool324, label %if.then325, label %if.end331, !dbg !1545

if.then325:                                       ; preds = %land.lhs.true321
  %144 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1546
  %listen4_fd326 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %144, i32 0, i32 10, !dbg !1549
  %145 = load i32, i32* %listen4_fd326, align 8, !dbg !1549
  %call327 = call i32 @handle_newconnect(%struct.timeval* %tv, i32 %145), !dbg !1550
  %tobool328 = icmp ne i32 %call327, 0, !dbg !1550
  br i1 %tobool328, label %if.then329, label %if.end330, !dbg !1551

if.then329:                                       ; preds = %if.then325
  br label %while.cond, !dbg !1552, !llvm.loop !1502

if.end330:                                        ; preds = %if.then325
  br label %if.end331, !dbg !1553

if.end331:                                        ; preds = %if.end330, %land.lhs.true321, %land.lhs.true317, %if.end314
  br label %while.cond332, !dbg !1554

while.cond332:                                    ; preds = %if.end349, %if.then339, %if.end331
  %call333 = call i8* @fdwatch_get_next_client_data(), !dbg !1555
  %146 = bitcast i8* %call333 to %struct.connecttab*, !dbg !1556
  store %struct.connecttab* %146, %struct.connecttab** %c, align 8, !dbg !1557
  %cmp334 = icmp ne %struct.connecttab* %146, inttoptr (i64 -1 to %struct.connecttab*), !dbg !1558
  br i1 %cmp334, label %while.body336, label %while.end, !dbg !1554

while.body336:                                    ; preds = %while.cond332
  %147 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !1559
  %cmp337 = icmp eq %struct.connecttab* %147, null, !dbg !1562
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !1563

if.then339:                                       ; preds = %while.body336
  br label %while.cond332, !dbg !1564, !llvm.loop !1565

if.end340:                                        ; preds = %while.body336
  %148 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !1567
  %hc341 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %148, i32 0, i32 2, !dbg !1568
  %149 = load %struct.httpd_conn*, %struct.httpd_conn** %hc341, align 8, !dbg !1568
  store %struct.httpd_conn* %149, %struct.httpd_conn** %hc, align 8, !dbg !1569
  %150 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !1570
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %150, i32 0, i32 60, !dbg !1572
  %151 = load i32, i32* %conn_fd, align 8, !dbg !1572
  %call342 = call i32 @fdwatch_check_fd(i32 %151), !dbg !1573
  %tobool343 = icmp ne i32 %call342, 0, !dbg !1573
  br i1 %tobool343, label %if.else345, label %if.then344, !dbg !1574

if.then344:                                       ; preds = %if.end340
  %152 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !1575
  call void @clear_connection(%struct.connecttab* %152, %struct.timeval* %tv), !dbg !1576
  br label %if.end349, !dbg !1576

if.else345:                                       ; preds = %if.end340
  %153 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !1577
  %conn_state346 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %153, i32 0, i32 0, !dbg !1578
  %154 = load i32, i32* %conn_state346, align 8, !dbg !1578
  switch i32 %154, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb347
    i32 4, label %sw.bb348
  ], !dbg !1579

sw.bb:                                            ; preds = %if.else345
  %155 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !1580
  call void @handle_read(%struct.connecttab* %155, %struct.timeval* %tv), !dbg !1582
  br label %sw.epilog, !dbg !1583

sw.bb347:                                         ; preds = %if.else345
  %156 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !1584
  call void @handle_send(%struct.connecttab* %156, %struct.timeval* %tv), !dbg !1585
  br label %sw.epilog, !dbg !1586

sw.bb348:                                         ; preds = %if.else345
  %157 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !1587
  call void @handle_linger(%struct.connecttab* %157, %struct.timeval* %tv), !dbg !1588
  br label %sw.epilog, !dbg !1589

sw.epilog:                                        ; preds = %if.else345, %sw.bb348, %sw.bb347, %sw.bb
  br label %if.end349

if.end349:                                        ; preds = %sw.epilog, %if.then344
  br label %while.cond332, !dbg !1554, !llvm.loop !1565

while.end:                                        ; preds = %while.cond332
  call void @tmr_run(%struct.timeval* %tv), !dbg !1590
  %158 = load volatile i32, i32* @got_usr1, align 4, !dbg !1591
  %tobool350 = icmp ne i32 %158, 0, !dbg !1591
  br i1 %tobool350, label %land.lhs.true351, label %if.end370, !dbg !1593

land.lhs.true351:                                 ; preds = %while.end
  %159 = load i32, i32* @terminate, align 4, !dbg !1594
  %tobool352 = icmp ne i32 %159, 0, !dbg !1594
  br i1 %tobool352, label %if.end370, label %if.then353, !dbg !1595

if.then353:                                       ; preds = %land.lhs.true351
  store i32 1, i32* @terminate, align 4, !dbg !1596
  %160 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1598
  %cmp354 = icmp ne %struct.httpd_server* %160, null, !dbg !1600
  br i1 %cmp354, label %if.then356, label %if.end369, !dbg !1601

if.then356:                                       ; preds = %if.then353
  %161 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1602
  %listen4_fd357 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %161, i32 0, i32 10, !dbg !1605
  %162 = load i32, i32* %listen4_fd357, align 8, !dbg !1605
  %cmp358 = icmp ne i32 %162, -1, !dbg !1606
  br i1 %cmp358, label %if.then360, label %if.end362, !dbg !1607

if.then360:                                       ; preds = %if.then356
  %163 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1608
  %listen4_fd361 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %163, i32 0, i32 10, !dbg !1609
  %164 = load i32, i32* %listen4_fd361, align 8, !dbg !1609
  call void @fdwatch_del_fd(i32 %164), !dbg !1610
  br label %if.end362, !dbg !1610

if.end362:                                        ; preds = %if.then360, %if.then356
  %165 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1611
  %listen6_fd363 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %165, i32 0, i32 11, !dbg !1613
  %166 = load i32, i32* %listen6_fd363, align 4, !dbg !1613
  %cmp364 = icmp ne i32 %166, -1, !dbg !1614
  br i1 %cmp364, label %if.then366, label %if.end368, !dbg !1615

if.then366:                                       ; preds = %if.end362
  %167 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1616
  %listen6_fd367 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %167, i32 0, i32 11, !dbg !1617
  %168 = load i32, i32* %listen6_fd367, align 4, !dbg !1617
  call void @fdwatch_del_fd(i32 %168), !dbg !1618
  br label %if.end368, !dbg !1618

if.end368:                                        ; preds = %if.then366, %if.end362
  %169 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !1619
  call void @httpd_unlisten(%struct.httpd_server* %169), !dbg !1620
  br label %if.end369, !dbg !1621

if.end369:                                        ; preds = %if.end368, %if.then353
  br label %if.end370, !dbg !1622

if.end370:                                        ; preds = %if.end369, %land.lhs.true351, %while.end
  br label %while.cond, !dbg !1473, !llvm.loop !1502

while.end371:                                     ; preds = %lor.end
  call void @shut_down(), !dbg !1623
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0)), !dbg !1624
  call void @closelog(), !dbg !1625
  call void @exit(i32 0) #13, !dbg !1626
  unreachable, !dbg !1626
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind willreturn
declare void @llvm.var.annotation(i8*, i8*, i8*, i32) #2

declare i8* @strrchr(i8*, i32) #3

declare void @openlog(i8*, i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @parse_args(i32 %argc, i8** %argv) #0 !dbg !1627 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %argn = alloca i32, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !1630, metadata !DIExpression()), !dbg !1631
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !1632, metadata !DIExpression()), !dbg !1633
  call void @llvm.dbg.declare(metadata i32* %argn, metadata !1634, metadata !DIExpression()), !dbg !1635
  store i32 0, i32* @debug, align 4, !dbg !1636
  store i16 80, i16* @port, align 2, !dbg !1637
  store i8* null, i8** @dir, align 8, !dbg !1638
  store i8* null, i8** @data_dir, align 8, !dbg !1639
  store i32 0, i32* @do_chroot, align 4, !dbg !1640
  store i32 0, i32* @no_log, align 4, !dbg !1641
  %0 = load i32, i32* @do_chroot, align 4, !dbg !1642
  store i32 %0, i32* @no_symlink_check, align 4, !dbg !1643
  store i32 0, i32* @do_vhost, align 4, !dbg !1644
  store i32 0, i32* @do_global_passwd, align 4, !dbg !1645
  store i8* null, i8** @cgi_pattern, align 8, !dbg !1646
  store i32 0, i32* @cgi_limit, align 4, !dbg !1647
  store i8* null, i8** @url_pattern, align 8, !dbg !1648
  store i32 0, i32* @no_empty_referrers, align 4, !dbg !1649
  store i8* null, i8** @local_pattern, align 8, !dbg !1650
  store i8* null, i8** @throttlefile, align 8, !dbg !1651
  store i8* null, i8** @hostname, align 8, !dbg !1652
  store i8* null, i8** @logfile, align 8, !dbg !1653
  store i8* null, i8** @pidfile, align 8, !dbg !1654
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i8** @user, align 8, !dbg !1655
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0), i8** @charset, align 8, !dbg !1656
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0), i8** @p3p, align 8, !dbg !1657
  store i32 -1, i32* @max_age, align 4, !dbg !1658
  store i32 1, i32* %argn, align 4, !dbg !1659
  br label %while.cond, !dbg !1660

while.cond:                                       ; preds = %if.end275, %entry
  %1 = load i32, i32* %argn, align 4, !dbg !1661
  %2 = load i32, i32* %argc.addr, align 4, !dbg !1662
  %cmp = icmp slt i32 %1, %2, !dbg !1663
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !1664

land.rhs:                                         ; preds = %while.cond
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !1665
  %4 = load i32, i32* %argn, align 4, !dbg !1666
  %idxprom = sext i32 %4 to i64, !dbg !1665
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !1665
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !1665
  %arrayidx1 = getelementptr inbounds i8, i8* %5, i64 0, !dbg !1665
  %6 = load i8, i8* %arrayidx1, align 1, !dbg !1665
  %conv = sext i8 %6 to i32, !dbg !1665
  %cmp2 = icmp eq i32 %conv, 45, !dbg !1667
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ], !dbg !1668
  br i1 %7, label %while.body, label %while.end, !dbg !1660

while.body:                                       ; preds = %land.end
  %8 = load i8**, i8*** %argv.addr, align 8, !dbg !1669
  %9 = load i32, i32* %argn, align 4, !dbg !1672
  %idxprom4 = sext i32 %9 to i64, !dbg !1669
  %arrayidx5 = getelementptr inbounds i8*, i8** %8, i64 %idxprom4, !dbg !1669
  %10 = load i8*, i8** %arrayidx5, align 8, !dbg !1669
  %call = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i64 0, i64 0)), !dbg !1673
  %cmp6 = icmp eq i32 %call, 0, !dbg !1674
  br i1 %cmp6, label %if.then, label %if.else, !dbg !1675

if.then:                                          ; preds = %while.body
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.53, i64 0, i64 0)), !dbg !1676
  call void @exit(i32 0) #13, !dbg !1678
  unreachable, !dbg !1678

if.else:                                          ; preds = %while.body
  %11 = load i8**, i8*** %argv.addr, align 8, !dbg !1679
  %12 = load i32, i32* %argn, align 4, !dbg !1681
  %idxprom9 = sext i32 %12 to i64, !dbg !1679
  %arrayidx10 = getelementptr inbounds i8*, i8** %11, i64 %idxprom9, !dbg !1679
  %13 = load i8*, i8** %arrayidx10, align 8, !dbg !1679
  %call11 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0)), !dbg !1682
  %cmp12 = icmp eq i32 %call11, 0, !dbg !1683
  br i1 %cmp12, label %land.lhs.true, label %if.else19, !dbg !1684

land.lhs.true:                                    ; preds = %if.else
  %14 = load i32, i32* %argn, align 4, !dbg !1685
  %add = add nsw i32 %14, 1, !dbg !1686
  %15 = load i32, i32* %argc.addr, align 4, !dbg !1687
  %cmp14 = icmp slt i32 %add, %15, !dbg !1688
  br i1 %cmp14, label %if.then16, label %if.else19, !dbg !1689

if.then16:                                        ; preds = %land.lhs.true
  %16 = load i32, i32* %argn, align 4, !dbg !1690
  %inc = add nsw i32 %16, 1, !dbg !1690
  store i32 %inc, i32* %argn, align 4, !dbg !1690
  %17 = load i8**, i8*** %argv.addr, align 8, !dbg !1692
  %18 = load i32, i32* %argn, align 4, !dbg !1693
  %idxprom17 = sext i32 %18 to i64, !dbg !1692
  %arrayidx18 = getelementptr inbounds i8*, i8** %17, i64 %idxprom17, !dbg !1692
  %19 = load i8*, i8** %arrayidx18, align 8, !dbg !1692
  call void @read_config(i8* %19), !dbg !1694
  br label %if.end274, !dbg !1695

if.else19:                                        ; preds = %land.lhs.true, %if.else
  %20 = load i8**, i8*** %argv.addr, align 8, !dbg !1696
  %21 = load i32, i32* %argn, align 4, !dbg !1698
  %idxprom20 = sext i32 %21 to i64, !dbg !1696
  %arrayidx21 = getelementptr inbounds i8*, i8** %20, i64 %idxprom20, !dbg !1696
  %22 = load i8*, i8** %arrayidx21, align 8, !dbg !1696
  %call22 = call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0)), !dbg !1699
  %cmp23 = icmp eq i32 %call22, 0, !dbg !1700
  br i1 %cmp23, label %land.lhs.true25, label %if.else35, !dbg !1701

land.lhs.true25:                                  ; preds = %if.else19
  %23 = load i32, i32* %argn, align 4, !dbg !1702
  %add26 = add nsw i32 %23, 1, !dbg !1703
  %24 = load i32, i32* %argc.addr, align 4, !dbg !1704
  %cmp27 = icmp slt i32 %add26, %24, !dbg !1705
  br i1 %cmp27, label %if.then29, label %if.else35, !dbg !1706

if.then29:                                        ; preds = %land.lhs.true25
  %25 = load i32, i32* %argn, align 4, !dbg !1707
  %inc30 = add nsw i32 %25, 1, !dbg !1707
  store i32 %inc30, i32* %argn, align 4, !dbg !1707
  %26 = load i8**, i8*** %argv.addr, align 8, !dbg !1709
  %27 = load i32, i32* %argn, align 4, !dbg !1710
  %idxprom31 = sext i32 %27 to i64, !dbg !1709
  %arrayidx32 = getelementptr inbounds i8*, i8** %26, i64 %idxprom31, !dbg !1709
  %28 = load i8*, i8** %arrayidx32, align 8, !dbg !1709
  %call33 = call i32 @atoi(i8* %28), !dbg !1711
  %conv34 = trunc i32 %call33 to i16, !dbg !1712
  store i16 %conv34, i16* @port, align 2, !dbg !1713
  br label %if.end273, !dbg !1714

if.else35:                                        ; preds = %land.lhs.true25, %if.else19
  %29 = load i8**, i8*** %argv.addr, align 8, !dbg !1715
  %30 = load i32, i32* %argn, align 4, !dbg !1717
  %idxprom36 = sext i32 %30 to i64, !dbg !1715
  %arrayidx37 = getelementptr inbounds i8*, i8** %29, i64 %idxprom36, !dbg !1715
  %31 = load i8*, i8** %arrayidx37, align 8, !dbg !1715
  %call38 = call i32 @strcmp(i8* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0)), !dbg !1718
  %cmp39 = icmp eq i32 %call38, 0, !dbg !1719
  br i1 %cmp39, label %land.lhs.true41, label %if.else49, !dbg !1720

land.lhs.true41:                                  ; preds = %if.else35
  %32 = load i32, i32* %argn, align 4, !dbg !1721
  %add42 = add nsw i32 %32, 1, !dbg !1722
  %33 = load i32, i32* %argc.addr, align 4, !dbg !1723
  %cmp43 = icmp slt i32 %add42, %33, !dbg !1724
  br i1 %cmp43, label %if.then45, label %if.else49, !dbg !1725

if.then45:                                        ; preds = %land.lhs.true41
  %34 = load i32, i32* %argn, align 4, !dbg !1726
  %inc46 = add nsw i32 %34, 1, !dbg !1726
  store i32 %inc46, i32* %argn, align 4, !dbg !1726
  %35 = load i8**, i8*** %argv.addr, align 8, !dbg !1728
  %36 = load i32, i32* %argn, align 4, !dbg !1729
  %idxprom47 = sext i32 %36 to i64, !dbg !1728
  %arrayidx48 = getelementptr inbounds i8*, i8** %35, i64 %idxprom47, !dbg !1728
  %37 = load i8*, i8** %arrayidx48, align 8, !dbg !1728
  store i8* %37, i8** @dir, align 8, !dbg !1730
  br label %if.end272, !dbg !1731

if.else49:                                        ; preds = %land.lhs.true41, %if.else35
  %38 = load i8**, i8*** %argv.addr, align 8, !dbg !1732
  %39 = load i32, i32* %argn, align 4, !dbg !1734
  %idxprom50 = sext i32 %39 to i64, !dbg !1732
  %arrayidx51 = getelementptr inbounds i8*, i8** %38, i64 %idxprom50, !dbg !1732
  %40 = load i8*, i8** %arrayidx51, align 8, !dbg !1732
  %call52 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0)), !dbg !1735
  %cmp53 = icmp eq i32 %call52, 0, !dbg !1736
  br i1 %cmp53, label %if.then55, label %if.else56, !dbg !1737

if.then55:                                        ; preds = %if.else49
  store i32 1, i32* @do_chroot, align 4, !dbg !1738
  store i32 1, i32* @no_symlink_check, align 4, !dbg !1740
  br label %if.end271, !dbg !1741

if.else56:                                        ; preds = %if.else49
  %41 = load i8**, i8*** %argv.addr, align 8, !dbg !1742
  %42 = load i32, i32* %argn, align 4, !dbg !1744
  %idxprom57 = sext i32 %42 to i64, !dbg !1742
  %arrayidx58 = getelementptr inbounds i8*, i8** %41, i64 %idxprom57, !dbg !1742
  %43 = load i8*, i8** %arrayidx58, align 8, !dbg !1742
  %call59 = call i32 @strcmp(i8* %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0)), !dbg !1745
  %cmp60 = icmp eq i32 %call59, 0, !dbg !1746
  br i1 %cmp60, label %if.then62, label %if.else63, !dbg !1747

if.then62:                                        ; preds = %if.else56
  store i32 0, i32* @do_chroot, align 4, !dbg !1748
  store i32 0, i32* @no_symlink_check, align 4, !dbg !1750
  br label %if.end270, !dbg !1751

if.else63:                                        ; preds = %if.else56
  %44 = load i8**, i8*** %argv.addr, align 8, !dbg !1752
  %45 = load i32, i32* %argn, align 4, !dbg !1754
  %idxprom64 = sext i32 %45 to i64, !dbg !1752
  %arrayidx65 = getelementptr inbounds i8*, i8** %44, i64 %idxprom64, !dbg !1752
  %46 = load i8*, i8** %arrayidx65, align 8, !dbg !1752
  %call66 = call i32 @strcmp(i8* %46, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i64 0, i64 0)), !dbg !1755
  %cmp67 = icmp eq i32 %call66, 0, !dbg !1756
  br i1 %cmp67, label %land.lhs.true69, label %if.else77, !dbg !1757

land.lhs.true69:                                  ; preds = %if.else63
  %47 = load i32, i32* %argn, align 4, !dbg !1758
  %add70 = add nsw i32 %47, 1, !dbg !1759
  %48 = load i32, i32* %argc.addr, align 4, !dbg !1760
  %cmp71 = icmp slt i32 %add70, %48, !dbg !1761
  br i1 %cmp71, label %if.then73, label %if.else77, !dbg !1762

if.then73:                                        ; preds = %land.lhs.true69
  %49 = load i32, i32* %argn, align 4, !dbg !1763
  %inc74 = add nsw i32 %49, 1, !dbg !1763
  store i32 %inc74, i32* %argn, align 4, !dbg !1763
  %50 = load i8**, i8*** %argv.addr, align 8, !dbg !1765
  %51 = load i32, i32* %argn, align 4, !dbg !1766
  %idxprom75 = sext i32 %51 to i64, !dbg !1765
  %arrayidx76 = getelementptr inbounds i8*, i8** %50, i64 %idxprom75, !dbg !1765
  %52 = load i8*, i8** %arrayidx76, align 8, !dbg !1765
  store i8* %52, i8** @data_dir, align 8, !dbg !1767
  br label %if.end269, !dbg !1768

if.else77:                                        ; preds = %land.lhs.true69, %if.else63
  %53 = load i8**, i8*** %argv.addr, align 8, !dbg !1769
  %54 = load i32, i32* %argn, align 4, !dbg !1771
  %idxprom78 = sext i32 %54 to i64, !dbg !1769
  %arrayidx79 = getelementptr inbounds i8*, i8** %53, i64 %idxprom78, !dbg !1769
  %55 = load i8*, i8** %arrayidx79, align 8, !dbg !1769
  %call80 = call i32 @strcmp(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i64 0, i64 0)), !dbg !1772
  %cmp81 = icmp eq i32 %call80, 0, !dbg !1773
  br i1 %cmp81, label %if.then83, label %if.else84, !dbg !1774

if.then83:                                        ; preds = %if.else77
  store i32 0, i32* @no_symlink_check, align 4, !dbg !1775
  br label %if.end268, !dbg !1776

if.else84:                                        ; preds = %if.else77
  %56 = load i8**, i8*** %argv.addr, align 8, !dbg !1777
  %57 = load i32, i32* %argn, align 4, !dbg !1779
  %idxprom85 = sext i32 %57 to i64, !dbg !1777
  %arrayidx86 = getelementptr inbounds i8*, i8** %56, i64 %idxprom85, !dbg !1777
  %58 = load i8*, i8** %arrayidx86, align 8, !dbg !1777
  %call87 = call i32 @strcmp(i8* %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0)), !dbg !1780
  %cmp88 = icmp eq i32 %call87, 0, !dbg !1781
  br i1 %cmp88, label %if.then90, label %if.else91, !dbg !1782

if.then90:                                        ; preds = %if.else84
  store i32 1, i32* @no_symlink_check, align 4, !dbg !1783
  br label %if.end267, !dbg !1784

if.else91:                                        ; preds = %if.else84
  %59 = load i8**, i8*** %argv.addr, align 8, !dbg !1785
  %60 = load i32, i32* %argn, align 4, !dbg !1787
  %idxprom92 = sext i32 %60 to i64, !dbg !1785
  %arrayidx93 = getelementptr inbounds i8*, i8** %59, i64 %idxprom92, !dbg !1785
  %61 = load i8*, i8** %arrayidx93, align 8, !dbg !1785
  %call94 = call i32 @strcmp(i8* %61, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)), !dbg !1788
  %cmp95 = icmp eq i32 %call94, 0, !dbg !1789
  br i1 %cmp95, label %land.lhs.true97, label %if.else105, !dbg !1790

land.lhs.true97:                                  ; preds = %if.else91
  %62 = load i32, i32* %argn, align 4, !dbg !1791
  %add98 = add nsw i32 %62, 1, !dbg !1792
  %63 = load i32, i32* %argc.addr, align 4, !dbg !1793
  %cmp99 = icmp slt i32 %add98, %63, !dbg !1794
  br i1 %cmp99, label %if.then101, label %if.else105, !dbg !1795

if.then101:                                       ; preds = %land.lhs.true97
  %64 = load i32, i32* %argn, align 4, !dbg !1796
  %inc102 = add nsw i32 %64, 1, !dbg !1796
  store i32 %inc102, i32* %argn, align 4, !dbg !1796
  %65 = load i8**, i8*** %argv.addr, align 8, !dbg !1798
  %66 = load i32, i32* %argn, align 4, !dbg !1799
  %idxprom103 = sext i32 %66 to i64, !dbg !1798
  %arrayidx104 = getelementptr inbounds i8*, i8** %65, i64 %idxprom103, !dbg !1798
  %67 = load i8*, i8** %arrayidx104, align 8, !dbg !1798
  store i8* %67, i8** @user, align 8, !dbg !1800
  br label %if.end266, !dbg !1801

if.else105:                                       ; preds = %land.lhs.true97, %if.else91
  %68 = load i8**, i8*** %argv.addr, align 8, !dbg !1802
  %69 = load i32, i32* %argn, align 4, !dbg !1804
  %idxprom106 = sext i32 %69 to i64, !dbg !1802
  %arrayidx107 = getelementptr inbounds i8*, i8** %68, i64 %idxprom106, !dbg !1802
  %70 = load i8*, i8** %arrayidx107, align 8, !dbg !1802
  %call108 = call i32 @strcmp(i8* %70, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i64 0, i64 0)), !dbg !1805
  %cmp109 = icmp eq i32 %call108, 0, !dbg !1806
  br i1 %cmp109, label %land.lhs.true111, label %if.else119, !dbg !1807

land.lhs.true111:                                 ; preds = %if.else105
  %71 = load i32, i32* %argn, align 4, !dbg !1808
  %add112 = add nsw i32 %71, 1, !dbg !1809
  %72 = load i32, i32* %argc.addr, align 4, !dbg !1810
  %cmp113 = icmp slt i32 %add112, %72, !dbg !1811
  br i1 %cmp113, label %if.then115, label %if.else119, !dbg !1812

if.then115:                                       ; preds = %land.lhs.true111
  %73 = load i32, i32* %argn, align 4, !dbg !1813
  %inc116 = add nsw i32 %73, 1, !dbg !1813
  store i32 %inc116, i32* %argn, align 4, !dbg !1813
  %74 = load i8**, i8*** %argv.addr, align 8, !dbg !1815
  %75 = load i32, i32* %argn, align 4, !dbg !1816
  %idxprom117 = sext i32 %75 to i64, !dbg !1815
  %arrayidx118 = getelementptr inbounds i8*, i8** %74, i64 %idxprom117, !dbg !1815
  %76 = load i8*, i8** %arrayidx118, align 8, !dbg !1815
  store i8* %76, i8** @cgi_pattern, align 8, !dbg !1817
  br label %if.end265, !dbg !1818

if.else119:                                       ; preds = %land.lhs.true111, %if.else105
  %77 = load i8**, i8*** %argv.addr, align 8, !dbg !1819
  %78 = load i32, i32* %argn, align 4, !dbg !1821
  %idxprom120 = sext i32 %78 to i64, !dbg !1819
  %arrayidx121 = getelementptr inbounds i8*, i8** %77, i64 %idxprom120, !dbg !1819
  %79 = load i8*, i8** %arrayidx121, align 8, !dbg !1819
  %call122 = call i32 @strcmp(i8* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0)), !dbg !1822
  %cmp123 = icmp eq i32 %call122, 0, !dbg !1823
  br i1 %cmp123, label %land.lhs.true125, label %if.else133, !dbg !1824

land.lhs.true125:                                 ; preds = %if.else119
  %80 = load i32, i32* %argn, align 4, !dbg !1825
  %add126 = add nsw i32 %80, 1, !dbg !1826
  %81 = load i32, i32* %argc.addr, align 4, !dbg !1827
  %cmp127 = icmp slt i32 %add126, %81, !dbg !1828
  br i1 %cmp127, label %if.then129, label %if.else133, !dbg !1829

if.then129:                                       ; preds = %land.lhs.true125
  %82 = load i32, i32* %argn, align 4, !dbg !1830
  %inc130 = add nsw i32 %82, 1, !dbg !1830
  store i32 %inc130, i32* %argn, align 4, !dbg !1830
  %83 = load i8**, i8*** %argv.addr, align 8, !dbg !1832
  %84 = load i32, i32* %argn, align 4, !dbg !1833
  %idxprom131 = sext i32 %84 to i64, !dbg !1832
  %arrayidx132 = getelementptr inbounds i8*, i8** %83, i64 %idxprom131, !dbg !1832
  %85 = load i8*, i8** %arrayidx132, align 8, !dbg !1832
  store i8* %85, i8** @throttlefile, align 8, !dbg !1834
  br label %if.end264, !dbg !1835

if.else133:                                       ; preds = %land.lhs.true125, %if.else119
  %86 = load i8**, i8*** %argv.addr, align 8, !dbg !1836
  %87 = load i32, i32* %argn, align 4, !dbg !1838
  %idxprom134 = sext i32 %87 to i64, !dbg !1836
  %arrayidx135 = getelementptr inbounds i8*, i8** %86, i64 %idxprom134, !dbg !1836
  %88 = load i8*, i8** %arrayidx135, align 8, !dbg !1836
  %call136 = call i32 @strcmp(i8* %88, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i64 0, i64 0)), !dbg !1839
  %cmp137 = icmp eq i32 %call136, 0, !dbg !1840
  br i1 %cmp137, label %land.lhs.true139, label %if.else147, !dbg !1841

land.lhs.true139:                                 ; preds = %if.else133
  %89 = load i32, i32* %argn, align 4, !dbg !1842
  %add140 = add nsw i32 %89, 1, !dbg !1843
  %90 = load i32, i32* %argc.addr, align 4, !dbg !1844
  %cmp141 = icmp slt i32 %add140, %90, !dbg !1845
  br i1 %cmp141, label %if.then143, label %if.else147, !dbg !1846

if.then143:                                       ; preds = %land.lhs.true139
  %91 = load i32, i32* %argn, align 4, !dbg !1847
  %inc144 = add nsw i32 %91, 1, !dbg !1847
  store i32 %inc144, i32* %argn, align 4, !dbg !1847
  %92 = load i8**, i8*** %argv.addr, align 8, !dbg !1849
  %93 = load i32, i32* %argn, align 4, !dbg !1850
  %idxprom145 = sext i32 %93 to i64, !dbg !1849
  %arrayidx146 = getelementptr inbounds i8*, i8** %92, i64 %idxprom145, !dbg !1849
  %94 = load i8*, i8** %arrayidx146, align 8, !dbg !1849
  store i8* %94, i8** @hostname, align 8, !dbg !1851
  br label %if.end263, !dbg !1852

if.else147:                                       ; preds = %land.lhs.true139, %if.else133
  %95 = load i8**, i8*** %argv.addr, align 8, !dbg !1853
  %96 = load i32, i32* %argn, align 4, !dbg !1855
  %idxprom148 = sext i32 %96 to i64, !dbg !1853
  %arrayidx149 = getelementptr inbounds i8*, i8** %95, i64 %idxprom148, !dbg !1853
  %97 = load i8*, i8** %arrayidx149, align 8, !dbg !1853
  %call150 = call i32 @strcmp(i8* %97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0)), !dbg !1856
  %cmp151 = icmp eq i32 %call150, 0, !dbg !1857
  br i1 %cmp151, label %land.lhs.true153, label %if.else161, !dbg !1858

land.lhs.true153:                                 ; preds = %if.else147
  %98 = load i32, i32* %argn, align 4, !dbg !1859
  %add154 = add nsw i32 %98, 1, !dbg !1860
  %99 = load i32, i32* %argc.addr, align 4, !dbg !1861
  %cmp155 = icmp slt i32 %add154, %99, !dbg !1862
  br i1 %cmp155, label %if.then157, label %if.else161, !dbg !1863

if.then157:                                       ; preds = %land.lhs.true153
  %100 = load i32, i32* %argn, align 4, !dbg !1864
  %inc158 = add nsw i32 %100, 1, !dbg !1864
  store i32 %inc158, i32* %argn, align 4, !dbg !1864
  %101 = load i8**, i8*** %argv.addr, align 8, !dbg !1866
  %102 = load i32, i32* %argn, align 4, !dbg !1867
  %idxprom159 = sext i32 %102 to i64, !dbg !1866
  %arrayidx160 = getelementptr inbounds i8*, i8** %101, i64 %idxprom159, !dbg !1866
  %103 = load i8*, i8** %arrayidx160, align 8, !dbg !1866
  store i8* %103, i8** @logfile, align 8, !dbg !1868
  br label %if.end262, !dbg !1869

if.else161:                                       ; preds = %land.lhs.true153, %if.else147
  %104 = load i8**, i8*** %argv.addr, align 8, !dbg !1870
  %105 = load i32, i32* %argn, align 4, !dbg !1872
  %idxprom162 = sext i32 %105 to i64, !dbg !1870
  %arrayidx163 = getelementptr inbounds i8*, i8** %104, i64 %idxprom162, !dbg !1870
  %106 = load i8*, i8** %arrayidx163, align 8, !dbg !1870
  %call164 = call i32 @strcmp(i8* %106, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i64 0, i64 0)), !dbg !1873
  %cmp165 = icmp eq i32 %call164, 0, !dbg !1874
  br i1 %cmp165, label %if.then167, label %if.else168, !dbg !1875

if.then167:                                       ; preds = %if.else161
  store i32 1, i32* @do_vhost, align 4, !dbg !1876
  br label %if.end261, !dbg !1877

if.else168:                                       ; preds = %if.else161
  %107 = load i8**, i8*** %argv.addr, align 8, !dbg !1878
  %108 = load i32, i32* %argn, align 4, !dbg !1880
  %idxprom169 = sext i32 %108 to i64, !dbg !1878
  %arrayidx170 = getelementptr inbounds i8*, i8** %107, i64 %idxprom169, !dbg !1878
  %109 = load i8*, i8** %arrayidx170, align 8, !dbg !1878
  %call171 = call i32 @strcmp(i8* %109, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0)), !dbg !1881
  %cmp172 = icmp eq i32 %call171, 0, !dbg !1882
  br i1 %cmp172, label %if.then174, label %if.else175, !dbg !1883

if.then174:                                       ; preds = %if.else168
  store i32 0, i32* @do_vhost, align 4, !dbg !1884
  br label %if.end260, !dbg !1885

if.else175:                                       ; preds = %if.else168
  %110 = load i8**, i8*** %argv.addr, align 8, !dbg !1886
  %111 = load i32, i32* %argn, align 4, !dbg !1888
  %idxprom176 = sext i32 %111 to i64, !dbg !1886
  %arrayidx177 = getelementptr inbounds i8*, i8** %110, i64 %idxprom176, !dbg !1886
  %112 = load i8*, i8** %arrayidx177, align 8, !dbg !1886
  %call178 = call i32 @strcmp(i8* %112, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i64 0, i64 0)), !dbg !1889
  %cmp179 = icmp eq i32 %call178, 0, !dbg !1890
  br i1 %cmp179, label %if.then181, label %if.else182, !dbg !1891

if.then181:                                       ; preds = %if.else175
  store i32 1, i32* @do_global_passwd, align 4, !dbg !1892
  br label %if.end259, !dbg !1893

if.else182:                                       ; preds = %if.else175
  %113 = load i8**, i8*** %argv.addr, align 8, !dbg !1894
  %114 = load i32, i32* %argn, align 4, !dbg !1896
  %idxprom183 = sext i32 %114 to i64, !dbg !1894
  %arrayidx184 = getelementptr inbounds i8*, i8** %113, i64 %idxprom183, !dbg !1894
  %115 = load i8*, i8** %arrayidx184, align 8, !dbg !1894
  %call185 = call i32 @strcmp(i8* %115, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i64 0, i64 0)), !dbg !1897
  %cmp186 = icmp eq i32 %call185, 0, !dbg !1898
  br i1 %cmp186, label %if.then188, label %if.else189, !dbg !1899

if.then188:                                       ; preds = %if.else182
  store i32 0, i32* @do_global_passwd, align 4, !dbg !1900
  br label %if.end258, !dbg !1901

if.else189:                                       ; preds = %if.else182
  %116 = load i8**, i8*** %argv.addr, align 8, !dbg !1902
  %117 = load i32, i32* %argn, align 4, !dbg !1904
  %idxprom190 = sext i32 %117 to i64, !dbg !1902
  %arrayidx191 = getelementptr inbounds i8*, i8** %116, i64 %idxprom190, !dbg !1902
  %118 = load i8*, i8** %arrayidx191, align 8, !dbg !1902
  %call192 = call i32 @strcmp(i8* %118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i64 0, i64 0)), !dbg !1905
  %cmp193 = icmp eq i32 %call192, 0, !dbg !1906
  br i1 %cmp193, label %land.lhs.true195, label %if.else203, !dbg !1907

land.lhs.true195:                                 ; preds = %if.else189
  %119 = load i32, i32* %argn, align 4, !dbg !1908
  %add196 = add nsw i32 %119, 1, !dbg !1909
  %120 = load i32, i32* %argc.addr, align 4, !dbg !1910
  %cmp197 = icmp slt i32 %add196, %120, !dbg !1911
  br i1 %cmp197, label %if.then199, label %if.else203, !dbg !1912

if.then199:                                       ; preds = %land.lhs.true195
  %121 = load i32, i32* %argn, align 4, !dbg !1913
  %inc200 = add nsw i32 %121, 1, !dbg !1913
  store i32 %inc200, i32* %argn, align 4, !dbg !1913
  %122 = load i8**, i8*** %argv.addr, align 8, !dbg !1915
  %123 = load i32, i32* %argn, align 4, !dbg !1916
  %idxprom201 = sext i32 %123 to i64, !dbg !1915
  %arrayidx202 = getelementptr inbounds i8*, i8** %122, i64 %idxprom201, !dbg !1915
  %124 = load i8*, i8** %arrayidx202, align 8, !dbg !1915
  store i8* %124, i8** @pidfile, align 8, !dbg !1917
  br label %if.end257, !dbg !1918

if.else203:                                       ; preds = %land.lhs.true195, %if.else189
  %125 = load i8**, i8*** %argv.addr, align 8, !dbg !1919
  %126 = load i32, i32* %argn, align 4, !dbg !1921
  %idxprom204 = sext i32 %126 to i64, !dbg !1919
  %arrayidx205 = getelementptr inbounds i8*, i8** %125, i64 %idxprom204, !dbg !1919
  %127 = load i8*, i8** %arrayidx205, align 8, !dbg !1919
  %call206 = call i32 @strcmp(i8* %127, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i64 0, i64 0)), !dbg !1922
  %cmp207 = icmp eq i32 %call206, 0, !dbg !1923
  br i1 %cmp207, label %land.lhs.true209, label %if.else217, !dbg !1924

land.lhs.true209:                                 ; preds = %if.else203
  %128 = load i32, i32* %argn, align 4, !dbg !1925
  %add210 = add nsw i32 %128, 1, !dbg !1926
  %129 = load i32, i32* %argc.addr, align 4, !dbg !1927
  %cmp211 = icmp slt i32 %add210, %129, !dbg !1928
  br i1 %cmp211, label %if.then213, label %if.else217, !dbg !1929

if.then213:                                       ; preds = %land.lhs.true209
  %130 = load i32, i32* %argn, align 4, !dbg !1930
  %inc214 = add nsw i32 %130, 1, !dbg !1930
  store i32 %inc214, i32* %argn, align 4, !dbg !1930
  %131 = load i8**, i8*** %argv.addr, align 8, !dbg !1932
  %132 = load i32, i32* %argn, align 4, !dbg !1933
  %idxprom215 = sext i32 %132 to i64, !dbg !1932
  %arrayidx216 = getelementptr inbounds i8*, i8** %131, i64 %idxprom215, !dbg !1932
  %133 = load i8*, i8** %arrayidx216, align 8, !dbg !1932
  store i8* %133, i8** @charset, align 8, !dbg !1934
  br label %if.end256, !dbg !1935

if.else217:                                       ; preds = %land.lhs.true209, %if.else203
  %134 = load i8**, i8*** %argv.addr, align 8, !dbg !1936
  %135 = load i32, i32* %argn, align 4, !dbg !1938
  %idxprom218 = sext i32 %135 to i64, !dbg !1936
  %arrayidx219 = getelementptr inbounds i8*, i8** %134, i64 %idxprom218, !dbg !1936
  %136 = load i8*, i8** %arrayidx219, align 8, !dbg !1936
  %call220 = call i32 @strcmp(i8* %136, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i64 0, i64 0)), !dbg !1939
  %cmp221 = icmp eq i32 %call220, 0, !dbg !1940
  br i1 %cmp221, label %land.lhs.true223, label %if.else231, !dbg !1941

land.lhs.true223:                                 ; preds = %if.else217
  %137 = load i32, i32* %argn, align 4, !dbg !1942
  %add224 = add nsw i32 %137, 1, !dbg !1943
  %138 = load i32, i32* %argc.addr, align 4, !dbg !1944
  %cmp225 = icmp slt i32 %add224, %138, !dbg !1945
  br i1 %cmp225, label %if.then227, label %if.else231, !dbg !1946

if.then227:                                       ; preds = %land.lhs.true223
  %139 = load i32, i32* %argn, align 4, !dbg !1947
  %inc228 = add nsw i32 %139, 1, !dbg !1947
  store i32 %inc228, i32* %argn, align 4, !dbg !1947
  %140 = load i8**, i8*** %argv.addr, align 8, !dbg !1949
  %141 = load i32, i32* %argn, align 4, !dbg !1950
  %idxprom229 = sext i32 %141 to i64, !dbg !1949
  %arrayidx230 = getelementptr inbounds i8*, i8** %140, i64 %idxprom229, !dbg !1949
  %142 = load i8*, i8** %arrayidx230, align 8, !dbg !1949
  store i8* %142, i8** @p3p, align 8, !dbg !1951
  br label %if.end255, !dbg !1952

if.else231:                                       ; preds = %land.lhs.true223, %if.else217
  %143 = load i8**, i8*** %argv.addr, align 8, !dbg !1953
  %144 = load i32, i32* %argn, align 4, !dbg !1955
  %idxprom232 = sext i32 %144 to i64, !dbg !1953
  %arrayidx233 = getelementptr inbounds i8*, i8** %143, i64 %idxprom232, !dbg !1953
  %145 = load i8*, i8** %arrayidx233, align 8, !dbg !1953
  %call234 = call i32 @strcmp(i8* %145, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0)), !dbg !1956
  %cmp235 = icmp eq i32 %call234, 0, !dbg !1957
  br i1 %cmp235, label %land.lhs.true237, label %if.else246, !dbg !1958

land.lhs.true237:                                 ; preds = %if.else231
  %146 = load i32, i32* %argn, align 4, !dbg !1959
  %add238 = add nsw i32 %146, 1, !dbg !1960
  %147 = load i32, i32* %argc.addr, align 4, !dbg !1961
  %cmp239 = icmp slt i32 %add238, %147, !dbg !1962
  br i1 %cmp239, label %if.then241, label %if.else246, !dbg !1963

if.then241:                                       ; preds = %land.lhs.true237
  %148 = load i32, i32* %argn, align 4, !dbg !1964
  %inc242 = add nsw i32 %148, 1, !dbg !1964
  store i32 %inc242, i32* %argn, align 4, !dbg !1964
  %149 = load i8**, i8*** %argv.addr, align 8, !dbg !1966
  %150 = load i32, i32* %argn, align 4, !dbg !1967
  %idxprom243 = sext i32 %150 to i64, !dbg !1966
  %arrayidx244 = getelementptr inbounds i8*, i8** %149, i64 %idxprom243, !dbg !1966
  %151 = load i8*, i8** %arrayidx244, align 8, !dbg !1966
  %call245 = call i32 @atoi(i8* %151), !dbg !1968
  store i32 %call245, i32* @max_age, align 4, !dbg !1969
  br label %if.end254, !dbg !1970

if.else246:                                       ; preds = %land.lhs.true237, %if.else231
  %152 = load i8**, i8*** %argv.addr, align 8, !dbg !1971
  %153 = load i32, i32* %argn, align 4, !dbg !1973
  %idxprom247 = sext i32 %153 to i64, !dbg !1971
  %arrayidx248 = getelementptr inbounds i8*, i8** %152, i64 %idxprom247, !dbg !1971
  %154 = load i8*, i8** %arrayidx248, align 8, !dbg !1971
  %call249 = call i32 @strcmp(i8* %154, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i64 0, i64 0)), !dbg !1974
  %cmp250 = icmp eq i32 %call249, 0, !dbg !1975
  br i1 %cmp250, label %if.then252, label %if.else253, !dbg !1976

if.then252:                                       ; preds = %if.else246
  store i32 1, i32* @debug, align 4, !dbg !1977
  br label %if.end, !dbg !1978

if.else253:                                       ; preds = %if.else246
  call void @usage(), !dbg !1979
  br label %if.end

if.end:                                           ; preds = %if.else253, %if.then252
  br label %if.end254

if.end254:                                        ; preds = %if.end, %if.then241
  br label %if.end255

if.end255:                                        ; preds = %if.end254, %if.then227
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %if.then213
  br label %if.end257

if.end257:                                        ; preds = %if.end256, %if.then199
  br label %if.end258

if.end258:                                        ; preds = %if.end257, %if.then188
  br label %if.end259

if.end259:                                        ; preds = %if.end258, %if.then181
  br label %if.end260

if.end260:                                        ; preds = %if.end259, %if.then174
  br label %if.end261

if.end261:                                        ; preds = %if.end260, %if.then167
  br label %if.end262

if.end262:                                        ; preds = %if.end261, %if.then157
  br label %if.end263

if.end263:                                        ; preds = %if.end262, %if.then143
  br label %if.end264

if.end264:                                        ; preds = %if.end263, %if.then129
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %if.then115
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.then101
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %if.then90
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %if.then83
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.then73
  br label %if.end270

if.end270:                                        ; preds = %if.end269, %if.then62
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.then55
  br label %if.end272

if.end272:                                        ; preds = %if.end271, %if.then45
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.then29
  br label %if.end274

if.end274:                                        ; preds = %if.end273, %if.then16
  br label %if.end275

if.end275:                                        ; preds = %if.end274
  %155 = load i32, i32* %argn, align 4, !dbg !1980
  %inc276 = add nsw i32 %155, 1, !dbg !1980
  store i32 %inc276, i32* %argn, align 4, !dbg !1980
  br label %while.cond, !dbg !1660, !llvm.loop !1981

while.end:                                        ; preds = %land.end
  %156 = load i32, i32* %argn, align 4, !dbg !1983
  %157 = load i32, i32* %argc.addr, align 4, !dbg !1985
  %cmp277 = icmp ne i32 %156, %157, !dbg !1986
  br i1 %cmp277, label %if.then279, label %if.end280, !dbg !1987

if.then279:                                       ; preds = %while.end
  call void @usage(), !dbg !1988
  br label %if.end280, !dbg !1988

if.end280:                                        ; preds = %if.then279, %while.end
  ret void, !dbg !1989
}

declare void @tzset() #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @lookup_hostname(%union.httpd_sockaddr* %sa4P, i64 %sa4_len, i32* %gotv4P, %union.httpd_sockaddr* %sa6P, i64 %sa6_len, i32* %gotv6P) #0 !dbg !1990 {
entry:
  %sa4P.addr = alloca %union.httpd_sockaddr*, align 8
  %sa4_len.addr = alloca i64, align 8
  %gotv4P.addr = alloca i32*, align 8
  %sa6P.addr = alloca %union.httpd_sockaddr*, align 8
  %sa6_len.addr = alloca i64, align 8
  %gotv6P.addr = alloca i32*, align 8
  %hints = alloca %struct.addrinfo, align 8
  %portstr = alloca [10 x i8], align 1
  %gaierr = alloca i32, align 4
  %ai = alloca %struct.addrinfo*, align 8
  %ai2 = alloca %struct.addrinfo*, align 8
  %aiv6 = alloca %struct.addrinfo*, align 8
  %aiv4 = alloca %struct.addrinfo*, align 8
  store %union.httpd_sockaddr* %sa4P, %union.httpd_sockaddr** %sa4P.addr, align 8
  call void @llvm.dbg.declare(metadata %union.httpd_sockaddr** %sa4P.addr, metadata !1994, metadata !DIExpression()), !dbg !1995
  store i64 %sa4_len, i64* %sa4_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sa4_len.addr, metadata !1996, metadata !DIExpression()), !dbg !1997
  store i32* %gotv4P, i32** %gotv4P.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %gotv4P.addr, metadata !1998, metadata !DIExpression()), !dbg !1999
  store %union.httpd_sockaddr* %sa6P, %union.httpd_sockaddr** %sa6P.addr, align 8
  call void @llvm.dbg.declare(metadata %union.httpd_sockaddr** %sa6P.addr, metadata !2000, metadata !DIExpression()), !dbg !2001
  store i64 %sa6_len, i64* %sa6_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sa6_len.addr, metadata !2002, metadata !DIExpression()), !dbg !2003
  store i32* %gotv6P, i32** %gotv6P.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %gotv6P.addr, metadata !2004, metadata !DIExpression()), !dbg !2005
  call void @llvm.dbg.declare(metadata %struct.addrinfo* %hints, metadata !2006, metadata !DIExpression()), !dbg !2007
  call void @llvm.dbg.declare(metadata [10 x i8]* %portstr, metadata !2008, metadata !DIExpression()), !dbg !2010
  call void @llvm.dbg.declare(metadata i32* %gaierr, metadata !2011, metadata !DIExpression()), !dbg !2012
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %ai, metadata !2013, metadata !DIExpression()), !dbg !2014
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %ai2, metadata !2015, metadata !DIExpression()), !dbg !2016
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %aiv6, metadata !2017, metadata !DIExpression()), !dbg !2018
  call void @llvm.dbg.declare(metadata %struct.addrinfo** %aiv4, metadata !2019, metadata !DIExpression()), !dbg !2020
  %0 = bitcast %struct.addrinfo* %hints to i8*, !dbg !2021
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 48, i1 false), !dbg !2021
  %ai_family = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 1, !dbg !2022
  store i32 0, i32* %ai_family, align 4, !dbg !2023
  %ai_flags = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 0, !dbg !2024
  store i32 1, i32* %ai_flags, align 8, !dbg !2025
  %ai_socktype = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %hints, i32 0, i32 2, !dbg !2026
  store i32 1, i32* %ai_socktype, align 8, !dbg !2027
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %portstr, i64 0, i64 0, !dbg !2028
  %1 = load i16, i16* @port, align 2, !dbg !2028
  %conv = zext i16 %1 to i32, !dbg !2028
  %call = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %arraydecay, i64 10, i32 0, i64 10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.109, i64 0, i64 0), i32 %conv), !dbg !2028
  %2 = load i8*, i8** @hostname, align 8, !dbg !2029
  %arraydecay1 = getelementptr inbounds [10 x i8], [10 x i8]* %portstr, i64 0, i64 0, !dbg !2031
  %call2 = call i32 @getaddrinfo(i8* %2, i8* %arraydecay1, %struct.addrinfo* %hints, %struct.addrinfo** %ai), !dbg !2032
  store i32 %call2, i32* %gaierr, align 4, !dbg !2033
  %cmp = icmp ne i32 %call2, 0, !dbg !2034
  br i1 %cmp, label %if.then, label %if.end, !dbg !2035

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** @hostname, align 8, !dbg !2036
  %4 = load i32, i32* %gaierr, align 4, !dbg !2038
  %call4 = call i8* @gai_strerror(i32 %4), !dbg !2039
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.110, i64 0, i64 0), i8* %3, i8* %call4), !dbg !2040
  %5 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !2041
  %6 = load i8*, i8** @argv0, align 8, !dbg !2042
  %7 = load i8*, i8** @hostname, align 8, !dbg !2043
  %8 = load i32, i32* %gaierr, align 4, !dbg !2044
  %call5 = call i8* @gai_strerror(i32 %8), !dbg !2045
  %call6 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.111, i64 0, i64 0), i8* %6, i8* %7, i8* %call5), !dbg !2046
  call void @exit(i32 1) #13, !dbg !2047
  unreachable, !dbg !2047

if.end:                                           ; preds = %entry
  store %struct.addrinfo* null, %struct.addrinfo** %aiv6, align 8, !dbg !2048
  store %struct.addrinfo* null, %struct.addrinfo** %aiv4, align 8, !dbg !2049
  %9 = load %struct.addrinfo*, %struct.addrinfo** %ai, align 8, !dbg !2050
  store %struct.addrinfo* %9, %struct.addrinfo** %ai2, align 8, !dbg !2052
  br label %for.cond, !dbg !2053

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.addrinfo*, %struct.addrinfo** %ai2, align 8, !dbg !2054
  %cmp7 = icmp ne %struct.addrinfo* %10, null, !dbg !2056
  br i1 %cmp7, label %for.body, label %for.end, !dbg !2057

for.body:                                         ; preds = %for.cond
  %11 = load %struct.addrinfo*, %struct.addrinfo** %ai2, align 8, !dbg !2058
  %ai_family9 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %11, i32 0, i32 1, !dbg !2060
  %12 = load i32, i32* %ai_family9, align 4, !dbg !2060
  switch i32 %12, label %sw.epilog [
    i32 30, label %sw.bb
    i32 2, label %sw.bb14
  ], !dbg !2061

sw.bb:                                            ; preds = %for.body
  %13 = load %struct.addrinfo*, %struct.addrinfo** %aiv6, align 8, !dbg !2062
  %cmp10 = icmp eq %struct.addrinfo* %13, null, !dbg !2065
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !2066

if.then12:                                        ; preds = %sw.bb
  %14 = load %struct.addrinfo*, %struct.addrinfo** %ai2, align 8, !dbg !2067
  store %struct.addrinfo* %14, %struct.addrinfo** %aiv6, align 8, !dbg !2068
  br label %if.end13, !dbg !2069

if.end13:                                         ; preds = %if.then12, %sw.bb
  br label %sw.epilog, !dbg !2070

sw.bb14:                                          ; preds = %for.body
  %15 = load %struct.addrinfo*, %struct.addrinfo** %aiv4, align 8, !dbg !2071
  %cmp15 = icmp eq %struct.addrinfo* %15, null, !dbg !2073
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !2074

if.then17:                                        ; preds = %sw.bb14
  %16 = load %struct.addrinfo*, %struct.addrinfo** %ai2, align 8, !dbg !2075
  store %struct.addrinfo* %16, %struct.addrinfo** %aiv4, align 8, !dbg !2076
  br label %if.end18, !dbg !2077

if.end18:                                         ; preds = %if.then17, %sw.bb14
  br label %sw.epilog, !dbg !2078

sw.epilog:                                        ; preds = %for.body, %if.end18, %if.end13
  br label %for.inc, !dbg !2079

for.inc:                                          ; preds = %sw.epilog
  %17 = load %struct.addrinfo*, %struct.addrinfo** %ai2, align 8, !dbg !2080
  %ai_next = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %17, i32 0, i32 7, !dbg !2081
  %18 = load %struct.addrinfo*, %struct.addrinfo** %ai_next, align 8, !dbg !2081
  store %struct.addrinfo* %18, %struct.addrinfo** %ai2, align 8, !dbg !2082
  br label %for.cond, !dbg !2083, !llvm.loop !2084

for.end:                                          ; preds = %for.cond
  %19 = load %struct.addrinfo*, %struct.addrinfo** %aiv6, align 8, !dbg !2086
  %cmp19 = icmp eq %struct.addrinfo* %19, null, !dbg !2088
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !2089

if.then21:                                        ; preds = %for.end
  %20 = load i32*, i32** %gotv6P.addr, align 8, !dbg !2090
  store i32 0, i32* %20, align 4, !dbg !2091
  br label %if.end33, !dbg !2092

if.else:                                          ; preds = %for.end
  %21 = load i64, i64* %sa6_len.addr, align 8, !dbg !2093
  %22 = load %struct.addrinfo*, %struct.addrinfo** %aiv6, align 8, !dbg !2096
  %ai_addrlen = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %22, i32 0, i32 4, !dbg !2097
  %23 = load i32, i32* %ai_addrlen, align 8, !dbg !2097
  %conv22 = zext i32 %23 to i64, !dbg !2096
  %cmp23 = icmp ult i64 %21, %conv22, !dbg !2098
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !2099

if.then25:                                        ; preds = %if.else
  %24 = load i8*, i8** @hostname, align 8, !dbg !2100
  %25 = load i64, i64* %sa6_len.addr, align 8, !dbg !2102
  %26 = load %struct.addrinfo*, %struct.addrinfo** %aiv6, align 8, !dbg !2103
  %ai_addrlen26 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %26, i32 0, i32 4, !dbg !2104
  %27 = load i32, i32* %ai_addrlen26, align 8, !dbg !2104
  %conv27 = zext i32 %27 to i64, !dbg !2105
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.112, i64 0, i64 0), i8* %24, i64 %25, i64 %conv27), !dbg !2106
  call void @exit(i32 1) #13, !dbg !2107
  unreachable, !dbg !2107

if.end28:                                         ; preds = %if.else
  %28 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa6P.addr, align 8, !dbg !2108
  %29 = bitcast %union.httpd_sockaddr* %28 to i8*, !dbg !2108
  %30 = load i64, i64* %sa6_len.addr, align 8, !dbg !2108
  %31 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa6P.addr, align 8, !dbg !2108
  %32 = bitcast %union.httpd_sockaddr* %31 to i8*, !dbg !2108
  %33 = call i64 @llvm.objectsize.i64.p0i8(i8* %32, i1 false, i1 true, i1 false), !dbg !2108
  %call29 = call i8* @__memset_chk(i8* %29, i32 0, i64 %30, i64 %33) #11, !dbg !2108
  %34 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa6P.addr, align 8, !dbg !2109
  %35 = bitcast %union.httpd_sockaddr* %34 to i8*, !dbg !2109
  %36 = load %struct.addrinfo*, %struct.addrinfo** %aiv6, align 8, !dbg !2109
  %ai_addr = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %36, i32 0, i32 6, !dbg !2109
  %37 = load %struct.sockaddr*, %struct.sockaddr** %ai_addr, align 8, !dbg !2109
  %38 = bitcast %struct.sockaddr* %37 to i8*, !dbg !2109
  %39 = load %struct.addrinfo*, %struct.addrinfo** %aiv6, align 8, !dbg !2109
  %ai_addrlen30 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %39, i32 0, i32 4, !dbg !2109
  %40 = load i32, i32* %ai_addrlen30, align 8, !dbg !2109
  %conv31 = zext i32 %40 to i64, !dbg !2109
  %41 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa6P.addr, align 8, !dbg !2109
  %42 = bitcast %union.httpd_sockaddr* %41 to i8*, !dbg !2109
  %43 = call i64 @llvm.objectsize.i64.p0i8(i8* %42, i1 false, i1 true, i1 false), !dbg !2109
  %call32 = call i8* @__memmove_chk(i8* %35, i8* %38, i64 %conv31, i64 %43) #11, !dbg !2109
  %44 = load i32*, i32** %gotv6P.addr, align 8, !dbg !2110
  store i32 1, i32* %44, align 4, !dbg !2111
  br label %if.end33

if.end33:                                         ; preds = %if.end28, %if.then21
  %45 = load %struct.addrinfo*, %struct.addrinfo** %aiv4, align 8, !dbg !2112
  %cmp34 = icmp eq %struct.addrinfo* %45, null, !dbg !2114
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !2115

if.then36:                                        ; preds = %if.end33
  %46 = load i32*, i32** %gotv4P.addr, align 8, !dbg !2116
  store i32 0, i32* %46, align 4, !dbg !2117
  br label %if.end51, !dbg !2118

if.else37:                                        ; preds = %if.end33
  %47 = load i64, i64* %sa4_len.addr, align 8, !dbg !2119
  %48 = load %struct.addrinfo*, %struct.addrinfo** %aiv4, align 8, !dbg !2122
  %ai_addrlen38 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %48, i32 0, i32 4, !dbg !2123
  %49 = load i32, i32* %ai_addrlen38, align 8, !dbg !2123
  %conv39 = zext i32 %49 to i64, !dbg !2122
  %cmp40 = icmp ult i64 %47, %conv39, !dbg !2124
  br i1 %cmp40, label %if.then42, label %if.end45, !dbg !2125

if.then42:                                        ; preds = %if.else37
  %50 = load i8*, i8** @hostname, align 8, !dbg !2126
  %51 = load i64, i64* %sa4_len.addr, align 8, !dbg !2128
  %52 = load %struct.addrinfo*, %struct.addrinfo** %aiv4, align 8, !dbg !2129
  %ai_addrlen43 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %52, i32 0, i32 4, !dbg !2130
  %53 = load i32, i32* %ai_addrlen43, align 8, !dbg !2130
  %conv44 = zext i32 %53 to i64, !dbg !2131
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.112, i64 0, i64 0), i8* %50, i64 %51, i64 %conv44), !dbg !2132
  call void @exit(i32 1) #13, !dbg !2133
  unreachable, !dbg !2133

if.end45:                                         ; preds = %if.else37
  %54 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa4P.addr, align 8, !dbg !2134
  %55 = bitcast %union.httpd_sockaddr* %54 to i8*, !dbg !2134
  %56 = load i64, i64* %sa4_len.addr, align 8, !dbg !2134
  %57 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa4P.addr, align 8, !dbg !2134
  %58 = bitcast %union.httpd_sockaddr* %57 to i8*, !dbg !2134
  %59 = call i64 @llvm.objectsize.i64.p0i8(i8* %58, i1 false, i1 true, i1 false), !dbg !2134
  %call46 = call i8* @__memset_chk(i8* %55, i32 0, i64 %56, i64 %59) #11, !dbg !2134
  %60 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa4P.addr, align 8, !dbg !2135
  %61 = bitcast %union.httpd_sockaddr* %60 to i8*, !dbg !2135
  %62 = load %struct.addrinfo*, %struct.addrinfo** %aiv4, align 8, !dbg !2135
  %ai_addr47 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %62, i32 0, i32 6, !dbg !2135
  %63 = load %struct.sockaddr*, %struct.sockaddr** %ai_addr47, align 8, !dbg !2135
  %64 = bitcast %struct.sockaddr* %63 to i8*, !dbg !2135
  %65 = load %struct.addrinfo*, %struct.addrinfo** %aiv4, align 8, !dbg !2135
  %ai_addrlen48 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %65, i32 0, i32 4, !dbg !2135
  %66 = load i32, i32* %ai_addrlen48, align 8, !dbg !2135
  %conv49 = zext i32 %66 to i64, !dbg !2135
  %67 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa4P.addr, align 8, !dbg !2135
  %68 = bitcast %union.httpd_sockaddr* %67 to i8*, !dbg !2135
  %69 = call i64 @llvm.objectsize.i64.p0i8(i8* %68, i1 false, i1 true, i1 false), !dbg !2135
  %call50 = call i8* @__memmove_chk(i8* %61, i8* %64, i64 %conv49, i64 %69) #11, !dbg !2135
  %70 = load i32*, i32** %gotv4P.addr, align 8, !dbg !2136
  store i32 1, i32* %70, align 4, !dbg !2137
  br label %if.end51

if.end51:                                         ; preds = %if.end45, %if.then36
  %71 = load %struct.addrinfo*, %struct.addrinfo** %ai, align 8, !dbg !2138
  call void @freeaddrinfo(%struct.addrinfo* %71), !dbg !2139
  ret void, !dbg !2140
}

declare void @"\01_syslog$DARWIN_EXTSN"(i32, i8*, ...) #3

declare i32 @fprintf(%struct.__sFILE*, i8*, ...) #3

; Function Attrs: noreturn
declare void @exit(i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @read_throttlefile(i8* %tf) #0 !dbg !2141 {
entry:
  %tf.addr = alloca i8*, align 8
  %fp = alloca %struct.__sFILE*, align 8
  %buf = alloca [5000 x i8], align 16
  %cp = alloca i8*, align 8
  %len = alloca i32, align 4
  %pattern = alloca [5000 x i8], align 16
  %max_limit = alloca i64, align 8
  %min_limit = alloca i64, align 8
  %tv = alloca %struct.timeval, align 8
  store i8* %tf, i8** %tf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tf.addr, metadata !2144, metadata !DIExpression()), !dbg !2145
  call void @llvm.dbg.declare(metadata %struct.__sFILE** %fp, metadata !2146, metadata !DIExpression()), !dbg !2147
  call void @llvm.dbg.declare(metadata [5000 x i8]* %buf, metadata !2148, metadata !DIExpression()), !dbg !2152
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !2153, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2155, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.declare(metadata [5000 x i8]* %pattern, metadata !2157, metadata !DIExpression()), !dbg !2158
  call void @llvm.dbg.declare(metadata i64* %max_limit, metadata !2159, metadata !DIExpression()), !dbg !2160
  call void @llvm.dbg.declare(metadata i64* %min_limit, metadata !2161, metadata !DIExpression()), !dbg !2162
  call void @llvm.dbg.declare(metadata %struct.timeval* %tv, metadata !2163, metadata !DIExpression()), !dbg !2164
  %0 = load i8*, i8** %tf.addr, align 8, !dbg !2165
  %call = call %struct.__sFILE* @"\01_fopen"(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i64 0, i64 0)), !dbg !2166
  store %struct.__sFILE* %call, %struct.__sFILE** %fp, align 8, !dbg !2167
  %1 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !2168
  %cmp = icmp eq %struct.__sFILE* %1, null, !dbg !2170
  br i1 %cmp, label %if.then, label %if.end, !dbg !2171

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %tf.addr, align 8, !dbg !2172
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %2), !dbg !2174
  %3 = load i8*, i8** %tf.addr, align 8, !dbg !2175
  call void @perror(i8* %3) #14, !dbg !2176
  call void @exit(i32 1) #13, !dbg !2177
  unreachable, !dbg !2177

if.end:                                           ; preds = %entry
  %call1 = call i32 @gettimeofday(%struct.timeval* %tv, i8* null), !dbg !2178
  br label %while.cond, !dbg !2179

while.cond:                                       ; preds = %if.end104, %if.else55, %if.then41, %if.end
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 0, !dbg !2180
  %4 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !2181
  %call2 = call i8* @fgets(i8* %arraydecay, i32 5000, %struct.__sFILE* %4), !dbg !2182
  %cmp3 = icmp ne i8* %call2, null, !dbg !2183
  br i1 %cmp3, label %while.body, label %while.end122, !dbg !2179

while.body:                                       ; preds = %while.cond
  %arraydecay4 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 0, !dbg !2184
  %call5 = call i8* @strchr(i8* %arraydecay4, i32 35), !dbg !2186
  store i8* %call5, i8** %cp, align 8, !dbg !2187
  %5 = load i8*, i8** %cp, align 8, !dbg !2188
  %cmp6 = icmp ne i8* %5, null, !dbg !2190
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2191

if.then7:                                         ; preds = %while.body
  %6 = load i8*, i8** %cp, align 8, !dbg !2192
  store i8 0, i8* %6, align 1, !dbg !2193
  br label %if.end8, !dbg !2194

if.end8:                                          ; preds = %if.then7, %while.body
  %arraydecay9 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 0, !dbg !2195
  %call10 = call i64 @strlen(i8* %arraydecay9), !dbg !2196
  %conv = trunc i64 %call10 to i32, !dbg !2196
  store i32 %conv, i32* %len, align 4, !dbg !2197
  br label %while.cond11, !dbg !2198

while.cond11:                                     ; preds = %while.body36, %if.end8
  %7 = load i32, i32* %len, align 4, !dbg !2199
  %cmp12 = icmp sgt i32 %7, 0, !dbg !2200
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !2201

land.rhs:                                         ; preds = %while.cond11
  %8 = load i32, i32* %len, align 4, !dbg !2202
  %sub = sub nsw i32 %8, 1, !dbg !2203
  %idxprom = sext i32 %sub to i64, !dbg !2204
  %arrayidx = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 %idxprom, !dbg !2204
  %9 = load i8, i8* %arrayidx, align 1, !dbg !2204
  %conv14 = sext i8 %9 to i32, !dbg !2204
  %cmp15 = icmp eq i32 %conv14, 32, !dbg !2205
  br i1 %cmp15, label %lor.end, label %lor.lhs.false, !dbg !2206

lor.lhs.false:                                    ; preds = %land.rhs
  %10 = load i32, i32* %len, align 4, !dbg !2207
  %sub17 = sub nsw i32 %10, 1, !dbg !2208
  %idxprom18 = sext i32 %sub17 to i64, !dbg !2209
  %arrayidx19 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 %idxprom18, !dbg !2209
  %11 = load i8, i8* %arrayidx19, align 1, !dbg !2209
  %conv20 = sext i8 %11 to i32, !dbg !2209
  %cmp21 = icmp eq i32 %conv20, 9, !dbg !2210
  br i1 %cmp21, label %lor.end, label %lor.lhs.false23, !dbg !2211

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %12 = load i32, i32* %len, align 4, !dbg !2212
  %sub24 = sub nsw i32 %12, 1, !dbg !2213
  %idxprom25 = sext i32 %sub24 to i64, !dbg !2214
  %arrayidx26 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 %idxprom25, !dbg !2214
  %13 = load i8, i8* %arrayidx26, align 1, !dbg !2214
  %conv27 = sext i8 %13 to i32, !dbg !2214
  %cmp28 = icmp eq i32 %conv27, 10, !dbg !2215
  br i1 %cmp28, label %lor.end, label %lor.rhs, !dbg !2216

lor.rhs:                                          ; preds = %lor.lhs.false23
  %14 = load i32, i32* %len, align 4, !dbg !2217
  %sub30 = sub nsw i32 %14, 1, !dbg !2218
  %idxprom31 = sext i32 %sub30 to i64, !dbg !2219
  %arrayidx32 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 %idxprom31, !dbg !2219
  %15 = load i8, i8* %arrayidx32, align 1, !dbg !2219
  %conv33 = sext i8 %15 to i32, !dbg !2219
  %cmp34 = icmp eq i32 %conv33, 13, !dbg !2220
  br label %lor.end, !dbg !2216

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false23, %lor.lhs.false, %land.rhs
  %16 = phi i1 [ true, %lor.lhs.false23 ], [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %cmp34, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond11
  %17 = phi i1 [ false, %while.cond11 ], [ %16, %lor.end ], !dbg !2221
  br i1 %17, label %while.body36, label %while.end, !dbg !2198

while.body36:                                     ; preds = %land.end
  %18 = load i32, i32* %len, align 4, !dbg !2222
  %dec = add nsw i32 %18, -1, !dbg !2222
  store i32 %dec, i32* %len, align 4, !dbg !2222
  %idxprom37 = sext i32 %dec to i64, !dbg !2223
  %arrayidx38 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 %idxprom37, !dbg !2223
  store i8 0, i8* %arrayidx38, align 1, !dbg !2224
  br label %while.cond11, !dbg !2198, !llvm.loop !2225

while.end:                                        ; preds = %land.end
  %19 = load i32, i32* %len, align 4, !dbg !2227
  %cmp39 = icmp eq i32 %19, 0, !dbg !2229
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !2230

if.then41:                                        ; preds = %while.end
  br label %while.cond, !dbg !2231, !llvm.loop !2232

if.end42:                                         ; preds = %while.end
  %arraydecay43 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 0, !dbg !2234
  %arraydecay44 = getelementptr inbounds [5000 x i8], [5000 x i8]* %pattern, i64 0, i64 0, !dbg !2236
  %call45 = call i32 (i8*, i8*, ...) @sscanf(i8* %arraydecay43, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.113, i64 0, i64 0), i8* %arraydecay44, i64* %min_limit, i64* %max_limit), !dbg !2237
  %cmp46 = icmp eq i32 %call45, 3, !dbg !2238
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !2239

if.then48:                                        ; preds = %if.end42
  br label %if.end60, !dbg !2240

if.else:                                          ; preds = %if.end42
  %arraydecay49 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 0, !dbg !2242
  %arraydecay50 = getelementptr inbounds [5000 x i8], [5000 x i8]* %pattern, i64 0, i64 0, !dbg !2244
  %call51 = call i32 (i8*, i8*, ...) @sscanf(i8* %arraydecay49, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.114, i64 0, i64 0), i8* %arraydecay50, i64* %max_limit), !dbg !2245
  %cmp52 = icmp eq i32 %call51, 2, !dbg !2246
  br i1 %cmp52, label %if.then54, label %if.else55, !dbg !2247

if.then54:                                        ; preds = %if.else
  store i64 0, i64* %min_limit, align 8, !dbg !2248
  br label %if.end59, !dbg !2249

if.else55:                                        ; preds = %if.else
  %20 = load i8*, i8** %tf.addr, align 8, !dbg !2250
  %arraydecay56 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 0, !dbg !2252
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.115, i64 0, i64 0), i8* %20, i8* %arraydecay56), !dbg !2253
  %21 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !2254
  %22 = load i8*, i8** @argv0, align 8, !dbg !2255
  %23 = load i8*, i8** %tf.addr, align 8, !dbg !2256
  %arraydecay57 = getelementptr inbounds [5000 x i8], [5000 x i8]* %buf, i64 0, i64 0, !dbg !2257
  %call58 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %21, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.116, i64 0, i64 0), i8* %22, i8* %23, i8* %arraydecay57), !dbg !2258
  br label %while.cond, !dbg !2259, !llvm.loop !2232

if.end59:                                         ; preds = %if.then54
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then48
  %arrayidx61 = getelementptr inbounds [5000 x i8], [5000 x i8]* %pattern, i64 0, i64 0, !dbg !2260
  %24 = load i8, i8* %arrayidx61, align 16, !dbg !2260
  %conv62 = sext i8 %24 to i32, !dbg !2260
  %cmp63 = icmp eq i32 %conv62, 47, !dbg !2262
  br i1 %cmp63, label %if.then65, label %if.end71, !dbg !2263

if.then65:                                        ; preds = %if.end60
  %arraydecay66 = getelementptr inbounds [5000 x i8], [5000 x i8]* %pattern, i64 0, i64 0, !dbg !2264
  %arrayidx67 = getelementptr inbounds [5000 x i8], [5000 x i8]* %pattern, i64 0, i64 1, !dbg !2264
  %arrayidx68 = getelementptr inbounds [5000 x i8], [5000 x i8]* %pattern, i64 0, i64 1, !dbg !2264
  %call69 = call i64 @strlen(i8* %arrayidx68), !dbg !2264
  %add = add i64 %call69, 1, !dbg !2264
  %call70 = call i8* @__memmove_chk(i8* %arraydecay66, i8* %arrayidx67, i64 %add, i64 5000) #11, !dbg !2264
  br label %if.end71, !dbg !2265

if.end71:                                         ; preds = %if.then65, %if.end60
  br label %while.cond72, !dbg !2266

while.cond72:                                     ; preds = %while.body77, %if.end71
  %arraydecay73 = getelementptr inbounds [5000 x i8], [5000 x i8]* %pattern, i64 0, i64 0, !dbg !2267
  %call74 = call i8* @strstr(i8* %arraydecay73, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.117, i64 0, i64 0)), !dbg !2268
  store i8* %call74, i8** %cp, align 8, !dbg !2269
  %cmp75 = icmp ne i8* %call74, null, !dbg !2270
  br i1 %cmp75, label %while.body77, label %while.end84, !dbg !2266

while.body77:                                     ; preds = %while.cond72
  %25 = load i8*, i8** %cp, align 8, !dbg !2271
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 1, !dbg !2271
  %26 = load i8*, i8** %cp, align 8, !dbg !2271
  %add.ptr78 = getelementptr inbounds i8, i8* %26, i64 2, !dbg !2271
  %27 = load i8*, i8** %cp, align 8, !dbg !2271
  %add.ptr79 = getelementptr inbounds i8, i8* %27, i64 2, !dbg !2271
  %call80 = call i64 @strlen(i8* %add.ptr79), !dbg !2271
  %add81 = add i64 %call80, 1, !dbg !2271
  %28 = load i8*, i8** %cp, align 8, !dbg !2271
  %add.ptr82 = getelementptr inbounds i8, i8* %28, i64 1, !dbg !2271
  %29 = call i64 @llvm.objectsize.i64.p0i8(i8* %add.ptr82, i1 false, i1 true, i1 false), !dbg !2271
  %call83 = call i8* @__memmove_chk(i8* %add.ptr, i8* %add.ptr78, i64 %add81, i64 %29) #11, !dbg !2271
  br label %while.cond72, !dbg !2266, !llvm.loop !2272

while.end84:                                      ; preds = %while.cond72
  %30 = load i32, i32* @numthrottles, align 4, !dbg !2273
  %31 = load i32, i32* @maxthrottles, align 4, !dbg !2275
  %cmp85 = icmp sge i32 %30, %31, !dbg !2276
  br i1 %cmp85, label %if.then87, label %if.end104, !dbg !2277

if.then87:                                        ; preds = %while.end84
  %32 = load i32, i32* @maxthrottles, align 4, !dbg !2278
  %cmp88 = icmp eq i32 %32, 0, !dbg !2281
  br i1 %cmp88, label %if.then90, label %if.else93, !dbg !2282

if.then90:                                        ; preds = %if.then87
  store i32 100, i32* @maxthrottles, align 4, !dbg !2283
  %33 = load i32, i32* @maxthrottles, align 4, !dbg !2285
  %conv91 = sext i32 %33 to i64, !dbg !2285
  %mul = mul i64 48, %conv91, !dbg !2285
  %call92 = call i8* @malloc(i64 %mul) #15, !dbg !2285
  %34 = bitcast i8* %call92 to %struct.throttletab*, !dbg !2285
  store %struct.throttletab* %34, %struct.throttletab** @throttles, align 8, !dbg !2286
  br label %if.end98, !dbg !2287

if.else93:                                        ; preds = %if.then87
  %35 = load i32, i32* @maxthrottles, align 4, !dbg !2288
  %mul94 = mul nsw i32 %35, 2, !dbg !2288
  store i32 %mul94, i32* @maxthrottles, align 4, !dbg !2288
  %36 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2290
  %37 = bitcast %struct.throttletab* %36 to i8*, !dbg !2290
  %38 = load i32, i32* @maxthrottles, align 4, !dbg !2290
  %conv95 = sext i32 %38 to i64, !dbg !2290
  %mul96 = mul i64 48, %conv95, !dbg !2290
  %call97 = call i8* @realloc(i8* %37, i64 %mul96) #16, !dbg !2290
  %39 = bitcast i8* %call97 to %struct.throttletab*, !dbg !2290
  store %struct.throttletab* %39, %struct.throttletab** @throttles, align 8, !dbg !2291
  br label %if.end98

if.end98:                                         ; preds = %if.else93, %if.then90
  %40 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2292
  %cmp99 = icmp eq %struct.throttletab* %40, null, !dbg !2294
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !2295

if.then101:                                       ; preds = %if.end98
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.118, i64 0, i64 0)), !dbg !2296
  %41 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !2298
  %42 = load i8*, i8** @argv0, align 8, !dbg !2299
  %call102 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %41, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.119, i64 0, i64 0), i8* %42), !dbg !2300
  call void @exit(i32 1) #13, !dbg !2301
  unreachable, !dbg !2301

if.end103:                                        ; preds = %if.end98
  br label %if.end104, !dbg !2302

if.end104:                                        ; preds = %if.end103, %while.end84
  %arraydecay105 = getelementptr inbounds [5000 x i8], [5000 x i8]* %pattern, i64 0, i64 0, !dbg !2303
  %call106 = call i8* @e_strdup(i8* %arraydecay105), !dbg !2304
  %43 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2305
  %44 = load i32, i32* @numthrottles, align 4, !dbg !2306
  %idxprom107 = sext i32 %44 to i64, !dbg !2305
  %arrayidx108 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %43, i64 %idxprom107, !dbg !2305
  %pattern109 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx108, i32 0, i32 0, !dbg !2307
  store i8* %call106, i8** %pattern109, align 8, !dbg !2308
  %45 = load i64, i64* %max_limit, align 8, !dbg !2309
  %46 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2310
  %47 = load i32, i32* @numthrottles, align 4, !dbg !2311
  %idxprom110 = sext i32 %47 to i64, !dbg !2310
  %arrayidx111 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %46, i64 %idxprom110, !dbg !2310
  %max_limit112 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx111, i32 0, i32 1, !dbg !2312
  store i64 %45, i64* %max_limit112, align 8, !dbg !2313
  %48 = load i64, i64* %min_limit, align 8, !dbg !2314
  %49 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2315
  %50 = load i32, i32* @numthrottles, align 4, !dbg !2316
  %idxprom113 = sext i32 %50 to i64, !dbg !2315
  %arrayidx114 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %49, i64 %idxprom113, !dbg !2315
  %min_limit115 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx114, i32 0, i32 2, !dbg !2317
  store i64 %48, i64* %min_limit115, align 8, !dbg !2318
  %51 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2319
  %52 = load i32, i32* @numthrottles, align 4, !dbg !2320
  %idxprom116 = sext i32 %52 to i64, !dbg !2319
  %arrayidx117 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %51, i64 %idxprom116, !dbg !2319
  %rate = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx117, i32 0, i32 3, !dbg !2321
  store i64 0, i64* %rate, align 8, !dbg !2322
  %53 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2323
  %54 = load i32, i32* @numthrottles, align 4, !dbg !2324
  %idxprom118 = sext i32 %54 to i64, !dbg !2323
  %arrayidx119 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %53, i64 %idxprom118, !dbg !2323
  %bytes_since_avg = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx119, i32 0, i32 4, !dbg !2325
  store i64 0, i64* %bytes_since_avg, align 8, !dbg !2326
  %55 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2327
  %56 = load i32, i32* @numthrottles, align 4, !dbg !2328
  %idxprom120 = sext i32 %56 to i64, !dbg !2327
  %arrayidx121 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %55, i64 %idxprom120, !dbg !2327
  %num_sending = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx121, i32 0, i32 5, !dbg !2329
  store i32 0, i32* %num_sending, align 8, !dbg !2330
  %57 = load i32, i32* @numthrottles, align 4, !dbg !2331
  %inc = add nsw i32 %57, 1, !dbg !2331
  store i32 %inc, i32* @numthrottles, align 4, !dbg !2331
  br label %while.cond, !dbg !2179, !llvm.loop !2232

while.end122:                                     ; preds = %while.cond
  %58 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !2332
  %call123 = call i32 @fclose(%struct.__sFILE* %58), !dbg !2333
  ret void, !dbg !2334
}

declare i32 @getuid() #3

declare %struct.passwd* @getpwnam(i8*) #3

declare i32 @strcmp(i8*, i8*) #3

declare %struct.__sFILE* @"\01_fopen"(i8*, i8*) #3

; Function Attrs: cold
declare void @perror(i8*) #5

declare i32 @fileno(%struct.__sFILE*) #3

declare i32 @"\01_fcntl"(i32, i32, ...) #3

declare i32 @fchown(i32, i32, i32) #3

declare i32 @chdir(i8*) #3

declare i8* @getcwd(i8*, i64) #3

declare i64 @strlen(i8*) #3

; Function Attrs: nounwind
declare i8* @__strcat_chk(i8*, i8*, i64) #6

declare i32 @fclose(%struct.__sFILE*) #3

declare i32 @"\01_daemon$1050"(i32, i32) #3

declare i32 @setsid() #3

declare i32 @getpid() #3

declare i32 @fdwatch_get_nfiles() #3

declare i32 @chroot(i8*) #3

declare i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #1

; Function Attrs: nounwind
declare i8* @__memmove_chk(i8*, i8*, i64, i64) #6

; Function Attrs: nounwind
declare i8* @__strcpy_chk(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_term(i32 %sig) #0 !dbg !2335 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !2336, metadata !DIExpression()), !dbg !2337
  call void @shut_down(), !dbg !2338
  %0 = load i32, i32* %sig.addr, align 4, !dbg !2339
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41, i64 0, i64 0), i32 %0), !dbg !2340
  call void @closelog(), !dbg !2341
  call void @exit(i32 1) #13, !dbg !2342
  unreachable, !dbg !2342
}

declare void (i32)* @sigset(i32, void (i32)*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_chld(i32 %sig) #0 !dbg !2343 {
entry:
  %sig.addr = alloca i32, align 4
  %oerrno = alloca i32, align 4
  %pid = alloca i32, align 4
  %status = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !2344, metadata !DIExpression()), !dbg !2345
  call void @llvm.dbg.declare(metadata i32* %oerrno, metadata !2346, metadata !DIExpression()), !dbg !2347
  %call = call i32* @__error(), !dbg !2348
  %0 = load i32, i32* %call, align 4, !dbg !2348
  store i32 %0, i32* %oerrno, align 4, !dbg !2347
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !2349, metadata !DIExpression()), !dbg !2350
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2351, metadata !DIExpression()), !dbg !2352
  br label %for.cond, !dbg !2353

for.cond:                                         ; preds = %if.end22, %if.then8, %entry
  %call1 = call i32 @"\01_waitpid"(i32 -1, i32* %status, i32 1), !dbg !2354
  store i32 %call1, i32* %pid, align 4, !dbg !2358
  %1 = load i32, i32* %pid, align 4, !dbg !2359
  %cmp = icmp eq i32 %1, 0, !dbg !2361
  br i1 %cmp, label %if.then, label %if.end, !dbg !2362

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !2363

if.end:                                           ; preds = %for.cond
  %2 = load i32, i32* %pid, align 4, !dbg !2364
  %cmp2 = icmp slt i32 %2, 0, !dbg !2366
  br i1 %cmp2, label %if.then3, label %if.end14, !dbg !2367

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__error(), !dbg !2368
  %3 = load i32, i32* %call4, align 4, !dbg !2368
  %cmp5 = icmp eq i32 %3, 4, !dbg !2371
  br i1 %cmp5, label %if.then8, label %lor.lhs.false, !dbg !2372

lor.lhs.false:                                    ; preds = %if.then3
  %call6 = call i32* @__error(), !dbg !2373
  %4 = load i32, i32* %call6, align 4, !dbg !2373
  %cmp7 = icmp eq i32 %4, 35, !dbg !2374
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2375

if.then8:                                         ; preds = %lor.lhs.false, %if.then3
  br label %for.cond, !dbg !2376, !llvm.loop !2377

if.end9:                                          ; preds = %lor.lhs.false
  %call10 = call i32* @__error(), !dbg !2380
  %5 = load i32, i32* %call10, align 4, !dbg !2380
  %cmp11 = icmp ne i32 %5, 10, !dbg !2382
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !2383

if.then12:                                        ; preds = %if.end9
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i64 0, i64 0)), !dbg !2384
  br label %if.end13, !dbg !2384

if.end13:                                         ; preds = %if.then12, %if.end9
  br label %for.end, !dbg !2385

if.end14:                                         ; preds = %if.end
  %6 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !2386
  %cmp15 = icmp ne %struct.httpd_server* %6, null, !dbg !2388
  br i1 %cmp15, label %if.then16, label %if.end22, !dbg !2389

if.then16:                                        ; preds = %if.end14
  %7 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !2390
  %cgi_count = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %7, i32 0, i32 5, !dbg !2392
  %8 = load i32, i32* %cgi_count, align 4, !dbg !2393
  %dec = add nsw i32 %8, -1, !dbg !2393
  store i32 %dec, i32* %cgi_count, align 4, !dbg !2393
  %9 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !2394
  %cgi_count17 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %9, i32 0, i32 5, !dbg !2396
  %10 = load i32, i32* %cgi_count17, align 4, !dbg !2396
  %cmp18 = icmp slt i32 %10, 0, !dbg !2397
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !2398

if.then19:                                        ; preds = %if.then16
  %11 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !2399
  %cgi_count20 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %11, i32 0, i32 5, !dbg !2400
  store i32 0, i32* %cgi_count20, align 4, !dbg !2401
  br label %if.end21, !dbg !2399

if.end21:                                         ; preds = %if.then19, %if.then16
  br label %if.end22, !dbg !2402

if.end22:                                         ; preds = %if.end21, %if.end14
  br label %for.cond, !dbg !2403, !llvm.loop !2377

for.end:                                          ; preds = %if.end13, %if.then
  %12 = load i32, i32* %oerrno, align 4, !dbg !2404
  %call23 = call i32* @__error(), !dbg !2405
  store i32 %12, i32* %call23, align 4, !dbg !2406
  ret void, !dbg !2407
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_hup(i32 %sig) #0 !dbg !2408 {
entry:
  %sig.addr = alloca i32, align 4
  %oerrno = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !2409, metadata !DIExpression()), !dbg !2410
  call void @llvm.dbg.declare(metadata i32* %oerrno, metadata !2411, metadata !DIExpression()), !dbg !2412
  %call = call i32* @__error(), !dbg !2413
  %0 = load i32, i32* %call, align 4, !dbg !2413
  store i32 %0, i32* %oerrno, align 4, !dbg !2412
  store volatile i32 1, i32* @got_hup, align 4, !dbg !2414
  %1 = load i32, i32* %oerrno, align 4, !dbg !2415
  %call1 = call i32* @__error(), !dbg !2416
  store i32 %1, i32* %call1, align 4, !dbg !2417
  ret void, !dbg !2418
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_usr1(i32 %sig) #0 !dbg !2419 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !2420, metadata !DIExpression()), !dbg !2421
  %0 = load i32, i32* @num_connects, align 4, !dbg !2422
  %cmp = icmp eq i32 %0, 0, !dbg !2424
  br i1 %cmp, label %if.then, label %if.end, !dbg !2425

if.then:                                          ; preds = %entry
  call void @shut_down(), !dbg !2426
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0)), !dbg !2428
  call void @closelog(), !dbg !2429
  call void @exit(i32 0) #13, !dbg !2430
  unreachable, !dbg !2430

if.end:                                           ; preds = %entry
  store volatile i32 1, i32* @got_usr1, align 4, !dbg !2431
  ret void, !dbg !2432
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_usr2(i32 %sig) #0 !dbg !2433 {
entry:
  %sig.addr = alloca i32, align 4
  %oerrno = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !2434, metadata !DIExpression()), !dbg !2435
  call void @llvm.dbg.declare(metadata i32* %oerrno, metadata !2436, metadata !DIExpression()), !dbg !2437
  %call = call i32* @__error(), !dbg !2438
  %0 = load i32, i32* %call, align 4, !dbg !2438
  store i32 %0, i32* %oerrno, align 4, !dbg !2437
  call void @logstats(%struct.timeval* null), !dbg !2439
  %1 = load i32, i32* %oerrno, align 4, !dbg !2440
  %call1 = call i32* @__error(), !dbg !2441
  store i32 %1, i32* %call1, align 4, !dbg !2442
  ret void, !dbg !2443
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_alrm(i32 %sig) #0 !dbg !2444 {
entry:
  %sig.addr = alloca i32, align 4
  %oerrno = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !2445, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.declare(metadata i32* %oerrno, metadata !2447, metadata !DIExpression()), !dbg !2448
  %call = call i32* @__error(), !dbg !2449
  %0 = load i32, i32* %call, align 4, !dbg !2449
  store i32 %0, i32* %oerrno, align 4, !dbg !2448
  %1 = load volatile i32, i32* @watchdog_flag, align 4, !dbg !2450
  %tobool = icmp ne i32 %1, 0, !dbg !2450
  br i1 %tobool, label %if.end, label %if.then, !dbg !2452

if.then:                                          ; preds = %entry
  %call1 = call i32 @chdir(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)), !dbg !2453
  call void @abort() #17, !dbg !2455
  unreachable, !dbg !2455

if.end:                                           ; preds = %entry
  store volatile i32 0, i32* @watchdog_flag, align 4, !dbg !2456
  %call2 = call i32 @alarm(i32 360), !dbg !2457
  %2 = load i32, i32* %oerrno, align 4, !dbg !2458
  %call3 = call i32* @__error(), !dbg !2459
  store i32 %2, i32* %call3, align 4, !dbg !2460
  ret void, !dbg !2461
}

declare i32 @alarm(i32) #3

declare void @tmr_init() #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @occasional(i8* %client_data.coerce, %struct.timeval* %nowP) #0 !dbg !2462 {
entry:
  %client_data = alloca %union.ClientData, align 8
  %nowP.addr = alloca %struct.timeval*, align 8
  %coerce.dive = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0
  store i8* %client_data.coerce, i8** %coerce.dive, align 8
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !2463, metadata !DIExpression()), !dbg !2464
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !2465, metadata !DIExpression()), !dbg !2466
  %0 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !2467
  call void @mmc_cleanup(%struct.timeval* %0), !dbg !2468
  call void @tmr_cleanup(), !dbg !2469
  store volatile i32 1, i32* @watchdog_flag, align 4, !dbg !2470
  ret void, !dbg !2471
}

declare %struct.TimerStruct* @tmr_create(%struct.timeval*, void (i8*, %struct.timeval*)*, i8*, i64, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @idle(i8* %client_data.coerce, %struct.timeval* %nowP) #0 !dbg !2472 {
entry:
  %client_data = alloca %union.ClientData, align 8
  %nowP.addr = alloca %struct.timeval*, align 8
  %cnum = alloca i32, align 4
  %c = alloca %struct.connecttab*, align 8
  %coerce.dive = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0
  store i8* %client_data.coerce, i8** %coerce.dive, align 8
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !2473, metadata !DIExpression()), !dbg !2474
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !2475, metadata !DIExpression()), !dbg !2476
  call void @llvm.dbg.declare(metadata i32* %cnum, metadata !2477, metadata !DIExpression()), !dbg !2478
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c, metadata !2479, metadata !DIExpression()), !dbg !2480
  store i32 0, i32* %cnum, align 4, !dbg !2481
  br label %for.cond, !dbg !2483

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %cnum, align 4, !dbg !2484
  %1 = load i32, i32* @max_connects, align 4, !dbg !2486
  %cmp = icmp slt i32 %0, %1, !dbg !2487
  br i1 %cmp, label %for.body, label %for.end, !dbg !2488

for.body:                                         ; preds = %for.cond
  %2 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !2489
  %3 = load i32, i32* %cnum, align 4, !dbg !2491
  %idxprom = sext i32 %3 to i64, !dbg !2489
  %arrayidx = getelementptr inbounds %struct.connecttab, %struct.connecttab* %2, i64 %idxprom, !dbg !2489
  store %struct.connecttab* %arrayidx, %struct.connecttab** %c, align 8, !dbg !2492
  %4 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2493
  %conn_state = getelementptr inbounds %struct.connecttab, %struct.connecttab* %4, i32 0, i32 0, !dbg !2494
  %5 = load i32, i32* %conn_state, align 8, !dbg !2494
  switch i32 %5, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb3
  ], !dbg !2495

sw.bb:                                            ; preds = %for.body
  %6 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !2496
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i32 0, i32 0, !dbg !2499
  %7 = load i64, i64* %tv_sec, align 8, !dbg !2499
  %8 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2500
  %active_at = getelementptr inbounds %struct.connecttab, %struct.connecttab* %8, i32 0, i32 8, !dbg !2501
  %9 = load i64, i64* %active_at, align 8, !dbg !2501
  %sub = sub nsw i64 %7, %9, !dbg !2502
  %cmp1 = icmp sge i64 %sub, 60, !dbg !2503
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2504

if.then:                                          ; preds = %sw.bb
  %10 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2505
  %hc = getelementptr inbounds %struct.connecttab, %struct.connecttab* %10, i32 0, i32 2, !dbg !2507
  %11 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !2507
  %client_addr = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %11, i32 0, i32 2, !dbg !2508
  %call = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr), !dbg !2509
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 6, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.132, i64 0, i64 0), i8* %call), !dbg !2510
  %12 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2511
  %hc2 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %12, i32 0, i32 2, !dbg !2512
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc2, align 8, !dbg !2512
  %14 = load i8*, i8** @httpd_err408title, align 8, !dbg !2513
  %15 = load i8*, i8** @httpd_err408form, align 8, !dbg !2514
  call void @httpd_send_err(%struct.httpd_conn* %13, i32 408, i8* %14, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0), i8* %15, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0)), !dbg !2515
  %16 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2516
  %17 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !2517
  call void @finish_connection(%struct.connecttab* %16, %struct.timeval* %17), !dbg !2518
  br label %if.end, !dbg !2519

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !2520

sw.bb3:                                           ; preds = %for.body, %for.body
  %18 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !2521
  %tv_sec4 = getelementptr inbounds %struct.timeval, %struct.timeval* %18, i32 0, i32 0, !dbg !2523
  %19 = load i64, i64* %tv_sec4, align 8, !dbg !2523
  %20 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2524
  %active_at5 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %20, i32 0, i32 8, !dbg !2525
  %21 = load i64, i64* %active_at5, align 8, !dbg !2525
  %sub6 = sub nsw i64 %19, %21, !dbg !2526
  %cmp7 = icmp sge i64 %sub6, 300, !dbg !2527
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !2528

if.then8:                                         ; preds = %sw.bb3
  %22 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2529
  %hc9 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %22, i32 0, i32 2, !dbg !2531
  %23 = load %struct.httpd_conn*, %struct.httpd_conn** %hc9, align 8, !dbg !2531
  %client_addr10 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %23, i32 0, i32 2, !dbg !2532
  %call11 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr10), !dbg !2533
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 6, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.133, i64 0, i64 0), i8* %call11), !dbg !2534
  %24 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2535
  %25 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !2536
  call void @clear_connection(%struct.connecttab* %24, %struct.timeval* %25), !dbg !2537
  br label %if.end12, !dbg !2538

if.end12:                                         ; preds = %if.then8, %sw.bb3
  br label %sw.epilog, !dbg !2539

sw.epilog:                                        ; preds = %for.body, %if.end12, %if.end
  br label %for.inc, !dbg !2540

for.inc:                                          ; preds = %sw.epilog
  %26 = load i32, i32* %cnum, align 4, !dbg !2541
  %inc = add nsw i32 %26, 1, !dbg !2541
  store i32 %inc, i32* %cnum, align 4, !dbg !2541
  br label %for.cond, !dbg !2542, !llvm.loop !2543

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2545
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @update_throttles(i8* %client_data.coerce, %struct.timeval* %nowP) #0 !dbg !2546 {
entry:
  %client_data = alloca %union.ClientData, align 8
  %nowP.addr = alloca %struct.timeval*, align 8
  %tnum = alloca i32, align 4
  %tind = alloca i32, align 4
  %cnum = alloca i32, align 4
  %c = alloca %struct.connecttab*, align 8
  %l = alloca i64, align 8
  %coerce.dive = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0
  store i8* %client_data.coerce, i8** %coerce.dive, align 8
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !2547, metadata !DIExpression()), !dbg !2548
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !2549, metadata !DIExpression()), !dbg !2550
  call void @llvm.dbg.declare(metadata i32* %tnum, metadata !2551, metadata !DIExpression()), !dbg !2552
  call void @llvm.dbg.declare(metadata i32* %tind, metadata !2553, metadata !DIExpression()), !dbg !2554
  call void @llvm.dbg.declare(metadata i32* %cnum, metadata !2555, metadata !DIExpression()), !dbg !2556
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c, metadata !2557, metadata !DIExpression()), !dbg !2558
  call void @llvm.dbg.declare(metadata i64* %l, metadata !2559, metadata !DIExpression()), !dbg !2560
  store i32 0, i32* %tnum, align 4, !dbg !2561
  br label %for.cond, !dbg !2563

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %tnum, align 4, !dbg !2564
  %1 = load i32, i32* @numthrottles, align 4, !dbg !2566
  %cmp = icmp slt i32 %0, %1, !dbg !2567
  br i1 %cmp, label %for.body, label %for.end, !dbg !2568

for.body:                                         ; preds = %for.cond
  %2 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2569
  %3 = load i32, i32* %tnum, align 4, !dbg !2571
  %idxprom = sext i32 %3 to i64, !dbg !2569
  %arrayidx = getelementptr inbounds %struct.throttletab, %struct.throttletab* %2, i64 %idxprom, !dbg !2569
  %rate = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx, i32 0, i32 3, !dbg !2572
  %4 = load i64, i64* %rate, align 8, !dbg !2572
  %mul = mul nsw i64 2, %4, !dbg !2573
  %5 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2574
  %6 = load i32, i32* %tnum, align 4, !dbg !2575
  %idxprom1 = sext i32 %6 to i64, !dbg !2574
  %arrayidx2 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %5, i64 %idxprom1, !dbg !2574
  %bytes_since_avg = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx2, i32 0, i32 4, !dbg !2576
  %7 = load i64, i64* %bytes_since_avg, align 8, !dbg !2576
  %div = sdiv i64 %7, 2, !dbg !2577
  %add = add nsw i64 %mul, %div, !dbg !2578
  %div3 = sdiv i64 %add, 3, !dbg !2579
  %8 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2580
  %9 = load i32, i32* %tnum, align 4, !dbg !2581
  %idxprom4 = sext i32 %9 to i64, !dbg !2580
  %arrayidx5 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %8, i64 %idxprom4, !dbg !2580
  %rate6 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx5, i32 0, i32 3, !dbg !2582
  store i64 %div3, i64* %rate6, align 8, !dbg !2583
  %10 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2584
  %11 = load i32, i32* %tnum, align 4, !dbg !2585
  %idxprom7 = sext i32 %11 to i64, !dbg !2584
  %arrayidx8 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %10, i64 %idxprom7, !dbg !2584
  %bytes_since_avg9 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx8, i32 0, i32 4, !dbg !2586
  store i64 0, i64* %bytes_since_avg9, align 8, !dbg !2587
  %12 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2588
  %13 = load i32, i32* %tnum, align 4, !dbg !2590
  %idxprom10 = sext i32 %13 to i64, !dbg !2588
  %arrayidx11 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %12, i64 %idxprom10, !dbg !2588
  %rate12 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx11, i32 0, i32 3, !dbg !2591
  %14 = load i64, i64* %rate12, align 8, !dbg !2591
  %15 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2592
  %16 = load i32, i32* %tnum, align 4, !dbg !2593
  %idxprom13 = sext i32 %16 to i64, !dbg !2592
  %arrayidx14 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %15, i64 %idxprom13, !dbg !2592
  %max_limit = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx14, i32 0, i32 1, !dbg !2594
  %17 = load i64, i64* %max_limit, align 8, !dbg !2594
  %cmp15 = icmp sgt i64 %14, %17, !dbg !2595
  br i1 %cmp15, label %land.lhs.true, label %if.end51, !dbg !2596

land.lhs.true:                                    ; preds = %for.body
  %18 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2597
  %19 = load i32, i32* %tnum, align 4, !dbg !2598
  %idxprom16 = sext i32 %19 to i64, !dbg !2597
  %arrayidx17 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %18, i64 %idxprom16, !dbg !2597
  %num_sending = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx17, i32 0, i32 5, !dbg !2599
  %20 = load i32, i32* %num_sending, align 8, !dbg !2599
  %cmp18 = icmp ne i32 %20, 0, !dbg !2600
  br i1 %cmp18, label %if.then, label %if.end51, !dbg !2601

if.then:                                          ; preds = %land.lhs.true
  %21 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2602
  %22 = load i32, i32* %tnum, align 4, !dbg !2605
  %idxprom19 = sext i32 %22 to i64, !dbg !2602
  %arrayidx20 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %21, i64 %idxprom19, !dbg !2602
  %rate21 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx20, i32 0, i32 3, !dbg !2606
  %23 = load i64, i64* %rate21, align 8, !dbg !2606
  %24 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2607
  %25 = load i32, i32* %tnum, align 4, !dbg !2608
  %idxprom22 = sext i32 %25 to i64, !dbg !2607
  %arrayidx23 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %24, i64 %idxprom22, !dbg !2607
  %max_limit24 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx23, i32 0, i32 1, !dbg !2609
  %26 = load i64, i64* %max_limit24, align 8, !dbg !2609
  %mul25 = mul nsw i64 %26, 2, !dbg !2610
  %cmp26 = icmp sgt i64 %23, %mul25, !dbg !2611
  br i1 %cmp26, label %if.then27, label %if.else, !dbg !2612

if.then27:                                        ; preds = %if.then
  %27 = load i32, i32* %tnum, align 4, !dbg !2613
  %28 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2614
  %29 = load i32, i32* %tnum, align 4, !dbg !2615
  %idxprom28 = sext i32 %29 to i64, !dbg !2614
  %arrayidx29 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %28, i64 %idxprom28, !dbg !2614
  %pattern = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx29, i32 0, i32 0, !dbg !2616
  %30 = load i8*, i8** %pattern, align 8, !dbg !2616
  %31 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2617
  %32 = load i32, i32* %tnum, align 4, !dbg !2618
  %idxprom30 = sext i32 %32 to i64, !dbg !2617
  %arrayidx31 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %31, i64 %idxprom30, !dbg !2617
  %rate32 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx31, i32 0, i32 3, !dbg !2619
  %33 = load i64, i64* %rate32, align 8, !dbg !2619
  %34 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2620
  %35 = load i32, i32* %tnum, align 4, !dbg !2621
  %idxprom33 = sext i32 %35 to i64, !dbg !2620
  %arrayidx34 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %34, i64 %idxprom33, !dbg !2620
  %max_limit35 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx34, i32 0, i32 1, !dbg !2622
  %36 = load i64, i64* %max_limit35, align 8, !dbg !2622
  %37 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2623
  %38 = load i32, i32* %tnum, align 4, !dbg !2624
  %idxprom36 = sext i32 %38 to i64, !dbg !2623
  %arrayidx37 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %37, i64 %idxprom36, !dbg !2623
  %num_sending38 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx37, i32 0, i32 5, !dbg !2625
  %39 = load i32, i32* %num_sending38, align 8, !dbg !2625
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.127, i64 0, i64 0), i32 %27, i8* %30, i64 %33, i64 %36, i32 %39), !dbg !2626
  br label %if.end, !dbg !2626

if.else:                                          ; preds = %if.then
  %40 = load i32, i32* %tnum, align 4, !dbg !2627
  %41 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2628
  %42 = load i32, i32* %tnum, align 4, !dbg !2629
  %idxprom39 = sext i32 %42 to i64, !dbg !2628
  %arrayidx40 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %41, i64 %idxprom39, !dbg !2628
  %pattern41 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx40, i32 0, i32 0, !dbg !2630
  %43 = load i8*, i8** %pattern41, align 8, !dbg !2630
  %44 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2631
  %45 = load i32, i32* %tnum, align 4, !dbg !2632
  %idxprom42 = sext i32 %45 to i64, !dbg !2631
  %arrayidx43 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %44, i64 %idxprom42, !dbg !2631
  %rate44 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx43, i32 0, i32 3, !dbg !2633
  %46 = load i64, i64* %rate44, align 8, !dbg !2633
  %47 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2634
  %48 = load i32, i32* %tnum, align 4, !dbg !2635
  %idxprom45 = sext i32 %48 to i64, !dbg !2634
  %arrayidx46 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %47, i64 %idxprom45, !dbg !2634
  %max_limit47 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx46, i32 0, i32 1, !dbg !2636
  %49 = load i64, i64* %max_limit47, align 8, !dbg !2636
  %50 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2637
  %51 = load i32, i32* %tnum, align 4, !dbg !2638
  %idxprom48 = sext i32 %51 to i64, !dbg !2637
  %arrayidx49 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %50, i64 %idxprom48, !dbg !2637
  %num_sending50 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx49, i32 0, i32 5, !dbg !2639
  %52 = load i32, i32* %num_sending50, align 8, !dbg !2639
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.128, i64 0, i64 0), i32 %40, i8* %43, i64 %46, i64 %49, i32 %52), !dbg !2640
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then27
  br label %if.end51, !dbg !2641

if.end51:                                         ; preds = %if.end, %land.lhs.true, %for.body
  %53 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2642
  %54 = load i32, i32* %tnum, align 4, !dbg !2644
  %idxprom52 = sext i32 %54 to i64, !dbg !2642
  %arrayidx53 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %53, i64 %idxprom52, !dbg !2642
  %rate54 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx53, i32 0, i32 3, !dbg !2645
  %55 = load i64, i64* %rate54, align 8, !dbg !2645
  %56 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2646
  %57 = load i32, i32* %tnum, align 4, !dbg !2647
  %idxprom55 = sext i32 %57 to i64, !dbg !2646
  %arrayidx56 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %56, i64 %idxprom55, !dbg !2646
  %min_limit = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx56, i32 0, i32 2, !dbg !2648
  %58 = load i64, i64* %min_limit, align 8, !dbg !2648
  %cmp57 = icmp slt i64 %55, %58, !dbg !2649
  br i1 %cmp57, label %land.lhs.true58, label %if.end76, !dbg !2650

land.lhs.true58:                                  ; preds = %if.end51
  %59 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2651
  %60 = load i32, i32* %tnum, align 4, !dbg !2652
  %idxprom59 = sext i32 %60 to i64, !dbg !2651
  %arrayidx60 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %59, i64 %idxprom59, !dbg !2651
  %num_sending61 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx60, i32 0, i32 5, !dbg !2653
  %61 = load i32, i32* %num_sending61, align 8, !dbg !2653
  %cmp62 = icmp ne i32 %61, 0, !dbg !2654
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !2655

if.then63:                                        ; preds = %land.lhs.true58
  %62 = load i32, i32* %tnum, align 4, !dbg !2656
  %63 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2658
  %64 = load i32, i32* %tnum, align 4, !dbg !2659
  %idxprom64 = sext i32 %64 to i64, !dbg !2658
  %arrayidx65 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %63, i64 %idxprom64, !dbg !2658
  %pattern66 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx65, i32 0, i32 0, !dbg !2660
  %65 = load i8*, i8** %pattern66, align 8, !dbg !2660
  %66 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2661
  %67 = load i32, i32* %tnum, align 4, !dbg !2662
  %idxprom67 = sext i32 %67 to i64, !dbg !2661
  %arrayidx68 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %66, i64 %idxprom67, !dbg !2661
  %rate69 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx68, i32 0, i32 3, !dbg !2663
  %68 = load i64, i64* %rate69, align 8, !dbg !2663
  %69 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2664
  %70 = load i32, i32* %tnum, align 4, !dbg !2665
  %idxprom70 = sext i32 %70 to i64, !dbg !2664
  %arrayidx71 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %69, i64 %idxprom70, !dbg !2664
  %min_limit72 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx71, i32 0, i32 2, !dbg !2666
  %71 = load i64, i64* %min_limit72, align 8, !dbg !2666
  %72 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2667
  %73 = load i32, i32* %tnum, align 4, !dbg !2668
  %idxprom73 = sext i32 %73 to i64, !dbg !2667
  %arrayidx74 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %72, i64 %idxprom73, !dbg !2667
  %num_sending75 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx74, i32 0, i32 5, !dbg !2669
  %74 = load i32, i32* %num_sending75, align 8, !dbg !2669
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.129, i64 0, i64 0), i32 %62, i8* %65, i64 %68, i64 %71, i32 %74), !dbg !2670
  br label %if.end76, !dbg !2671

if.end76:                                         ; preds = %if.then63, %land.lhs.true58, %if.end51
  br label %for.inc, !dbg !2672

for.inc:                                          ; preds = %if.end76
  %75 = load i32, i32* %tnum, align 4, !dbg !2673
  %inc = add nsw i32 %75, 1, !dbg !2673
  store i32 %inc, i32* %tnum, align 4, !dbg !2673
  br label %for.cond, !dbg !2674, !llvm.loop !2675

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cnum, align 4, !dbg !2677
  br label %for.cond77, !dbg !2679

for.cond77:                                       ; preds = %for.inc115, %for.end
  %76 = load i32, i32* %cnum, align 4, !dbg !2680
  %77 = load i32, i32* @max_connects, align 4, !dbg !2682
  %cmp78 = icmp slt i32 %76, %77, !dbg !2683
  br i1 %cmp78, label %for.body79, label %for.end117, !dbg !2684

for.body79:                                       ; preds = %for.cond77
  %78 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !2685
  %79 = load i32, i32* %cnum, align 4, !dbg !2687
  %idxprom80 = sext i32 %79 to i64, !dbg !2685
  %arrayidx81 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %78, i64 %idxprom80, !dbg !2685
  store %struct.connecttab* %arrayidx81, %struct.connecttab** %c, align 8, !dbg !2688
  %80 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2689
  %conn_state = getelementptr inbounds %struct.connecttab, %struct.connecttab* %80, i32 0, i32 0, !dbg !2691
  %81 = load i32, i32* %conn_state, align 8, !dbg !2691
  %cmp82 = icmp eq i32 %81, 2, !dbg !2692
  br i1 %cmp82, label %if.then85, label %lor.lhs.false, !dbg !2693

lor.lhs.false:                                    ; preds = %for.body79
  %82 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2694
  %conn_state83 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %82, i32 0, i32 0, !dbg !2695
  %83 = load i32, i32* %conn_state83, align 8, !dbg !2695
  %cmp84 = icmp eq i32 %83, 3, !dbg !2696
  br i1 %cmp84, label %if.then85, label %if.end114, !dbg !2697

if.then85:                                        ; preds = %lor.lhs.false, %for.body79
  %84 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2698
  %max_limit86 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %84, i32 0, i32 5, !dbg !2700
  store i64 -1, i64* %max_limit86, align 8, !dbg !2701
  store i32 0, i32* %tind, align 4, !dbg !2702
  br label %for.cond87, !dbg !2704

for.cond87:                                       ; preds = %for.inc111, %if.then85
  %85 = load i32, i32* %tind, align 4, !dbg !2705
  %86 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2707
  %numtnums = getelementptr inbounds %struct.connecttab, %struct.connecttab* %86, i32 0, i32 4, !dbg !2708
  %87 = load i32, i32* %numtnums, align 8, !dbg !2708
  %cmp88 = icmp slt i32 %85, %87, !dbg !2709
  br i1 %cmp88, label %for.body89, label %for.end113, !dbg !2710

for.body89:                                       ; preds = %for.cond87
  %88 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2711
  %tnums = getelementptr inbounds %struct.connecttab, %struct.connecttab* %88, i32 0, i32 3, !dbg !2713
  %89 = load i32, i32* %tind, align 4, !dbg !2714
  %idxprom90 = sext i32 %89 to i64, !dbg !2711
  %arrayidx91 = getelementptr inbounds [10 x i32], [10 x i32]* %tnums, i64 0, i64 %idxprom90, !dbg !2711
  %90 = load i32, i32* %arrayidx91, align 4, !dbg !2711
  store i32 %90, i32* %tnum, align 4, !dbg !2715
  %91 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2716
  %92 = load i32, i32* %tnum, align 4, !dbg !2717
  %idxprom92 = sext i32 %92 to i64, !dbg !2716
  %arrayidx93 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %91, i64 %idxprom92, !dbg !2716
  %max_limit94 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx93, i32 0, i32 1, !dbg !2718
  %93 = load i64, i64* %max_limit94, align 8, !dbg !2718
  %94 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !2719
  %95 = load i32, i32* %tnum, align 4, !dbg !2720
  %idxprom95 = sext i32 %95 to i64, !dbg !2719
  %arrayidx96 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %94, i64 %idxprom95, !dbg !2719
  %num_sending97 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx96, i32 0, i32 5, !dbg !2721
  %96 = load i32, i32* %num_sending97, align 8, !dbg !2721
  %conv = sext i32 %96 to i64, !dbg !2719
  %div98 = sdiv i64 %93, %conv, !dbg !2722
  store i64 %div98, i64* %l, align 8, !dbg !2723
  %97 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2724
  %max_limit99 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %97, i32 0, i32 5, !dbg !2726
  %98 = load i64, i64* %max_limit99, align 8, !dbg !2726
  %cmp100 = icmp eq i64 %98, -1, !dbg !2727
  br i1 %cmp100, label %if.then102, label %if.else104, !dbg !2728

if.then102:                                       ; preds = %for.body89
  %99 = load i64, i64* %l, align 8, !dbg !2729
  %100 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2730
  %max_limit103 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %100, i32 0, i32 5, !dbg !2731
  store i64 %99, i64* %max_limit103, align 8, !dbg !2732
  br label %if.end110, !dbg !2730

if.else104:                                       ; preds = %for.body89
  %101 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2733
  %max_limit105 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %101, i32 0, i32 5, !dbg !2733
  %102 = load i64, i64* %max_limit105, align 8, !dbg !2733
  %103 = load i64, i64* %l, align 8, !dbg !2733
  %cmp106 = icmp slt i64 %102, %103, !dbg !2733
  br i1 %cmp106, label %cond.true, label %cond.false, !dbg !2733

cond.true:                                        ; preds = %if.else104
  %104 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2733
  %max_limit108 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %104, i32 0, i32 5, !dbg !2733
  %105 = load i64, i64* %max_limit108, align 8, !dbg !2733
  br label %cond.end, !dbg !2733

cond.false:                                       ; preds = %if.else104
  %106 = load i64, i64* %l, align 8, !dbg !2733
  br label %cond.end, !dbg !2733

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %105, %cond.true ], [ %106, %cond.false ], !dbg !2733
  %107 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2734
  %max_limit109 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %107, i32 0, i32 5, !dbg !2735
  store i64 %cond, i64* %max_limit109, align 8, !dbg !2736
  br label %if.end110

if.end110:                                        ; preds = %cond.end, %if.then102
  br label %for.inc111, !dbg !2737

for.inc111:                                       ; preds = %if.end110
  %108 = load i32, i32* %tind, align 4, !dbg !2738
  %inc112 = add nsw i32 %108, 1, !dbg !2738
  store i32 %inc112, i32* %tind, align 4, !dbg !2738
  br label %for.cond87, !dbg !2739, !llvm.loop !2740

for.end113:                                       ; preds = %for.cond87
  br label %if.end114, !dbg !2742

if.end114:                                        ; preds = %for.end113, %lor.lhs.false
  br label %for.inc115, !dbg !2743

for.inc115:                                       ; preds = %if.end114
  %109 = load i32, i32* %cnum, align 4, !dbg !2744
  %inc116 = add nsw i32 %109, 1, !dbg !2744
  store i32 %inc116, i32* %cnum, align 4, !dbg !2744
  br label %for.cond77, !dbg !2745, !llvm.loop !2746

for.end117:                                       ; preds = %for.cond77
  ret void, !dbg !2748
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @show_stats(i8* %client_data.coerce, %struct.timeval* %nowP) #0 !dbg !2749 {
entry:
  %client_data = alloca %union.ClientData, align 8
  %nowP.addr = alloca %struct.timeval*, align 8
  %coerce.dive = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0
  store i8* %client_data.coerce, i8** %coerce.dive, align 8
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !2750, metadata !DIExpression()), !dbg !2751
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !2752, metadata !DIExpression()), !dbg !2753
  %0 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !2754
  call void @logstats(%struct.timeval* %0), !dbg !2755
  ret void, !dbg !2756
}

declare i64 @time(i64*) #3

declare i32 @setgroups(i32, i32*) #3

declare i32 @setgid(i32) #3

declare i32 @initgroups(i8*, i32) #3

declare i32 @setlogin(i8*) #3

declare i32 @setuid(i32) #3

; Function Attrs: allocsize(0)
declare i8* @malloc(i64) #7

declare void @fdwatch_add_fd(i32, i8*, i32) #3

declare i32 @gettimeofday(%struct.timeval*, i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @re_open_logfile() #0 !dbg !2757 {
entry:
  %logfp = alloca %struct.__sFILE*, align 8
  call void @llvm.dbg.declare(metadata %struct.__sFILE** %logfp, metadata !2760, metadata !DIExpression()), !dbg !2761
  %0 = load i32, i32* @no_log, align 4, !dbg !2762
  %tobool = icmp ne i32 %0, 0, !dbg !2762
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !2764

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !2765
  %cmp = icmp eq %struct.httpd_server* %1, null, !dbg !2766
  br i1 %cmp, label %if.then, label %if.end, !dbg !2767

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end10, !dbg !2768

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i8*, i8** @logfile, align 8, !dbg !2769
  %cmp1 = icmp ne i8* %2, null, !dbg !2771
  br i1 %cmp1, label %land.lhs.true, label %if.end10, !dbg !2772

land.lhs.true:                                    ; preds = %if.end
  %3 = load i8*, i8** @logfile, align 8, !dbg !2773
  %call = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)), !dbg !2774
  %cmp2 = icmp ne i32 %call, 0, !dbg !2775
  br i1 %cmp2, label %if.then3, label %if.end10, !dbg !2776

if.then3:                                         ; preds = %land.lhs.true
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i64 0, i64 0)), !dbg !2777
  %4 = load i8*, i8** @logfile, align 8, !dbg !2779
  %call4 = call %struct.__sFILE* @"\01_fopen"(i8* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)), !dbg !2780
  store %struct.__sFILE* %call4, %struct.__sFILE** %logfp, align 8, !dbg !2781
  %5 = load %struct.__sFILE*, %struct.__sFILE** %logfp, align 8, !dbg !2782
  %cmp5 = icmp eq %struct.__sFILE* %5, null, !dbg !2784
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !2785

if.then6:                                         ; preds = %if.then3
  %6 = load i8*, i8** @logfile, align 8, !dbg !2786
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i64 0, i64 0), i8* %6), !dbg !2788
  br label %if.end10, !dbg !2789

if.end7:                                          ; preds = %if.then3
  %7 = load %struct.__sFILE*, %struct.__sFILE** %logfp, align 8, !dbg !2790
  %call8 = call i32 @fileno(%struct.__sFILE* %7), !dbg !2791
  %call9 = call i32 (i32, i32, ...) @"\01_fcntl"(i32 %call8, i32 2, i32 1), !dbg !2792
  %8 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !2793
  %9 = load %struct.__sFILE*, %struct.__sFILE** %logfp, align 8, !dbg !2794
  call void @httpd_set_logfp(%struct.httpd_server* %8, %struct.__sFILE* %9), !dbg !2795
  br label %if.end10, !dbg !2796

if.end10:                                         ; preds = %if.then, %if.then6, %if.end7, %land.lhs.true, %if.end
  ret void, !dbg !2797
}

declare i64 @tmr_mstimeout(%struct.timeval*) #3

declare i32 @fdwatch(i64) #3

declare i32* @__error() #3

declare void @tmr_run(%struct.timeval*) #3

declare i32 @fdwatch_check_fd(i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @handle_newconnect(%struct.timeval* %tvP, i32 %listen_fd) #0 !dbg !2798 {
entry:
  %retval = alloca i32, align 4
  %tvP.addr = alloca %struct.timeval*, align 8
  %listen_fd.addr = alloca i32, align 4
  %c = alloca %struct.connecttab*, align 8
  %client_data = alloca %union.ClientData, align 8
  store %struct.timeval* %tvP, %struct.timeval** %tvP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %tvP.addr, metadata !2801, metadata !DIExpression()), !dbg !2802
  store i32 %listen_fd, i32* %listen_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %listen_fd.addr, metadata !2803, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c, metadata !2805, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !2807, metadata !DIExpression()), !dbg !2808
  br label %for.cond, !dbg !2809

for.cond:                                         ; preds = %if.end28, %entry
  %0 = load i32, i32* @num_connects, align 4, !dbg !2810
  %1 = load i32, i32* @max_connects, align 4, !dbg !2815
  %cmp = icmp sge i32 %0, %1, !dbg !2816
  br i1 %cmp, label %if.then, label %if.end, !dbg !2817

if.then:                                          ; preds = %for.cond
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.120, i64 0, i64 0)), !dbg !2818
  %2 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !2820
  call void @tmr_run(%struct.timeval* %2), !dbg !2821
  store i32 0, i32* %retval, align 4, !dbg !2822
  br label %return, !dbg !2822

if.end:                                           ; preds = %for.cond
  %3 = load i32, i32* @first_free_connect, align 4, !dbg !2823
  %cmp1 = icmp eq i32 %3, -1, !dbg !2825
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !2826

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !2827
  %5 = load i32, i32* @first_free_connect, align 4, !dbg !2828
  %idxprom = sext i32 %5 to i64, !dbg !2827
  %arrayidx = getelementptr inbounds %struct.connecttab, %struct.connecttab* %4, i64 %idxprom, !dbg !2827
  %conn_state = getelementptr inbounds %struct.connecttab, %struct.connecttab* %arrayidx, i32 0, i32 0, !dbg !2829
  %6 = load i32, i32* %conn_state, align 8, !dbg !2829
  %cmp2 = icmp ne i32 %6, 0, !dbg !2830
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2831

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.121, i64 0, i64 0)), !dbg !2832
  call void @exit(i32 1) #13, !dbg !2834
  unreachable, !dbg !2834

if.end4:                                          ; preds = %lor.lhs.false
  %7 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !2835
  %8 = load i32, i32* @first_free_connect, align 4, !dbg !2836
  %idxprom5 = sext i32 %8 to i64, !dbg !2835
  %arrayidx6 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %7, i64 %idxprom5, !dbg !2835
  store %struct.connecttab* %arrayidx6, %struct.connecttab** %c, align 8, !dbg !2837
  %9 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2838
  %hc = getelementptr inbounds %struct.connecttab, %struct.connecttab* %9, i32 0, i32 2, !dbg !2840
  %10 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !2840
  %cmp7 = icmp eq %struct.httpd_conn* %10, null, !dbg !2841
  br i1 %cmp7, label %if.then8, label %if.end15, !dbg !2842

if.then8:                                         ; preds = %if.end4
  %call = call i8* @malloc(i64 720) #15, !dbg !2843
  %11 = bitcast i8* %call to %struct.httpd_conn*, !dbg !2843
  %12 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2845
  %hc9 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %12, i32 0, i32 2, !dbg !2846
  store %struct.httpd_conn* %11, %struct.httpd_conn** %hc9, align 8, !dbg !2847
  %13 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2848
  %hc10 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %13, i32 0, i32 2, !dbg !2850
  %14 = load %struct.httpd_conn*, %struct.httpd_conn** %hc10, align 8, !dbg !2850
  %cmp11 = icmp eq %struct.httpd_conn* %14, null, !dbg !2851
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !2852

if.then12:                                        ; preds = %if.then8
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.122, i64 0, i64 0)), !dbg !2853
  call void @exit(i32 1) #13, !dbg !2855
  unreachable, !dbg !2855

if.end13:                                         ; preds = %if.then8
  %15 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2856
  %hc14 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %15, i32 0, i32 2, !dbg !2857
  %16 = load %struct.httpd_conn*, %struct.httpd_conn** %hc14, align 8, !dbg !2857
  %initialized = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %16, i32 0, i32 0, !dbg !2858
  store i32 0, i32* %initialized, align 8, !dbg !2859
  %17 = load i32, i32* @httpd_conn_count, align 4, !dbg !2860
  %inc = add nsw i32 %17, 1, !dbg !2860
  store i32 %inc, i32* @httpd_conn_count, align 4, !dbg !2860
  br label %if.end15, !dbg !2861

if.end15:                                         ; preds = %if.end13, %if.end4
  %18 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !2862
  %19 = load i32, i32* %listen_fd.addr, align 4, !dbg !2863
  %20 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2864
  %hc16 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %20, i32 0, i32 2, !dbg !2865
  %21 = load %struct.httpd_conn*, %struct.httpd_conn** %hc16, align 8, !dbg !2865
  %call17 = call i32 @httpd_get_conn(%struct.httpd_server* %18, i32 %19, %struct.httpd_conn* %21), !dbg !2866
  switch i32 %call17, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb18
  ], !dbg !2867

sw.bb:                                            ; preds = %if.end15
  %22 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !2868
  call void @tmr_run(%struct.timeval* %22), !dbg !2870
  store i32 0, i32* %retval, align 4, !dbg !2871
  br label %return, !dbg !2871

sw.bb18:                                          ; preds = %if.end15
  store i32 1, i32* %retval, align 4, !dbg !2872
  br label %return, !dbg !2872

sw.epilog:                                        ; preds = %if.end15
  %23 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2873
  %conn_state19 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %23, i32 0, i32 0, !dbg !2874
  store i32 1, i32* %conn_state19, align 8, !dbg !2875
  %24 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2876
  %next_free_connect = getelementptr inbounds %struct.connecttab, %struct.connecttab* %24, i32 0, i32 1, !dbg !2877
  %25 = load i32, i32* %next_free_connect, align 4, !dbg !2877
  store i32 %25, i32* @first_free_connect, align 4, !dbg !2878
  %26 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2879
  %next_free_connect20 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %26, i32 0, i32 1, !dbg !2880
  store i32 -1, i32* %next_free_connect20, align 4, !dbg !2881
  %27 = load i32, i32* @num_connects, align 4, !dbg !2882
  %inc21 = add nsw i32 %27, 1, !dbg !2882
  store i32 %inc21, i32* @num_connects, align 4, !dbg !2882
  %28 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2883
  %29 = bitcast %struct.connecttab* %28 to i8*, !dbg !2883
  %p = bitcast %union.ClientData* %client_data to i8**, !dbg !2884
  store i8* %29, i8** %p, align 8, !dbg !2885
  %30 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !2886
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %30, i32 0, i32 0, !dbg !2887
  %31 = load i64, i64* %tv_sec, align 8, !dbg !2887
  %32 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2888
  %active_at = getelementptr inbounds %struct.connecttab, %struct.connecttab* %32, i32 0, i32 8, !dbg !2889
  store i64 %31, i64* %active_at, align 8, !dbg !2890
  %33 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2891
  %wakeup_timer = getelementptr inbounds %struct.connecttab, %struct.connecttab* %33, i32 0, i32 9, !dbg !2892
  store %struct.TimerStruct* null, %struct.TimerStruct** %wakeup_timer, align 8, !dbg !2893
  %34 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2894
  %linger_timer = getelementptr inbounds %struct.connecttab, %struct.connecttab* %34, i32 0, i32 10, !dbg !2895
  store %struct.TimerStruct* null, %struct.TimerStruct** %linger_timer, align 8, !dbg !2896
  %35 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2897
  %next_byte_index = getelementptr inbounds %struct.connecttab, %struct.connecttab* %35, i32 0, i32 14, !dbg !2898
  store i64 0, i64* %next_byte_index, align 8, !dbg !2899
  %36 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2900
  %numtnums = getelementptr inbounds %struct.connecttab, %struct.connecttab* %36, i32 0, i32 4, !dbg !2901
  store i32 0, i32* %numtnums, align 8, !dbg !2902
  %37 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2903
  %hc22 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %37, i32 0, i32 2, !dbg !2904
  %38 = load %struct.httpd_conn*, %struct.httpd_conn** %hc22, align 8, !dbg !2904
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %38, i32 0, i32 60, !dbg !2905
  %39 = load i32, i32* %conn_fd, align 8, !dbg !2905
  call void @httpd_set_ndelay(i32 %39), !dbg !2906
  %40 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2907
  %hc23 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %40, i32 0, i32 2, !dbg !2908
  %41 = load %struct.httpd_conn*, %struct.httpd_conn** %hc23, align 8, !dbg !2908
  %conn_fd24 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %41, i32 0, i32 60, !dbg !2909
  %42 = load i32, i32* %conn_fd24, align 8, !dbg !2909
  %43 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !2910
  %44 = bitcast %struct.connecttab* %43 to i8*, !dbg !2910
  call void @fdwatch_add_fd(i32 %42, i8* %44, i32 0), !dbg !2911
  %45 = load i64, i64* @stats_connections, align 8, !dbg !2912
  %inc25 = add nsw i64 %45, 1, !dbg !2912
  store i64 %inc25, i64* @stats_connections, align 8, !dbg !2912
  %46 = load i32, i32* @num_connects, align 4, !dbg !2913
  %47 = load i32, i32* @stats_simultaneous, align 4, !dbg !2915
  %cmp26 = icmp sgt i32 %46, %47, !dbg !2916
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !2917

if.then27:                                        ; preds = %sw.epilog
  %48 = load i32, i32* @num_connects, align 4, !dbg !2918
  store i32 %48, i32* @stats_simultaneous, align 4, !dbg !2919
  br label %if.end28, !dbg !2920

if.end28:                                         ; preds = %if.then27, %sw.epilog
  br label %for.cond, !dbg !2921, !llvm.loop !2922

return:                                           ; preds = %sw.bb18, %sw.bb, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !2925
  ret i32 %49, !dbg !2925
}

declare i8* @fdwatch_get_next_client_data() #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @clear_connection(%struct.connecttab* %c, %struct.timeval* %tvP) #0 !dbg !2926 {
entry:
  %c.addr = alloca %struct.connecttab*, align 8
  %tvP.addr = alloca %struct.timeval*, align 8
  %client_data = alloca %union.ClientData, align 8
  store %struct.connecttab* %c, %struct.connecttab** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c.addr, metadata !2929, metadata !DIExpression()), !dbg !2930
  store %struct.timeval* %tvP, %struct.timeval** %tvP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %tvP.addr, metadata !2931, metadata !DIExpression()), !dbg !2932
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !2933, metadata !DIExpression()), !dbg !2934
  %0 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2935
  %wakeup_timer = getelementptr inbounds %struct.connecttab, %struct.connecttab* %0, i32 0, i32 9, !dbg !2937
  %1 = load %struct.TimerStruct*, %struct.TimerStruct** %wakeup_timer, align 8, !dbg !2937
  %cmp = icmp ne %struct.TimerStruct* %1, null, !dbg !2938
  br i1 %cmp, label %if.then, label %if.end, !dbg !2939

if.then:                                          ; preds = %entry
  %2 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2940
  %wakeup_timer1 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %2, i32 0, i32 9, !dbg !2942
  %3 = load %struct.TimerStruct*, %struct.TimerStruct** %wakeup_timer1, align 8, !dbg !2942
  call void @tmr_cancel(%struct.TimerStruct* %3), !dbg !2943
  %4 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2944
  %wakeup_timer2 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %4, i32 0, i32 9, !dbg !2945
  store %struct.TimerStruct* null, %struct.TimerStruct** %wakeup_timer2, align 8, !dbg !2946
  br label %if.end, !dbg !2947

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2948
  %conn_state = getelementptr inbounds %struct.connecttab, %struct.connecttab* %5, i32 0, i32 0, !dbg !2950
  %6 = load i32, i32* %conn_state, align 8, !dbg !2950
  %cmp3 = icmp eq i32 %6, 4, !dbg !2951
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !2952

if.then4:                                         ; preds = %if.end
  %7 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2953
  %linger_timer = getelementptr inbounds %struct.connecttab, %struct.connecttab* %7, i32 0, i32 10, !dbg !2955
  %8 = load %struct.TimerStruct*, %struct.TimerStruct** %linger_timer, align 8, !dbg !2955
  call void @tmr_cancel(%struct.TimerStruct* %8), !dbg !2956
  %9 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2957
  %linger_timer5 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %9, i32 0, i32 10, !dbg !2958
  store %struct.TimerStruct* null, %struct.TimerStruct** %linger_timer5, align 8, !dbg !2959
  %10 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2960
  %hc = getelementptr inbounds %struct.connecttab, %struct.connecttab* %10, i32 0, i32 2, !dbg !2961
  %11 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !2961
  %should_linger = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %11, i32 0, i32 58, !dbg !2962
  store i32 0, i32* %should_linger, align 4, !dbg !2963
  br label %if.end6, !dbg !2964

if.end6:                                          ; preds = %if.then4, %if.end
  %12 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2965
  %hc7 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %12, i32 0, i32 2, !dbg !2967
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc7, align 8, !dbg !2967
  %should_linger8 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 58, !dbg !2968
  %14 = load i32, i32* %should_linger8, align 4, !dbg !2968
  %tobool = icmp ne i32 %14, 0, !dbg !2965
  br i1 %tobool, label %if.then9, label %if.else, !dbg !2969

if.then9:                                         ; preds = %if.end6
  %15 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2970
  %conn_state10 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %15, i32 0, i32 0, !dbg !2973
  %16 = load i32, i32* %conn_state10, align 8, !dbg !2973
  %cmp11 = icmp ne i32 %16, 3, !dbg !2974
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !2975

if.then12:                                        ; preds = %if.then9
  %17 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2976
  %hc13 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %17, i32 0, i32 2, !dbg !2977
  %18 = load %struct.httpd_conn*, %struct.httpd_conn** %hc13, align 8, !dbg !2977
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %18, i32 0, i32 60, !dbg !2978
  %19 = load i32, i32* %conn_fd, align 8, !dbg !2978
  call void @fdwatch_del_fd(i32 %19), !dbg !2979
  br label %if.end14, !dbg !2979

if.end14:                                         ; preds = %if.then12, %if.then9
  %20 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2980
  %conn_state15 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %20, i32 0, i32 0, !dbg !2981
  store i32 4, i32* %conn_state15, align 8, !dbg !2982
  %21 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2983
  %hc16 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %21, i32 0, i32 2, !dbg !2984
  %22 = load %struct.httpd_conn*, %struct.httpd_conn** %hc16, align 8, !dbg !2984
  %conn_fd17 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %22, i32 0, i32 60, !dbg !2985
  %23 = load i32, i32* %conn_fd17, align 8, !dbg !2985
  %call = call i32 @shutdown(i32 %23, i32 1), !dbg !2986
  %24 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2987
  %hc18 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %24, i32 0, i32 2, !dbg !2988
  %25 = load %struct.httpd_conn*, %struct.httpd_conn** %hc18, align 8, !dbg !2988
  %conn_fd19 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %25, i32 0, i32 60, !dbg !2989
  %26 = load i32, i32* %conn_fd19, align 8, !dbg !2989
  %27 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2990
  %28 = bitcast %struct.connecttab* %27 to i8*, !dbg !2990
  call void @fdwatch_add_fd(i32 %26, i8* %28, i32 0), !dbg !2991
  %29 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2992
  %30 = bitcast %struct.connecttab* %29 to i8*, !dbg !2992
  %p = bitcast %union.ClientData* %client_data to i8**, !dbg !2993
  store i8* %30, i8** %p, align 8, !dbg !2994
  %31 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !2995
  %linger_timer20 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %31, i32 0, i32 10, !dbg !2997
  %32 = load %struct.TimerStruct*, %struct.TimerStruct** %linger_timer20, align 8, !dbg !2997
  %cmp21 = icmp ne %struct.TimerStruct* %32, null, !dbg !2998
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !2999

if.then22:                                        ; preds = %if.end14
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.130, i64 0, i64 0)), !dbg !3000
  br label %if.end23, !dbg !3000

if.end23:                                         ; preds = %if.then22, %if.end14
  %33 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3001
  %coerce.dive = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0, !dbg !3002
  %34 = load i8*, i8** %coerce.dive, align 8, !dbg !3002
  %call24 = call %struct.TimerStruct* @tmr_create(%struct.timeval* %33, void (i8*, %struct.timeval*)* @linger_clear_connection, i8* %34, i64 500, i32 0), !dbg !3002
  %35 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3003
  %linger_timer25 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %35, i32 0, i32 10, !dbg !3004
  store %struct.TimerStruct* %call24, %struct.TimerStruct** %linger_timer25, align 8, !dbg !3005
  %36 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3006
  %linger_timer26 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %36, i32 0, i32 10, !dbg !3008
  %37 = load %struct.TimerStruct*, %struct.TimerStruct** %linger_timer26, align 8, !dbg !3008
  %cmp27 = icmp eq %struct.TimerStruct* %37, null, !dbg !3009
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !3010

if.then28:                                        ; preds = %if.end23
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.131, i64 0, i64 0)), !dbg !3011
  call void @exit(i32 1) #13, !dbg !3013
  unreachable, !dbg !3013

if.end29:                                         ; preds = %if.end23
  br label %if.end30, !dbg !3014

if.else:                                          ; preds = %if.end6
  %38 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3015
  %39 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3016
  call void @really_clear_connection(%struct.connecttab* %38, %struct.timeval* %39), !dbg !3017
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.end29
  ret void, !dbg !3018
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_read(%struct.connecttab* %c, %struct.timeval* %tvP) #0 !dbg !3019 {
entry:
  %c.addr = alloca %struct.connecttab*, align 8
  %tvP.addr = alloca %struct.timeval*, align 8
  %sz = alloca i32, align 4
  %client_data = alloca %union.ClientData, align 8
  %hc = alloca %struct.httpd_conn*, align 8
  %tind = alloca i32, align 4
  store %struct.connecttab* %c, %struct.connecttab** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c.addr, metadata !3020, metadata !DIExpression()), !dbg !3021
  store %struct.timeval* %tvP, %struct.timeval** %tvP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %tvP.addr, metadata !3022, metadata !DIExpression()), !dbg !3023
  call void @llvm.dbg.declare(metadata i32* %sz, metadata !3024, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !3026, metadata !DIExpression()), !dbg !3027
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc, metadata !3028, metadata !DIExpression()), !dbg !3029
  %0 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3030
  %hc1 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %0, i32 0, i32 2, !dbg !3031
  %1 = load %struct.httpd_conn*, %struct.httpd_conn** %hc1, align 8, !dbg !3031
  store %struct.httpd_conn* %1, %struct.httpd_conn** %hc, align 8, !dbg !3029
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3032
  %read_idx = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 5, !dbg !3034
  %3 = load i64, i64* %read_idx, align 8, !dbg !3034
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3035
  %read_size = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %4, i32 0, i32 4, !dbg !3036
  %5 = load i64, i64* %read_size, align 8, !dbg !3036
  %cmp = icmp uge i64 %3, %5, !dbg !3037
  br i1 %cmp, label %if.then, label %if.end7, !dbg !3038

if.then:                                          ; preds = %entry
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3039
  %read_size2 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 4, !dbg !3042
  %7 = load i64, i64* %read_size2, align 8, !dbg !3042
  %cmp3 = icmp ugt i64 %7, 5000, !dbg !3043
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !3044

if.then4:                                         ; preds = %if.then
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3045
  %9 = load i8*, i8** @httpd_err400title, align 8, !dbg !3047
  %10 = load i8*, i8** @httpd_err400form, align 8, !dbg !3048
  call void @httpd_send_err(%struct.httpd_conn* %8, i32 400, i8* %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0), i8* %10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0)), !dbg !3049
  %11 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3050
  %12 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3051
  call void @finish_connection(%struct.connecttab* %11, %struct.timeval* %12), !dbg !3052
  br label %return, !dbg !3053

if.end:                                           ; preds = %if.then
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3054
  %read_buf = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 3, !dbg !3055
  %14 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3056
  %read_size5 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %14, i32 0, i32 4, !dbg !3057
  %15 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3058
  %read_size6 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %15, i32 0, i32 4, !dbg !3059
  %16 = load i64, i64* %read_size6, align 8, !dbg !3059
  %add = add i64 %16, 1000, !dbg !3060
  call void @httpd_realloc_str(i8** %read_buf, i64* %read_size5, i64 %add), !dbg !3061
  br label %if.end7, !dbg !3062

if.end7:                                          ; preds = %if.end, %entry
  %17 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3063
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %17, i32 0, i32 60, !dbg !3064
  %18 = load i32, i32* %conn_fd, align 8, !dbg !3064
  %19 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3065
  %read_buf8 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %19, i32 0, i32 3, !dbg !3066
  %20 = load i8*, i8** %read_buf8, align 8, !dbg !3066
  %21 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3067
  %read_idx9 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %21, i32 0, i32 5, !dbg !3068
  %22 = load i64, i64* %read_idx9, align 8, !dbg !3068
  %arrayidx = getelementptr inbounds i8, i8* %20, i64 %22, !dbg !3065
  %23 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3069
  %read_size10 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %23, i32 0, i32 4, !dbg !3070
  %24 = load i64, i64* %read_size10, align 8, !dbg !3070
  %25 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3071
  %read_idx11 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %25, i32 0, i32 5, !dbg !3072
  %26 = load i64, i64* %read_idx11, align 8, !dbg !3072
  %sub = sub i64 %24, %26, !dbg !3073
  %call = call i64 @"\01_read"(i32 %18, i8* %arrayidx, i64 %sub), !dbg !3074
  %conv = trunc i64 %call to i32, !dbg !3074
  store i32 %conv, i32* %sz, align 4, !dbg !3075
  %27 = load i32, i32* %sz, align 4, !dbg !3076
  %cmp12 = icmp eq i32 %27, 0, !dbg !3078
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !3079

if.then14:                                        ; preds = %if.end7
  %28 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3080
  %29 = load i8*, i8** @httpd_err400title, align 8, !dbg !3082
  %30 = load i8*, i8** @httpd_err400form, align 8, !dbg !3083
  call void @httpd_send_err(%struct.httpd_conn* %28, i32 400, i8* %29, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0), i8* %30, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0)), !dbg !3084
  %31 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3085
  %32 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3086
  call void @finish_connection(%struct.connecttab* %31, %struct.timeval* %32), !dbg !3087
  br label %return, !dbg !3088

if.end15:                                         ; preds = %if.end7
  %33 = load i32, i32* %sz, align 4, !dbg !3089
  %cmp16 = icmp slt i32 %33, 0, !dbg !3091
  br i1 %cmp16, label %if.then18, label %if.end31, !dbg !3092

if.then18:                                        ; preds = %if.end15
  %call19 = call i32* @__error(), !dbg !3093
  %34 = load i32, i32* %call19, align 4, !dbg !3093
  %cmp20 = icmp eq i32 %34, 4, !dbg !3096
  br i1 %cmp20, label %if.then29, label %lor.lhs.false, !dbg !3097

lor.lhs.false:                                    ; preds = %if.then18
  %call22 = call i32* @__error(), !dbg !3098
  %35 = load i32, i32* %call22, align 4, !dbg !3098
  %cmp23 = icmp eq i32 %35, 35, !dbg !3099
  br i1 %cmp23, label %if.then29, label %lor.lhs.false25, !dbg !3100

lor.lhs.false25:                                  ; preds = %lor.lhs.false
  %call26 = call i32* @__error(), !dbg !3101
  %36 = load i32, i32* %call26, align 4, !dbg !3101
  %cmp27 = icmp eq i32 %36, 35, !dbg !3102
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !3103

if.then29:                                        ; preds = %lor.lhs.false25, %lor.lhs.false, %if.then18
  br label %return, !dbg !3104

if.end30:                                         ; preds = %lor.lhs.false25
  %37 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3105
  %38 = load i8*, i8** @httpd_err400title, align 8, !dbg !3106
  %39 = load i8*, i8** @httpd_err400form, align 8, !dbg !3107
  call void @httpd_send_err(%struct.httpd_conn* %37, i32 400, i8* %38, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0), i8* %39, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0)), !dbg !3108
  %40 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3109
  %41 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3110
  call void @finish_connection(%struct.connecttab* %40, %struct.timeval* %41), !dbg !3111
  br label %return, !dbg !3112

if.end31:                                         ; preds = %if.end15
  %42 = load i32, i32* %sz, align 4, !dbg !3113
  %conv32 = sext i32 %42 to i64, !dbg !3113
  %43 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3114
  %read_idx33 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %43, i32 0, i32 5, !dbg !3115
  %44 = load i64, i64* %read_idx33, align 8, !dbg !3116
  %add34 = add i64 %44, %conv32, !dbg !3116
  store i64 %add34, i64* %read_idx33, align 8, !dbg !3116
  %45 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3117
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %45, i32 0, i32 0, !dbg !3118
  %46 = load i64, i64* %tv_sec, align 8, !dbg !3118
  %47 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3119
  %active_at = getelementptr inbounds %struct.connecttab, %struct.connecttab* %47, i32 0, i32 8, !dbg !3120
  store i64 %46, i64* %active_at, align 8, !dbg !3121
  %48 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3122
  %call35 = call i32 @httpd_got_request(%struct.httpd_conn* %48), !dbg !3123
  switch i32 %call35, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb36
  ], !dbg !3124

sw.bb:                                            ; preds = %if.end31
  br label %return, !dbg !3125

sw.bb36:                                          ; preds = %if.end31
  %49 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3127
  %50 = load i8*, i8** @httpd_err400title, align 8, !dbg !3128
  %51 = load i8*, i8** @httpd_err400form, align 8, !dbg !3129
  call void @httpd_send_err(%struct.httpd_conn* %49, i32 400, i8* %50, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0), i8* %51, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0)), !dbg !3130
  %52 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3131
  %53 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3132
  call void @finish_connection(%struct.connecttab* %52, %struct.timeval* %53), !dbg !3133
  br label %return, !dbg !3134

sw.epilog:                                        ; preds = %if.end31
  %54 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3135
  %call37 = call i32 @httpd_parse_request(%struct.httpd_conn* %54), !dbg !3137
  %cmp38 = icmp slt i32 %call37, 0, !dbg !3138
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !3139

if.then40:                                        ; preds = %sw.epilog
  %55 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3140
  %56 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3142
  call void @finish_connection(%struct.connecttab* %55, %struct.timeval* %56), !dbg !3143
  br label %return, !dbg !3144

if.end41:                                         ; preds = %sw.epilog
  %57 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3145
  %call42 = call i32 @check_throttles(%struct.connecttab* %57), !dbg !3147
  %tobool = icmp ne i32 %call42, 0, !dbg !3147
  br i1 %tobool, label %if.end44, label %if.then43, !dbg !3148

if.then43:                                        ; preds = %if.end41
  %58 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3149
  %59 = load i8*, i8** @httpd_err503title, align 8, !dbg !3151
  %60 = load i8*, i8** @httpd_err503form, align 8, !dbg !3152
  %61 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3153
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %61, i32 0, i32 12, !dbg !3154
  %62 = load i8*, i8** %encodedurl, align 8, !dbg !3154
  call void @httpd_send_err(%struct.httpd_conn* %58, i32 503, i8* %59, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.50, i64 0, i64 0), i8* %60, i8* %62), !dbg !3155
  %63 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3156
  %64 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3157
  call void @finish_connection(%struct.connecttab* %63, %struct.timeval* %64), !dbg !3158
  br label %return, !dbg !3159

if.end44:                                         ; preds = %if.end41
  %65 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3160
  %66 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3162
  %call45 = call i32 @httpd_start_request(%struct.httpd_conn* %65, %struct.timeval* %66), !dbg !3163
  %cmp46 = icmp slt i32 %call45, 0, !dbg !3164
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !3165

if.then48:                                        ; preds = %if.end44
  %67 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3166
  %68 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3168
  call void @finish_connection(%struct.connecttab* %67, %struct.timeval* %68), !dbg !3169
  br label %return, !dbg !3170

if.end49:                                         ; preds = %if.end44
  %69 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3171
  %got_range = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %69, i32 0, i32 53, !dbg !3173
  %70 = load i32, i32* %got_range, align 8, !dbg !3173
  %tobool50 = icmp ne i32 %70, 0, !dbg !3171
  br i1 %tobool50, label %if.then51, label %if.else, !dbg !3174

if.then51:                                        ; preds = %if.end49
  %71 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3175
  %first_byte_index = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %71, i32 0, i32 55, !dbg !3177
  %72 = load i64, i64* %first_byte_index, align 8, !dbg !3177
  %73 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3178
  %next_byte_index = getelementptr inbounds %struct.connecttab, %struct.connecttab* %73, i32 0, i32 14, !dbg !3179
  store i64 %72, i64* %next_byte_index, align 8, !dbg !3180
  %74 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3181
  %last_byte_index = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %74, i32 0, i32 56, !dbg !3182
  %75 = load i64, i64* %last_byte_index, align 8, !dbg !3182
  %add52 = add nsw i64 %75, 1, !dbg !3183
  %76 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3184
  %end_byte_index = getelementptr inbounds %struct.connecttab, %struct.connecttab* %76, i32 0, i32 13, !dbg !3185
  store i64 %add52, i64* %end_byte_index, align 8, !dbg !3186
  br label %if.end61, !dbg !3187

if.else:                                          ; preds = %if.end49
  %77 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3188
  %bytes_to_send = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %77, i32 0, i32 10, !dbg !3190
  %78 = load i64, i64* %bytes_to_send, align 8, !dbg !3190
  %cmp53 = icmp slt i64 %78, 0, !dbg !3191
  br i1 %cmp53, label %if.then55, label %if.else57, !dbg !3192

if.then55:                                        ; preds = %if.else
  %79 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3193
  %end_byte_index56 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %79, i32 0, i32 13, !dbg !3194
  store i64 0, i64* %end_byte_index56, align 8, !dbg !3195
  br label %if.end60, !dbg !3193

if.else57:                                        ; preds = %if.else
  %80 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3196
  %bytes_to_send58 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %80, i32 0, i32 10, !dbg !3197
  %81 = load i64, i64* %bytes_to_send58, align 8, !dbg !3197
  %82 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3198
  %end_byte_index59 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %82, i32 0, i32 13, !dbg !3199
  store i64 %81, i64* %end_byte_index59, align 8, !dbg !3200
  br label %if.end60

if.end60:                                         ; preds = %if.else57, %if.then55
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then51
  %83 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3201
  %file_address = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %83, i32 0, i32 61, !dbg !3203
  %84 = load i8*, i8** %file_address, align 8, !dbg !3203
  %cmp62 = icmp eq i8* %84, null, !dbg !3204
  br i1 %cmp62, label %if.then64, label %if.end73, !dbg !3205

if.then64:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %tind, metadata !3206, metadata !DIExpression()), !dbg !3208
  store i32 0, i32* %tind, align 4, !dbg !3209
  br label %for.cond, !dbg !3211

for.cond:                                         ; preds = %for.inc, %if.then64
  %85 = load i32, i32* %tind, align 4, !dbg !3212
  %86 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3214
  %numtnums = getelementptr inbounds %struct.connecttab, %struct.connecttab* %86, i32 0, i32 4, !dbg !3215
  %87 = load i32, i32* %numtnums, align 8, !dbg !3215
  %cmp65 = icmp slt i32 %85, %87, !dbg !3216
  br i1 %cmp65, label %for.body, label %for.end, !dbg !3217

for.body:                                         ; preds = %for.cond
  %88 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3218
  %bytes_sent = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %88, i32 0, i32 11, !dbg !3219
  %89 = load i64, i64* %bytes_sent, align 8, !dbg !3219
  %90 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !3220
  %91 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3221
  %tnums = getelementptr inbounds %struct.connecttab, %struct.connecttab* %91, i32 0, i32 3, !dbg !3222
  %92 = load i32, i32* %tind, align 4, !dbg !3223
  %idxprom = sext i32 %92 to i64, !dbg !3221
  %arrayidx67 = getelementptr inbounds [10 x i32], [10 x i32]* %tnums, i64 0, i64 %idxprom, !dbg !3221
  %93 = load i32, i32* %arrayidx67, align 4, !dbg !3221
  %idxprom68 = sext i32 %93 to i64, !dbg !3220
  %arrayidx69 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %90, i64 %idxprom68, !dbg !3220
  %bytes_since_avg = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx69, i32 0, i32 4, !dbg !3224
  %94 = load i64, i64* %bytes_since_avg, align 8, !dbg !3225
  %add70 = add nsw i64 %94, %89, !dbg !3225
  store i64 %add70, i64* %bytes_since_avg, align 8, !dbg !3225
  br label %for.inc, !dbg !3220

for.inc:                                          ; preds = %for.body
  %95 = load i32, i32* %tind, align 4, !dbg !3226
  %inc = add nsw i32 %95, 1, !dbg !3226
  store i32 %inc, i32* %tind, align 4, !dbg !3226
  br label %for.cond, !dbg !3227, !llvm.loop !3228

for.end:                                          ; preds = %for.cond
  %96 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3230
  %bytes_sent71 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %96, i32 0, i32 11, !dbg !3231
  %97 = load i64, i64* %bytes_sent71, align 8, !dbg !3231
  %98 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3232
  %next_byte_index72 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %98, i32 0, i32 14, !dbg !3233
  store i64 %97, i64* %next_byte_index72, align 8, !dbg !3234
  %99 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3235
  %100 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3236
  call void @finish_connection(%struct.connecttab* %99, %struct.timeval* %100), !dbg !3237
  br label %return, !dbg !3238

if.end73:                                         ; preds = %if.end61
  %101 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3239
  %next_byte_index74 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %101, i32 0, i32 14, !dbg !3241
  %102 = load i64, i64* %next_byte_index74, align 8, !dbg !3241
  %103 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3242
  %end_byte_index75 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %103, i32 0, i32 13, !dbg !3243
  %104 = load i64, i64* %end_byte_index75, align 8, !dbg !3243
  %cmp76 = icmp sge i64 %102, %104, !dbg !3244
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !3245

if.then78:                                        ; preds = %if.end73
  %105 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3246
  %106 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3248
  call void @finish_connection(%struct.connecttab* %105, %struct.timeval* %106), !dbg !3249
  br label %return, !dbg !3250

if.end79:                                         ; preds = %if.end73
  %107 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3251
  %conn_state = getelementptr inbounds %struct.connecttab, %struct.connecttab* %107, i32 0, i32 0, !dbg !3252
  store i32 2, i32* %conn_state, align 8, !dbg !3253
  %108 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3254
  %tv_sec80 = getelementptr inbounds %struct.timeval, %struct.timeval* %108, i32 0, i32 0, !dbg !3255
  %109 = load i64, i64* %tv_sec80, align 8, !dbg !3255
  %110 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3256
  %started_at = getelementptr inbounds %struct.connecttab, %struct.connecttab* %110, i32 0, i32 7, !dbg !3257
  store i64 %109, i64* %started_at, align 8, !dbg !3258
  %111 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3259
  %wouldblock_delay = getelementptr inbounds %struct.connecttab, %struct.connecttab* %111, i32 0, i32 11, !dbg !3260
  store i64 0, i64* %wouldblock_delay, align 8, !dbg !3261
  %112 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3262
  %113 = bitcast %struct.connecttab* %112 to i8*, !dbg !3262
  %p = bitcast %union.ClientData* %client_data to i8**, !dbg !3263
  store i8* %113, i8** %p, align 8, !dbg !3264
  %114 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3265
  %conn_fd81 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %114, i32 0, i32 60, !dbg !3266
  %115 = load i32, i32* %conn_fd81, align 8, !dbg !3266
  call void @fdwatch_del_fd(i32 %115), !dbg !3267
  %116 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3268
  %conn_fd82 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %116, i32 0, i32 60, !dbg !3269
  %117 = load i32, i32* %conn_fd82, align 8, !dbg !3269
  %118 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3270
  %119 = bitcast %struct.connecttab* %118 to i8*, !dbg !3270
  call void @fdwatch_add_fd(i32 %117, i8* %119, i32 1), !dbg !3271
  br label %return, !dbg !3272

return:                                           ; preds = %if.end79, %if.then78, %for.end, %if.then48, %if.then43, %if.then40, %sw.bb36, %sw.bb, %if.end30, %if.then29, %if.then14, %if.then4
  ret void, !dbg !3272
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_send(%struct.connecttab* %c, %struct.timeval* %tvP) #0 !dbg !3273 {
entry:
  %c.addr = alloca %struct.connecttab*, align 8
  %tvP.addr = alloca %struct.timeval*, align 8
  %max_bytes = alloca i64, align 8
  %sz = alloca i32, align 4
  %coast = alloca i32, align 4
  %client_data = alloca %union.ClientData, align 8
  %elapsed = alloca i64, align 8
  %hc = alloca %struct.httpd_conn*, align 8
  %tind = alloca i32, align 4
  %iv = alloca [2 x %struct.iovec], align 16
  %newlen = alloca i32, align 4
  store %struct.connecttab* %c, %struct.connecttab** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c.addr, metadata !3274, metadata !DIExpression()), !dbg !3275
  store %struct.timeval* %tvP, %struct.timeval** %tvP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %tvP.addr, metadata !3276, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.declare(metadata i64* %max_bytes, metadata !3278, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.declare(metadata i32* %sz, metadata !3280, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.declare(metadata i32* %coast, metadata !3282, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !3284, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.declare(metadata i64* %elapsed, metadata !3286, metadata !DIExpression()), !dbg !3287
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc, metadata !3288, metadata !DIExpression()), !dbg !3289
  %0 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3290
  %hc1 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %0, i32 0, i32 2, !dbg !3291
  %1 = load %struct.httpd_conn*, %struct.httpd_conn** %hc1, align 8, !dbg !3291
  store %struct.httpd_conn* %1, %struct.httpd_conn** %hc, align 8, !dbg !3289
  call void @llvm.dbg.declare(metadata i32* %tind, metadata !3292, metadata !DIExpression()), !dbg !3293
  %2 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3294
  %max_limit = getelementptr inbounds %struct.connecttab, %struct.connecttab* %2, i32 0, i32 5, !dbg !3296
  %3 = load i64, i64* %max_limit, align 8, !dbg !3296
  %cmp = icmp eq i64 %3, -1, !dbg !3297
  br i1 %cmp, label %if.then, label %if.else, !dbg !3298

if.then:                                          ; preds = %entry
  store i64 1000000000, i64* %max_bytes, align 8, !dbg !3299
  br label %if.end, !dbg !3300

if.else:                                          ; preds = %entry
  %4 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3301
  %max_limit2 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %4, i32 0, i32 5, !dbg !3302
  %5 = load i64, i64* %max_limit2, align 8, !dbg !3302
  %div = sdiv i64 %5, 4, !dbg !3303
  store i64 %div, i64* %max_bytes, align 8, !dbg !3304
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3305
  %responselen = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 45, !dbg !3307
  %7 = load i64, i64* %responselen, align 8, !dbg !3307
  %cmp3 = icmp eq i64 %7, 0, !dbg !3308
  br i1 %cmp3, label %if.then4, label %if.else10, !dbg !3309

if.then4:                                         ; preds = %if.end
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3310
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 60, !dbg !3312
  %9 = load i32, i32* %conn_fd, align 8, !dbg !3312
  %10 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3313
  %file_address = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %10, i32 0, i32 61, !dbg !3314
  %11 = load i8*, i8** %file_address, align 8, !dbg !3314
  %12 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3315
  %next_byte_index = getelementptr inbounds %struct.connecttab, %struct.connecttab* %12, i32 0, i32 14, !dbg !3316
  %13 = load i64, i64* %next_byte_index, align 8, !dbg !3316
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 %13, !dbg !3313
  %14 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3317
  %end_byte_index = getelementptr inbounds %struct.connecttab, %struct.connecttab* %14, i32 0, i32 13, !dbg !3317
  %15 = load i64, i64* %end_byte_index, align 8, !dbg !3317
  %16 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3317
  %next_byte_index5 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %16, i32 0, i32 14, !dbg !3317
  %17 = load i64, i64* %next_byte_index5, align 8, !dbg !3317
  %sub = sub nsw i64 %15, %17, !dbg !3317
  %18 = load i64, i64* %max_bytes, align 8, !dbg !3317
  %cmp6 = icmp ult i64 %sub, %18, !dbg !3317
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !3317

cond.true:                                        ; preds = %if.then4
  %19 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3317
  %end_byte_index7 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %19, i32 0, i32 13, !dbg !3317
  %20 = load i64, i64* %end_byte_index7, align 8, !dbg !3317
  %21 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3317
  %next_byte_index8 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %21, i32 0, i32 14, !dbg !3317
  %22 = load i64, i64* %next_byte_index8, align 8, !dbg !3317
  %sub9 = sub nsw i64 %20, %22, !dbg !3317
  br label %cond.end, !dbg !3317

cond.false:                                       ; preds = %if.then4
  %23 = load i64, i64* %max_bytes, align 8, !dbg !3317
  br label %cond.end, !dbg !3317

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub9, %cond.true ], [ %23, %cond.false ], !dbg !3317
  %call = call i64 @"\01_write"(i32 %9, i8* %arrayidx, i64 %cond), !dbg !3318
  %conv = trunc i64 %call to i32, !dbg !3318
  store i32 %conv, i32* %sz, align 4, !dbg !3319
  br label %if.end36, !dbg !3320

if.else10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata [2 x %struct.iovec]* %iv, metadata !3321, metadata !DIExpression()), !dbg !3329
  %24 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3330
  %response = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %24, i32 0, i32 32, !dbg !3331
  %25 = load i8*, i8** %response, align 8, !dbg !3331
  %arrayidx11 = getelementptr inbounds [2 x %struct.iovec], [2 x %struct.iovec]* %iv, i64 0, i64 0, !dbg !3332
  %iov_base = getelementptr inbounds %struct.iovec, %struct.iovec* %arrayidx11, i32 0, i32 0, !dbg !3333
  store i8* %25, i8** %iov_base, align 16, !dbg !3334
  %26 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3335
  %responselen12 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %26, i32 0, i32 45, !dbg !3336
  %27 = load i64, i64* %responselen12, align 8, !dbg !3336
  %arrayidx13 = getelementptr inbounds [2 x %struct.iovec], [2 x %struct.iovec]* %iv, i64 0, i64 0, !dbg !3337
  %iov_len = getelementptr inbounds %struct.iovec, %struct.iovec* %arrayidx13, i32 0, i32 1, !dbg !3338
  store i64 %27, i64* %iov_len, align 8, !dbg !3339
  %28 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3340
  %file_address14 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %28, i32 0, i32 61, !dbg !3341
  %29 = load i8*, i8** %file_address14, align 8, !dbg !3341
  %30 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3342
  %next_byte_index15 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %30, i32 0, i32 14, !dbg !3343
  %31 = load i64, i64* %next_byte_index15, align 8, !dbg !3343
  %arrayidx16 = getelementptr inbounds i8, i8* %29, i64 %31, !dbg !3340
  %arrayidx17 = getelementptr inbounds [2 x %struct.iovec], [2 x %struct.iovec]* %iv, i64 0, i64 1, !dbg !3344
  %iov_base18 = getelementptr inbounds %struct.iovec, %struct.iovec* %arrayidx17, i32 0, i32 0, !dbg !3345
  store i8* %arrayidx16, i8** %iov_base18, align 16, !dbg !3346
  %32 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3347
  %end_byte_index19 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %32, i32 0, i32 13, !dbg !3347
  %33 = load i64, i64* %end_byte_index19, align 8, !dbg !3347
  %34 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3347
  %next_byte_index20 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %34, i32 0, i32 14, !dbg !3347
  %35 = load i64, i64* %next_byte_index20, align 8, !dbg !3347
  %sub21 = sub nsw i64 %33, %35, !dbg !3347
  %36 = load i64, i64* %max_bytes, align 8, !dbg !3347
  %cmp22 = icmp ult i64 %sub21, %36, !dbg !3347
  br i1 %cmp22, label %cond.true24, label %cond.false28, !dbg !3347

cond.true24:                                      ; preds = %if.else10
  %37 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3347
  %end_byte_index25 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %37, i32 0, i32 13, !dbg !3347
  %38 = load i64, i64* %end_byte_index25, align 8, !dbg !3347
  %39 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3347
  %next_byte_index26 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %39, i32 0, i32 14, !dbg !3347
  %40 = load i64, i64* %next_byte_index26, align 8, !dbg !3347
  %sub27 = sub nsw i64 %38, %40, !dbg !3347
  br label %cond.end29, !dbg !3347

cond.false28:                                     ; preds = %if.else10
  %41 = load i64, i64* %max_bytes, align 8, !dbg !3347
  br label %cond.end29, !dbg !3347

cond.end29:                                       ; preds = %cond.false28, %cond.true24
  %cond30 = phi i64 [ %sub27, %cond.true24 ], [ %41, %cond.false28 ], !dbg !3347
  %arrayidx31 = getelementptr inbounds [2 x %struct.iovec], [2 x %struct.iovec]* %iv, i64 0, i64 1, !dbg !3348
  %iov_len32 = getelementptr inbounds %struct.iovec, %struct.iovec* %arrayidx31, i32 0, i32 1, !dbg !3349
  store i64 %cond30, i64* %iov_len32, align 8, !dbg !3350
  %42 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3351
  %conn_fd33 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %42, i32 0, i32 60, !dbg !3352
  %43 = load i32, i32* %conn_fd33, align 8, !dbg !3352
  %arraydecay = getelementptr inbounds [2 x %struct.iovec], [2 x %struct.iovec]* %iv, i64 0, i64 0, !dbg !3353
  %call34 = call i64 @"\01_writev"(i32 %43, %struct.iovec* %arraydecay, i32 2), !dbg !3354
  %conv35 = trunc i64 %call34 to i32, !dbg !3354
  store i32 %conv35, i32* %sz, align 4, !dbg !3355
  br label %if.end36

if.end36:                                         ; preds = %cond.end29, %cond.end
  %44 = load i32, i32* %sz, align 4, !dbg !3356
  %cmp37 = icmp slt i32 %44, 0, !dbg !3358
  br i1 %cmp37, label %land.lhs.true, label %if.end43, !dbg !3359

land.lhs.true:                                    ; preds = %if.end36
  %call39 = call i32* @__error(), !dbg !3360
  %45 = load i32, i32* %call39, align 4, !dbg !3360
  %cmp40 = icmp eq i32 %45, 4, !dbg !3361
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !3362

if.then42:                                        ; preds = %land.lhs.true
  br label %if.end191, !dbg !3363

if.end43:                                         ; preds = %land.lhs.true, %if.end36
  %46 = load i32, i32* %sz, align 4, !dbg !3364
  %cmp44 = icmp eq i32 %46, 0, !dbg !3366
  br i1 %cmp44, label %if.then56, label %lor.lhs.false, !dbg !3367

lor.lhs.false:                                    ; preds = %if.end43
  %47 = load i32, i32* %sz, align 4, !dbg !3368
  %cmp46 = icmp slt i32 %47, 0, !dbg !3369
  br i1 %cmp46, label %land.lhs.true48, label %if.end70, !dbg !3370

land.lhs.true48:                                  ; preds = %lor.lhs.false
  %call49 = call i32* @__error(), !dbg !3371
  %48 = load i32, i32* %call49, align 4, !dbg !3371
  %cmp50 = icmp eq i32 %48, 35, !dbg !3372
  br i1 %cmp50, label %if.then56, label %lor.lhs.false52, !dbg !3373

lor.lhs.false52:                                  ; preds = %land.lhs.true48
  %call53 = call i32* @__error(), !dbg !3374
  %49 = load i32, i32* %call53, align 4, !dbg !3374
  %cmp54 = icmp eq i32 %49, 35, !dbg !3375
  br i1 %cmp54, label %if.then56, label %if.end70, !dbg !3376

if.then56:                                        ; preds = %lor.lhs.false52, %land.lhs.true48, %if.end43
  %50 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3377
  %wouldblock_delay = getelementptr inbounds %struct.connecttab, %struct.connecttab* %50, i32 0, i32 11, !dbg !3379
  %51 = load i64, i64* %wouldblock_delay, align 8, !dbg !3380
  %add = add nsw i64 %51, 100, !dbg !3380
  store i64 %add, i64* %wouldblock_delay, align 8, !dbg !3380
  %52 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3381
  %conn_state = getelementptr inbounds %struct.connecttab, %struct.connecttab* %52, i32 0, i32 0, !dbg !3382
  store i32 3, i32* %conn_state, align 8, !dbg !3383
  %53 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3384
  %conn_fd57 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %53, i32 0, i32 60, !dbg !3385
  %54 = load i32, i32* %conn_fd57, align 8, !dbg !3385
  call void @fdwatch_del_fd(i32 %54), !dbg !3386
  %55 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3387
  %56 = bitcast %struct.connecttab* %55 to i8*, !dbg !3387
  %p = bitcast %union.ClientData* %client_data to i8**, !dbg !3388
  store i8* %56, i8** %p, align 8, !dbg !3389
  %57 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3390
  %wakeup_timer = getelementptr inbounds %struct.connecttab, %struct.connecttab* %57, i32 0, i32 9, !dbg !3392
  %58 = load %struct.TimerStruct*, %struct.TimerStruct** %wakeup_timer, align 8, !dbg !3392
  %cmp58 = icmp ne %struct.TimerStruct* %58, null, !dbg !3393
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !3394

if.then60:                                        ; preds = %if.then56
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.124, i64 0, i64 0)), !dbg !3395
  br label %if.end61, !dbg !3395

if.end61:                                         ; preds = %if.then60, %if.then56
  %59 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3396
  %60 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3397
  %wouldblock_delay62 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %60, i32 0, i32 11, !dbg !3398
  %61 = load i64, i64* %wouldblock_delay62, align 8, !dbg !3398
  %coerce.dive = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0, !dbg !3399
  %62 = load i8*, i8** %coerce.dive, align 8, !dbg !3399
  %call63 = call %struct.TimerStruct* @tmr_create(%struct.timeval* %59, void (i8*, %struct.timeval*)* @wakeup_connection, i8* %62, i64 %61, i32 0), !dbg !3399
  %63 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3400
  %wakeup_timer64 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %63, i32 0, i32 9, !dbg !3401
  store %struct.TimerStruct* %call63, %struct.TimerStruct** %wakeup_timer64, align 8, !dbg !3402
  %64 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3403
  %wakeup_timer65 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %64, i32 0, i32 9, !dbg !3405
  %65 = load %struct.TimerStruct*, %struct.TimerStruct** %wakeup_timer65, align 8, !dbg !3405
  %cmp66 = icmp eq %struct.TimerStruct* %65, null, !dbg !3406
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !3407

if.then68:                                        ; preds = %if.end61
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.125, i64 0, i64 0)), !dbg !3408
  call void @exit(i32 1) #13, !dbg !3410
  unreachable, !dbg !3410

if.end69:                                         ; preds = %if.end61
  br label %if.end191, !dbg !3411

if.end70:                                         ; preds = %lor.lhs.false52, %lor.lhs.false
  %66 = load i32, i32* %sz, align 4, !dbg !3412
  %cmp71 = icmp slt i32 %66, 0, !dbg !3414
  br i1 %cmp71, label %if.then73, label %if.end87, !dbg !3415

if.then73:                                        ; preds = %if.end70
  %call74 = call i32* @__error(), !dbg !3416
  %67 = load i32, i32* %call74, align 4, !dbg !3416
  %cmp75 = icmp ne i32 %67, 32, !dbg !3419
  br i1 %cmp75, label %land.lhs.true77, label %if.end86, !dbg !3420

land.lhs.true77:                                  ; preds = %if.then73
  %call78 = call i32* @__error(), !dbg !3421
  %68 = load i32, i32* %call78, align 4, !dbg !3421
  %cmp79 = icmp ne i32 %68, 22, !dbg !3422
  br i1 %cmp79, label %land.lhs.true81, label %if.end86, !dbg !3423

land.lhs.true81:                                  ; preds = %land.lhs.true77
  %call82 = call i32* @__error(), !dbg !3424
  %69 = load i32, i32* %call82, align 4, !dbg !3424
  %cmp83 = icmp ne i32 %69, 54, !dbg !3425
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !3426

if.then85:                                        ; preds = %land.lhs.true81
  %70 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3427
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %70, i32 0, i32 12, !dbg !3428
  %71 = load i8*, i8** %encodedurl, align 8, !dbg !3428
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.126, i64 0, i64 0), i8* %71), !dbg !3429
  br label %if.end86, !dbg !3429

if.end86:                                         ; preds = %if.then85, %land.lhs.true81, %land.lhs.true77, %if.then73
  %72 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3430
  %73 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3431
  call void @clear_connection(%struct.connecttab* %72, %struct.timeval* %73), !dbg !3432
  br label %if.end191, !dbg !3433

if.end87:                                         ; preds = %if.end70
  %74 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3434
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %74, i32 0, i32 0, !dbg !3435
  %75 = load i64, i64* %tv_sec, align 8, !dbg !3435
  %76 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3436
  %active_at = getelementptr inbounds %struct.connecttab, %struct.connecttab* %76, i32 0, i32 8, !dbg !3437
  store i64 %75, i64* %active_at, align 8, !dbg !3438
  %77 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3439
  %responselen88 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %77, i32 0, i32 45, !dbg !3441
  %78 = load i64, i64* %responselen88, align 8, !dbg !3441
  %cmp89 = icmp ugt i64 %78, 0, !dbg !3442
  br i1 %cmp89, label %if.then91, label %if.end116, !dbg !3443

if.then91:                                        ; preds = %if.end87
  %79 = load i32, i32* %sz, align 4, !dbg !3444
  %conv92 = sext i32 %79 to i64, !dbg !3444
  %80 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3447
  %responselen93 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %80, i32 0, i32 45, !dbg !3448
  %81 = load i64, i64* %responselen93, align 8, !dbg !3448
  %cmp94 = icmp ult i64 %conv92, %81, !dbg !3449
  br i1 %cmp94, label %if.then96, label %if.else109, !dbg !3450

if.then96:                                        ; preds = %if.then91
  call void @llvm.dbg.declare(metadata i32* %newlen, metadata !3451, metadata !DIExpression()), !dbg !3453
  %82 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3454
  %responselen97 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %82, i32 0, i32 45, !dbg !3455
  %83 = load i64, i64* %responselen97, align 8, !dbg !3455
  %84 = load i32, i32* %sz, align 4, !dbg !3456
  %conv98 = sext i32 %84 to i64, !dbg !3456
  %sub99 = sub i64 %83, %conv98, !dbg !3457
  %conv100 = trunc i64 %sub99 to i32, !dbg !3454
  store i32 %conv100, i32* %newlen, align 4, !dbg !3453
  %85 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3458
  %response101 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %85, i32 0, i32 32, !dbg !3458
  %86 = load i8*, i8** %response101, align 8, !dbg !3458
  %87 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3458
  %response102 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %87, i32 0, i32 32, !dbg !3458
  %88 = load i8*, i8** %response102, align 8, !dbg !3458
  %89 = load i32, i32* %sz, align 4, !dbg !3458
  %idxprom = sext i32 %89 to i64, !dbg !3458
  %arrayidx103 = getelementptr inbounds i8, i8* %88, i64 %idxprom, !dbg !3458
  %90 = load i32, i32* %newlen, align 4, !dbg !3458
  %conv104 = sext i32 %90 to i64, !dbg !3458
  %91 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3458
  %response105 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %91, i32 0, i32 32, !dbg !3458
  %92 = load i8*, i8** %response105, align 8, !dbg !3458
  %93 = call i64 @llvm.objectsize.i64.p0i8(i8* %92, i1 false, i1 true, i1 false), !dbg !3458
  %call106 = call i8* @__memmove_chk(i8* %86, i8* %arrayidx103, i64 %conv104, i64 %93) #11, !dbg !3458
  %94 = load i32, i32* %newlen, align 4, !dbg !3459
  %conv107 = sext i32 %94 to i64, !dbg !3459
  %95 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3460
  %responselen108 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %95, i32 0, i32 45, !dbg !3461
  store i64 %conv107, i64* %responselen108, align 8, !dbg !3462
  store i32 0, i32* %sz, align 4, !dbg !3463
  br label %if.end115, !dbg !3464

if.else109:                                       ; preds = %if.then91
  %96 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3465
  %responselen110 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %96, i32 0, i32 45, !dbg !3467
  %97 = load i64, i64* %responselen110, align 8, !dbg !3467
  %98 = load i32, i32* %sz, align 4, !dbg !3468
  %conv111 = sext i32 %98 to i64, !dbg !3468
  %sub112 = sub i64 %conv111, %97, !dbg !3468
  %conv113 = trunc i64 %sub112 to i32, !dbg !3468
  store i32 %conv113, i32* %sz, align 4, !dbg !3468
  %99 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3469
  %responselen114 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %99, i32 0, i32 45, !dbg !3470
  store i64 0, i64* %responselen114, align 8, !dbg !3471
  br label %if.end115

if.end115:                                        ; preds = %if.else109, %if.then96
  br label %if.end116, !dbg !3472

if.end116:                                        ; preds = %if.end115, %if.end87
  %100 = load i32, i32* %sz, align 4, !dbg !3473
  %conv117 = sext i32 %100 to i64, !dbg !3473
  %101 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3474
  %next_byte_index118 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %101, i32 0, i32 14, !dbg !3475
  %102 = load i64, i64* %next_byte_index118, align 8, !dbg !3476
  %add119 = add nsw i64 %102, %conv117, !dbg !3476
  store i64 %add119, i64* %next_byte_index118, align 8, !dbg !3476
  %103 = load i32, i32* %sz, align 4, !dbg !3477
  %conv120 = sext i32 %103 to i64, !dbg !3477
  %104 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3478
  %hc121 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %104, i32 0, i32 2, !dbg !3479
  %105 = load %struct.httpd_conn*, %struct.httpd_conn** %hc121, align 8, !dbg !3479
  %bytes_sent = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %105, i32 0, i32 11, !dbg !3480
  %106 = load i64, i64* %bytes_sent, align 8, !dbg !3481
  %add122 = add nsw i64 %106, %conv120, !dbg !3481
  store i64 %add122, i64* %bytes_sent, align 8, !dbg !3481
  store i32 0, i32* %tind, align 4, !dbg !3482
  br label %for.cond, !dbg !3484

for.cond:                                         ; preds = %for.inc, %if.end116
  %107 = load i32, i32* %tind, align 4, !dbg !3485
  %108 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3487
  %numtnums = getelementptr inbounds %struct.connecttab, %struct.connecttab* %108, i32 0, i32 4, !dbg !3488
  %109 = load i32, i32* %numtnums, align 8, !dbg !3488
  %cmp123 = icmp slt i32 %107, %109, !dbg !3489
  br i1 %cmp123, label %for.body, label %for.end, !dbg !3490

for.body:                                         ; preds = %for.cond
  %110 = load i32, i32* %sz, align 4, !dbg !3491
  %conv125 = sext i32 %110 to i64, !dbg !3491
  %111 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !3492
  %112 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3493
  %tnums = getelementptr inbounds %struct.connecttab, %struct.connecttab* %112, i32 0, i32 3, !dbg !3494
  %113 = load i32, i32* %tind, align 4, !dbg !3495
  %idxprom126 = sext i32 %113 to i64, !dbg !3493
  %arrayidx127 = getelementptr inbounds [10 x i32], [10 x i32]* %tnums, i64 0, i64 %idxprom126, !dbg !3493
  %114 = load i32, i32* %arrayidx127, align 4, !dbg !3493
  %idxprom128 = sext i32 %114 to i64, !dbg !3492
  %arrayidx129 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %111, i64 %idxprom128, !dbg !3492
  %bytes_since_avg = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx129, i32 0, i32 4, !dbg !3496
  %115 = load i64, i64* %bytes_since_avg, align 8, !dbg !3497
  %add130 = add nsw i64 %115, %conv125, !dbg !3497
  store i64 %add130, i64* %bytes_since_avg, align 8, !dbg !3497
  br label %for.inc, !dbg !3492

for.inc:                                          ; preds = %for.body
  %116 = load i32, i32* %tind, align 4, !dbg !3498
  %inc = add nsw i32 %116, 1, !dbg !3498
  store i32 %inc, i32* %tind, align 4, !dbg !3498
  br label %for.cond, !dbg !3499, !llvm.loop !3500

for.end:                                          ; preds = %for.cond
  %117 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3502
  %next_byte_index131 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %117, i32 0, i32 14, !dbg !3504
  %118 = load i64, i64* %next_byte_index131, align 8, !dbg !3504
  %119 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3505
  %end_byte_index132 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %119, i32 0, i32 13, !dbg !3506
  %120 = load i64, i64* %end_byte_index132, align 8, !dbg !3506
  %cmp133 = icmp sge i64 %118, %120, !dbg !3507
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !3508

if.then135:                                       ; preds = %for.end
  %121 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3509
  %122 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3511
  call void @finish_connection(%struct.connecttab* %121, %struct.timeval* %122), !dbg !3512
  br label %if.end191, !dbg !3513

if.end136:                                        ; preds = %for.end
  %123 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3514
  %wouldblock_delay137 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %123, i32 0, i32 11, !dbg !3516
  %124 = load i64, i64* %wouldblock_delay137, align 8, !dbg !3516
  %cmp138 = icmp sgt i64 %124, 100, !dbg !3517
  br i1 %cmp138, label %if.then140, label %if.end143, !dbg !3518

if.then140:                                       ; preds = %if.end136
  %125 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3519
  %wouldblock_delay141 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %125, i32 0, i32 11, !dbg !3520
  %126 = load i64, i64* %wouldblock_delay141, align 8, !dbg !3521
  %sub142 = sub nsw i64 %126, 100, !dbg !3521
  store i64 %sub142, i64* %wouldblock_delay141, align 8, !dbg !3521
  br label %if.end143, !dbg !3519

if.end143:                                        ; preds = %if.then140, %if.end136
  %127 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3522
  %max_limit144 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %127, i32 0, i32 5, !dbg !3524
  %128 = load i64, i64* %max_limit144, align 8, !dbg !3524
  %cmp145 = icmp ne i64 %128, -1, !dbg !3525
  br i1 %cmp145, label %if.then147, label %if.end191, !dbg !3526

if.then147:                                       ; preds = %if.end143
  %129 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3527
  %tv_sec148 = getelementptr inbounds %struct.timeval, %struct.timeval* %129, i32 0, i32 0, !dbg !3529
  %130 = load i64, i64* %tv_sec148, align 8, !dbg !3529
  %131 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3530
  %started_at = getelementptr inbounds %struct.connecttab, %struct.connecttab* %131, i32 0, i32 7, !dbg !3531
  %132 = load i64, i64* %started_at, align 8, !dbg !3531
  %sub149 = sub nsw i64 %130, %132, !dbg !3532
  store i64 %sub149, i64* %elapsed, align 8, !dbg !3533
  %133 = load i64, i64* %elapsed, align 8, !dbg !3534
  %cmp150 = icmp eq i64 %133, 0, !dbg !3536
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !3537

if.then152:                                       ; preds = %if.then147
  store i64 1, i64* %elapsed, align 8, !dbg !3538
  br label %if.end153, !dbg !3539

if.end153:                                        ; preds = %if.then152, %if.then147
  %134 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3540
  %hc154 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %134, i32 0, i32 2, !dbg !3542
  %135 = load %struct.httpd_conn*, %struct.httpd_conn** %hc154, align 8, !dbg !3542
  %bytes_sent155 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %135, i32 0, i32 11, !dbg !3543
  %136 = load i64, i64* %bytes_sent155, align 8, !dbg !3543
  %137 = load i64, i64* %elapsed, align 8, !dbg !3544
  %div156 = sdiv i64 %136, %137, !dbg !3545
  %138 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3546
  %max_limit157 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %138, i32 0, i32 5, !dbg !3547
  %139 = load i64, i64* %max_limit157, align 8, !dbg !3547
  %cmp158 = icmp sgt i64 %div156, %139, !dbg !3548
  br i1 %cmp158, label %if.then160, label %if.end190, !dbg !3549

if.then160:                                       ; preds = %if.end153
  %140 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3550
  %conn_state161 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %140, i32 0, i32 0, !dbg !3552
  store i32 3, i32* %conn_state161, align 8, !dbg !3553
  %141 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3554
  %conn_fd162 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %141, i32 0, i32 60, !dbg !3555
  %142 = load i32, i32* %conn_fd162, align 8, !dbg !3555
  call void @fdwatch_del_fd(i32 %142), !dbg !3556
  %143 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3557
  %hc163 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %143, i32 0, i32 2, !dbg !3558
  %144 = load %struct.httpd_conn*, %struct.httpd_conn** %hc163, align 8, !dbg !3558
  %bytes_sent164 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %144, i32 0, i32 11, !dbg !3559
  %145 = load i64, i64* %bytes_sent164, align 8, !dbg !3559
  %146 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3560
  %max_limit165 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %146, i32 0, i32 5, !dbg !3561
  %147 = load i64, i64* %max_limit165, align 8, !dbg !3561
  %div166 = sdiv i64 %145, %147, !dbg !3562
  %148 = load i64, i64* %elapsed, align 8, !dbg !3563
  %sub167 = sub nsw i64 %div166, %148, !dbg !3564
  %conv168 = trunc i64 %sub167 to i32, !dbg !3557
  store i32 %conv168, i32* %coast, align 4, !dbg !3565
  %149 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3566
  %150 = bitcast %struct.connecttab* %149 to i8*, !dbg !3566
  %p169 = bitcast %union.ClientData* %client_data to i8**, !dbg !3567
  store i8* %150, i8** %p169, align 8, !dbg !3568
  %151 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3569
  %wakeup_timer170 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %151, i32 0, i32 9, !dbg !3571
  %152 = load %struct.TimerStruct*, %struct.TimerStruct** %wakeup_timer170, align 8, !dbg !3571
  %cmp171 = icmp ne %struct.TimerStruct* %152, null, !dbg !3572
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !3573

if.then173:                                       ; preds = %if.then160
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.124, i64 0, i64 0)), !dbg !3574
  br label %if.end174, !dbg !3574

if.end174:                                        ; preds = %if.then173, %if.then160
  %153 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3575
  %154 = load i32, i32* %coast, align 4, !dbg !3576
  %cmp175 = icmp sgt i32 %154, 0, !dbg !3577
  br i1 %cmp175, label %cond.true177, label %cond.false179, !dbg !3576

cond.true177:                                     ; preds = %if.end174
  %155 = load i32, i32* %coast, align 4, !dbg !3578
  %conv178 = sext i32 %155 to i64, !dbg !3578
  %mul = mul nsw i64 %conv178, 1000, !dbg !3579
  br label %cond.end180, !dbg !3576

cond.false179:                                    ; preds = %if.end174
  br label %cond.end180, !dbg !3576

cond.end180:                                      ; preds = %cond.false179, %cond.true177
  %cond181 = phi i64 [ %mul, %cond.true177 ], [ 500, %cond.false179 ], !dbg !3576
  %coerce.dive182 = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0, !dbg !3580
  %156 = load i8*, i8** %coerce.dive182, align 8, !dbg !3580
  %call183 = call %struct.TimerStruct* @tmr_create(%struct.timeval* %153, void (i8*, %struct.timeval*)* @wakeup_connection, i8* %156, i64 %cond181, i32 0), !dbg !3580
  %157 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3581
  %wakeup_timer184 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %157, i32 0, i32 9, !dbg !3582
  store %struct.TimerStruct* %call183, %struct.TimerStruct** %wakeup_timer184, align 8, !dbg !3583
  %158 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3584
  %wakeup_timer185 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %158, i32 0, i32 9, !dbg !3586
  %159 = load %struct.TimerStruct*, %struct.TimerStruct** %wakeup_timer185, align 8, !dbg !3586
  %cmp186 = icmp eq %struct.TimerStruct* %159, null, !dbg !3587
  br i1 %cmp186, label %if.then188, label %if.end189, !dbg !3588

if.then188:                                       ; preds = %cond.end180
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.125, i64 0, i64 0)), !dbg !3589
  call void @exit(i32 1) #13, !dbg !3591
  unreachable, !dbg !3591

if.end189:                                        ; preds = %cond.end180
  br label %if.end190, !dbg !3592

if.end190:                                        ; preds = %if.end189, %if.end153
  br label %if.end191, !dbg !3593

if.end191:                                        ; preds = %if.then42, %if.end69, %if.end86, %if.then135, %if.end190, %if.end143
  ret void, !dbg !3594
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @handle_linger(%struct.connecttab* %c, %struct.timeval* %tvP) #0 !dbg !3595 {
entry:
  %c.addr = alloca %struct.connecttab*, align 8
  %tvP.addr = alloca %struct.timeval*, align 8
  %buf = alloca [4096 x i8], align 16
  %r = alloca i32, align 4
  store %struct.connecttab* %c, %struct.connecttab** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c.addr, metadata !3596, metadata !DIExpression()), !dbg !3597
  store %struct.timeval* %tvP, %struct.timeval** %tvP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %tvP.addr, metadata !3598, metadata !DIExpression()), !dbg !3599
  call void @llvm.dbg.declare(metadata [4096 x i8]* %buf, metadata !3600, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.declare(metadata i32* %r, metadata !3605, metadata !DIExpression()), !dbg !3606
  %0 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3607
  %hc = getelementptr inbounds %struct.connecttab, %struct.connecttab* %0, i32 0, i32 2, !dbg !3608
  %1 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3608
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %1, i32 0, i32 60, !dbg !3609
  %2 = load i32, i32* %conn_fd, align 8, !dbg !3609
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0, !dbg !3610
  %call = call i64 @"\01_read"(i32 %2, i8* %arraydecay, i64 4096), !dbg !3611
  %conv = trunc i64 %call to i32, !dbg !3611
  store i32 %conv, i32* %r, align 4, !dbg !3612
  %3 = load i32, i32* %r, align 4, !dbg !3613
  %cmp = icmp slt i32 %3, 0, !dbg !3615
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3616

land.lhs.true:                                    ; preds = %entry
  %call2 = call i32* @__error(), !dbg !3617
  %4 = load i32, i32* %call2, align 4, !dbg !3617
  %cmp3 = icmp eq i32 %4, 4, !dbg !3618
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !3619

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call5 = call i32* @__error(), !dbg !3620
  %5 = load i32, i32* %call5, align 4, !dbg !3620
  %cmp6 = icmp eq i32 %5, 35, !dbg !3621
  br i1 %cmp6, label %if.then, label %if.end, !dbg !3622

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %if.end11, !dbg !3623

if.end:                                           ; preds = %lor.lhs.false, %entry
  %6 = load i32, i32* %r, align 4, !dbg !3624
  %cmp8 = icmp sle i32 %6, 0, !dbg !3626
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !3627

if.then10:                                        ; preds = %if.end
  %7 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3628
  %8 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3629
  call void @really_clear_connection(%struct.connecttab* %7, %struct.timeval* %8), !dbg !3630
  br label %if.end11, !dbg !3630

if.end11:                                         ; preds = %if.then, %if.then10, %if.end
  ret void, !dbg !3631
}

declare void @fdwatch_del_fd(i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @shut_down() #0 !dbg !3632 {
entry:
  %cnum = alloca i32, align 4
  %tv = alloca %struct.timeval, align 8
  %ths = alloca %struct.httpd_server*, align 8
  call void @llvm.dbg.declare(metadata i32* %cnum, metadata !3633, metadata !DIExpression()), !dbg !3634
  call void @llvm.dbg.declare(metadata %struct.timeval* %tv, metadata !3635, metadata !DIExpression()), !dbg !3636
  %call = call i32 @gettimeofday(%struct.timeval* %tv, i8* null), !dbg !3637
  call void @logstats(%struct.timeval* %tv), !dbg !3638
  store i32 0, i32* %cnum, align 4, !dbg !3639
  br label %for.cond, !dbg !3641

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %cnum, align 4, !dbg !3642
  %1 = load i32, i32* @max_connects, align 4, !dbg !3644
  %cmp = icmp slt i32 %0, %1, !dbg !3645
  br i1 %cmp, label %for.body, label %for.end, !dbg !3646

for.body:                                         ; preds = %for.cond
  %2 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !3647
  %3 = load i32, i32* %cnum, align 4, !dbg !3650
  %idxprom = sext i32 %3 to i64, !dbg !3647
  %arrayidx = getelementptr inbounds %struct.connecttab, %struct.connecttab* %2, i64 %idxprom, !dbg !3647
  %conn_state = getelementptr inbounds %struct.connecttab, %struct.connecttab* %arrayidx, i32 0, i32 0, !dbg !3651
  %4 = load i32, i32* %conn_state, align 8, !dbg !3651
  %cmp1 = icmp ne i32 %4, 0, !dbg !3652
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3653

if.then:                                          ; preds = %for.body
  %5 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !3654
  %6 = load i32, i32* %cnum, align 4, !dbg !3655
  %idxprom2 = sext i32 %6 to i64, !dbg !3654
  %arrayidx3 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %5, i64 %idxprom2, !dbg !3654
  %hc = getelementptr inbounds %struct.connecttab, %struct.connecttab* %arrayidx3, i32 0, i32 2, !dbg !3656
  %7 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3656
  call void @httpd_close_conn(%struct.httpd_conn* %7, %struct.timeval* %tv), !dbg !3657
  br label %if.end, !dbg !3657

if.end:                                           ; preds = %if.then, %for.body
  %8 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !3658
  %9 = load i32, i32* %cnum, align 4, !dbg !3660
  %idxprom4 = sext i32 %9 to i64, !dbg !3658
  %arrayidx5 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %8, i64 %idxprom4, !dbg !3658
  %hc6 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %arrayidx5, i32 0, i32 2, !dbg !3661
  %10 = load %struct.httpd_conn*, %struct.httpd_conn** %hc6, align 8, !dbg !3661
  %cmp7 = icmp ne %struct.httpd_conn* %10, null, !dbg !3662
  br i1 %cmp7, label %if.then8, label %if.end18, !dbg !3663

if.then8:                                         ; preds = %if.end
  %11 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !3664
  %12 = load i32, i32* %cnum, align 4, !dbg !3666
  %idxprom9 = sext i32 %12 to i64, !dbg !3664
  %arrayidx10 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %11, i64 %idxprom9, !dbg !3664
  %hc11 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %arrayidx10, i32 0, i32 2, !dbg !3667
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc11, align 8, !dbg !3667
  call void @httpd_destroy_conn(%struct.httpd_conn* %13), !dbg !3668
  %14 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !3669
  %15 = load i32, i32* %cnum, align 4, !dbg !3670
  %idxprom12 = sext i32 %15 to i64, !dbg !3669
  %arrayidx13 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %14, i64 %idxprom12, !dbg !3669
  %hc14 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %arrayidx13, i32 0, i32 2, !dbg !3671
  %16 = load %struct.httpd_conn*, %struct.httpd_conn** %hc14, align 8, !dbg !3671
  %17 = bitcast %struct.httpd_conn* %16 to i8*, !dbg !3672
  call void @free(i8* %17), !dbg !3673
  %18 = load i32, i32* @httpd_conn_count, align 4, !dbg !3674
  %dec = add nsw i32 %18, -1, !dbg !3674
  store i32 %dec, i32* @httpd_conn_count, align 4, !dbg !3674
  %19 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !3675
  %20 = load i32, i32* %cnum, align 4, !dbg !3676
  %idxprom15 = sext i32 %20 to i64, !dbg !3675
  %arrayidx16 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %19, i64 %idxprom15, !dbg !3675
  %hc17 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %arrayidx16, i32 0, i32 2, !dbg !3677
  store %struct.httpd_conn* null, %struct.httpd_conn** %hc17, align 8, !dbg !3678
  br label %if.end18, !dbg !3679

if.end18:                                         ; preds = %if.then8, %if.end
  br label %for.inc, !dbg !3680

for.inc:                                          ; preds = %if.end18
  %21 = load i32, i32* %cnum, align 4, !dbg !3681
  %inc = add nsw i32 %21, 1, !dbg !3681
  store i32 %inc, i32* %cnum, align 4, !dbg !3681
  br label %for.cond, !dbg !3682, !llvm.loop !3683

for.end:                                          ; preds = %for.cond
  %22 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !3685
  %cmp19 = icmp ne %struct.httpd_server* %22, null, !dbg !3687
  br i1 %cmp19, label %if.then20, label %if.end29, !dbg !3688

if.then20:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.httpd_server** %ths, metadata !3689, metadata !DIExpression()), !dbg !3691
  %23 = load %struct.httpd_server*, %struct.httpd_server** @hs, align 8, !dbg !3692
  store %struct.httpd_server* %23, %struct.httpd_server** %ths, align 8, !dbg !3691
  store %struct.httpd_server* null, %struct.httpd_server** @hs, align 8, !dbg !3693
  %24 = load %struct.httpd_server*, %struct.httpd_server** %ths, align 8, !dbg !3694
  %listen4_fd = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %24, i32 0, i32 10, !dbg !3696
  %25 = load i32, i32* %listen4_fd, align 8, !dbg !3696
  %cmp21 = icmp ne i32 %25, -1, !dbg !3697
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !3698

if.then22:                                        ; preds = %if.then20
  %26 = load %struct.httpd_server*, %struct.httpd_server** %ths, align 8, !dbg !3699
  %listen4_fd23 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %26, i32 0, i32 10, !dbg !3700
  %27 = load i32, i32* %listen4_fd23, align 8, !dbg !3700
  call void @fdwatch_del_fd(i32 %27), !dbg !3701
  br label %if.end24, !dbg !3701

if.end24:                                         ; preds = %if.then22, %if.then20
  %28 = load %struct.httpd_server*, %struct.httpd_server** %ths, align 8, !dbg !3702
  %listen6_fd = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %28, i32 0, i32 11, !dbg !3704
  %29 = load i32, i32* %listen6_fd, align 4, !dbg !3704
  %cmp25 = icmp ne i32 %29, -1, !dbg !3705
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !3706

if.then26:                                        ; preds = %if.end24
  %30 = load %struct.httpd_server*, %struct.httpd_server** %ths, align 8, !dbg !3707
  %listen6_fd27 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %30, i32 0, i32 11, !dbg !3708
  %31 = load i32, i32* %listen6_fd27, align 4, !dbg !3708
  call void @fdwatch_del_fd(i32 %31), !dbg !3709
  br label %if.end28, !dbg !3709

if.end28:                                         ; preds = %if.then26, %if.end24
  %32 = load %struct.httpd_server*, %struct.httpd_server** %ths, align 8, !dbg !3710
  call void @httpd_terminate(%struct.httpd_server* %32), !dbg !3711
  br label %if.end29, !dbg !3712

if.end29:                                         ; preds = %if.end28, %for.end
  call void @mmc_term(), !dbg !3713
  call void @tmr_term(), !dbg !3714
  %33 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !3715
  %34 = bitcast %struct.connecttab* %33 to i8*, !dbg !3716
  call void @free(i8* %34), !dbg !3717
  %35 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !3718
  %cmp30 = icmp ne %struct.throttletab* %35, null, !dbg !3720
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !3721

if.then31:                                        ; preds = %if.end29
  %36 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !3722
  %37 = bitcast %struct.throttletab* %36 to i8*, !dbg !3723
  call void @free(i8* %37), !dbg !3724
  br label %if.end32, !dbg !3724

if.end32:                                         ; preds = %if.then31, %if.end29
  ret void, !dbg !3725
}

declare void @closelog() #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @logstats(%struct.timeval* %nowP) #0 !dbg !3726 {
entry:
  %nowP.addr = alloca %struct.timeval*, align 8
  %tv = alloca %struct.timeval, align 8
  %now = alloca i64, align 8
  %up_secs = alloca i64, align 8
  %stats_secs = alloca i64, align 8
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !3729, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.declare(metadata %struct.timeval* %tv, metadata !3731, metadata !DIExpression()), !dbg !3732
  call void @llvm.dbg.declare(metadata i64* %now, metadata !3733, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.declare(metadata i64* %up_secs, metadata !3735, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.declare(metadata i64* %stats_secs, metadata !3737, metadata !DIExpression()), !dbg !3738
  %0 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !3739
  %cmp = icmp eq %struct.timeval* %0, null, !dbg !3741
  br i1 %cmp, label %if.then, label %if.end, !dbg !3742

if.then:                                          ; preds = %entry
  %call = call i32 @gettimeofday(%struct.timeval* %tv, i8* null), !dbg !3743
  store %struct.timeval* %tv, %struct.timeval** %nowP.addr, align 8, !dbg !3745
  br label %if.end, !dbg !3746

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !3747
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 0, !dbg !3748
  %2 = load i64, i64* %tv_sec, align 8, !dbg !3748
  store i64 %2, i64* %now, align 8, !dbg !3749
  %3 = load i64, i64* %now, align 8, !dbg !3750
  %4 = load i64, i64* @start_time, align 8, !dbg !3751
  %sub = sub nsw i64 %3, %4, !dbg !3752
  store i64 %sub, i64* %up_secs, align 8, !dbg !3753
  %5 = load i64, i64* %now, align 8, !dbg !3754
  %6 = load i64, i64* @stats_time, align 8, !dbg !3755
  %sub1 = sub nsw i64 %5, %6, !dbg !3756
  store i64 %sub1, i64* %stats_secs, align 8, !dbg !3757
  %7 = load i64, i64* %stats_secs, align 8, !dbg !3758
  %cmp2 = icmp eq i64 %7, 0, !dbg !3760
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3761

if.then3:                                         ; preds = %if.end
  store i64 1, i64* %stats_secs, align 8, !dbg !3762
  br label %if.end4, !dbg !3763

if.end4:                                          ; preds = %if.then3, %if.end
  %8 = load i64, i64* %now, align 8, !dbg !3764
  store i64 %8, i64* @stats_time, align 8, !dbg !3765
  %9 = load i64, i64* %up_secs, align 8, !dbg !3766
  %10 = load i64, i64* %stats_secs, align 8, !dbg !3767
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.43, i64 0, i64 0), i64 %9, i64 %10), !dbg !3768
  %11 = load i64, i64* %stats_secs, align 8, !dbg !3769
  call void @thttpd_logstats(i64 %11), !dbg !3770
  %12 = load i64, i64* %stats_secs, align 8, !dbg !3771
  call void @httpd_logstats(i64 %12), !dbg !3772
  %13 = load i64, i64* %stats_secs, align 8, !dbg !3773
  call void @mmc_logstats(i64 %13), !dbg !3774
  %14 = load i64, i64* %stats_secs, align 8, !dbg !3775
  call void @fdwatch_logstats(i64 %14), !dbg !3776
  %15 = load i64, i64* %stats_secs, align 8, !dbg !3777
  call void @tmr_logstats(i64 %15), !dbg !3778
  ret void, !dbg !3779
}

declare void @free(i8*) #3

declare void @mmc_term() #3

declare void @tmr_term() #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @thttpd_logstats(i64 %secs) #0 !dbg !3780 {
entry:
  %secs.addr = alloca i64, align 8
  store i64 %secs, i64* %secs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %secs.addr, metadata !3783, metadata !DIExpression()), !dbg !3784
  %0 = load i64, i64* %secs.addr, align 8, !dbg !3785
  %cmp = icmp sgt i64 %0, 0, !dbg !3787
  br i1 %cmp, label %if.then, label %if.end, !dbg !3788

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @stats_connections, align 8, !dbg !3789
  %2 = load i64, i64* @stats_connections, align 8, !dbg !3790
  %conv = sitofp i64 %2 to float, !dbg !3791
  %3 = load i64, i64* %secs.addr, align 8, !dbg !3792
  %conv1 = sitofp i64 %3 to float, !dbg !3792
  %div = fdiv float %conv, %conv1, !dbg !3793
  %conv2 = fpext float %div to double, !dbg !3791
  %4 = load i32, i32* @stats_simultaneous, align 4, !dbg !3794
  %5 = load i64, i64* @stats_bytes, align 8, !dbg !3795
  %6 = load i64, i64* @stats_bytes, align 8, !dbg !3796
  %conv3 = sitofp i64 %6 to float, !dbg !3797
  %7 = load i64, i64* %secs.addr, align 8, !dbg !3798
  %conv4 = sitofp i64 %7 to float, !dbg !3798
  %div5 = fdiv float %conv3, %conv4, !dbg !3799
  %conv6 = fpext float %div5 to double, !dbg !3797
  %8 = load i32, i32* @httpd_conn_count, align 4, !dbg !3800
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.44, i64 0, i64 0), i64 %1, double %conv2, i32 %4, i64 %5, double %conv6, i32 %8), !dbg !3801
  br label %if.end, !dbg !3801

if.end:                                           ; preds = %if.then, %entry
  store i64 0, i64* @stats_connections, align 8, !dbg !3802
  store i64 0, i64* @stats_bytes, align 8, !dbg !3803
  store i32 0, i32* @stats_simultaneous, align 4, !dbg !3804
  ret void, !dbg !3805
}

declare void @mmc_logstats(i64) #3

declare void @fdwatch_logstats(i64) #3

declare void @tmr_logstats(i64) #3

declare i64 @"\01_read"(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @really_clear_connection(%struct.connecttab* %c, %struct.timeval* %tvP) #0 !dbg !3806 {
entry:
  %c.addr = alloca %struct.connecttab*, align 8
  %tvP.addr = alloca %struct.timeval*, align 8
  store %struct.connecttab* %c, %struct.connecttab** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c.addr, metadata !3807, metadata !DIExpression()), !dbg !3808
  store %struct.timeval* %tvP, %struct.timeval** %tvP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %tvP.addr, metadata !3809, metadata !DIExpression()), !dbg !3810
  %0 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3811
  %hc = getelementptr inbounds %struct.connecttab, %struct.connecttab* %0, i32 0, i32 2, !dbg !3812
  %1 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3812
  %bytes_sent = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %1, i32 0, i32 11, !dbg !3813
  %2 = load i64, i64* %bytes_sent, align 8, !dbg !3813
  %3 = load i64, i64* @stats_bytes, align 8, !dbg !3814
  %add = add nsw i64 %3, %2, !dbg !3814
  store i64 %add, i64* @stats_bytes, align 8, !dbg !3814
  %4 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3815
  %conn_state = getelementptr inbounds %struct.connecttab, %struct.connecttab* %4, i32 0, i32 0, !dbg !3817
  %5 = load i32, i32* %conn_state, align 8, !dbg !3817
  %cmp = icmp ne i32 %5, 3, !dbg !3818
  br i1 %cmp, label %if.then, label %if.end, !dbg !3819

if.then:                                          ; preds = %entry
  %6 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3820
  %hc1 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %6, i32 0, i32 2, !dbg !3821
  %7 = load %struct.httpd_conn*, %struct.httpd_conn** %hc1, align 8, !dbg !3821
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %7, i32 0, i32 60, !dbg !3822
  %8 = load i32, i32* %conn_fd, align 8, !dbg !3822
  call void @fdwatch_del_fd(i32 %8), !dbg !3823
  br label %if.end, !dbg !3823

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3824
  %hc2 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %9, i32 0, i32 2, !dbg !3825
  %10 = load %struct.httpd_conn*, %struct.httpd_conn** %hc2, align 8, !dbg !3825
  %11 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3826
  call void @httpd_close_conn(%struct.httpd_conn* %10, %struct.timeval* %11), !dbg !3827
  %12 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3828
  %13 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3829
  call void @clear_throttles(%struct.connecttab* %12, %struct.timeval* %13), !dbg !3830
  %14 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3831
  %linger_timer = getelementptr inbounds %struct.connecttab, %struct.connecttab* %14, i32 0, i32 10, !dbg !3833
  %15 = load %struct.TimerStruct*, %struct.TimerStruct** %linger_timer, align 8, !dbg !3833
  %cmp3 = icmp ne %struct.TimerStruct* %15, null, !dbg !3834
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !3835

if.then4:                                         ; preds = %if.end
  %16 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3836
  %linger_timer5 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %16, i32 0, i32 10, !dbg !3838
  %17 = load %struct.TimerStruct*, %struct.TimerStruct** %linger_timer5, align 8, !dbg !3838
  call void @tmr_cancel(%struct.TimerStruct* %17), !dbg !3839
  %18 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3840
  %linger_timer6 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %18, i32 0, i32 10, !dbg !3841
  store %struct.TimerStruct* null, %struct.TimerStruct** %linger_timer6, align 8, !dbg !3842
  br label %if.end7, !dbg !3843

if.end7:                                          ; preds = %if.then4, %if.end
  %19 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3844
  %conn_state8 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %19, i32 0, i32 0, !dbg !3845
  store i32 0, i32* %conn_state8, align 8, !dbg !3846
  %20 = load i32, i32* @first_free_connect, align 4, !dbg !3847
  %21 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3848
  %next_free_connect = getelementptr inbounds %struct.connecttab, %struct.connecttab* %21, i32 0, i32 1, !dbg !3849
  store i32 %20, i32* %next_free_connect, align 4, !dbg !3850
  %22 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3851
  %23 = load %struct.connecttab*, %struct.connecttab** @connects, align 8, !dbg !3852
  %sub.ptr.lhs.cast = ptrtoint %struct.connecttab* %22 to i64, !dbg !3853
  %sub.ptr.rhs.cast = ptrtoint %struct.connecttab* %23 to i64, !dbg !3853
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3853
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 144, !dbg !3853
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !3851
  store i32 %conv, i32* @first_free_connect, align 4, !dbg !3854
  %24 = load i32, i32* @num_connects, align 4, !dbg !3855
  %dec = add nsw i32 %24, -1, !dbg !3855
  store i32 %dec, i32* @num_connects, align 4, !dbg !3855
  ret void, !dbg !3856
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @clear_throttles(%struct.connecttab* %c, %struct.timeval* %tvP) #0 !dbg !3857 {
entry:
  %c.addr = alloca %struct.connecttab*, align 8
  %tvP.addr = alloca %struct.timeval*, align 8
  %tind = alloca i32, align 4
  store %struct.connecttab* %c, %struct.connecttab** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c.addr, metadata !3858, metadata !DIExpression()), !dbg !3859
  store %struct.timeval* %tvP, %struct.timeval** %tvP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %tvP.addr, metadata !3860, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.declare(metadata i32* %tind, metadata !3862, metadata !DIExpression()), !dbg !3863
  store i32 0, i32* %tind, align 4, !dbg !3864
  br label %for.cond, !dbg !3866

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %tind, align 4, !dbg !3867
  %1 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3869
  %numtnums = getelementptr inbounds %struct.connecttab, %struct.connecttab* %1, i32 0, i32 4, !dbg !3870
  %2 = load i32, i32* %numtnums, align 8, !dbg !3870
  %cmp = icmp slt i32 %0, %2, !dbg !3871
  br i1 %cmp, label %for.body, label %for.end, !dbg !3872

for.body:                                         ; preds = %for.cond
  %3 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !3873
  %4 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3874
  %tnums = getelementptr inbounds %struct.connecttab, %struct.connecttab* %4, i32 0, i32 3, !dbg !3875
  %5 = load i32, i32* %tind, align 4, !dbg !3876
  %idxprom = sext i32 %5 to i64, !dbg !3874
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %tnums, i64 0, i64 %idxprom, !dbg !3874
  %6 = load i32, i32* %arrayidx, align 4, !dbg !3874
  %idxprom1 = sext i32 %6 to i64, !dbg !3873
  %arrayidx2 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %3, i64 %idxprom1, !dbg !3873
  %num_sending = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx2, i32 0, i32 5, !dbg !3877
  %7 = load i32, i32* %num_sending, align 8, !dbg !3878
  %dec = add nsw i32 %7, -1, !dbg !3878
  store i32 %dec, i32* %num_sending, align 8, !dbg !3878
  br label %for.inc, !dbg !3878

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %tind, align 4, !dbg !3879
  %inc = add nsw i32 %8, 1, !dbg !3879
  store i32 %inc, i32* %tind, align 4, !dbg !3879
  br label %for.cond, !dbg !3880, !llvm.loop !3881

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3883
}

declare void @tmr_cancel(%struct.TimerStruct*) #3

declare i64 @"\01_write"(i32, i8*, i64) #3

declare i64 @"\01_writev"(i32, %struct.iovec*, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @wakeup_connection(i8* %client_data.coerce, %struct.timeval* %nowP) #0 !dbg !3884 {
entry:
  %client_data = alloca %union.ClientData, align 8
  %nowP.addr = alloca %struct.timeval*, align 8
  %c = alloca %struct.connecttab*, align 8
  %coerce.dive = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0
  store i8* %client_data.coerce, i8** %coerce.dive, align 8
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !3885, metadata !DIExpression()), !dbg !3886
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !3887, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c, metadata !3889, metadata !DIExpression()), !dbg !3890
  %p = bitcast %union.ClientData* %client_data to i8**, !dbg !3891
  %0 = load i8*, i8** %p, align 8, !dbg !3891
  %1 = bitcast i8* %0 to %struct.connecttab*, !dbg !3892
  store %struct.connecttab* %1, %struct.connecttab** %c, align 8, !dbg !3893
  %2 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !3894
  %wakeup_timer = getelementptr inbounds %struct.connecttab, %struct.connecttab* %2, i32 0, i32 9, !dbg !3895
  store %struct.TimerStruct* null, %struct.TimerStruct** %wakeup_timer, align 8, !dbg !3896
  %3 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !3897
  %conn_state = getelementptr inbounds %struct.connecttab, %struct.connecttab* %3, i32 0, i32 0, !dbg !3899
  %4 = load i32, i32* %conn_state, align 8, !dbg !3899
  %cmp = icmp eq i32 %4, 3, !dbg !3900
  br i1 %cmp, label %if.then, label %if.end, !dbg !3901

if.then:                                          ; preds = %entry
  %5 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !3902
  %conn_state1 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %5, i32 0, i32 0, !dbg !3904
  store i32 2, i32* %conn_state1, align 8, !dbg !3905
  %6 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !3906
  %hc = getelementptr inbounds %struct.connecttab, %struct.connecttab* %6, i32 0, i32 2, !dbg !3907
  %7 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3907
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %7, i32 0, i32 60, !dbg !3908
  %8 = load i32, i32* %conn_fd, align 8, !dbg !3908
  %9 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !3909
  %10 = bitcast %struct.connecttab* %9 to i8*, !dbg !3909
  call void @fdwatch_add_fd(i32 %8, i8* %10, i32 1), !dbg !3910
  br label %if.end, !dbg !3911

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3912
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @finish_connection(%struct.connecttab* %c, %struct.timeval* %tvP) #0 !dbg !3913 {
entry:
  %c.addr = alloca %struct.connecttab*, align 8
  %tvP.addr = alloca %struct.timeval*, align 8
  store %struct.connecttab* %c, %struct.connecttab** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c.addr, metadata !3914, metadata !DIExpression()), !dbg !3915
  store %struct.timeval* %tvP, %struct.timeval** %tvP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %tvP.addr, metadata !3916, metadata !DIExpression()), !dbg !3917
  %0 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3918
  %hc = getelementptr inbounds %struct.connecttab, %struct.connecttab* %0, i32 0, i32 2, !dbg !3919
  %1 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3919
  call void @httpd_write_response(%struct.httpd_conn* %1), !dbg !3920
  %2 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3921
  %3 = load %struct.timeval*, %struct.timeval** %tvP.addr, align 8, !dbg !3922
  call void @clear_connection(%struct.connecttab* %2, %struct.timeval* %3), !dbg !3923
  ret void, !dbg !3924
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @check_throttles(%struct.connecttab* %c) #0 !dbg !3925 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.connecttab*, align 8
  %tnum = alloca i32, align 4
  %l = alloca i64, align 8
  store %struct.connecttab* %c, %struct.connecttab** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c.addr, metadata !3928, metadata !DIExpression()), !dbg !3929
  call void @llvm.dbg.declare(metadata i32* %tnum, metadata !3930, metadata !DIExpression()), !dbg !3931
  call void @llvm.dbg.declare(metadata i64* %l, metadata !3932, metadata !DIExpression()), !dbg !3933
  %0 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3934
  %numtnums = getelementptr inbounds %struct.connecttab, %struct.connecttab* %0, i32 0, i32 4, !dbg !3935
  store i32 0, i32* %numtnums, align 8, !dbg !3936
  %1 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3937
  %min_limit = getelementptr inbounds %struct.connecttab, %struct.connecttab* %1, i32 0, i32 6, !dbg !3938
  store i64 -1, i64* %min_limit, align 8, !dbg !3939
  %2 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3940
  %max_limit = getelementptr inbounds %struct.connecttab, %struct.connecttab* %2, i32 0, i32 5, !dbg !3941
  store i64 -1, i64* %max_limit, align 8, !dbg !3942
  store i32 0, i32* %tnum, align 4, !dbg !3943
  br label %for.cond, !dbg !3945

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %tnum, align 4, !dbg !3946
  %4 = load i32, i32* @numthrottles, align 4, !dbg !3948
  %cmp = icmp slt i32 %3, %4, !dbg !3949
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3950

land.rhs:                                         ; preds = %for.cond
  %5 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3951
  %numtnums1 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %5, i32 0, i32 4, !dbg !3952
  %6 = load i32, i32* %numtnums1, align 8, !dbg !3952
  %cmp2 = icmp slt i32 %6, 10, !dbg !3953
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %7 = phi i1 [ false, %for.cond ], [ %cmp2, %land.rhs ], !dbg !3954
  br i1 %7, label %for.body, label %for.end, !dbg !3955

for.body:                                         ; preds = %land.end
  %8 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !3956
  %9 = load i32, i32* %tnum, align 4, !dbg !3958
  %idxprom = sext i32 %9 to i64, !dbg !3956
  %arrayidx = getelementptr inbounds %struct.throttletab, %struct.throttletab* %8, i64 %idxprom, !dbg !3956
  %pattern = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx, i32 0, i32 0, !dbg !3959
  %10 = load i8*, i8** %pattern, align 8, !dbg !3959
  %11 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !3960
  %hc = getelementptr inbounds %struct.connecttab, %struct.connecttab* %11, i32 0, i32 2, !dbg !3961
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc, align 8, !dbg !3961
  %expnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 16, !dbg !3962
  %13 = load i8*, i8** %expnfilename, align 8, !dbg !3962
  %call = call i32 @match(i8* %10, i8* %13), !dbg !3963
  %tobool = icmp ne i32 %call, 0, !dbg !3963
  br i1 %tobool, label %if.then, label %if.end70, !dbg !3964

if.then:                                          ; preds = %for.body
  %14 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !3965
  %15 = load i32, i32* %tnum, align 4, !dbg !3968
  %idxprom3 = sext i32 %15 to i64, !dbg !3965
  %arrayidx4 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %14, i64 %idxprom3, !dbg !3965
  %rate = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx4, i32 0, i32 3, !dbg !3969
  %16 = load i64, i64* %rate, align 8, !dbg !3969
  %17 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !3970
  %18 = load i32, i32* %tnum, align 4, !dbg !3971
  %idxprom5 = sext i32 %18 to i64, !dbg !3970
  %arrayidx6 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %17, i64 %idxprom5, !dbg !3970
  %max_limit7 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx6, i32 0, i32 1, !dbg !3972
  %19 = load i64, i64* %max_limit7, align 8, !dbg !3972
  %mul = mul nsw i64 %19, 2, !dbg !3973
  %cmp8 = icmp sgt i64 %16, %mul, !dbg !3974
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !3975

if.then9:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !3976
  br label %return, !dbg !3976

if.end:                                           ; preds = %if.then
  %20 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !3977
  %21 = load i32, i32* %tnum, align 4, !dbg !3979
  %idxprom10 = sext i32 %21 to i64, !dbg !3977
  %arrayidx11 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %20, i64 %idxprom10, !dbg !3977
  %rate12 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx11, i32 0, i32 3, !dbg !3980
  %22 = load i64, i64* %rate12, align 8, !dbg !3980
  %23 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !3981
  %24 = load i32, i32* %tnum, align 4, !dbg !3982
  %idxprom13 = sext i32 %24 to i64, !dbg !3981
  %arrayidx14 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %23, i64 %idxprom13, !dbg !3981
  %min_limit15 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx14, i32 0, i32 2, !dbg !3983
  %25 = load i64, i64* %min_limit15, align 8, !dbg !3983
  %cmp16 = icmp slt i64 %22, %25, !dbg !3984
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !3985

if.then17:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3986
  br label %return, !dbg !3986

if.end18:                                         ; preds = %if.end
  %26 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !3987
  %27 = load i32, i32* %tnum, align 4, !dbg !3989
  %idxprom19 = sext i32 %27 to i64, !dbg !3987
  %arrayidx20 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %26, i64 %idxprom19, !dbg !3987
  %num_sending = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx20, i32 0, i32 5, !dbg !3990
  %28 = load i32, i32* %num_sending, align 8, !dbg !3990
  %cmp21 = icmp slt i32 %28, 0, !dbg !3991
  br i1 %cmp21, label %if.then22, label %if.end26, !dbg !3992

if.then22:                                        ; preds = %if.end18
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.123, i64 0, i64 0)), !dbg !3993
  %29 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !3995
  %30 = load i32, i32* %tnum, align 4, !dbg !3996
  %idxprom23 = sext i32 %30 to i64, !dbg !3995
  %arrayidx24 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %29, i64 %idxprom23, !dbg !3995
  %num_sending25 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx24, i32 0, i32 5, !dbg !3997
  store i32 0, i32* %num_sending25, align 8, !dbg !3998
  br label %if.end26, !dbg !3999

if.end26:                                         ; preds = %if.then22, %if.end18
  %31 = load i32, i32* %tnum, align 4, !dbg !4000
  %32 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !4001
  %tnums = getelementptr inbounds %struct.connecttab, %struct.connecttab* %32, i32 0, i32 3, !dbg !4002
  %33 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !4003
  %numtnums27 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %33, i32 0, i32 4, !dbg !4004
  %34 = load i32, i32* %numtnums27, align 8, !dbg !4005
  %inc = add nsw i32 %34, 1, !dbg !4005
  store i32 %inc, i32* %numtnums27, align 8, !dbg !4005
  %idxprom28 = sext i32 %34 to i64, !dbg !4001
  %arrayidx29 = getelementptr inbounds [10 x i32], [10 x i32]* %tnums, i64 0, i64 %idxprom28, !dbg !4001
  store i32 %31, i32* %arrayidx29, align 4, !dbg !4006
  %35 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !4007
  %36 = load i32, i32* %tnum, align 4, !dbg !4008
  %idxprom30 = sext i32 %36 to i64, !dbg !4007
  %arrayidx31 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %35, i64 %idxprom30, !dbg !4007
  %num_sending32 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx31, i32 0, i32 5, !dbg !4009
  %37 = load i32, i32* %num_sending32, align 8, !dbg !4010
  %inc33 = add nsw i32 %37, 1, !dbg !4010
  store i32 %inc33, i32* %num_sending32, align 8, !dbg !4010
  %38 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !4011
  %39 = load i32, i32* %tnum, align 4, !dbg !4012
  %idxprom34 = sext i32 %39 to i64, !dbg !4011
  %arrayidx35 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %38, i64 %idxprom34, !dbg !4011
  %max_limit36 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx35, i32 0, i32 1, !dbg !4013
  %40 = load i64, i64* %max_limit36, align 8, !dbg !4013
  %41 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !4014
  %42 = load i32, i32* %tnum, align 4, !dbg !4015
  %idxprom37 = sext i32 %42 to i64, !dbg !4014
  %arrayidx38 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %41, i64 %idxprom37, !dbg !4014
  %num_sending39 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx38, i32 0, i32 5, !dbg !4016
  %43 = load i32, i32* %num_sending39, align 8, !dbg !4016
  %conv = sext i32 %43 to i64, !dbg !4014
  %div = sdiv i64 %40, %conv, !dbg !4017
  store i64 %div, i64* %l, align 8, !dbg !4018
  %44 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !4019
  %max_limit40 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %44, i32 0, i32 5, !dbg !4021
  %45 = load i64, i64* %max_limit40, align 8, !dbg !4021
  %cmp41 = icmp eq i64 %45, -1, !dbg !4022
  br i1 %cmp41, label %if.then43, label %if.else, !dbg !4023

if.then43:                                        ; preds = %if.end26
  %46 = load i64, i64* %l, align 8, !dbg !4024
  %47 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !4025
  %max_limit44 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %47, i32 0, i32 5, !dbg !4026
  store i64 %46, i64* %max_limit44, align 8, !dbg !4027
  br label %if.end50, !dbg !4025

if.else:                                          ; preds = %if.end26
  %48 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !4028
  %max_limit45 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %48, i32 0, i32 5, !dbg !4028
  %49 = load i64, i64* %max_limit45, align 8, !dbg !4028
  %50 = load i64, i64* %l, align 8, !dbg !4028
  %cmp46 = icmp slt i64 %49, %50, !dbg !4028
  br i1 %cmp46, label %cond.true, label %cond.false, !dbg !4028

cond.true:                                        ; preds = %if.else
  %51 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !4028
  %max_limit48 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %51, i32 0, i32 5, !dbg !4028
  %52 = load i64, i64* %max_limit48, align 8, !dbg !4028
  br label %cond.end, !dbg !4028

cond.false:                                       ; preds = %if.else
  %53 = load i64, i64* %l, align 8, !dbg !4028
  br label %cond.end, !dbg !4028

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %52, %cond.true ], [ %53, %cond.false ], !dbg !4028
  %54 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !4029
  %max_limit49 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %54, i32 0, i32 5, !dbg !4030
  store i64 %cond, i64* %max_limit49, align 8, !dbg !4031
  br label %if.end50

if.end50:                                         ; preds = %cond.end, %if.then43
  %55 = load %struct.throttletab*, %struct.throttletab** @throttles, align 8, !dbg !4032
  %56 = load i32, i32* %tnum, align 4, !dbg !4033
  %idxprom51 = sext i32 %56 to i64, !dbg !4032
  %arrayidx52 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %55, i64 %idxprom51, !dbg !4032
  %min_limit53 = getelementptr inbounds %struct.throttletab, %struct.throttletab* %arrayidx52, i32 0, i32 2, !dbg !4034
  %57 = load i64, i64* %min_limit53, align 8, !dbg !4034
  store i64 %57, i64* %l, align 8, !dbg !4035
  %58 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !4036
  %min_limit54 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %58, i32 0, i32 6, !dbg !4038
  %59 = load i64, i64* %min_limit54, align 8, !dbg !4038
  %cmp55 = icmp eq i64 %59, -1, !dbg !4039
  br i1 %cmp55, label %if.then57, label %if.else59, !dbg !4040

if.then57:                                        ; preds = %if.end50
  %60 = load i64, i64* %l, align 8, !dbg !4041
  %61 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !4042
  %min_limit58 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %61, i32 0, i32 6, !dbg !4043
  store i64 %60, i64* %min_limit58, align 8, !dbg !4044
  br label %if.end69, !dbg !4042

if.else59:                                        ; preds = %if.end50
  %62 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !4045
  %min_limit60 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %62, i32 0, i32 6, !dbg !4045
  %63 = load i64, i64* %min_limit60, align 8, !dbg !4045
  %64 = load i64, i64* %l, align 8, !dbg !4045
  %cmp61 = icmp sgt i64 %63, %64, !dbg !4045
  br i1 %cmp61, label %cond.true63, label %cond.false65, !dbg !4045

cond.true63:                                      ; preds = %if.else59
  %65 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !4045
  %min_limit64 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %65, i32 0, i32 6, !dbg !4045
  %66 = load i64, i64* %min_limit64, align 8, !dbg !4045
  br label %cond.end66, !dbg !4045

cond.false65:                                     ; preds = %if.else59
  %67 = load i64, i64* %l, align 8, !dbg !4045
  br label %cond.end66, !dbg !4045

cond.end66:                                       ; preds = %cond.false65, %cond.true63
  %cond67 = phi i64 [ %66, %cond.true63 ], [ %67, %cond.false65 ], !dbg !4045
  %68 = load %struct.connecttab*, %struct.connecttab** %c.addr, align 8, !dbg !4046
  %min_limit68 = getelementptr inbounds %struct.connecttab, %struct.connecttab* %68, i32 0, i32 6, !dbg !4047
  store i64 %cond67, i64* %min_limit68, align 8, !dbg !4048
  br label %if.end69

if.end69:                                         ; preds = %cond.end66, %if.then57
  br label %if.end70, !dbg !4049

if.end70:                                         ; preds = %if.end69, %for.body
  br label %for.inc, !dbg !4050

for.inc:                                          ; preds = %if.end70
  %69 = load i32, i32* %tnum, align 4, !dbg !4051
  %inc71 = add nsw i32 %69, 1, !dbg !4051
  store i32 %inc71, i32* %tnum, align 4, !dbg !4051
  br label %for.cond, !dbg !4052, !llvm.loop !4053

for.end:                                          ; preds = %land.end
  store i32 1, i32* %retval, align 4, !dbg !4055
  br label %return, !dbg !4055

return:                                           ; preds = %for.end, %if.then17, %if.then9
  %70 = load i32, i32* %retval, align 4, !dbg !4056
  ret i32 %70, !dbg !4056
}

declare i32 @match(i8*, i8*) #3

declare i32 @shutdown(i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @linger_clear_connection(i8* %client_data.coerce, %struct.timeval* %nowP) #0 !dbg !4057 {
entry:
  %client_data = alloca %union.ClientData, align 8
  %nowP.addr = alloca %struct.timeval*, align 8
  %c = alloca %struct.connecttab*, align 8
  %coerce.dive = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0
  store i8* %client_data.coerce, i8** %coerce.dive, align 8
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !4058, metadata !DIExpression()), !dbg !4059
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !4060, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.declare(metadata %struct.connecttab** %c, metadata !4062, metadata !DIExpression()), !dbg !4063
  %p = bitcast %union.ClientData* %client_data to i8**, !dbg !4064
  %0 = load i8*, i8** %p, align 8, !dbg !4064
  %1 = bitcast i8* %0 to %struct.connecttab*, !dbg !4065
  store %struct.connecttab* %1, %struct.connecttab** %c, align 8, !dbg !4066
  %2 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !4067
  %linger_timer = getelementptr inbounds %struct.connecttab, %struct.connecttab* %2, i32 0, i32 10, !dbg !4068
  store %struct.TimerStruct* null, %struct.TimerStruct** %linger_timer, align 8, !dbg !4069
  %3 = load %struct.connecttab*, %struct.connecttab** %c, align 8, !dbg !4070
  %4 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !4071
  call void @really_clear_connection(%struct.connecttab* %3, %struct.timeval* %4), !dbg !4072
  ret void, !dbg !4073
}

declare void @mmc_cleanup(%struct.timeval*) #3

declare void @tmr_cleanup() #3

; Function Attrs: cold noreturn
declare void @abort() #8

declare i32 @"\01_waitpid"(i32, i32*, i32) #3

declare i8* @fgets(i8*, i32, %struct.__sFILE*) #3

declare i8* @strchr(i8*, i32) #3

declare i32 @sscanf(i8*, i8*, ...) #3

declare i8* @strstr(i8*, i8*) #3

; Function Attrs: allocsize(1)
declare i8* @realloc(i8*, i64) #9

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i8* @e_strdup(i8* %oldstr) #0 !dbg !4074 {
entry:
  %oldstr.addr = alloca i8*, align 8
  %newstr = alloca i8*, align 8
  store i8* %oldstr, i8** %oldstr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %oldstr.addr, metadata !4077, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.declare(metadata i8** %newstr, metadata !4079, metadata !DIExpression()), !dbg !4080
  %0 = load i8*, i8** %oldstr.addr, align 8, !dbg !4081
  %call = call i8* @strdup(i8* %0), !dbg !4082
  store i8* %call, i8** %newstr, align 8, !dbg !4083
  %1 = load i8*, i8** %newstr, align 8, !dbg !4084
  %cmp = icmp eq i8* %1, null, !dbg !4086
  br i1 %cmp, label %if.then, label %if.end, !dbg !4087

if.then:                                          ; preds = %entry
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.106, i64 0, i64 0)), !dbg !4088
  %2 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !4090
  %3 = load i8*, i8** @argv0, align 8, !dbg !4091
  %call1 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.107, i64 0, i64 0), i8* %3), !dbg !4092
  call void @exit(i32 1) #13, !dbg !4093
  unreachable, !dbg !4093

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %newstr, align 8, !dbg !4094
  ret i8* %4, !dbg !4095
}

declare i8* @strdup(i8*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

declare i32 @__snprintf_chk(i8*, i64, i32, i64, i8*, ...) #3

declare i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #3

declare i8* @gai_strerror(i32) #3

; Function Attrs: nounwind
declare i8* @__memset_chk(i8*, i32, i64, i64) #6

declare void @freeaddrinfo(%struct.addrinfo*) #3

declare i32 @printf(i8*, ...) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @read_config(i8* %filename) #0 !dbg !4096 {
entry:
  %filename.addr = alloca i8*, align 8
  %fp = alloca %struct.__sFILE*, align 8
  %line = alloca [10000 x i8], align 16
  %cp = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %name = alloca i8*, align 8
  %value = alloca i8*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !4097, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.declare(metadata %struct.__sFILE** %fp, metadata !4099, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.declare(metadata [10000 x i8]* %line, metadata !4101, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !4106, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !4108, metadata !DIExpression()), !dbg !4109
  call void @llvm.dbg.declare(metadata i8** %name, metadata !4110, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.declare(metadata i8** %value, metadata !4112, metadata !DIExpression()), !dbg !4113
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !4114
  %call = call %struct.__sFILE* @"\01_fopen"(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i64 0, i64 0)), !dbg !4115
  store %struct.__sFILE* %call, %struct.__sFILE** %fp, align 8, !dbg !4116
  %1 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !4117
  %cmp = icmp eq %struct.__sFILE* %1, null, !dbg !4119
  br i1 %cmp, label %if.then, label %if.end, !dbg !4120

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %filename.addr, align 8, !dbg !4121
  call void @perror(i8* %2) #14, !dbg !4123
  call void @exit(i32 1) #13, !dbg !4124
  unreachable, !dbg !4124

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !4125

while.cond:                                       ; preds = %while.end209, %if.end
  %arraydecay = getelementptr inbounds [10000 x i8], [10000 x i8]* %line, i64 0, i64 0, !dbg !4126
  %3 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !4127
  %call1 = call i8* @fgets(i8* %arraydecay, i32 10000, %struct.__sFILE* %3), !dbg !4128
  %cmp2 = icmp ne i8* %call1, null, !dbg !4129
  br i1 %cmp2, label %while.body, label %while.end210, !dbg !4125

while.body:                                       ; preds = %while.cond
  %arraydecay3 = getelementptr inbounds [10000 x i8], [10000 x i8]* %line, i64 0, i64 0, !dbg !4130
  %call4 = call i8* @strchr(i8* %arraydecay3, i32 35), !dbg !4133
  store i8* %call4, i8** %cp, align 8, !dbg !4134
  %cmp5 = icmp ne i8* %call4, null, !dbg !4135
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4136

if.then6:                                         ; preds = %while.body
  %4 = load i8*, i8** %cp, align 8, !dbg !4137
  store i8 0, i8* %4, align 1, !dbg !4138
  br label %if.end7, !dbg !4139

if.end7:                                          ; preds = %if.then6, %while.body
  %arraydecay8 = getelementptr inbounds [10000 x i8], [10000 x i8]* %line, i64 0, i64 0, !dbg !4140
  store i8* %arraydecay8, i8** %cp, align 8, !dbg !4141
  %5 = load i8*, i8** %cp, align 8, !dbg !4142
  %call9 = call i64 @strspn(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0)), !dbg !4143
  %6 = load i8*, i8** %cp, align 8, !dbg !4144
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %call9, !dbg !4144
  store i8* %add.ptr, i8** %cp, align 8, !dbg !4144
  br label %while.cond10, !dbg !4145

while.cond10:                                     ; preds = %if.end206, %if.end7
  %7 = load i8*, i8** %cp, align 8, !dbg !4146
  %8 = load i8, i8* %7, align 1, !dbg !4147
  %conv = sext i8 %8 to i32, !dbg !4147
  %cmp11 = icmp ne i32 %conv, 0, !dbg !4148
  br i1 %cmp11, label %while.body13, label %while.end209, !dbg !4145

while.body13:                                     ; preds = %while.cond10
  %9 = load i8*, i8** %cp, align 8, !dbg !4149
  %10 = load i8*, i8** %cp, align 8, !dbg !4151
  %call14 = call i64 @strcspn(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0)), !dbg !4152
  %add.ptr15 = getelementptr inbounds i8, i8* %9, i64 %call14, !dbg !4153
  store i8* %add.ptr15, i8** %cp2, align 8, !dbg !4154
  br label %while.cond16, !dbg !4155

while.cond16:                                     ; preds = %while.body30, %while.body13
  %11 = load i8*, i8** %cp2, align 8, !dbg !4156
  %12 = load i8, i8* %11, align 1, !dbg !4157
  %conv17 = sext i8 %12 to i32, !dbg !4157
  %cmp18 = icmp eq i32 %conv17, 32, !dbg !4158
  br i1 %cmp18, label %lor.end, label %lor.lhs.false, !dbg !4159

lor.lhs.false:                                    ; preds = %while.cond16
  %13 = load i8*, i8** %cp2, align 8, !dbg !4160
  %14 = load i8, i8* %13, align 1, !dbg !4161
  %conv20 = sext i8 %14 to i32, !dbg !4161
  %cmp21 = icmp eq i32 %conv20, 9, !dbg !4162
  br i1 %cmp21, label %lor.end, label %lor.lhs.false23, !dbg !4163

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %15 = load i8*, i8** %cp2, align 8, !dbg !4164
  %16 = load i8, i8* %15, align 1, !dbg !4165
  %conv24 = sext i8 %16 to i32, !dbg !4165
  %cmp25 = icmp eq i32 %conv24, 10, !dbg !4166
  br i1 %cmp25, label %lor.end, label %lor.rhs, !dbg !4167

lor.rhs:                                          ; preds = %lor.lhs.false23
  %17 = load i8*, i8** %cp2, align 8, !dbg !4168
  %18 = load i8, i8* %17, align 1, !dbg !4169
  %conv27 = sext i8 %18 to i32, !dbg !4169
  %cmp28 = icmp eq i32 %conv27, 13, !dbg !4170
  br label %lor.end, !dbg !4167

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false23, %lor.lhs.false, %while.cond16
  %19 = phi i1 [ true, %lor.lhs.false23 ], [ true, %lor.lhs.false ], [ true, %while.cond16 ], [ %cmp28, %lor.rhs ]
  br i1 %19, label %while.body30, label %while.end, !dbg !4155

while.body30:                                     ; preds = %lor.end
  %20 = load i8*, i8** %cp2, align 8, !dbg !4171
  %incdec.ptr = getelementptr inbounds i8, i8* %20, i32 1, !dbg !4171
  store i8* %incdec.ptr, i8** %cp2, align 8, !dbg !4171
  store i8 0, i8* %20, align 1, !dbg !4172
  br label %while.cond16, !dbg !4155, !llvm.loop !4173

while.end:                                        ; preds = %lor.end
  %21 = load i8*, i8** %cp, align 8, !dbg !4175
  store i8* %21, i8** %name, align 8, !dbg !4176
  %22 = load i8*, i8** %name, align 8, !dbg !4177
  %call31 = call i8* @strchr(i8* %22, i32 61), !dbg !4178
  store i8* %call31, i8** %value, align 8, !dbg !4179
  %23 = load i8*, i8** %value, align 8, !dbg !4180
  %cmp32 = icmp ne i8* %23, null, !dbg !4182
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !4183

if.then34:                                        ; preds = %while.end
  %24 = load i8*, i8** %value, align 8, !dbg !4184
  %incdec.ptr35 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4184
  store i8* %incdec.ptr35, i8** %value, align 8, !dbg !4184
  store i8 0, i8* %24, align 1, !dbg !4185
  br label %if.end36, !dbg !4186

if.end36:                                         ; preds = %if.then34, %while.end
  %25 = load i8*, i8** %name, align 8, !dbg !4187
  %call37 = call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i64 0, i64 0)), !dbg !4189
  %cmp38 = icmp eq i32 %call37, 0, !dbg !4190
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !4191

if.then40:                                        ; preds = %if.end36
  %26 = load i8*, i8** %name, align 8, !dbg !4192
  %27 = load i8*, i8** %value, align 8, !dbg !4194
  call void @no_value_required(i8* %26, i8* %27), !dbg !4195
  store i32 1, i32* @debug, align 4, !dbg !4196
  br label %if.end206, !dbg !4197

if.else:                                          ; preds = %if.end36
  %28 = load i8*, i8** %name, align 8, !dbg !4198
  %call41 = call i32 @strcasecmp(i8* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i64 0, i64 0)), !dbg !4200
  %cmp42 = icmp eq i32 %call41, 0, !dbg !4201
  br i1 %cmp42, label %if.then44, label %if.else47, !dbg !4202

if.then44:                                        ; preds = %if.else
  %29 = load i8*, i8** %name, align 8, !dbg !4203
  %30 = load i8*, i8** %value, align 8, !dbg !4205
  call void @value_required(i8* %29, i8* %30), !dbg !4206
  %31 = load i8*, i8** %value, align 8, !dbg !4207
  %call45 = call i32 @atoi(i8* %31), !dbg !4208
  %conv46 = trunc i32 %call45 to i16, !dbg !4209
  store i16 %conv46, i16* @port, align 2, !dbg !4210
  br label %if.end205, !dbg !4211

if.else47:                                        ; preds = %if.else
  %32 = load i8*, i8** %name, align 8, !dbg !4212
  %call48 = call i32 @strcasecmp(i8* %32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80, i64 0, i64 0)), !dbg !4214
  %cmp49 = icmp eq i32 %call48, 0, !dbg !4215
  br i1 %cmp49, label %if.then51, label %if.else53, !dbg !4216

if.then51:                                        ; preds = %if.else47
  %33 = load i8*, i8** %name, align 8, !dbg !4217
  %34 = load i8*, i8** %value, align 8, !dbg !4219
  call void @value_required(i8* %33, i8* %34), !dbg !4220
  %35 = load i8*, i8** %value, align 8, !dbg !4221
  %call52 = call i8* @e_strdup(i8* %35), !dbg !4222
  store i8* %call52, i8** @dir, align 8, !dbg !4223
  br label %if.end204, !dbg !4224

if.else53:                                        ; preds = %if.else47
  %36 = load i8*, i8** %name, align 8, !dbg !4225
  %call54 = call i32 @strcasecmp(i8* %36, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)), !dbg !4227
  %cmp55 = icmp eq i32 %call54, 0, !dbg !4228
  br i1 %cmp55, label %if.then57, label %if.else58, !dbg !4229

if.then57:                                        ; preds = %if.else53
  %37 = load i8*, i8** %name, align 8, !dbg !4230
  %38 = load i8*, i8** %value, align 8, !dbg !4232
  call void @no_value_required(i8* %37, i8* %38), !dbg !4233
  store i32 1, i32* @do_chroot, align 4, !dbg !4234
  store i32 1, i32* @no_symlink_check, align 4, !dbg !4235
  br label %if.end203, !dbg !4236

if.else58:                                        ; preds = %if.else53
  %39 = load i8*, i8** %name, align 8, !dbg !4237
  %call59 = call i32 @strcasecmp(i8* %39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i64 0, i64 0)), !dbg !4239
  %cmp60 = icmp eq i32 %call59, 0, !dbg !4240
  br i1 %cmp60, label %if.then62, label %if.else63, !dbg !4241

if.then62:                                        ; preds = %if.else58
  %40 = load i8*, i8** %name, align 8, !dbg !4242
  %41 = load i8*, i8** %value, align 8, !dbg !4244
  call void @no_value_required(i8* %40, i8* %41), !dbg !4245
  store i32 0, i32* @do_chroot, align 4, !dbg !4246
  store i32 0, i32* @no_symlink_check, align 4, !dbg !4247
  br label %if.end202, !dbg !4248

if.else63:                                        ; preds = %if.else58
  %42 = load i8*, i8** %name, align 8, !dbg !4249
  %call64 = call i32 @strcasecmp(i8* %42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.82, i64 0, i64 0)), !dbg !4251
  %cmp65 = icmp eq i32 %call64, 0, !dbg !4252
  br i1 %cmp65, label %if.then67, label %if.else69, !dbg !4253

if.then67:                                        ; preds = %if.else63
  %43 = load i8*, i8** %name, align 8, !dbg !4254
  %44 = load i8*, i8** %value, align 8, !dbg !4256
  call void @value_required(i8* %43, i8* %44), !dbg !4257
  %45 = load i8*, i8** %value, align 8, !dbg !4258
  %call68 = call i8* @e_strdup(i8* %45), !dbg !4259
  store i8* %call68, i8** @data_dir, align 8, !dbg !4260
  br label %if.end201, !dbg !4261

if.else69:                                        ; preds = %if.else63
  %46 = load i8*, i8** %name, align 8, !dbg !4262
  %call70 = call i32 @strcasecmp(i8* %46, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.83, i64 0, i64 0)), !dbg !4264
  %cmp71 = icmp eq i32 %call70, 0, !dbg !4265
  br i1 %cmp71, label %if.then73, label %if.else74, !dbg !4266

if.then73:                                        ; preds = %if.else69
  %47 = load i8*, i8** %name, align 8, !dbg !4267
  %48 = load i8*, i8** %value, align 8, !dbg !4269
  call void @no_value_required(i8* %47, i8* %48), !dbg !4270
  store i32 1, i32* @no_symlink_check, align 4, !dbg !4271
  br label %if.end200, !dbg !4272

if.else74:                                        ; preds = %if.else69
  %49 = load i8*, i8** %name, align 8, !dbg !4273
  %call75 = call i32 @strcasecmp(i8* %49, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.84, i64 0, i64 0)), !dbg !4275
  %cmp76 = icmp eq i32 %call75, 0, !dbg !4276
  br i1 %cmp76, label %if.then78, label %if.else79, !dbg !4277

if.then78:                                        ; preds = %if.else74
  %50 = load i8*, i8** %name, align 8, !dbg !4278
  %51 = load i8*, i8** %value, align 8, !dbg !4280
  call void @no_value_required(i8* %50, i8* %51), !dbg !4281
  store i32 0, i32* @no_symlink_check, align 4, !dbg !4282
  br label %if.end199, !dbg !4283

if.else79:                                        ; preds = %if.else74
  %52 = load i8*, i8** %name, align 8, !dbg !4284
  %call80 = call i32 @strcasecmp(i8* %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i64 0, i64 0)), !dbg !4286
  %cmp81 = icmp eq i32 %call80, 0, !dbg !4287
  br i1 %cmp81, label %if.then83, label %if.else85, !dbg !4288

if.then83:                                        ; preds = %if.else79
  %53 = load i8*, i8** %name, align 8, !dbg !4289
  %54 = load i8*, i8** %value, align 8, !dbg !4291
  call void @value_required(i8* %53, i8* %54), !dbg !4292
  %55 = load i8*, i8** %value, align 8, !dbg !4293
  %call84 = call i8* @e_strdup(i8* %55), !dbg !4294
  store i8* %call84, i8** @user, align 8, !dbg !4295
  br label %if.end198, !dbg !4296

if.else85:                                        ; preds = %if.else79
  %56 = load i8*, i8** %name, align 8, !dbg !4297
  %call86 = call i32 @strcasecmp(i8* %56, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i64 0, i64 0)), !dbg !4299
  %cmp87 = icmp eq i32 %call86, 0, !dbg !4300
  br i1 %cmp87, label %if.then89, label %if.else91, !dbg !4301

if.then89:                                        ; preds = %if.else85
  %57 = load i8*, i8** %name, align 8, !dbg !4302
  %58 = load i8*, i8** %value, align 8, !dbg !4304
  call void @value_required(i8* %57, i8* %58), !dbg !4305
  %59 = load i8*, i8** %value, align 8, !dbg !4306
  %call90 = call i8* @e_strdup(i8* %59), !dbg !4307
  store i8* %call90, i8** @cgi_pattern, align 8, !dbg !4308
  br label %if.end197, !dbg !4309

if.else91:                                        ; preds = %if.else85
  %60 = load i8*, i8** %name, align 8, !dbg !4310
  %call92 = call i32 @strcasecmp(i8* %60, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i64 0, i64 0)), !dbg !4312
  %cmp93 = icmp eq i32 %call92, 0, !dbg !4313
  br i1 %cmp93, label %if.then95, label %if.else97, !dbg !4314

if.then95:                                        ; preds = %if.else91
  %61 = load i8*, i8** %name, align 8, !dbg !4315
  %62 = load i8*, i8** %value, align 8, !dbg !4317
  call void @value_required(i8* %61, i8* %62), !dbg !4318
  %63 = load i8*, i8** %value, align 8, !dbg !4319
  %call96 = call i32 @atoi(i8* %63), !dbg !4320
  store i32 %call96, i32* @cgi_limit, align 4, !dbg !4321
  br label %if.end196, !dbg !4322

if.else97:                                        ; preds = %if.else91
  %64 = load i8*, i8** %name, align 8, !dbg !4323
  %call98 = call i32 @strcasecmp(i8* %64, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i64 0, i64 0)), !dbg !4325
  %cmp99 = icmp eq i32 %call98, 0, !dbg !4326
  br i1 %cmp99, label %if.then101, label %if.else103, !dbg !4327

if.then101:                                       ; preds = %if.else97
  %65 = load i8*, i8** %name, align 8, !dbg !4328
  %66 = load i8*, i8** %value, align 8, !dbg !4330
  call void @value_required(i8* %65, i8* %66), !dbg !4331
  %67 = load i8*, i8** %value, align 8, !dbg !4332
  %call102 = call i8* @e_strdup(i8* %67), !dbg !4333
  store i8* %call102, i8** @url_pattern, align 8, !dbg !4334
  br label %if.end195, !dbg !4335

if.else103:                                       ; preds = %if.else97
  %68 = load i8*, i8** %name, align 8, !dbg !4336
  %call104 = call i32 @strcasecmp(i8* %68, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0)), !dbg !4338
  %cmp105 = icmp eq i32 %call104, 0, !dbg !4339
  br i1 %cmp105, label %if.then111, label %lor.lhs.false107, !dbg !4340

lor.lhs.false107:                                 ; preds = %if.else103
  %69 = load i8*, i8** %name, align 8, !dbg !4341
  %call108 = call i32 @strcasecmp(i8* %69, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0)), !dbg !4342
  %cmp109 = icmp eq i32 %call108, 0, !dbg !4343
  br i1 %cmp109, label %if.then111, label %if.else112, !dbg !4344

if.then111:                                       ; preds = %lor.lhs.false107, %if.else103
  %70 = load i8*, i8** %name, align 8, !dbg !4345
  %71 = load i8*, i8** %value, align 8, !dbg !4347
  call void @no_value_required(i8* %70, i8* %71), !dbg !4348
  store i32 1, i32* @no_empty_referrers, align 4, !dbg !4349
  br label %if.end194, !dbg !4350

if.else112:                                       ; preds = %lor.lhs.false107
  %72 = load i8*, i8** %name, align 8, !dbg !4351
  %call113 = call i32 @strcasecmp(i8* %72, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i64 0, i64 0)), !dbg !4353
  %cmp114 = icmp eq i32 %call113, 0, !dbg !4354
  br i1 %cmp114, label %if.then116, label %if.else118, !dbg !4355

if.then116:                                       ; preds = %if.else112
  %73 = load i8*, i8** %name, align 8, !dbg !4356
  %74 = load i8*, i8** %value, align 8, !dbg !4358
  call void @value_required(i8* %73, i8* %74), !dbg !4359
  %75 = load i8*, i8** %value, align 8, !dbg !4360
  %call117 = call i8* @e_strdup(i8* %75), !dbg !4361
  store i8* %call117, i8** @local_pattern, align 8, !dbg !4362
  br label %if.end193, !dbg !4363

if.else118:                                       ; preds = %if.else112
  %76 = load i8*, i8** %name, align 8, !dbg !4364
  %call119 = call i32 @strcasecmp(i8* %76, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.92, i64 0, i64 0)), !dbg !4366
  %cmp120 = icmp eq i32 %call119, 0, !dbg !4367
  br i1 %cmp120, label %if.then122, label %if.else124, !dbg !4368

if.then122:                                       ; preds = %if.else118
  %77 = load i8*, i8** %name, align 8, !dbg !4369
  %78 = load i8*, i8** %value, align 8, !dbg !4371
  call void @value_required(i8* %77, i8* %78), !dbg !4372
  %79 = load i8*, i8** %value, align 8, !dbg !4373
  %call123 = call i8* @e_strdup(i8* %79), !dbg !4374
  store i8* %call123, i8** @throttlefile, align 8, !dbg !4375
  br label %if.end192, !dbg !4376

if.else124:                                       ; preds = %if.else118
  %80 = load i8*, i8** %name, align 8, !dbg !4377
  %call125 = call i32 @strcasecmp(i8* %80, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i64 0, i64 0)), !dbg !4379
  %cmp126 = icmp eq i32 %call125, 0, !dbg !4380
  br i1 %cmp126, label %if.then128, label %if.else130, !dbg !4381

if.then128:                                       ; preds = %if.else124
  %81 = load i8*, i8** %name, align 8, !dbg !4382
  %82 = load i8*, i8** %value, align 8, !dbg !4384
  call void @value_required(i8* %81, i8* %82), !dbg !4385
  %83 = load i8*, i8** %value, align 8, !dbg !4386
  %call129 = call i8* @e_strdup(i8* %83), !dbg !4387
  store i8* %call129, i8** @hostname, align 8, !dbg !4388
  br label %if.end191, !dbg !4389

if.else130:                                       ; preds = %if.else124
  %84 = load i8*, i8** %name, align 8, !dbg !4390
  %call131 = call i32 @strcasecmp(i8* %84, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.94, i64 0, i64 0)), !dbg !4392
  %cmp132 = icmp eq i32 %call131, 0, !dbg !4393
  br i1 %cmp132, label %if.then134, label %if.else136, !dbg !4394

if.then134:                                       ; preds = %if.else130
  %85 = load i8*, i8** %name, align 8, !dbg !4395
  %86 = load i8*, i8** %value, align 8, !dbg !4397
  call void @value_required(i8* %85, i8* %86), !dbg !4398
  %87 = load i8*, i8** %value, align 8, !dbg !4399
  %call135 = call i8* @e_strdup(i8* %87), !dbg !4400
  store i8* %call135, i8** @logfile, align 8, !dbg !4401
  br label %if.end190, !dbg !4402

if.else136:                                       ; preds = %if.else130
  %88 = load i8*, i8** %name, align 8, !dbg !4403
  %call137 = call i32 @strcasecmp(i8* %88, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i64 0, i64 0)), !dbg !4405
  %cmp138 = icmp eq i32 %call137, 0, !dbg !4406
  br i1 %cmp138, label %if.then140, label %if.else141, !dbg !4407

if.then140:                                       ; preds = %if.else136
  %89 = load i8*, i8** %name, align 8, !dbg !4408
  %90 = load i8*, i8** %value, align 8, !dbg !4410
  call void @no_value_required(i8* %89, i8* %90), !dbg !4411
  store i32 1, i32* @do_vhost, align 4, !dbg !4412
  br label %if.end189, !dbg !4413

if.else141:                                       ; preds = %if.else136
  %91 = load i8*, i8** %name, align 8, !dbg !4414
  %call142 = call i32 @strcasecmp(i8* %91, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i64 0, i64 0)), !dbg !4416
  %cmp143 = icmp eq i32 %call142, 0, !dbg !4417
  br i1 %cmp143, label %if.then145, label %if.else146, !dbg !4418

if.then145:                                       ; preds = %if.else141
  %92 = load i8*, i8** %name, align 8, !dbg !4419
  %93 = load i8*, i8** %value, align 8, !dbg !4421
  call void @no_value_required(i8* %92, i8* %93), !dbg !4422
  store i32 0, i32* @do_vhost, align 4, !dbg !4423
  br label %if.end188, !dbg !4424

if.else146:                                       ; preds = %if.else141
  %94 = load i8*, i8** %name, align 8, !dbg !4425
  %call147 = call i32 @strcasecmp(i8* %94, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i64 0, i64 0)), !dbg !4427
  %cmp148 = icmp eq i32 %call147, 0, !dbg !4428
  br i1 %cmp148, label %if.then150, label %if.else151, !dbg !4429

if.then150:                                       ; preds = %if.else146
  %95 = load i8*, i8** %name, align 8, !dbg !4430
  %96 = load i8*, i8** %value, align 8, !dbg !4432
  call void @no_value_required(i8* %95, i8* %96), !dbg !4433
  store i32 1, i32* @do_global_passwd, align 4, !dbg !4434
  br label %if.end187, !dbg !4435

if.else151:                                       ; preds = %if.else146
  %97 = load i8*, i8** %name, align 8, !dbg !4436
  %call152 = call i32 @strcasecmp(i8* %97, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.98, i64 0, i64 0)), !dbg !4438
  %cmp153 = icmp eq i32 %call152, 0, !dbg !4439
  br i1 %cmp153, label %if.then155, label %if.else156, !dbg !4440

if.then155:                                       ; preds = %if.else151
  %98 = load i8*, i8** %name, align 8, !dbg !4441
  %99 = load i8*, i8** %value, align 8, !dbg !4443
  call void @no_value_required(i8* %98, i8* %99), !dbg !4444
  store i32 0, i32* @do_global_passwd, align 4, !dbg !4445
  br label %if.end186, !dbg !4446

if.else156:                                       ; preds = %if.else151
  %100 = load i8*, i8** %name, align 8, !dbg !4447
  %call157 = call i32 @strcasecmp(i8* %100, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.99, i64 0, i64 0)), !dbg !4449
  %cmp158 = icmp eq i32 %call157, 0, !dbg !4450
  br i1 %cmp158, label %if.then160, label %if.else162, !dbg !4451

if.then160:                                       ; preds = %if.else156
  %101 = load i8*, i8** %name, align 8, !dbg !4452
  %102 = load i8*, i8** %value, align 8, !dbg !4454
  call void @value_required(i8* %101, i8* %102), !dbg !4455
  %103 = load i8*, i8** %value, align 8, !dbg !4456
  %call161 = call i8* @e_strdup(i8* %103), !dbg !4457
  store i8* %call161, i8** @pidfile, align 8, !dbg !4458
  br label %if.end185, !dbg !4459

if.else162:                                       ; preds = %if.else156
  %104 = load i8*, i8** %name, align 8, !dbg !4460
  %call163 = call i32 @strcasecmp(i8* %104, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.100, i64 0, i64 0)), !dbg !4462
  %cmp164 = icmp eq i32 %call163, 0, !dbg !4463
  br i1 %cmp164, label %if.then166, label %if.else168, !dbg !4464

if.then166:                                       ; preds = %if.else162
  %105 = load i8*, i8** %name, align 8, !dbg !4465
  %106 = load i8*, i8** %value, align 8, !dbg !4467
  call void @value_required(i8* %105, i8* %106), !dbg !4468
  %107 = load i8*, i8** %value, align 8, !dbg !4469
  %call167 = call i8* @e_strdup(i8* %107), !dbg !4470
  store i8* %call167, i8** @charset, align 8, !dbg !4471
  br label %if.end184, !dbg !4472

if.else168:                                       ; preds = %if.else162
  %108 = load i8*, i8** %name, align 8, !dbg !4473
  %call169 = call i32 @strcasecmp(i8* %108, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0)), !dbg !4475
  %cmp170 = icmp eq i32 %call169, 0, !dbg !4476
  br i1 %cmp170, label %if.then172, label %if.else174, !dbg !4477

if.then172:                                       ; preds = %if.else168
  %109 = load i8*, i8** %name, align 8, !dbg !4478
  %110 = load i8*, i8** %value, align 8, !dbg !4480
  call void @value_required(i8* %109, i8* %110), !dbg !4481
  %111 = load i8*, i8** %value, align 8, !dbg !4482
  %call173 = call i8* @e_strdup(i8* %111), !dbg !4483
  store i8* %call173, i8** @p3p, align 8, !dbg !4484
  br label %if.end183, !dbg !4485

if.else174:                                       ; preds = %if.else168
  %112 = load i8*, i8** %name, align 8, !dbg !4486
  %call175 = call i32 @strcasecmp(i8* %112, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i64 0, i64 0)), !dbg !4488
  %cmp176 = icmp eq i32 %call175, 0, !dbg !4489
  br i1 %cmp176, label %if.then178, label %if.else180, !dbg !4490

if.then178:                                       ; preds = %if.else174
  %113 = load i8*, i8** %name, align 8, !dbg !4491
  %114 = load i8*, i8** %value, align 8, !dbg !4493
  call void @value_required(i8* %113, i8* %114), !dbg !4494
  %115 = load i8*, i8** %value, align 8, !dbg !4495
  %call179 = call i32 @atoi(i8* %115), !dbg !4496
  store i32 %call179, i32* @max_age, align 4, !dbg !4497
  br label %if.end182, !dbg !4498

if.else180:                                       ; preds = %if.else174
  %116 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !4499
  %117 = load i8*, i8** @argv0, align 8, !dbg !4501
  %118 = load i8*, i8** %name, align 8, !dbg !4502
  %call181 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %116, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.103, i64 0, i64 0), i8* %117, i8* %118), !dbg !4503
  call void @exit(i32 1) #13, !dbg !4504
  unreachable, !dbg !4504

if.end182:                                        ; preds = %if.then178
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.then172
  br label %if.end184

if.end184:                                        ; preds = %if.end183, %if.then166
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.then160
  br label %if.end186

if.end186:                                        ; preds = %if.end185, %if.then155
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.then150
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %if.then145
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %if.then140
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.then134
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.then128
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then122
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.then116
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.then111
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %if.then101
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.then95
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %if.then89
  br label %if.end198

if.end198:                                        ; preds = %if.end197, %if.then83
  br label %if.end199

if.end199:                                        ; preds = %if.end198, %if.then78
  br label %if.end200

if.end200:                                        ; preds = %if.end199, %if.then73
  br label %if.end201

if.end201:                                        ; preds = %if.end200, %if.then67
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.then62
  br label %if.end203

if.end203:                                        ; preds = %if.end202, %if.then57
  br label %if.end204

if.end204:                                        ; preds = %if.end203, %if.then51
  br label %if.end205

if.end205:                                        ; preds = %if.end204, %if.then44
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.then40
  %119 = load i8*, i8** %cp2, align 8, !dbg !4505
  store i8* %119, i8** %cp, align 8, !dbg !4506
  %120 = load i8*, i8** %cp, align 8, !dbg !4507
  %call207 = call i64 @strspn(i8* %120, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0)), !dbg !4508
  %121 = load i8*, i8** %cp, align 8, !dbg !4509
  %add.ptr208 = getelementptr inbounds i8, i8* %121, i64 %call207, !dbg !4509
  store i8* %add.ptr208, i8** %cp, align 8, !dbg !4509
  br label %while.cond10, !dbg !4145, !llvm.loop !4510

while.end209:                                     ; preds = %while.cond10
  br label %while.cond, !dbg !4125, !llvm.loop !4512

while.end210:                                     ; preds = %while.cond
  %122 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !4514
  %call211 = call i32 @fclose(%struct.__sFILE* %122), !dbg !4515
  ret void, !dbg !4516
}

declare i32 @atoi(i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @usage() #0 !dbg !4517 {
entry:
  %0 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !4518
  %1 = load i8*, i8** @argv0, align 8, !dbg !4519
  %call = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %0, i8* getelementptr inbounds ([219 x i8], [219 x i8]* @.str.108, i64 0, i64 0), i8* %1), !dbg !4520
  call void @exit(i32 1) #13, !dbg !4521
  unreachable, !dbg !4521
}

declare i64 @strspn(i8*, i8*) #3

declare i64 @strcspn(i8*, i8*) #3

declare i32 @strcasecmp(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @no_value_required(i8* %name, i8* %value) #0 !dbg !4522 {
entry:
  %name.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4525, metadata !DIExpression()), !dbg !4526
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !4527, metadata !DIExpression()), !dbg !4528
  %0 = load i8*, i8** %value.addr, align 8, !dbg !4529
  %cmp = icmp ne i8* %0, null, !dbg !4531
  br i1 %cmp, label %if.then, label %if.end, !dbg !4532

if.then:                                          ; preds = %entry
  %1 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !4533
  %2 = load i8*, i8** @argv0, align 8, !dbg !4535
  %3 = load i8*, i8** %name.addr, align 8, !dbg !4536
  %call = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.104, i64 0, i64 0), i8* %2, i8* %3), !dbg !4537
  call void @exit(i32 1) #13, !dbg !4538
  unreachable, !dbg !4538

if.end:                                           ; preds = %entry
  ret void, !dbg !4539
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @value_required(i8* %name, i8* %value) #0 !dbg !4540 {
entry:
  %name.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4541, metadata !DIExpression()), !dbg !4542
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !4543, metadata !DIExpression()), !dbg !4544
  %0 = load i8*, i8** %value.addr, align 8, !dbg !4545
  %cmp = icmp eq i8* %0, null, !dbg !4547
  br i1 %cmp, label %if.then, label %if.end, !dbg !4548

if.then:                                          ; preds = %entry
  %1 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8, !dbg !4549
  %2 = load i8*, i8** @argv0, align 8, !dbg !4551
  %3 = load i8*, i8** %name.addr, align 8, !dbg !4552
  %call = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.105, i64 0, i64 0), i8* %2, i8* %3), !dbg !4553
  call void @exit(i32 1) #13, !dbg !4554
  unreachable, !dbg !4554

if.end:                                           ; preds = %entry
  ret void, !dbg !4555
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.httpd_server* @httpd_initialize(i8* %hostname, %union.httpd_sockaddr* %sa4P, %union.httpd_sockaddr* %sa6P, i16 zeroext %port, i8* %cgi_pattern, i32 %cgi_limit, i8* %charset, i8* %p3p, i32 %max_age, i8* %cwd, i32 %no_log, %struct.__sFILE* %logfp, i32 %no_symlink_check, i32 %vhost, i32 %global_passwd, i8* %url_pattern, i8* %local_pattern, i32 %no_empty_referrers) #0 !dbg !668 {
entry:
  %retval = alloca %struct.httpd_server*, align 8
  %hostname.addr = alloca i8*, align 8
  %sa4P.addr = alloca %union.httpd_sockaddr*, align 8
  %sa6P.addr = alloca %union.httpd_sockaddr*, align 8
  %port.addr = alloca i16, align 2
  %cgi_pattern.addr = alloca i8*, align 8
  %cgi_limit.addr = alloca i32, align 4
  %charset.addr = alloca i8*, align 8
  %p3p.addr = alloca i8*, align 8
  %max_age.addr = alloca i32, align 4
  %cwd.addr = alloca i8*, align 8
  %no_log.addr = alloca i32, align 4
  %logfp.addr = alloca %struct.__sFILE*, align 8
  %no_symlink_check.addr = alloca i32, align 4
  %vhost.addr = alloca i32, align 4
  %global_passwd.addr = alloca i32, align 4
  %url_pattern.addr = alloca i8*, align 8
  %local_pattern.addr = alloca i8*, align 8
  %no_empty_referrers.addr = alloca i32, align 4
  %hs = alloca %struct.httpd_server*, align 8
  %cp = alloca i8*, align 8
  store i8* %hostname, i8** %hostname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %hostname.addr, metadata !4556, metadata !DIExpression()), !dbg !4557
  store %union.httpd_sockaddr* %sa4P, %union.httpd_sockaddr** %sa4P.addr, align 8
  call void @llvm.dbg.declare(metadata %union.httpd_sockaddr** %sa4P.addr, metadata !4558, metadata !DIExpression()), !dbg !4559
  store %union.httpd_sockaddr* %sa6P, %union.httpd_sockaddr** %sa6P.addr, align 8
  call void @llvm.dbg.declare(metadata %union.httpd_sockaddr** %sa6P.addr, metadata !4560, metadata !DIExpression()), !dbg !4561
  store i16 %port, i16* %port.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %port.addr, metadata !4562, metadata !DIExpression()), !dbg !4563
  store i8* %cgi_pattern, i8** %cgi_pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cgi_pattern.addr, metadata !4564, metadata !DIExpression()), !dbg !4565
  store i32 %cgi_limit, i32* %cgi_limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cgi_limit.addr, metadata !4566, metadata !DIExpression()), !dbg !4567
  store i8* %charset, i8** %charset.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %charset.addr, metadata !4568, metadata !DIExpression()), !dbg !4569
  store i8* %p3p, i8** %p3p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p3p.addr, metadata !4570, metadata !DIExpression()), !dbg !4571
  store i32 %max_age, i32* %max_age.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_age.addr, metadata !4572, metadata !DIExpression()), !dbg !4573
  store i8* %cwd, i8** %cwd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cwd.addr, metadata !4574, metadata !DIExpression()), !dbg !4575
  store i32 %no_log, i32* %no_log.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %no_log.addr, metadata !4576, metadata !DIExpression()), !dbg !4577
  store %struct.__sFILE* %logfp, %struct.__sFILE** %logfp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__sFILE** %logfp.addr, metadata !4578, metadata !DIExpression()), !dbg !4579
  store i32 %no_symlink_check, i32* %no_symlink_check.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %no_symlink_check.addr, metadata !4580, metadata !DIExpression()), !dbg !4581
  store i32 %vhost, i32* %vhost.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vhost.addr, metadata !4582, metadata !DIExpression()), !dbg !4583
  store i32 %global_passwd, i32* %global_passwd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %global_passwd.addr, metadata !4584, metadata !DIExpression()), !dbg !4585
  store i8* %url_pattern, i8** %url_pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %url_pattern.addr, metadata !4586, metadata !DIExpression()), !dbg !4587
  store i8* %local_pattern, i8** %local_pattern.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %local_pattern.addr, metadata !4588, metadata !DIExpression()), !dbg !4589
  store i32 %no_empty_referrers, i32* %no_empty_referrers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %no_empty_referrers.addr, metadata !4590, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.declare(metadata %struct.httpd_server** %hs, metadata !4592, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !4594, metadata !DIExpression()), !dbg !4595
  call void @check_options(), !dbg !4596
  %call = call i8* @malloc(i64 136) #15, !dbg !4597
  %0 = bitcast i8* %call to %struct.httpd_server*, !dbg !4597
  store %struct.httpd_server* %0, %struct.httpd_server** %hs, align 8, !dbg !4598
  %1 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4599
  %cmp = icmp eq %struct.httpd_server* %1, null, !dbg !4601
  br i1 %cmp, label %if.then, label %if.end, !dbg !4602

if.then:                                          ; preds = %entry
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.134, i64 0, i64 0)), !dbg !4603
  store %struct.httpd_server* null, %struct.httpd_server** %retval, align 8, !dbg !4605
  br label %return, !dbg !4605

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %hostname.addr, align 8, !dbg !4606
  %cmp1 = icmp ne i8* %2, null, !dbg !4608
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !4609

if.then2:                                         ; preds = %if.end
  %3 = load i8*, i8** %hostname.addr, align 8, !dbg !4610
  %call3 = call i8* @strdup(i8* %3), !dbg !4612
  %4 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4613
  %binding_hostname = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %4, i32 0, i32 0, !dbg !4614
  store i8* %call3, i8** %binding_hostname, align 8, !dbg !4615
  %5 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4616
  %binding_hostname4 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %5, i32 0, i32 0, !dbg !4618
  %6 = load i8*, i8** %binding_hostname4, align 8, !dbg !4618
  %cmp5 = icmp eq i8* %6, null, !dbg !4619
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4620

if.then6:                                         ; preds = %if.then2
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.135, i64 0, i64 0)), !dbg !4621
  store %struct.httpd_server* null, %struct.httpd_server** %retval, align 8, !dbg !4623
  br label %return, !dbg !4623

if.end7:                                          ; preds = %if.then2
  %7 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4624
  %binding_hostname8 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %7, i32 0, i32 0, !dbg !4625
  %8 = load i8*, i8** %binding_hostname8, align 8, !dbg !4625
  %9 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4626
  %server_hostname = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %9, i32 0, i32 1, !dbg !4627
  store i8* %8, i8** %server_hostname, align 8, !dbg !4628
  br label %if.end24, !dbg !4629

if.else:                                          ; preds = %if.end
  %10 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4630
  %binding_hostname9 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %10, i32 0, i32 0, !dbg !4632
  store i8* null, i8** %binding_hostname9, align 8, !dbg !4633
  %11 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4634
  %server_hostname10 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %11, i32 0, i32 1, !dbg !4635
  store i8* null, i8** %server_hostname10, align 8, !dbg !4636
  %call11 = call i32 @gethostname(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @httpd_initialize.ghnbuf, i64 0, i64 0), i64 256), !dbg !4637
  %cmp12 = icmp slt i32 %call11, 0, !dbg !4639
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !4640

if.then13:                                        ; preds = %if.else
  store i8 0, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @httpd_initialize.ghnbuf, i64 0, i64 0), align 16, !dbg !4641
  br label %if.end14, !dbg !4642

if.end14:                                         ; preds = %if.then13, %if.else
  %12 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4643
  %server_hostname15 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %12, i32 0, i32 1, !dbg !4645
  %13 = load i8*, i8** %server_hostname15, align 8, !dbg !4645
  %cmp16 = icmp eq i8* %13, null, !dbg !4646
  br i1 %cmp16, label %if.then17, label %if.end23, !dbg !4647

if.then17:                                        ; preds = %if.end14
  %14 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @httpd_initialize.ghnbuf, i64 0, i64 0), align 16, !dbg !4648
  %conv = sext i8 %14 to i32, !dbg !4648
  %cmp18 = icmp ne i32 %conv, 0, !dbg !4651
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !4652

if.then20:                                        ; preds = %if.then17
  %15 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4653
  %server_hostname21 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %15, i32 0, i32 1, !dbg !4654
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @httpd_initialize.ghnbuf, i64 0, i64 0), i8** %server_hostname21, align 8, !dbg !4655
  br label %if.end22, !dbg !4653

if.end22:                                         ; preds = %if.then20, %if.then17
  br label %if.end23, !dbg !4656

if.end23:                                         ; preds = %if.end22, %if.end14
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end7
  %16 = load i16, i16* %port.addr, align 2, !dbg !4657
  %17 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4658
  %port25 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %17, i32 0, i32 2, !dbg !4659
  store i16 %16, i16* %port25, align 8, !dbg !4660
  %18 = load i8*, i8** %cgi_pattern.addr, align 8, !dbg !4661
  %cmp26 = icmp eq i8* %18, null, !dbg !4663
  br i1 %cmp26, label %if.then28, label %if.else30, !dbg !4664

if.then28:                                        ; preds = %if.end24
  %19 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4665
  %cgi_pattern29 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %19, i32 0, i32 3, !dbg !4666
  store i8* null, i8** %cgi_pattern29, align 8, !dbg !4667
  br label %if.end52, !dbg !4665

if.else30:                                        ; preds = %if.end24
  %20 = load i8*, i8** %cgi_pattern.addr, align 8, !dbg !4668
  %arrayidx = getelementptr inbounds i8, i8* %20, i64 0, !dbg !4668
  %21 = load i8, i8* %arrayidx, align 1, !dbg !4668
  %conv31 = sext i8 %21 to i32, !dbg !4668
  %cmp32 = icmp eq i32 %conv31, 47, !dbg !4671
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !4672

if.then34:                                        ; preds = %if.else30
  %22 = load i8*, i8** %cgi_pattern.addr, align 8, !dbg !4673
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !4673
  store i8* %incdec.ptr, i8** %cgi_pattern.addr, align 8, !dbg !4673
  br label %if.end35, !dbg !4673

if.end35:                                         ; preds = %if.then34, %if.else30
  %23 = load i8*, i8** %cgi_pattern.addr, align 8, !dbg !4674
  %call36 = call i8* @strdup(i8* %23), !dbg !4675
  %24 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4676
  %cgi_pattern37 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %24, i32 0, i32 3, !dbg !4677
  store i8* %call36, i8** %cgi_pattern37, align 8, !dbg !4678
  %25 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4679
  %cgi_pattern38 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %25, i32 0, i32 3, !dbg !4681
  %26 = load i8*, i8** %cgi_pattern38, align 8, !dbg !4681
  %cmp39 = icmp eq i8* %26, null, !dbg !4682
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !4683

if.then41:                                        ; preds = %if.end35
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.136, i64 0, i64 0)), !dbg !4684
  store %struct.httpd_server* null, %struct.httpd_server** %retval, align 8, !dbg !4686
  br label %return, !dbg !4686

if.end42:                                         ; preds = %if.end35
  br label %while.cond, !dbg !4687

while.cond:                                       ; preds = %while.body, %if.end42
  %27 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4688
  %cgi_pattern43 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %27, i32 0, i32 3, !dbg !4689
  %28 = load i8*, i8** %cgi_pattern43, align 8, !dbg !4689
  %call44 = call i8* @strstr(i8* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.137, i64 0, i64 0)), !dbg !4690
  store i8* %call44, i8** %cp, align 8, !dbg !4691
  %cmp45 = icmp ne i8* %call44, null, !dbg !4692
  br i1 %cmp45, label %while.body, label %while.end, !dbg !4687

while.body:                                       ; preds = %while.cond
  %29 = load i8*, i8** %cp, align 8, !dbg !4693
  %add.ptr = getelementptr inbounds i8, i8* %29, i64 1, !dbg !4693
  %30 = load i8*, i8** %cp, align 8, !dbg !4693
  %add.ptr47 = getelementptr inbounds i8, i8* %30, i64 2, !dbg !4693
  %31 = load i8*, i8** %cp, align 8, !dbg !4693
  %add.ptr48 = getelementptr inbounds i8, i8* %31, i64 2, !dbg !4693
  %call49 = call i64 @strlen(i8* %add.ptr48), !dbg !4693
  %add = add i64 %call49, 1, !dbg !4693
  %32 = load i8*, i8** %cp, align 8, !dbg !4693
  %add.ptr50 = getelementptr inbounds i8, i8* %32, i64 1, !dbg !4693
  %33 = call i64 @llvm.objectsize.i64.p0i8(i8* %add.ptr50, i1 false, i1 true, i1 false), !dbg !4693
  %call51 = call i8* @__memmove_chk(i8* %add.ptr, i8* %add.ptr47, i64 %add, i64 %33) #11, !dbg !4693
  br label %while.cond, !dbg !4687, !llvm.loop !4694

while.end:                                        ; preds = %while.cond
  br label %if.end52

if.end52:                                         ; preds = %while.end, %if.then28
  %34 = load i32, i32* %cgi_limit.addr, align 4, !dbg !4695
  %35 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4696
  %cgi_limit53 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %35, i32 0, i32 4, !dbg !4697
  store i32 %34, i32* %cgi_limit53, align 8, !dbg !4698
  %36 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4699
  %cgi_count = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %36, i32 0, i32 5, !dbg !4700
  store i32 0, i32* %cgi_count, align 4, !dbg !4701
  %37 = load i8*, i8** %charset.addr, align 8, !dbg !4702
  %call54 = call i8* @strdup(i8* %37), !dbg !4703
  %38 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4704
  %charset55 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %38, i32 0, i32 6, !dbg !4705
  store i8* %call54, i8** %charset55, align 8, !dbg !4706
  %39 = load i8*, i8** %p3p.addr, align 8, !dbg !4707
  %call56 = call i8* @strdup(i8* %39), !dbg !4708
  %40 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4709
  %p3p57 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %40, i32 0, i32 7, !dbg !4710
  store i8* %call56, i8** %p3p57, align 8, !dbg !4711
  %41 = load i32, i32* %max_age.addr, align 4, !dbg !4712
  %42 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4713
  %max_age58 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %42, i32 0, i32 8, !dbg !4714
  store i32 %41, i32* %max_age58, align 8, !dbg !4715
  %43 = load i8*, i8** %cwd.addr, align 8, !dbg !4716
  %call59 = call i8* @strdup(i8* %43), !dbg !4717
  %44 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4718
  %cwd60 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %44, i32 0, i32 9, !dbg !4719
  store i8* %call59, i8** %cwd60, align 8, !dbg !4720
  %45 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4721
  %cwd61 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %45, i32 0, i32 9, !dbg !4723
  %46 = load i8*, i8** %cwd61, align 8, !dbg !4723
  %cmp62 = icmp eq i8* %46, null, !dbg !4724
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !4725

if.then64:                                        ; preds = %if.end52
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.138, i64 0, i64 0)), !dbg !4726
  store %struct.httpd_server* null, %struct.httpd_server** %retval, align 8, !dbg !4728
  br label %return, !dbg !4728

if.end65:                                         ; preds = %if.end52
  %47 = load i8*, i8** %url_pattern.addr, align 8, !dbg !4729
  %cmp66 = icmp eq i8* %47, null, !dbg !4731
  br i1 %cmp66, label %if.then68, label %if.else70, !dbg !4732

if.then68:                                        ; preds = %if.end65
  %48 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4733
  %url_pattern69 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %48, i32 0, i32 17, !dbg !4734
  store i8* null, i8** %url_pattern69, align 8, !dbg !4735
  br label %if.end78, !dbg !4733

if.else70:                                        ; preds = %if.end65
  %49 = load i8*, i8** %url_pattern.addr, align 8, !dbg !4736
  %call71 = call i8* @strdup(i8* %49), !dbg !4738
  %50 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4739
  %url_pattern72 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %50, i32 0, i32 17, !dbg !4740
  store i8* %call71, i8** %url_pattern72, align 8, !dbg !4741
  %51 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4742
  %url_pattern73 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %51, i32 0, i32 17, !dbg !4744
  %52 = load i8*, i8** %url_pattern73, align 8, !dbg !4744
  %cmp74 = icmp eq i8* %52, null, !dbg !4745
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !4746

if.then76:                                        ; preds = %if.else70
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.139, i64 0, i64 0)), !dbg !4747
  store %struct.httpd_server* null, %struct.httpd_server** %retval, align 8, !dbg !4749
  br label %return, !dbg !4749

if.end77:                                         ; preds = %if.else70
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then68
  %53 = load i8*, i8** %local_pattern.addr, align 8, !dbg !4750
  %cmp79 = icmp eq i8* %53, null, !dbg !4752
  br i1 %cmp79, label %if.then81, label %if.else83, !dbg !4753

if.then81:                                        ; preds = %if.end78
  %54 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4754
  %local_pattern82 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %54, i32 0, i32 18, !dbg !4755
  store i8* null, i8** %local_pattern82, align 8, !dbg !4756
  br label %if.end91, !dbg !4754

if.else83:                                        ; preds = %if.end78
  %55 = load i8*, i8** %local_pattern.addr, align 8, !dbg !4757
  %call84 = call i8* @strdup(i8* %55), !dbg !4759
  %56 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4760
  %local_pattern85 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %56, i32 0, i32 18, !dbg !4761
  store i8* %call84, i8** %local_pattern85, align 8, !dbg !4762
  %57 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4763
  %local_pattern86 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %57, i32 0, i32 18, !dbg !4765
  %58 = load i8*, i8** %local_pattern86, align 8, !dbg !4765
  %cmp87 = icmp eq i8* %58, null, !dbg !4766
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !4767

if.then89:                                        ; preds = %if.else83
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6.140, i64 0, i64 0)), !dbg !4768
  store %struct.httpd_server* null, %struct.httpd_server** %retval, align 8, !dbg !4770
  br label %return, !dbg !4770

if.end90:                                         ; preds = %if.else83
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then81
  %59 = load i32, i32* %no_log.addr, align 4, !dbg !4771
  %60 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4772
  %no_log92 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %60, i32 0, i32 12, !dbg !4773
  store i32 %59, i32* %no_log92, align 8, !dbg !4774
  %61 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4775
  %logfp93 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %61, i32 0, i32 13, !dbg !4776
  store %struct.__sFILE* null, %struct.__sFILE** %logfp93, align 8, !dbg !4777
  %62 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4778
  %63 = load %struct.__sFILE*, %struct.__sFILE** %logfp.addr, align 8, !dbg !4779
  call void @httpd_set_logfp(%struct.httpd_server* %62, %struct.__sFILE* %63), !dbg !4780
  %64 = load i32, i32* %no_symlink_check.addr, align 4, !dbg !4781
  %65 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4782
  %no_symlink_check94 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %65, i32 0, i32 14, !dbg !4783
  store i32 %64, i32* %no_symlink_check94, align 8, !dbg !4784
  %66 = load i32, i32* %vhost.addr, align 4, !dbg !4785
  %67 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4786
  %vhost95 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %67, i32 0, i32 15, !dbg !4787
  store i32 %66, i32* %vhost95, align 4, !dbg !4788
  %68 = load i32, i32* %global_passwd.addr, align 4, !dbg !4789
  %69 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4790
  %global_passwd96 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %69, i32 0, i32 16, !dbg !4791
  store i32 %68, i32* %global_passwd96, align 8, !dbg !4792
  %70 = load i32, i32* %no_empty_referrers.addr, align 4, !dbg !4793
  %71 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4794
  %no_empty_referrers97 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %71, i32 0, i32 19, !dbg !4795
  store i32 %70, i32* %no_empty_referrers97, align 8, !dbg !4796
  %72 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa6P.addr, align 8, !dbg !4797
  %cmp98 = icmp eq %union.httpd_sockaddr* %72, null, !dbg !4799
  br i1 %cmp98, label %if.then100, label %if.else101, !dbg !4800

if.then100:                                       ; preds = %if.end91
  %73 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4801
  %listen6_fd = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %73, i32 0, i32 11, !dbg !4802
  store i32 -1, i32* %listen6_fd, align 4, !dbg !4803
  br label %if.end104, !dbg !4801

if.else101:                                       ; preds = %if.end91
  %74 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa6P.addr, align 8, !dbg !4804
  %call102 = call i32 @initialize_listen_socket(%union.httpd_sockaddr* %74), !dbg !4805
  %75 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4806
  %listen6_fd103 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %75, i32 0, i32 11, !dbg !4807
  store i32 %call102, i32* %listen6_fd103, align 4, !dbg !4808
  br label %if.end104

if.end104:                                        ; preds = %if.else101, %if.then100
  %76 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa4P.addr, align 8, !dbg !4809
  %cmp105 = icmp eq %union.httpd_sockaddr* %76, null, !dbg !4811
  br i1 %cmp105, label %if.then107, label %if.else108, !dbg !4812

if.then107:                                       ; preds = %if.end104
  %77 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4813
  %listen4_fd = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %77, i32 0, i32 10, !dbg !4814
  store i32 -1, i32* %listen4_fd, align 8, !dbg !4815
  br label %if.end111, !dbg !4813

if.else108:                                       ; preds = %if.end104
  %78 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa4P.addr, align 8, !dbg !4816
  %call109 = call i32 @initialize_listen_socket(%union.httpd_sockaddr* %78), !dbg !4817
  %79 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4818
  %listen4_fd110 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %79, i32 0, i32 10, !dbg !4819
  store i32 %call109, i32* %listen4_fd110, align 8, !dbg !4820
  br label %if.end111

if.end111:                                        ; preds = %if.else108, %if.then107
  %80 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4821
  %listen4_fd112 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %80, i32 0, i32 10, !dbg !4823
  %81 = load i32, i32* %listen4_fd112, align 8, !dbg !4823
  %cmp113 = icmp eq i32 %81, -1, !dbg !4824
  br i1 %cmp113, label %land.lhs.true, label %if.end119, !dbg !4825

land.lhs.true:                                    ; preds = %if.end111
  %82 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4826
  %listen6_fd115 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %82, i32 0, i32 11, !dbg !4827
  %83 = load i32, i32* %listen6_fd115, align 4, !dbg !4827
  %cmp116 = icmp eq i32 %83, -1, !dbg !4828
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !4829

if.then118:                                       ; preds = %land.lhs.true
  %84 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4830
  call void @free_httpd_server(%struct.httpd_server* %84), !dbg !4832
  store %struct.httpd_server* null, %struct.httpd_server** %retval, align 8, !dbg !4833
  br label %return, !dbg !4833

if.end119:                                        ; preds = %land.lhs.true, %if.end111
  call void @init_mime(), !dbg !4834
  %85 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4835
  %binding_hostname120 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %85, i32 0, i32 0, !dbg !4837
  %86 = load i8*, i8** %binding_hostname120, align 8, !dbg !4837
  %cmp121 = icmp eq i8* %86, null, !dbg !4838
  br i1 %cmp121, label %if.then123, label %if.else126, !dbg !4839

if.then123:                                       ; preds = %if.end119
  %87 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4840
  %port124 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %87, i32 0, i32 2, !dbg !4841
  %88 = load i16, i16* %port124, align 8, !dbg !4841
  %conv125 = zext i16 %88 to i32, !dbg !4842
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7.143, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.144, i64 0, i64 0), i32 %conv125), !dbg !4843
  br label %if.end133, !dbg !4843

if.else126:                                       ; preds = %if.end119
  %89 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4844
  %listen4_fd127 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %89, i32 0, i32 10, !dbg !4845
  %90 = load i32, i32* %listen4_fd127, align 8, !dbg !4845
  %cmp128 = icmp ne i32 %90, -1, !dbg !4846
  br i1 %cmp128, label %cond.true, label %cond.false, !dbg !4844

cond.true:                                        ; preds = %if.else126
  %91 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa4P.addr, align 8, !dbg !4847
  br label %cond.end, !dbg !4844

cond.false:                                       ; preds = %if.else126
  %92 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %sa6P.addr, align 8, !dbg !4848
  br label %cond.end, !dbg !4844

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.httpd_sockaddr* [ %91, %cond.true ], [ %92, %cond.false ], !dbg !4844
  %call130 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %cond), !dbg !4849
  %93 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4850
  %port131 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %93, i32 0, i32 2, !dbg !4851
  %94 = load i16, i16* %port131, align 8, !dbg !4851
  %conv132 = zext i16 %94 to i32, !dbg !4852
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.147, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.144, i64 0, i64 0), i8* %call130, i32 %conv132), !dbg !4853
  br label %if.end133

if.end133:                                        ; preds = %cond.end, %if.then123
  %95 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !4854
  store %struct.httpd_server* %95, %struct.httpd_server** %retval, align 8, !dbg !4855
  br label %return, !dbg !4855

return:                                           ; preds = %if.end133, %if.then118, %if.then89, %if.then76, %if.then64, %if.then41, %if.then6, %if.then
  %96 = load %struct.httpd_server*, %struct.httpd_server** %retval, align 8, !dbg !4856
  ret %struct.httpd_server* %96, !dbg !4856
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @check_options() #0 !dbg !4857 {
entry:
  ret void, !dbg !4858
}

declare i32 @gethostname(i8*, i64) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @httpd_set_logfp(%struct.httpd_server* %hs, %struct.__sFILE* %logfp) #0 !dbg !4859 {
entry:
  %hs.addr = alloca %struct.httpd_server*, align 8
  %logfp.addr = alloca %struct.__sFILE*, align 8
  store %struct.httpd_server* %hs, %struct.httpd_server** %hs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_server** %hs.addr, metadata !4862, metadata !DIExpression()), !dbg !4863
  store %struct.__sFILE* %logfp, %struct.__sFILE** %logfp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__sFILE** %logfp.addr, metadata !4864, metadata !DIExpression()), !dbg !4865
  %0 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !4866
  %logfp1 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %0, i32 0, i32 13, !dbg !4868
  %1 = load %struct.__sFILE*, %struct.__sFILE** %logfp1, align 8, !dbg !4868
  %cmp = icmp ne %struct.__sFILE* %1, null, !dbg !4869
  br i1 %cmp, label %if.then, label %if.end, !dbg !4870

if.then:                                          ; preds = %entry
  %2 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !4871
  %logfp2 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %2, i32 0, i32 13, !dbg !4872
  %3 = load %struct.__sFILE*, %struct.__sFILE** %logfp2, align 8, !dbg !4872
  %call = call i32 @fclose(%struct.__sFILE* %3), !dbg !4873
  br label %if.end, !dbg !4874

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.__sFILE*, %struct.__sFILE** %logfp.addr, align 8, !dbg !4875
  %5 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !4876
  %logfp3 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %5, i32 0, i32 13, !dbg !4877
  store %struct.__sFILE* %4, %struct.__sFILE** %logfp3, align 8, !dbg !4878
  ret void, !dbg !4879
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @initialize_listen_socket(%union.httpd_sockaddr* %saP) #0 !dbg !4880 {
entry:
  %retval = alloca i32, align 4
  %saP.addr = alloca %union.httpd_sockaddr*, align 8
  %listen_fd = alloca i32, align 4
  %on = alloca i32, align 4
  %flags = alloca i32, align 4
  store %union.httpd_sockaddr* %saP, %union.httpd_sockaddr** %saP.addr, align 8
  call void @llvm.dbg.declare(metadata %union.httpd_sockaddr** %saP.addr, metadata !4883, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.declare(metadata i32* %listen_fd, metadata !4885, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.declare(metadata i32* %on, metadata !4887, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !4889, metadata !DIExpression()), !dbg !4890
  %0 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !4891
  %call = call i32 @sockaddr_check(%union.httpd_sockaddr* %0), !dbg !4893
  %tobool = icmp ne i32 %call, 0, !dbg !4893
  br i1 %tobool, label %if.end, label %if.then, !dbg !4894

if.then:                                          ; preds = %entry
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.62.181, i64 0, i64 0)), !dbg !4895
  store i32 -1, i32* %retval, align 4, !dbg !4897
  br label %return, !dbg !4897

if.end:                                           ; preds = %entry
  %1 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !4898
  %sa = bitcast %union.httpd_sockaddr* %1 to %struct.sockaddr*, !dbg !4899
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %sa, i32 0, i32 1, !dbg !4900
  %2 = load i8, i8* %sa_family, align 1, !dbg !4900
  %conv = zext i8 %2 to i32, !dbg !4898
  %call1 = call i32 @socket(i32 %conv, i32 1, i32 0), !dbg !4901
  store i32 %call1, i32* %listen_fd, align 4, !dbg !4902
  %3 = load i32, i32* %listen_fd, align 4, !dbg !4903
  %cmp = icmp slt i32 %3, 0, !dbg !4905
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !4906

if.then3:                                         ; preds = %if.end
  %4 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !4907
  %call4 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %4), !dbg !4909
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63.182, i64 0, i64 0), i8* %call4), !dbg !4910
  store i32 -1, i32* %retval, align 4, !dbg !4911
  br label %return, !dbg !4911

if.end5:                                          ; preds = %if.end
  %5 = load i32, i32* %listen_fd, align 4, !dbg !4912
  %call6 = call i32 (i32, i32, ...) @"\01_fcntl"(i32 %5, i32 2, i32 1), !dbg !4913
  store i32 1, i32* %on, align 4, !dbg !4914
  %6 = load i32, i32* %listen_fd, align 4, !dbg !4915
  %7 = bitcast i32* %on to i8*, !dbg !4917
  %call7 = call i32 @setsockopt(i32 %6, i32 65535, i32 4, i8* %7, i32 4), !dbg !4918
  %cmp8 = icmp slt i32 %call7, 0, !dbg !4919
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !4920

if.then10:                                        ; preds = %if.end5
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.64.183, i64 0, i64 0)), !dbg !4921
  br label %if.end11, !dbg !4921

if.end11:                                         ; preds = %if.then10, %if.end5
  %8 = load i32, i32* %listen_fd, align 4, !dbg !4922
  %9 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !4924
  %sa12 = bitcast %union.httpd_sockaddr* %9 to %struct.sockaddr*, !dbg !4925
  %10 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !4926
  %call13 = call i64 @sockaddr_len(%union.httpd_sockaddr* %10), !dbg !4927
  %conv14 = trunc i64 %call13 to i32, !dbg !4927
  %call15 = call i32 @"\01_bind"(i32 %8, %struct.sockaddr* %sa12, i32 %conv14), !dbg !4928
  %cmp16 = icmp slt i32 %call15, 0, !dbg !4929
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !4930

if.then18:                                        ; preds = %if.end11
  %11 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !4931
  %call19 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %11), !dbg !4933
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.65.184, i64 0, i64 0), i8* %call19), !dbg !4934
  %12 = load i32, i32* %listen_fd, align 4, !dbg !4935
  %call20 = call i32 @"\01_close"(i32 %12), !dbg !4936
  store i32 -1, i32* %retval, align 4, !dbg !4937
  br label %return, !dbg !4937

if.end21:                                         ; preds = %if.end11
  %13 = load i32, i32* %listen_fd, align 4, !dbg !4938
  %call22 = call i32 (i32, i32, ...) @"\01_fcntl"(i32 %13, i32 3, i32 0), !dbg !4939
  store i32 %call22, i32* %flags, align 4, !dbg !4940
  %14 = load i32, i32* %flags, align 4, !dbg !4941
  %cmp23 = icmp eq i32 %14, -1, !dbg !4943
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !4944

if.then25:                                        ; preds = %if.end21
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.66.185, i64 0, i64 0)), !dbg !4945
  %15 = load i32, i32* %listen_fd, align 4, !dbg !4947
  %call26 = call i32 @"\01_close"(i32 %15), !dbg !4948
  store i32 -1, i32* %retval, align 4, !dbg !4949
  br label %return, !dbg !4949

if.end27:                                         ; preds = %if.end21
  %16 = load i32, i32* %listen_fd, align 4, !dbg !4950
  %17 = load i32, i32* %flags, align 4, !dbg !4952
  %or = or i32 %17, 4, !dbg !4953
  %call28 = call i32 (i32, i32, ...) @"\01_fcntl"(i32 %16, i32 4, i32 %or), !dbg !4954
  %cmp29 = icmp slt i32 %call28, 0, !dbg !4955
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !4956

if.then31:                                        ; preds = %if.end27
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67.186, i64 0, i64 0)), !dbg !4957
  %18 = load i32, i32* %listen_fd, align 4, !dbg !4959
  %call32 = call i32 @"\01_close"(i32 %18), !dbg !4960
  store i32 -1, i32* %retval, align 4, !dbg !4961
  br label %return, !dbg !4961

if.end33:                                         ; preds = %if.end27
  %19 = load i32, i32* %listen_fd, align 4, !dbg !4962
  %call34 = call i32 @"\01_listen"(i32 %19, i32 1024), !dbg !4964
  %cmp35 = icmp slt i32 %call34, 0, !dbg !4965
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !4966

if.then37:                                        ; preds = %if.end33
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68.187, i64 0, i64 0)), !dbg !4967
  %20 = load i32, i32* %listen_fd, align 4, !dbg !4969
  %call38 = call i32 @"\01_close"(i32 %20), !dbg !4970
  store i32 -1, i32* %retval, align 4, !dbg !4971
  br label %return, !dbg !4971

if.end39:                                         ; preds = %if.end33
  %21 = load i32, i32* %listen_fd, align 4, !dbg !4972
  store i32 %21, i32* %retval, align 4, !dbg !4973
  br label %return, !dbg !4973

return:                                           ; preds = %if.end39, %if.then37, %if.then31, %if.then25, %if.then18, %if.then3, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !4974
  ret i32 %22, !dbg !4974
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @free_httpd_server(%struct.httpd_server* %hs) #0 !dbg !4975 {
entry:
  %hs.addr = alloca %struct.httpd_server*, align 8
  store %struct.httpd_server* %hs, %struct.httpd_server** %hs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_server** %hs.addr, metadata !4978, metadata !DIExpression()), !dbg !4979
  %0 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !4980
  %binding_hostname = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %0, i32 0, i32 0, !dbg !4982
  %1 = load i8*, i8** %binding_hostname, align 8, !dbg !4982
  %cmp = icmp ne i8* %1, null, !dbg !4983
  br i1 %cmp, label %if.then, label %if.end, !dbg !4984

if.then:                                          ; preds = %entry
  %2 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !4985
  %binding_hostname1 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %2, i32 0, i32 0, !dbg !4986
  %3 = load i8*, i8** %binding_hostname1, align 8, !dbg !4986
  call void @free(i8* %3), !dbg !4987
  br label %if.end, !dbg !4987

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !4988
  %cwd = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %4, i32 0, i32 9, !dbg !4990
  %5 = load i8*, i8** %cwd, align 8, !dbg !4990
  %cmp2 = icmp ne i8* %5, null, !dbg !4991
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !4992

if.then3:                                         ; preds = %if.end
  %6 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !4993
  %cwd4 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %6, i32 0, i32 9, !dbg !4994
  %7 = load i8*, i8** %cwd4, align 8, !dbg !4994
  call void @free(i8* %7), !dbg !4995
  br label %if.end5, !dbg !4995

if.end5:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !4996
  %cgi_pattern = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %8, i32 0, i32 3, !dbg !4998
  %9 = load i8*, i8** %cgi_pattern, align 8, !dbg !4998
  %cmp6 = icmp ne i8* %9, null, !dbg !4999
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !5000

if.then7:                                         ; preds = %if.end5
  %10 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5001
  %cgi_pattern8 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %10, i32 0, i32 3, !dbg !5002
  %11 = load i8*, i8** %cgi_pattern8, align 8, !dbg !5002
  call void @free(i8* %11), !dbg !5003
  br label %if.end9, !dbg !5003

if.end9:                                          ; preds = %if.then7, %if.end5
  %12 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5004
  %charset = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %12, i32 0, i32 6, !dbg !5006
  %13 = load i8*, i8** %charset, align 8, !dbg !5006
  %cmp10 = icmp ne i8* %13, null, !dbg !5007
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !5008

if.then11:                                        ; preds = %if.end9
  %14 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5009
  %charset12 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %14, i32 0, i32 6, !dbg !5010
  %15 = load i8*, i8** %charset12, align 8, !dbg !5010
  call void @free(i8* %15), !dbg !5011
  br label %if.end13, !dbg !5011

if.end13:                                         ; preds = %if.then11, %if.end9
  %16 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5012
  %p3p = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %16, i32 0, i32 7, !dbg !5014
  %17 = load i8*, i8** %p3p, align 8, !dbg !5014
  %cmp14 = icmp ne i8* %17, null, !dbg !5015
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !5016

if.then15:                                        ; preds = %if.end13
  %18 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5017
  %p3p16 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %18, i32 0, i32 7, !dbg !5018
  %19 = load i8*, i8** %p3p16, align 8, !dbg !5018
  call void @free(i8* %19), !dbg !5019
  br label %if.end17, !dbg !5019

if.end17:                                         ; preds = %if.then15, %if.end13
  %20 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5020
  %url_pattern = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %20, i32 0, i32 17, !dbg !5022
  %21 = load i8*, i8** %url_pattern, align 8, !dbg !5022
  %cmp18 = icmp ne i8* %21, null, !dbg !5023
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !5024

if.then19:                                        ; preds = %if.end17
  %22 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5025
  %url_pattern20 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %22, i32 0, i32 17, !dbg !5026
  %23 = load i8*, i8** %url_pattern20, align 8, !dbg !5026
  call void @free(i8* %23), !dbg !5027
  br label %if.end21, !dbg !5027

if.end21:                                         ; preds = %if.then19, %if.end17
  %24 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5028
  %local_pattern = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %24, i32 0, i32 18, !dbg !5030
  %25 = load i8*, i8** %local_pattern, align 8, !dbg !5030
  %cmp22 = icmp ne i8* %25, null, !dbg !5031
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !5032

if.then23:                                        ; preds = %if.end21
  %26 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5033
  %local_pattern24 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %26, i32 0, i32 18, !dbg !5034
  %27 = load i8*, i8** %local_pattern24, align 8, !dbg !5034
  call void @free(i8* %27), !dbg !5035
  br label %if.end25, !dbg !5035

if.end25:                                         ; preds = %if.then23, %if.end21
  %28 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5036
  %29 = bitcast %struct.httpd_server* %28 to i8*, !dbg !5037
  call void @free(i8* %29), !dbg !5038
  ret void, !dbg !5039
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @init_mime() #0 !dbg !5040 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5041, metadata !DIExpression()), !dbg !5042
  call void @qsort(i8* bitcast ([3 x %struct.mime_entry]* @enc_tab to i8*), i64 3, i64 32, i32 (i8*, i8*)* @ext_compare), !dbg !5043
  call void @qsort(i8* bitcast ([193 x %struct.mime_entry]* @typ_tab to i8*), i64 193, i64 32, i32 (i8*, i8*)* @ext_compare), !dbg !5044
  store i32 0, i32* %i, align 4, !dbg !5045
  br label %for.cond, !dbg !5047

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5048
  %cmp = icmp slt i32 %0, 3, !dbg !5050
  br i1 %cmp, label %for.body, label %for.end, !dbg !5051

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !5052
  %idxprom = sext i32 %1 to i64, !dbg !5054
  %arrayidx = getelementptr inbounds [3 x %struct.mime_entry], [3 x %struct.mime_entry]* @enc_tab, i64 0, i64 %idxprom, !dbg !5054
  %ext = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx, i32 0, i32 0, !dbg !5055
  %2 = load i8*, i8** %ext, align 16, !dbg !5055
  %call = call i64 @strlen(i8* %2), !dbg !5056
  %3 = load i32, i32* %i, align 4, !dbg !5057
  %idxprom1 = sext i32 %3 to i64, !dbg !5058
  %arrayidx2 = getelementptr inbounds [3 x %struct.mime_entry], [3 x %struct.mime_entry]* @enc_tab, i64 0, i64 %idxprom1, !dbg !5058
  %ext_len = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx2, i32 0, i32 1, !dbg !5059
  store i64 %call, i64* %ext_len, align 8, !dbg !5060
  %4 = load i32, i32* %i, align 4, !dbg !5061
  %idxprom3 = sext i32 %4 to i64, !dbg !5062
  %arrayidx4 = getelementptr inbounds [3 x %struct.mime_entry], [3 x %struct.mime_entry]* @enc_tab, i64 0, i64 %idxprom3, !dbg !5062
  %val = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx4, i32 0, i32 2, !dbg !5063
  %5 = load i8*, i8** %val, align 16, !dbg !5063
  %call5 = call i64 @strlen(i8* %5), !dbg !5064
  %6 = load i32, i32* %i, align 4, !dbg !5065
  %idxprom6 = sext i32 %6 to i64, !dbg !5066
  %arrayidx7 = getelementptr inbounds [3 x %struct.mime_entry], [3 x %struct.mime_entry]* @enc_tab, i64 0, i64 %idxprom6, !dbg !5066
  %val_len = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx7, i32 0, i32 3, !dbg !5067
  store i64 %call5, i64* %val_len, align 8, !dbg !5068
  br label %for.inc, !dbg !5069

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !5070
  %inc = add nsw i32 %7, 1, !dbg !5070
  store i32 %inc, i32* %i, align 4, !dbg !5070
  br label %for.cond, !dbg !5071, !llvm.loop !5072

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5074
  br label %for.cond8, !dbg !5076

for.cond8:                                        ; preds = %for.inc25, %for.end
  %8 = load i32, i32* %i, align 4, !dbg !5077
  %cmp9 = icmp slt i32 %8, 193, !dbg !5079
  br i1 %cmp9, label %for.body10, label %for.end27, !dbg !5080

for.body10:                                       ; preds = %for.cond8
  %9 = load i32, i32* %i, align 4, !dbg !5081
  %idxprom11 = sext i32 %9 to i64, !dbg !5083
  %arrayidx12 = getelementptr inbounds [193 x %struct.mime_entry], [193 x %struct.mime_entry]* @typ_tab, i64 0, i64 %idxprom11, !dbg !5083
  %ext13 = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx12, i32 0, i32 0, !dbg !5084
  %10 = load i8*, i8** %ext13, align 16, !dbg !5084
  %call14 = call i64 @strlen(i8* %10), !dbg !5085
  %11 = load i32, i32* %i, align 4, !dbg !5086
  %idxprom15 = sext i32 %11 to i64, !dbg !5087
  %arrayidx16 = getelementptr inbounds [193 x %struct.mime_entry], [193 x %struct.mime_entry]* @typ_tab, i64 0, i64 %idxprom15, !dbg !5087
  %ext_len17 = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx16, i32 0, i32 1, !dbg !5088
  store i64 %call14, i64* %ext_len17, align 8, !dbg !5089
  %12 = load i32, i32* %i, align 4, !dbg !5090
  %idxprom18 = sext i32 %12 to i64, !dbg !5091
  %arrayidx19 = getelementptr inbounds [193 x %struct.mime_entry], [193 x %struct.mime_entry]* @typ_tab, i64 0, i64 %idxprom18, !dbg !5091
  %val20 = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx19, i32 0, i32 2, !dbg !5092
  %13 = load i8*, i8** %val20, align 16, !dbg !5092
  %call21 = call i64 @strlen(i8* %13), !dbg !5093
  %14 = load i32, i32* %i, align 4, !dbg !5094
  %idxprom22 = sext i32 %14 to i64, !dbg !5095
  %arrayidx23 = getelementptr inbounds [193 x %struct.mime_entry], [193 x %struct.mime_entry]* @typ_tab, i64 0, i64 %idxprom22, !dbg !5095
  %val_len24 = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx23, i32 0, i32 3, !dbg !5096
  store i64 %call21, i64* %val_len24, align 8, !dbg !5097
  br label %for.inc25, !dbg !5098

for.inc25:                                        ; preds = %for.body10
  %15 = load i32, i32* %i, align 4, !dbg !5099
  %inc26 = add nsw i32 %15, 1, !dbg !5099
  store i32 %inc26, i32* %i, align 4, !dbg !5099
  br label %for.cond8, !dbg !5100, !llvm.loop !5101

for.end27:                                        ; preds = %for.cond8
  ret void, !dbg !5103
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @httpd_ntoa(%union.httpd_sockaddr* %saP) #0 !dbg !686 {
entry:
  %saP.addr = alloca %union.httpd_sockaddr*, align 8
  store %union.httpd_sockaddr* %saP, %union.httpd_sockaddr** %saP.addr, align 8
  call void @llvm.dbg.declare(metadata %union.httpd_sockaddr** %saP.addr, metadata !5104, metadata !DIExpression()), !dbg !5105
  %0 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !5106
  %sa = bitcast %union.httpd_sockaddr* %0 to %struct.sockaddr*, !dbg !5108
  %1 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !5109
  %call = call i64 @sockaddr_len(%union.httpd_sockaddr* %1), !dbg !5110
  %conv = trunc i64 %call to i32, !dbg !5110
  %call1 = call i32 @getnameinfo(%struct.sockaddr* %sa, i32 %conv, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @httpd_ntoa.str, i64 0, i64 0), i32 200, i8* null, i32 0, i32 2), !dbg !5111
  %cmp = icmp ne i32 %call1, 0, !dbg !5112
  br i1 %cmp, label %if.then, label %if.else, !dbg !5113

if.then:                                          ; preds = %entry
  store i8 63, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @httpd_ntoa.str, i64 0, i64 0), align 16, !dbg !5114
  store i8 0, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @httpd_ntoa.str, i64 0, i64 1), align 1, !dbg !5116
  br label %if.end27, !dbg !5117

if.else:                                          ; preds = %entry
  %2 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !5118
  %sa_in6 = bitcast %union.httpd_sockaddr* %2 to %struct.sockaddr_in6*, !dbg !5118
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %sa_in6, i32 0, i32 4, !dbg !5118
  %__u6_addr = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %sin6_addr, i32 0, i32 0, !dbg !5118
  %__u6_addr8 = bitcast %union.anon* %__u6_addr to [16 x i8]*, !dbg !5118
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %__u6_addr8, i64 0, i64 0, !dbg !5118
  %3 = bitcast i8* %arrayidx to i32*, !dbg !5118
  %4 = load i32, i32* %3, align 4, !dbg !5118
  %cmp3 = icmp eq i32 %4, 0, !dbg !5118
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !5118

land.lhs.true:                                    ; preds = %if.else
  %5 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !5118
  %sa_in65 = bitcast %union.httpd_sockaddr* %5 to %struct.sockaddr_in6*, !dbg !5118
  %sin6_addr6 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %sa_in65, i32 0, i32 4, !dbg !5118
  %__u6_addr7 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %sin6_addr6, i32 0, i32 0, !dbg !5118
  %__u6_addr88 = bitcast %union.anon* %__u6_addr7 to [16 x i8]*, !dbg !5118
  %arrayidx9 = getelementptr inbounds [16 x i8], [16 x i8]* %__u6_addr88, i64 0, i64 4, !dbg !5118
  %6 = bitcast i8* %arrayidx9 to i32*, !dbg !5118
  %7 = load i32, i32* %6, align 4, !dbg !5118
  %cmp10 = icmp eq i32 %7, 0, !dbg !5118
  br i1 %cmp10, label %land.lhs.true12, label %if.end, !dbg !5118

land.lhs.true12:                                  ; preds = %land.lhs.true
  %8 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !5118
  %sa_in613 = bitcast %union.httpd_sockaddr* %8 to %struct.sockaddr_in6*, !dbg !5118
  %sin6_addr14 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %sa_in613, i32 0, i32 4, !dbg !5118
  %__u6_addr15 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %sin6_addr14, i32 0, i32 0, !dbg !5118
  %__u6_addr816 = bitcast %union.anon* %__u6_addr15 to [16 x i8]*, !dbg !5118
  %arrayidx17 = getelementptr inbounds [16 x i8], [16 x i8]* %__u6_addr816, i64 0, i64 8, !dbg !5118
  %9 = bitcast i8* %arrayidx17 to i32*, !dbg !5118
  %10 = load i32, i32* %9, align 4, !dbg !5118
  %cmp18 = icmp eq i32 %10, -65536, !dbg !5118
  br i1 %cmp18, label %land.lhs.true20, label %if.end, !dbg !5120

land.lhs.true20:                                  ; preds = %land.lhs.true12
  %call21 = call i32 @strncmp(i8* getelementptr inbounds ([200 x i8], [200 x i8]* @httpd_ntoa.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60.148, i64 0, i64 0), i64 7), !dbg !5121
  %cmp22 = icmp eq i32 %call21, 0, !dbg !5122
  br i1 %cmp22, label %if.then24, label %if.end, !dbg !5123

if.then24:                                        ; preds = %land.lhs.true20
  %call25 = call i64 @strlen(i8* getelementptr inbounds ([200 x i8], [200 x i8]* @httpd_ntoa.str, i64 0, i64 7)), !dbg !5124
  %add = add i64 %call25, 1, !dbg !5124
  %call26 = call i8* @__memmove_chk(i8* getelementptr inbounds ([200 x i8], [200 x i8]* @httpd_ntoa.str, i64 0, i64 0), i8* getelementptr inbounds ([200 x i8], [200 x i8]* @httpd_ntoa.str, i64 0, i64 7), i64 %add, i64 200) #11, !dbg !5124
  br label %if.end, !dbg !5125

if.end:                                           ; preds = %if.then24, %land.lhs.true20, %land.lhs.true12, %land.lhs.true, %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then
  ret i8* getelementptr inbounds ([200 x i8], [200 x i8]* @httpd_ntoa.str, i64 0, i64 0), !dbg !5126
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i64 @sockaddr_len(%union.httpd_sockaddr* %saP) #0 !dbg !5127 {
entry:
  %retval = alloca i64, align 8
  %saP.addr = alloca %union.httpd_sockaddr*, align 8
  store %union.httpd_sockaddr* %saP, %union.httpd_sockaddr** %saP.addr, align 8
  call void @llvm.dbg.declare(metadata %union.httpd_sockaddr** %saP.addr, metadata !5130, metadata !DIExpression()), !dbg !5131
  %0 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !5132
  %sa = bitcast %union.httpd_sockaddr* %0 to %struct.sockaddr*, !dbg !5133
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %sa, i32 0, i32 1, !dbg !5134
  %1 = load i8, i8* %sa_family, align 1, !dbg !5134
  %conv = zext i8 %1 to i32, !dbg !5132
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 30, label %sw.bb1
  ], !dbg !5135

sw.bb:                                            ; preds = %entry
  store i64 16, i64* %retval, align 8, !dbg !5136
  br label %return, !dbg !5136

sw.bb1:                                           ; preds = %entry
  store i64 28, i64* %retval, align 8, !dbg !5138
  br label %return, !dbg !5138

sw.default:                                       ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !5139
  br label %return, !dbg !5139

return:                                           ; preds = %sw.default, %sw.bb1, %sw.bb
  %2 = load i64, i64* %retval, align 8, !dbg !5140
  ret i64 %2, !dbg !5140
}

declare i32 @getnameinfo(%struct.sockaddr*, i32, i8*, i32, i8*, i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ext_compare(i8* %v1, i8* %v2) #0 !dbg !5141 {
entry:
  %v1.addr = alloca i8*, align 8
  %v2.addr = alloca i8*, align 8
  %m1 = alloca %struct.mime_entry*, align 8
  %m2 = alloca %struct.mime_entry*, align 8
  store i8* %v1, i8** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v1.addr, metadata !5144, metadata !DIExpression()), !dbg !5145
  store i8* %v2, i8** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v2.addr, metadata !5146, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.declare(metadata %struct.mime_entry** %m1, metadata !5148, metadata !DIExpression()), !dbg !5149
  %0 = load i8*, i8** %v1.addr, align 8, !dbg !5150
  %1 = bitcast i8* %0 to %struct.mime_entry*, !dbg !5151
  store %struct.mime_entry* %1, %struct.mime_entry** %m1, align 8, !dbg !5149
  call void @llvm.dbg.declare(metadata %struct.mime_entry** %m2, metadata !5152, metadata !DIExpression()), !dbg !5153
  %2 = load i8*, i8** %v2.addr, align 8, !dbg !5154
  %3 = bitcast i8* %2 to %struct.mime_entry*, !dbg !5155
  store %struct.mime_entry* %3, %struct.mime_entry** %m2, align 8, !dbg !5153
  %4 = load %struct.mime_entry*, %struct.mime_entry** %m1, align 8, !dbg !5156
  %ext = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %4, i32 0, i32 0, !dbg !5157
  %5 = load i8*, i8** %ext, align 8, !dbg !5157
  %6 = load %struct.mime_entry*, %struct.mime_entry** %m2, align 8, !dbg !5158
  %ext1 = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %6, i32 0, i32 0, !dbg !5159
  %7 = load i8*, i8** %ext1, align 8, !dbg !5159
  %call = call i32 @strcmp(i8* %5, i8* %7), !dbg !5160
  ret i32 %call, !dbg !5161
}

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @sockaddr_check(%union.httpd_sockaddr* %saP) #0 !dbg !5162 {
entry:
  %retval = alloca i32, align 4
  %saP.addr = alloca %union.httpd_sockaddr*, align 8
  store %union.httpd_sockaddr* %saP, %union.httpd_sockaddr** %saP.addr, align 8
  call void @llvm.dbg.declare(metadata %union.httpd_sockaddr** %saP.addr, metadata !5163, metadata !DIExpression()), !dbg !5164
  %0 = load %union.httpd_sockaddr*, %union.httpd_sockaddr** %saP.addr, align 8, !dbg !5165
  %sa = bitcast %union.httpd_sockaddr* %0 to %struct.sockaddr*, !dbg !5166
  %sa_family = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %sa, i32 0, i32 1, !dbg !5167
  %1 = load i8, i8* %sa_family, align 1, !dbg !5167
  %conv = zext i8 %1 to i32, !dbg !5165
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 30, label %sw.bb1
  ], !dbg !5168

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5169
  br label %return, !dbg !5169

sw.bb1:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5171
  br label %return, !dbg !5171

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5172
  br label %return, !dbg !5172

return:                                           ; preds = %sw.default, %sw.bb1, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !5173
  ret i32 %2, !dbg !5173
}

declare i32 @socket(i32, i32, i32) #3

declare i32 @setsockopt(i32, i32, i32, i8*, i32) #3

declare i32 @"\01_bind"(i32, %struct.sockaddr*, i32) #3

declare i32 @"\01_close"(i32) #3

declare i32 @"\01_listen"(i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @httpd_terminate(%struct.httpd_server* %hs) #0 !dbg !5174 {
entry:
  %hs.addr = alloca %struct.httpd_server*, align 8
  store %struct.httpd_server* %hs, %struct.httpd_server** %hs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_server** %hs.addr, metadata !5175, metadata !DIExpression()), !dbg !5176
  %0 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5177
  call void @httpd_unlisten(%struct.httpd_server* %0), !dbg !5178
  %1 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5179
  %logfp = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %1, i32 0, i32 13, !dbg !5181
  %2 = load %struct.__sFILE*, %struct.__sFILE** %logfp, align 8, !dbg !5181
  %cmp = icmp ne %struct.__sFILE* %2, null, !dbg !5182
  br i1 %cmp, label %if.then, label %if.end, !dbg !5183

if.then:                                          ; preds = %entry
  %3 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5184
  %logfp1 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %3, i32 0, i32 13, !dbg !5185
  %4 = load %struct.__sFILE*, %struct.__sFILE** %logfp1, align 8, !dbg !5185
  %call = call i32 @fclose(%struct.__sFILE* %4), !dbg !5186
  br label %if.end, !dbg !5187

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5188
  call void @free_httpd_server(%struct.httpd_server* %5), !dbg !5189
  ret void, !dbg !5190
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @httpd_unlisten(%struct.httpd_server* %hs) #0 !dbg !5191 {
entry:
  %hs.addr = alloca %struct.httpd_server*, align 8
  store %struct.httpd_server* %hs, %struct.httpd_server** %hs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_server** %hs.addr, metadata !5192, metadata !DIExpression()), !dbg !5193
  %0 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5194
  %listen4_fd = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %0, i32 0, i32 10, !dbg !5196
  %1 = load i32, i32* %listen4_fd, align 8, !dbg !5196
  %cmp = icmp ne i32 %1, -1, !dbg !5197
  br i1 %cmp, label %if.then, label %if.end, !dbg !5198

if.then:                                          ; preds = %entry
  %2 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5199
  %listen4_fd1 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %2, i32 0, i32 10, !dbg !5201
  %3 = load i32, i32* %listen4_fd1, align 8, !dbg !5201
  %call = call i32 @"\01_close"(i32 %3), !dbg !5202
  %4 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5203
  %listen4_fd2 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %4, i32 0, i32 10, !dbg !5204
  store i32 -1, i32* %listen4_fd2, align 8, !dbg !5205
  br label %if.end, !dbg !5206

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5207
  %listen6_fd = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %5, i32 0, i32 11, !dbg !5209
  %6 = load i32, i32* %listen6_fd, align 4, !dbg !5209
  %cmp3 = icmp ne i32 %6, -1, !dbg !5210
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !5211

if.then4:                                         ; preds = %if.end
  %7 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5212
  %listen6_fd5 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %7, i32 0, i32 11, !dbg !5214
  %8 = load i32, i32* %listen6_fd5, align 4, !dbg !5214
  %call6 = call i32 @"\01_close"(i32 %8), !dbg !5215
  %9 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !5216
  %listen6_fd7 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %9, i32 0, i32 11, !dbg !5217
  store i32 -1, i32* %listen6_fd7, align 4, !dbg !5218
  br label %if.end8, !dbg !5219

if.end8:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !5220
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @httpd_write_response(%struct.httpd_conn* %hc) #0 !dbg !5221 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !5222, metadata !DIExpression()), !dbg !5223
  %0 = load i32, i32* @sub_process, align 4, !dbg !5224
  %tobool = icmp ne i32 %0, 0, !dbg !5224
  br i1 %tobool, label %if.then, label %if.end, !dbg !5226

if.then:                                          ; preds = %entry
  %1 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5227
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %1, i32 0, i32 60, !dbg !5228
  %2 = load i32, i32* %conn_fd, align 8, !dbg !5228
  call void @httpd_clear_ndelay(i32 %2), !dbg !5229
  br label %if.end, !dbg !5229

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5230
  %responselen = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %3, i32 0, i32 45, !dbg !5232
  %4 = load i64, i64* %responselen, align 8, !dbg !5232
  %cmp = icmp ugt i64 %4, 0, !dbg !5233
  br i1 %cmp, label %if.then1, label %if.end5, !dbg !5234

if.then1:                                         ; preds = %if.end
  %5 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5235
  %conn_fd2 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %5, i32 0, i32 60, !dbg !5237
  %6 = load i32, i32* %conn_fd2, align 8, !dbg !5237
  %7 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5238
  %response = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %7, i32 0, i32 32, !dbg !5239
  %8 = load i8*, i8** %response, align 8, !dbg !5239
  %9 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5240
  %responselen3 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %9, i32 0, i32 45, !dbg !5241
  %10 = load i64, i64* %responselen3, align 8, !dbg !5241
  %call = call i32 @httpd_write_fully(i32 %6, i8* %8, i64 %10), !dbg !5242
  %11 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5243
  %responselen4 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %11, i32 0, i32 45, !dbg !5244
  store i64 0, i64* %responselen4, align 8, !dbg !5245
  br label %if.end5, !dbg !5246

if.end5:                                          ; preds = %if.then1, %if.end
  ret void, !dbg !5247
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @httpd_clear_ndelay(i32 %fd) #0 !dbg !5248 {
entry:
  %fd.addr = alloca i32, align 4
  %flags = alloca i32, align 4
  %newflags = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !5249, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !5251, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.declare(metadata i32* %newflags, metadata !5253, metadata !DIExpression()), !dbg !5254
  %0 = load i32, i32* %fd.addr, align 4, !dbg !5255
  %call = call i32 (i32, i32, ...) @"\01_fcntl"(i32 %0, i32 3, i32 0), !dbg !5256
  store i32 %call, i32* %flags, align 4, !dbg !5257
  %1 = load i32, i32* %flags, align 4, !dbg !5258
  %cmp = icmp ne i32 %1, -1, !dbg !5260
  br i1 %cmp, label %if.then, label %if.end4, !dbg !5261

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %flags, align 4, !dbg !5262
  %and = and i32 %2, -5, !dbg !5264
  store i32 %and, i32* %newflags, align 4, !dbg !5265
  %3 = load i32, i32* %newflags, align 4, !dbg !5266
  %4 = load i32, i32* %flags, align 4, !dbg !5268
  %cmp1 = icmp ne i32 %3, %4, !dbg !5269
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !5270

if.then2:                                         ; preds = %if.then
  %5 = load i32, i32* %fd.addr, align 4, !dbg !5271
  %6 = load i32, i32* %newflags, align 4, !dbg !5272
  %call3 = call i32 (i32, i32, ...) @"\01_fcntl"(i32 %5, i32 4, i32 %6), !dbg !5273
  br label %if.end, !dbg !5274

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end4, !dbg !5275

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !5276
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @httpd_write_fully(i32 %fd, i8* %buf, i64 %nbytes) #0 !dbg !5277 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %nwritten = alloca i32, align 4
  %r = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !5280, metadata !DIExpression()), !dbg !5281
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5282, metadata !DIExpression()), !dbg !5283
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !5284, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.declare(metadata i32* %nwritten, metadata !5286, metadata !DIExpression()), !dbg !5287
  store i32 0, i32* %nwritten, align 4, !dbg !5288
  br label %while.cond, !dbg !5289

while.cond:                                       ; preds = %if.end20, %if.then, %entry
  %0 = load i32, i32* %nwritten, align 4, !dbg !5290
  %conv = sext i32 %0 to i64, !dbg !5290
  %1 = load i64, i64* %nbytes.addr, align 8, !dbg !5291
  %cmp = icmp ult i64 %conv, %1, !dbg !5292
  br i1 %cmp, label %while.body, label %while.end, !dbg !5289

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5293, metadata !DIExpression()), !dbg !5295
  %2 = load i32, i32* %fd.addr, align 4, !dbg !5296
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !5297
  %4 = load i32, i32* %nwritten, align 4, !dbg !5298
  %idx.ext = sext i32 %4 to i64, !dbg !5299
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !5299
  %5 = load i64, i64* %nbytes.addr, align 8, !dbg !5300
  %6 = load i32, i32* %nwritten, align 4, !dbg !5301
  %conv2 = sext i32 %6 to i64, !dbg !5301
  %sub = sub i64 %5, %conv2, !dbg !5302
  %call = call i64 @"\01_write"(i32 %2, i8* %add.ptr, i64 %sub), !dbg !5303
  %conv3 = trunc i64 %call to i32, !dbg !5303
  store i32 %conv3, i32* %r, align 4, !dbg !5304
  %7 = load i32, i32* %r, align 4, !dbg !5305
  %cmp4 = icmp slt i32 %7, 0, !dbg !5307
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !5308

land.lhs.true:                                    ; preds = %while.body
  %call6 = call i32* @__error(), !dbg !5309
  %8 = load i32, i32* %call6, align 4, !dbg !5309
  %cmp7 = icmp eq i32 %8, 4, !dbg !5310
  br i1 %cmp7, label %if.then, label %lor.lhs.false, !dbg !5311

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call9 = call i32* @__error(), !dbg !5312
  %9 = load i32, i32* %call9, align 4, !dbg !5312
  %cmp10 = icmp eq i32 %9, 35, !dbg !5313
  br i1 %cmp10, label %if.then, label %if.end, !dbg !5314

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %call12 = call i32 @"\01_sleep"(i32 1), !dbg !5315
  br label %while.cond, !dbg !5317, !llvm.loop !5318

if.end:                                           ; preds = %lor.lhs.false, %while.body
  %10 = load i32, i32* %r, align 4, !dbg !5320
  %cmp13 = icmp slt i32 %10, 0, !dbg !5322
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !5323

if.then15:                                        ; preds = %if.end
  %11 = load i32, i32* %r, align 4, !dbg !5324
  store i32 %11, i32* %retval, align 4, !dbg !5325
  br label %return, !dbg !5325

if.end16:                                         ; preds = %if.end
  %12 = load i32, i32* %r, align 4, !dbg !5326
  %cmp17 = icmp eq i32 %12, 0, !dbg !5328
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !5329

if.then19:                                        ; preds = %if.end16
  br label %while.end, !dbg !5330

if.end20:                                         ; preds = %if.end16
  %13 = load i32, i32* %r, align 4, !dbg !5331
  %14 = load i32, i32* %nwritten, align 4, !dbg !5332
  %add = add nsw i32 %14, %13, !dbg !5332
  store i32 %add, i32* %nwritten, align 4, !dbg !5332
  br label %while.cond, !dbg !5289, !llvm.loop !5318

while.end:                                        ; preds = %if.then19, %while.cond
  %15 = load i32, i32* %nwritten, align 4, !dbg !5333
  store i32 %15, i32* %retval, align 4, !dbg !5334
  br label %return, !dbg !5334

return:                                           ; preds = %while.end, %if.then15
  %16 = load i32, i32* %retval, align 4, !dbg !5335
  ret i32 %16, !dbg !5335
}

declare i32 @"\01_sleep"(i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @httpd_set_ndelay(i32 %fd) #0 !dbg !5336 {
entry:
  %fd.addr = alloca i32, align 4
  %flags = alloca i32, align 4
  %newflags = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !5337, metadata !DIExpression()), !dbg !5338
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !5339, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.declare(metadata i32* %newflags, metadata !5341, metadata !DIExpression()), !dbg !5342
  %0 = load i32, i32* %fd.addr, align 4, !dbg !5343
  %call = call i32 (i32, i32, ...) @"\01_fcntl"(i32 %0, i32 3, i32 0), !dbg !5344
  store i32 %call, i32* %flags, align 4, !dbg !5345
  %1 = load i32, i32* %flags, align 4, !dbg !5346
  %cmp = icmp ne i32 %1, -1, !dbg !5348
  br i1 %cmp, label %if.then, label %if.end4, !dbg !5349

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %flags, align 4, !dbg !5350
  %or = or i32 %2, 4, !dbg !5352
  store i32 %or, i32* %newflags, align 4, !dbg !5353
  %3 = load i32, i32* %newflags, align 4, !dbg !5354
  %4 = load i32, i32* %flags, align 4, !dbg !5356
  %cmp1 = icmp ne i32 %3, %4, !dbg !5357
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !5358

if.then2:                                         ; preds = %if.then
  %5 = load i32, i32* %fd.addr, align 4, !dbg !5359
  %6 = load i32, i32* %newflags, align 4, !dbg !5360
  %call3 = call i32 (i32, i32, ...) @"\01_fcntl"(i32 %5, i32 4, i32 %6), !dbg !5361
  br label %if.end, !dbg !5362

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end4, !dbg !5363

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !5364
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @httpd_realloc_str(i8** %strP, i64* %maxsizeP, i64 %size) #0 !dbg !5365 {
entry:
  %strP.addr = alloca i8**, align 8
  %maxsizeP.addr = alloca i64*, align 8
  %size.addr = alloca i64, align 8
  store i8** %strP, i8*** %strP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %strP.addr, metadata !5369, metadata !DIExpression()), !dbg !5370
  store i64* %maxsizeP, i64** %maxsizeP.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %maxsizeP.addr, metadata !5371, metadata !DIExpression()), !dbg !5372
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5373, metadata !DIExpression()), !dbg !5374
  %0 = load i64*, i64** %maxsizeP.addr, align 8, !dbg !5375
  %1 = load i64, i64* %0, align 8, !dbg !5377
  %cmp = icmp eq i64 %1, 0, !dbg !5378
  br i1 %cmp, label %if.then, label %if.else, !dbg !5379

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !5380
  %add = add i64 %2, 100, !dbg !5380
  %cmp1 = icmp ugt i64 200, %add, !dbg !5380
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !5380

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !5380

cond.false:                                       ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !5380
  %add2 = add i64 %3, 100, !dbg !5380
  br label %cond.end, !dbg !5380

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 200, %cond.true ], [ %add2, %cond.false ], !dbg !5380
  %4 = load i64*, i64** %maxsizeP.addr, align 8, !dbg !5382
  store i64 %cond, i64* %4, align 8, !dbg !5383
  %5 = load i64*, i64** %maxsizeP.addr, align 8, !dbg !5384
  %6 = load i64, i64* %5, align 8, !dbg !5384
  %add3 = add i64 %6, 1, !dbg !5384
  %mul = mul i64 1, %add3, !dbg !5384
  %call = call i8* @malloc(i64 %mul) #15, !dbg !5384
  %7 = load i8**, i8*** %strP.addr, align 8, !dbg !5385
  store i8* %call, i8** %7, align 8, !dbg !5386
  %8 = load i32, i32* @str_alloc_count, align 4, !dbg !5387
  %inc = add nsw i32 %8, 1, !dbg !5387
  store i32 %inc, i32* @str_alloc_count, align 4, !dbg !5387
  %9 = load i64*, i64** %maxsizeP.addr, align 8, !dbg !5388
  %10 = load i64, i64* %9, align 8, !dbg !5389
  %11 = load i64, i64* @str_alloc_size, align 8, !dbg !5390
  %add4 = add i64 %11, %10, !dbg !5390
  store i64 %add4, i64* @str_alloc_size, align 8, !dbg !5390
  br label %if.end22, !dbg !5391

if.else:                                          ; preds = %entry
  %12 = load i64, i64* %size.addr, align 8, !dbg !5392
  %13 = load i64*, i64** %maxsizeP.addr, align 8, !dbg !5394
  %14 = load i64, i64* %13, align 8, !dbg !5395
  %cmp5 = icmp ugt i64 %12, %14, !dbg !5396
  br i1 %cmp5, label %if.then6, label %if.else21, !dbg !5397

if.then6:                                         ; preds = %if.else
  %15 = load i64*, i64** %maxsizeP.addr, align 8, !dbg !5398
  %16 = load i64, i64* %15, align 8, !dbg !5400
  %17 = load i64, i64* @str_alloc_size, align 8, !dbg !5401
  %sub = sub i64 %17, %16, !dbg !5401
  store i64 %sub, i64* @str_alloc_size, align 8, !dbg !5401
  %18 = load i64*, i64** %maxsizeP.addr, align 8, !dbg !5402
  %19 = load i64, i64* %18, align 8, !dbg !5402
  %mul7 = mul i64 %19, 2, !dbg !5402
  %20 = load i64, i64* %size.addr, align 8, !dbg !5402
  %mul8 = mul i64 %20, 5, !dbg !5402
  %div = udiv i64 %mul8, 4, !dbg !5402
  %cmp9 = icmp ugt i64 %mul7, %div, !dbg !5402
  br i1 %cmp9, label %cond.true10, label %cond.false12, !dbg !5402

cond.true10:                                      ; preds = %if.then6
  %21 = load i64*, i64** %maxsizeP.addr, align 8, !dbg !5402
  %22 = load i64, i64* %21, align 8, !dbg !5402
  %mul11 = mul i64 %22, 2, !dbg !5402
  br label %cond.end15, !dbg !5402

cond.false12:                                     ; preds = %if.then6
  %23 = load i64, i64* %size.addr, align 8, !dbg !5402
  %mul13 = mul i64 %23, 5, !dbg !5402
  %div14 = udiv i64 %mul13, 4, !dbg !5402
  br label %cond.end15, !dbg !5402

cond.end15:                                       ; preds = %cond.false12, %cond.true10
  %cond16 = phi i64 [ %mul11, %cond.true10 ], [ %div14, %cond.false12 ], !dbg !5402
  %24 = load i64*, i64** %maxsizeP.addr, align 8, !dbg !5403
  store i64 %cond16, i64* %24, align 8, !dbg !5404
  %25 = load i8**, i8*** %strP.addr, align 8, !dbg !5405
  %26 = load i8*, i8** %25, align 8, !dbg !5405
  %27 = load i64*, i64** %maxsizeP.addr, align 8, !dbg !5405
  %28 = load i64, i64* %27, align 8, !dbg !5405
  %add17 = add i64 %28, 1, !dbg !5405
  %mul18 = mul i64 1, %add17, !dbg !5405
  %call19 = call i8* @realloc(i8* %26, i64 %mul18) #16, !dbg !5405
  %29 = load i8**, i8*** %strP.addr, align 8, !dbg !5406
  store i8* %call19, i8** %29, align 8, !dbg !5407
  %30 = load i64*, i64** %maxsizeP.addr, align 8, !dbg !5408
  %31 = load i64, i64* %30, align 8, !dbg !5409
  %32 = load i64, i64* @str_alloc_size, align 8, !dbg !5410
  %add20 = add i64 %32, %31, !dbg !5410
  store i64 %add20, i64* @str_alloc_size, align 8, !dbg !5410
  br label %if.end, !dbg !5411

if.else21:                                        ; preds = %if.else
  br label %if.end25, !dbg !5412

if.end:                                           ; preds = %cond.end15
  br label %if.end22

if.end22:                                         ; preds = %if.end, %cond.end
  %33 = load i8**, i8*** %strP.addr, align 8, !dbg !5413
  %34 = load i8*, i8** %33, align 8, !dbg !5415
  %cmp23 = icmp eq i8* %34, null, !dbg !5416
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !5417

if.then24:                                        ; preds = %if.end22
  %35 = load i64*, i64** %maxsizeP.addr, align 8, !dbg !5418
  %36 = load i64, i64* %35, align 8, !dbg !5420
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.16.198, i64 0, i64 0), i64 %36), !dbg !5421
  call void @exit(i32 1) #13, !dbg !5422
  unreachable, !dbg !5422

if.end25:                                         ; preds = %if.else21, %if.end22
  ret void, !dbg !5423
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @httpd_send_err(%struct.httpd_conn* %hc, i32 %status, i8* %title, i8* %extraheads, i8* %form, i8* %arg) #0 !dbg !5424 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %status.addr = alloca i32, align 4
  %title.addr = alloca i8*, align 8
  %extraheads.addr = alloca i8*, align 8
  %form.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %filename = alloca [1000 x i8], align 16
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !5427, metadata !DIExpression()), !dbg !5428
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !5429, metadata !DIExpression()), !dbg !5430
  store i8* %title, i8** %title.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %title.addr, metadata !5431, metadata !DIExpression()), !dbg !5432
  store i8* %extraheads, i8** %extraheads.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extraheads.addr, metadata !5433, metadata !DIExpression()), !dbg !5434
  store i8* %form, i8** %form.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %form.addr, metadata !5435, metadata !DIExpression()), !dbg !5436
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5437, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.declare(metadata [1000 x i8]* %filename, metadata !5439, metadata !DIExpression()), !dbg !5443
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5444
  %hs = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 1, !dbg !5446
  %1 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !5446
  %vhost = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %1, i32 0, i32 15, !dbg !5447
  %2 = load i32, i32* %vhost, align 4, !dbg !5447
  %tobool = icmp ne i32 %2, 0, !dbg !5444
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !5448

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5449
  %hostdir = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %3, i32 0, i32 29, !dbg !5450
  %4 = load i8*, i8** %hostdir, align 8, !dbg !5450
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !5449
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5449
  %conv = sext i8 %5 to i32, !dbg !5449
  %cmp = icmp ne i32 %conv, 0, !dbg !5451
  br i1 %cmp, label %if.then, label %if.end7, !dbg !5452

if.then:                                          ; preds = %land.lhs.true
  %arraydecay = getelementptr inbounds [1000 x i8], [1000 x i8]* %filename, i64 0, i64 0, !dbg !5453
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5455
  %hostdir2 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 29, !dbg !5456
  %7 = load i8*, i8** %hostdir2, align 8, !dbg !5456
  %8 = load i32, i32* %status.addr, align 4, !dbg !5457
  %call = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay, i64 1000, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17.201, i64 0, i64 0), i8* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18.202, i64 0, i64 0), i32 %8), !dbg !5458
  %9 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5459
  %10 = load i32, i32* %status.addr, align 4, !dbg !5461
  %11 = load i8*, i8** %title.addr, align 8, !dbg !5462
  %12 = load i8*, i8** %extraheads.addr, align 8, !dbg !5463
  %arraydecay3 = getelementptr inbounds [1000 x i8], [1000 x i8]* %filename, i64 0, i64 0, !dbg !5464
  %call4 = call i32 @send_err_file(%struct.httpd_conn* %9, i32 %10, i8* %11, i8* %12, i8* %arraydecay3), !dbg !5465
  %tobool5 = icmp ne i32 %call4, 0, !dbg !5465
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !5466

if.then6:                                         ; preds = %if.then
  br label %return, !dbg !5467

if.end:                                           ; preds = %if.then
  br label %if.end7, !dbg !5468

if.end7:                                          ; preds = %if.end, %land.lhs.true, %entry
  %arraydecay8 = getelementptr inbounds [1000 x i8], [1000 x i8]* %filename, i64 0, i64 0, !dbg !5469
  %13 = load i32, i32* %status.addr, align 4, !dbg !5470
  %call9 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay8, i64 1000, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19.203, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18.202, i64 0, i64 0), i32 %13), !dbg !5471
  %14 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5472
  %15 = load i32, i32* %status.addr, align 4, !dbg !5474
  %16 = load i8*, i8** %title.addr, align 8, !dbg !5475
  %17 = load i8*, i8** %extraheads.addr, align 8, !dbg !5476
  %arraydecay10 = getelementptr inbounds [1000 x i8], [1000 x i8]* %filename, i64 0, i64 0, !dbg !5477
  %call11 = call i32 @send_err_file(%struct.httpd_conn* %14, i32 %15, i8* %16, i8* %17, i8* %arraydecay10), !dbg !5478
  %tobool12 = icmp ne i32 %call11, 0, !dbg !5478
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !5479

if.then13:                                        ; preds = %if.end7
  br label %return, !dbg !5480

if.end14:                                         ; preds = %if.end7
  %18 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5481
  %19 = load i32, i32* %status.addr, align 4, !dbg !5482
  %20 = load i8*, i8** %title.addr, align 8, !dbg !5483
  %21 = load i8*, i8** %extraheads.addr, align 8, !dbg !5484
  %22 = load i8*, i8** %form.addr, align 8, !dbg !5485
  %23 = load i8*, i8** %arg.addr, align 8, !dbg !5486
  call void @send_response(%struct.httpd_conn* %18, i32 %19, i8* %20, i8* %21, i8* %22, i8* %23), !dbg !5487
  br label %return, !dbg !5488

return:                                           ; preds = %if.end14, %if.then13, %if.then6
  ret void, !dbg !5488
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @my_snprintf(i8* %str, i64 %size, i8* %format, ...) #0 !dbg !5489 {
entry:
  %str.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %format.addr = alloca i8*, align 8
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %r = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5492, metadata !DIExpression()), !dbg !5493
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5494, metadata !DIExpression()), !dbg !5495
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !5496, metadata !DIExpression()), !dbg !5497
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !5498, metadata !DIExpression()), !dbg !5509
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5510, metadata !DIExpression()), !dbg !5511
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !5512
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !5512
  call void @llvm.va_start(i8* %arraydecay1), !dbg !5512
  %0 = load i8*, i8** %str.addr, align 8, !dbg !5513
  %1 = load i64, i64* %size.addr, align 8, !dbg !5513
  %2 = load i8*, i8** %str.addr, align 8, !dbg !5513
  %3 = call i64 @llvm.objectsize.i64.p0i8(i8* %2, i1 false, i1 true, i1 false), !dbg !5513
  %4 = load i8*, i8** %format.addr, align 8, !dbg !5513
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !5513
  %call = call i32 @__vsnprintf_chk(i8* %0, i64 %1, i32 0, i64 %3, i8* %4, %struct.__va_list_tag* %arraydecay2), !dbg !5513
  store i32 %call, i32* %r, align 4, !dbg !5514
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !5515
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !5515
  call void @llvm.va_end(i8* %arraydecay34), !dbg !5515
  %5 = load i32, i32* %r, align 4, !dbg !5516
  ret i32 %5, !dbg !5517
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @send_err_file(%struct.httpd_conn* %hc, i32 %status, i8* %title, i8* %extraheads, i8* %filename) #0 !dbg !5518 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %status.addr = alloca i32, align 4
  %title.addr = alloca i8*, align 8
  %extraheads.addr = alloca i8*, align 8
  %filename.addr = alloca i8*, align 8
  %fp = alloca %struct.__sFILE*, align 8
  %buf = alloca [1000 x i8], align 16
  %r = alloca i64, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !5521, metadata !DIExpression()), !dbg !5522
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !5523, metadata !DIExpression()), !dbg !5524
  store i8* %title, i8** %title.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %title.addr, metadata !5525, metadata !DIExpression()), !dbg !5526
  store i8* %extraheads, i8** %extraheads.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extraheads.addr, metadata !5527, metadata !DIExpression()), !dbg !5528
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !5529, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.declare(metadata %struct.__sFILE** %fp, metadata !5531, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.declare(metadata [1000 x i8]* %buf, metadata !5533, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.declare(metadata i64* %r, metadata !5535, metadata !DIExpression()), !dbg !5536
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !5537
  %call = call %struct.__sFILE* @"\01_fopen"(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.222, i64 0, i64 0)), !dbg !5538
  store %struct.__sFILE* %call, %struct.__sFILE** %fp, align 8, !dbg !5539
  %1 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !5540
  %cmp = icmp eq %struct.__sFILE* %1, null, !dbg !5542
  br i1 %cmp, label %if.then, label %if.end, !dbg !5543

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5544
  br label %return, !dbg !5544

if.end:                                           ; preds = %entry
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5545
  %3 = load i32, i32* %status.addr, align 4, !dbg !5546
  %4 = load i8*, i8** %title.addr, align 8, !dbg !5547
  %5 = load i8*, i8** %extraheads.addr, align 8, !dbg !5548
  call void @send_mime(%struct.httpd_conn* %2, i32 %3, i8* %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69.174, i64 0, i64 0), i64 -1, i64 0), !dbg !5549
  br label %for.cond, !dbg !5550

for.cond:                                         ; preds = %if.end4, %if.end
  %arraydecay = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5551
  %6 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !5555
  %call1 = call i64 @fread(i8* %arraydecay, i64 1, i64 999, %struct.__sFILE* %6), !dbg !5556
  store i64 %call1, i64* %r, align 8, !dbg !5557
  %7 = load i64, i64* %r, align 8, !dbg !5558
  %cmp2 = icmp eq i64 %7, 0, !dbg !5560
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5561

if.then3:                                         ; preds = %for.cond
  br label %for.end, !dbg !5562

if.end4:                                          ; preds = %for.cond
  %8 = load i64, i64* %r, align 8, !dbg !5563
  %arrayidx = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 %8, !dbg !5564
  store i8 0, i8* %arrayidx, align 1, !dbg !5565
  %9 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5566
  %arraydecay5 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5567
  call void @add_response(%struct.httpd_conn* %9, i8* %arraydecay5), !dbg !5568
  br label %for.cond, !dbg !5569, !llvm.loop !5570

for.end:                                          ; preds = %if.then3
  %10 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !5573
  %call6 = call i32 @fclose(%struct.__sFILE* %10), !dbg !5574
  %11 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5575
  call void @send_response_tail(%struct.httpd_conn* %11), !dbg !5576
  store i32 1, i32* %retval, align 4, !dbg !5577
  br label %return, !dbg !5577

return:                                           ; preds = %for.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !5578
  ret i32 %12, !dbg !5578
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @send_response(%struct.httpd_conn* %hc, i32 %status, i8* %title, i8* %extraheads, i8* %form, i8* %arg) #0 !dbg !5579 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %status.addr = alloca i32, align 4
  %title.addr = alloca i8*, align 8
  %extraheads.addr = alloca i8*, align 8
  %form.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %defanged_arg = alloca [1000 x i8], align 16
  %buf = alloca [2000 x i8], align 16
  %n = alloca i32, align 4
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !5580, metadata !DIExpression()), !dbg !5581
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !5582, metadata !DIExpression()), !dbg !5583
  store i8* %title, i8** %title.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %title.addr, metadata !5584, metadata !DIExpression()), !dbg !5585
  store i8* %extraheads, i8** %extraheads.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extraheads.addr, metadata !5586, metadata !DIExpression()), !dbg !5587
  store i8* %form, i8** %form.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %form.addr, metadata !5588, metadata !DIExpression()), !dbg !5589
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5590, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.declare(metadata [1000 x i8]* %defanged_arg, metadata !5592, metadata !DIExpression()), !dbg !5593
  call void @llvm.dbg.declare(metadata [2000 x i8]* %buf, metadata !5594, metadata !DIExpression()), !dbg !5598
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5599
  %1 = load i32, i32* %status.addr, align 4, !dbg !5600
  %2 = load i8*, i8** %title.addr, align 8, !dbg !5601
  %3 = load i8*, i8** %extraheads.addr, align 8, !dbg !5602
  call void @send_mime(%struct.httpd_conn* %0, i32 %1, i8* %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69.174, i64 0, i64 0), i64 -1, i64 0), !dbg !5603
  %arraydecay = getelementptr inbounds [2000 x i8], [2000 x i8]* %buf, i64 0, i64 0, !dbg !5604
  %4 = load i32, i32* %status.addr, align 4, !dbg !5605
  %5 = load i8*, i8** %title.addr, align 8, !dbg !5606
  %6 = load i32, i32* %status.addr, align 4, !dbg !5607
  %7 = load i8*, i8** %title.addr, align 8, !dbg !5608
  %call = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay, i64 2000, i8* getelementptr inbounds ([322 x i8], [322 x i8]* @.str.70.205, i64 0, i64 0), i32 %4, i8* %5, i32 %6, i8* %7), !dbg !5609
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5610
  %arraydecay1 = getelementptr inbounds [2000 x i8], [2000 x i8]* %buf, i64 0, i64 0, !dbg !5611
  call void @add_response(%struct.httpd_conn* %8, i8* %arraydecay1), !dbg !5612
  %9 = load i8*, i8** %arg.addr, align 8, !dbg !5613
  %arraydecay2 = getelementptr inbounds [1000 x i8], [1000 x i8]* %defanged_arg, i64 0, i64 0, !dbg !5614
  call void @defang(i8* %9, i8* %arraydecay2, i32 1000), !dbg !5615
  %arraydecay3 = getelementptr inbounds [2000 x i8], [2000 x i8]* %buf, i64 0, i64 0, !dbg !5616
  %10 = load i8*, i8** %form.addr, align 8, !dbg !5617
  %arraydecay4 = getelementptr inbounds [1000 x i8], [1000 x i8]* %defanged_arg, i64 0, i64 0, !dbg !5618
  %call5 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay3, i64 2000, i8* %10, i8* %arraydecay4), !dbg !5619
  %11 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5620
  %arraydecay6 = getelementptr inbounds [2000 x i8], [2000 x i8]* %buf, i64 0, i64 0, !dbg !5621
  call void @add_response(%struct.httpd_conn* %11, i8* %arraydecay6), !dbg !5622
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5623
  %useragent = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 21, !dbg !5625
  %13 = load i8*, i8** %useragent, align 8, !dbg !5625
  %call7 = call i32 @match(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71.206, i64 0, i64 0), i8* %13), !dbg !5626
  %tobool = icmp ne i32 %call7, 0, !dbg !5626
  br i1 %tobool, label %if.then, label %if.end, !dbg !5627

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5628, metadata !DIExpression()), !dbg !5630
  %14 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5631
  call void @add_response(%struct.httpd_conn* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72.207, i64 0, i64 0)), !dbg !5632
  store i32 0, i32* %n, align 4, !dbg !5633
  br label %for.cond, !dbg !5635

for.cond:                                         ; preds = %for.inc, %if.then
  %15 = load i32, i32* %n, align 4, !dbg !5636
  %cmp = icmp slt i32 %15, 6, !dbg !5638
  br i1 %cmp, label %for.body, label %for.end, !dbg !5639

for.body:                                         ; preds = %for.cond
  %16 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5640
  call void @add_response(%struct.httpd_conn* %16, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.73.208, i64 0, i64 0)), !dbg !5641
  br label %for.inc, !dbg !5641

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %n, align 4, !dbg !5642
  %inc = add nsw i32 %17, 1, !dbg !5642
  store i32 %inc, i32* %n, align 4, !dbg !5642
  br label %for.cond, !dbg !5643, !llvm.loop !5644

for.end:                                          ; preds = %for.cond
  %18 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5646
  call void @add_response(%struct.httpd_conn* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74.209, i64 0, i64 0)), !dbg !5647
  br label %if.end, !dbg !5648

if.end:                                           ; preds = %for.end, %entry
  %19 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5649
  call void @send_response_tail(%struct.httpd_conn* %19), !dbg !5650
  ret void, !dbg !5651
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @send_mime(%struct.httpd_conn* %hc, i32 %status, i8* %title, i8* %encodings, i8* %extraheads, i8* %type, i64 %length, i64 %mod) #0 !dbg !5652 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %status.addr = alloca i32, align 4
  %title.addr = alloca i8*, align 8
  %encodings.addr = alloca i8*, align 8
  %extraheads.addr = alloca i8*, align 8
  %type.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %mod.addr = alloca i64, align 8
  %now = alloca i64, align 8
  %expires = alloca i64, align 8
  %rfc1123fmt = alloca i8*, align 8
  %nowbuf = alloca [100 x i8], align 16
  %modbuf = alloca [100 x i8], align 16
  %expbuf = alloca [100 x i8], align 16
  %fixed_type = alloca [500 x i8], align 16
  %buf = alloca [1000 x i8], align 16
  %partial_content = alloca i32, align 4
  %s100 = alloca i32, align 4
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !5655, metadata !DIExpression()), !dbg !5656
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !5657, metadata !DIExpression()), !dbg !5658
  store i8* %title, i8** %title.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %title.addr, metadata !5659, metadata !DIExpression()), !dbg !5660
  store i8* %encodings, i8** %encodings.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %encodings.addr, metadata !5661, metadata !DIExpression()), !dbg !5662
  store i8* %extraheads, i8** %extraheads.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extraheads.addr, metadata !5663, metadata !DIExpression()), !dbg !5664
  store i8* %type, i8** %type.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %type.addr, metadata !5665, metadata !DIExpression()), !dbg !5666
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !5667, metadata !DIExpression()), !dbg !5668
  store i64 %mod, i64* %mod.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mod.addr, metadata !5669, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.declare(metadata i64* %now, metadata !5671, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.declare(metadata i64* %expires, metadata !5673, metadata !DIExpression()), !dbg !5674
  call void @llvm.dbg.declare(metadata i8** %rfc1123fmt, metadata !5675, metadata !DIExpression()), !dbg !5676
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.75.212, i64 0, i64 0), i8** %rfc1123fmt, align 8, !dbg !5676
  call void @llvm.dbg.declare(metadata [100 x i8]* %nowbuf, metadata !5677, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.declare(metadata [100 x i8]* %modbuf, metadata !5682, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.declare(metadata [100 x i8]* %expbuf, metadata !5684, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.declare(metadata [500 x i8]* %fixed_type, metadata !5686, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.declare(metadata [1000 x i8]* %buf, metadata !5691, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.declare(metadata i32* %partial_content, metadata !5693, metadata !DIExpression()), !dbg !5694
  call void @llvm.dbg.declare(metadata i32* %s100, metadata !5695, metadata !DIExpression()), !dbg !5696
  %0 = load i32, i32* %status.addr, align 4, !dbg !5697
  %1 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5698
  %status1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %1, i32 0, i32 9, !dbg !5699
  store i32 %0, i32* %status1, align 8, !dbg !5700
  %2 = load i64, i64* %length.addr, align 8, !dbg !5701
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5702
  %bytes_to_send = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %3, i32 0, i32 10, !dbg !5703
  store i64 %2, i64* %bytes_to_send, align 8, !dbg !5704
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5705
  %mime_flag = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %4, i32 0, i32 51, !dbg !5707
  %5 = load i32, i32* %mime_flag, align 8, !dbg !5707
  %tobool = icmp ne i32 %5, 0, !dbg !5705
  br i1 %tobool, label %if.then, label %if.end104, !dbg !5708

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %status.addr, align 4, !dbg !5709
  %cmp = icmp eq i32 %6, 200, !dbg !5712
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5713

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5714
  %got_range = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %7, i32 0, i32 53, !dbg !5715
  %8 = load i32, i32* %got_range, align 8, !dbg !5715
  %tobool2 = icmp ne i32 %8, 0, !dbg !5714
  br i1 %tobool2, label %land.lhs.true3, label %if.else, !dbg !5716

land.lhs.true3:                                   ; preds = %land.lhs.true
  %9 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5717
  %last_byte_index = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %9, i32 0, i32 56, !dbg !5718
  %10 = load i64, i64* %last_byte_index, align 8, !dbg !5718
  %11 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5719
  %first_byte_index = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %11, i32 0, i32 55, !dbg !5720
  %12 = load i64, i64* %first_byte_index, align 8, !dbg !5720
  %cmp4 = icmp sge i64 %10, %12, !dbg !5721
  br i1 %cmp4, label %land.lhs.true5, label %if.else, !dbg !5722

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5723
  %last_byte_index6 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 56, !dbg !5724
  %14 = load i64, i64* %last_byte_index6, align 8, !dbg !5724
  %15 = load i64, i64* %length.addr, align 8, !dbg !5725
  %sub = sub nsw i64 %15, 1, !dbg !5726
  %cmp7 = icmp ne i64 %14, %sub, !dbg !5727
  br i1 %cmp7, label %land.lhs.true10, label %lor.lhs.false, !dbg !5728

lor.lhs.false:                                    ; preds = %land.lhs.true5
  %16 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5729
  %first_byte_index8 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %16, i32 0, i32 55, !dbg !5730
  %17 = load i64, i64* %first_byte_index8, align 8, !dbg !5730
  %cmp9 = icmp ne i64 %17, 0, !dbg !5731
  br i1 %cmp9, label %land.lhs.true10, label %if.else, !dbg !5732

land.lhs.true10:                                  ; preds = %lor.lhs.false, %land.lhs.true5
  %18 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5733
  %range_if = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %18, i32 0, i32 47, !dbg !5734
  %19 = load i64, i64* %range_if, align 8, !dbg !5734
  %cmp11 = icmp eq i64 %19, -1, !dbg !5735
  br i1 %cmp11, label %if.then15, label %lor.lhs.false12, !dbg !5736

lor.lhs.false12:                                  ; preds = %land.lhs.true10
  %20 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5737
  %range_if13 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %20, i32 0, i32 47, !dbg !5738
  %21 = load i64, i64* %range_if13, align 8, !dbg !5738
  %22 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5739
  %sb = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %22, i32 0, i32 59, !dbg !5740
  %st_mtimespec = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 8, !dbg !5741
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtimespec, i32 0, i32 0, !dbg !5741
  %23 = load i64, i64* %tv_sec, align 8, !dbg !5741
  %cmp14 = icmp eq i64 %21, %23, !dbg !5742
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !5743

if.then15:                                        ; preds = %lor.lhs.false12, %land.lhs.true10
  store i32 1, i32* %partial_content, align 4, !dbg !5744
  store i32 206, i32* %status.addr, align 4, !dbg !5746
  %24 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5747
  %status16 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %24, i32 0, i32 9, !dbg !5748
  store i32 206, i32* %status16, align 8, !dbg !5749
  %25 = load i8*, i8** @ok206title, align 8, !dbg !5750
  store i8* %25, i8** %title.addr, align 8, !dbg !5751
  br label %if.end, !dbg !5752

if.else:                                          ; preds = %lor.lhs.false12, %lor.lhs.false, %land.lhs.true3, %land.lhs.true, %if.then
  store i32 0, i32* %partial_content, align 4, !dbg !5753
  %26 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5755
  %got_range17 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %26, i32 0, i32 53, !dbg !5756
  store i32 0, i32* %got_range17, align 8, !dbg !5757
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then15
  %call = call i64 @time(i64* null), !dbg !5758
  store i64 %call, i64* %now, align 8, !dbg !5759
  %27 = load i64, i64* %mod.addr, align 8, !dbg !5760
  %cmp18 = icmp eq i64 %27, 0, !dbg !5762
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !5763

if.then19:                                        ; preds = %if.end
  %28 = load i64, i64* %now, align 8, !dbg !5764
  store i64 %28, i64* %mod.addr, align 8, !dbg !5765
  br label %if.end20, !dbg !5766

if.end20:                                         ; preds = %if.then19, %if.end
  %arraydecay = getelementptr inbounds [100 x i8], [100 x i8]* %nowbuf, i64 0, i64 0, !dbg !5767
  %29 = load i8*, i8** %rfc1123fmt, align 8, !dbg !5768
  %call21 = call %struct.tm* @gmtime(i64* %now), !dbg !5769
  %call22 = call i64 @"\01_strftime"(i8* %arraydecay, i64 100, i8* %29, %struct.tm* %call21), !dbg !5770
  %arraydecay23 = getelementptr inbounds [100 x i8], [100 x i8]* %modbuf, i64 0, i64 0, !dbg !5771
  %30 = load i8*, i8** %rfc1123fmt, align 8, !dbg !5772
  %call24 = call %struct.tm* @gmtime(i64* %mod.addr), !dbg !5773
  %call25 = call i64 @"\01_strftime"(i8* %arraydecay23, i64 100, i8* %30, %struct.tm* %call24), !dbg !5774
  %arraydecay26 = getelementptr inbounds [500 x i8], [500 x i8]* %fixed_type, i64 0, i64 0, !dbg !5775
  %31 = load i8*, i8** %type.addr, align 8, !dbg !5776
  %32 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5777
  %hs = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %32, i32 0, i32 1, !dbg !5778
  %33 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !5778
  %charset = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %33, i32 0, i32 6, !dbg !5779
  %34 = load i8*, i8** %charset, align 8, !dbg !5779
  %call27 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay26, i64 500, i8* %31, i8* %34), !dbg !5780
  %arraydecay28 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5781
  %35 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5782
  %protocol = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %35, i32 0, i32 14, !dbg !5783
  %36 = load i8*, i8** %protocol, align 8, !dbg !5783
  %37 = load i32, i32* %status.addr, align 4, !dbg !5784
  %38 = load i8*, i8** %title.addr, align 8, !dbg !5785
  %arraydecay29 = getelementptr inbounds [500 x i8], [500 x i8]* %fixed_type, i64 0, i64 0, !dbg !5786
  %arraydecay30 = getelementptr inbounds [100 x i8], [100 x i8]* %nowbuf, i64 0, i64 0, !dbg !5787
  %arraydecay31 = getelementptr inbounds [100 x i8], [100 x i8]* %modbuf, i64 0, i64 0, !dbg !5788
  %call32 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay28, i64 1000, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.76.213, i64 0, i64 0), i8* %36, i32 %37, i8* %38, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.144, i64 0, i64 0), i8* %arraydecay29, i8* %arraydecay30, i8* %arraydecay31), !dbg !5789
  %39 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5790
  %arraydecay33 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5791
  call void @add_response(%struct.httpd_conn* %39, i8* %arraydecay33), !dbg !5792
  %40 = load i32, i32* %status.addr, align 4, !dbg !5793
  %div = sdiv i32 %40, 100, !dbg !5794
  store i32 %div, i32* %s100, align 4, !dbg !5795
  %41 = load i32, i32* %s100, align 4, !dbg !5796
  %cmp34 = icmp ne i32 %41, 2, !dbg !5798
  br i1 %cmp34, label %land.lhs.true35, label %if.end41, !dbg !5799

land.lhs.true35:                                  ; preds = %if.end20
  %42 = load i32, i32* %s100, align 4, !dbg !5800
  %cmp36 = icmp ne i32 %42, 3, !dbg !5801
  br i1 %cmp36, label %if.then37, label %if.end41, !dbg !5802

if.then37:                                        ; preds = %land.lhs.true35
  %arraydecay38 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5803
  %call39 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay38, i64 1000, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.77.214, i64 0, i64 0)), !dbg !5805
  %43 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5806
  %arraydecay40 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5807
  call void @add_response(%struct.httpd_conn* %43, i8* %arraydecay40), !dbg !5808
  br label %if.end41, !dbg !5809

if.end41:                                         ; preds = %if.then37, %land.lhs.true35, %if.end20
  %44 = load i8*, i8** %encodings.addr, align 8, !dbg !5810
  %arrayidx = getelementptr inbounds i8, i8* %44, i64 0, !dbg !5810
  %45 = load i8, i8* %arrayidx, align 1, !dbg !5810
  %conv = sext i8 %45 to i32, !dbg !5810
  %cmp42 = icmp ne i32 %conv, 0, !dbg !5812
  br i1 %cmp42, label %if.then44, label %if.end48, !dbg !5813

if.then44:                                        ; preds = %if.end41
  %arraydecay45 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5814
  %46 = load i8*, i8** %encodings.addr, align 8, !dbg !5816
  %call46 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay45, i64 1000, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.78.215, i64 0, i64 0), i8* %46), !dbg !5817
  %47 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5818
  %arraydecay47 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5819
  call void @add_response(%struct.httpd_conn* %47, i8* %arraydecay47), !dbg !5820
  br label %if.end48, !dbg !5821

if.end48:                                         ; preds = %if.then44, %if.end41
  %48 = load i32, i32* %partial_content, align 4, !dbg !5822
  %tobool49 = icmp ne i32 %48, 0, !dbg !5822
  br i1 %tobool49, label %if.then50, label %if.else59, !dbg !5824

if.then50:                                        ; preds = %if.end48
  %arraydecay51 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5825
  %49 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5827
  %first_byte_index52 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %49, i32 0, i32 55, !dbg !5828
  %50 = load i64, i64* %first_byte_index52, align 8, !dbg !5828
  %51 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5829
  %last_byte_index53 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %51, i32 0, i32 56, !dbg !5830
  %52 = load i64, i64* %last_byte_index53, align 8, !dbg !5830
  %53 = load i64, i64* %length.addr, align 8, !dbg !5831
  %54 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5832
  %last_byte_index54 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %54, i32 0, i32 56, !dbg !5833
  %55 = load i64, i64* %last_byte_index54, align 8, !dbg !5833
  %56 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5834
  %first_byte_index55 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %56, i32 0, i32 55, !dbg !5835
  %57 = load i64, i64* %first_byte_index55, align 8, !dbg !5835
  %sub56 = sub nsw i64 %55, %57, !dbg !5836
  %add = add nsw i64 %sub56, 1, !dbg !5837
  %call57 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay51, i64 1000, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.79.216, i64 0, i64 0), i64 %50, i64 %52, i64 %53, i64 %add), !dbg !5838
  %58 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5839
  %arraydecay58 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5840
  call void @add_response(%struct.httpd_conn* %58, i8* %arraydecay58), !dbg !5841
  br label %if.end67, !dbg !5842

if.else59:                                        ; preds = %if.end48
  %59 = load i64, i64* %length.addr, align 8, !dbg !5843
  %cmp60 = icmp sge i64 %59, 0, !dbg !5845
  br i1 %cmp60, label %if.then62, label %if.end66, !dbg !5846

if.then62:                                        ; preds = %if.else59
  %arraydecay63 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5847
  %60 = load i64, i64* %length.addr, align 8, !dbg !5849
  %call64 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay63, i64 1000, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.80.217, i64 0, i64 0), i64 %60), !dbg !5850
  %61 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5851
  %arraydecay65 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5852
  call void @add_response(%struct.httpd_conn* %61, i8* %arraydecay65), !dbg !5853
  br label %if.end66, !dbg !5854

if.end66:                                         ; preds = %if.then62, %if.else59
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then50
  %62 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5855
  %hs68 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %62, i32 0, i32 1, !dbg !5857
  %63 = load %struct.httpd_server*, %struct.httpd_server** %hs68, align 8, !dbg !5857
  %p3p = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %63, i32 0, i32 7, !dbg !5858
  %64 = load i8*, i8** %p3p, align 8, !dbg !5858
  %arrayidx69 = getelementptr inbounds i8, i8* %64, i64 0, !dbg !5855
  %65 = load i8, i8* %arrayidx69, align 1, !dbg !5855
  %conv70 = sext i8 %65 to i32, !dbg !5855
  %cmp71 = icmp ne i32 %conv70, 0, !dbg !5859
  br i1 %cmp71, label %if.then73, label %if.end79, !dbg !5860

if.then73:                                        ; preds = %if.end67
  %arraydecay74 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5861
  %66 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5863
  %hs75 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %66, i32 0, i32 1, !dbg !5864
  %67 = load %struct.httpd_server*, %struct.httpd_server** %hs75, align 8, !dbg !5864
  %p3p76 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %67, i32 0, i32 7, !dbg !5865
  %68 = load i8*, i8** %p3p76, align 8, !dbg !5865
  %call77 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay74, i64 1000, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81.218, i64 0, i64 0), i8* %68), !dbg !5866
  %69 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5867
  %arraydecay78 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5868
  call void @add_response(%struct.httpd_conn* %69, i8* %arraydecay78), !dbg !5869
  br label %if.end79, !dbg !5870

if.end79:                                         ; preds = %if.then73, %if.end67
  %70 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5871
  %hs80 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %70, i32 0, i32 1, !dbg !5873
  %71 = load %struct.httpd_server*, %struct.httpd_server** %hs80, align 8, !dbg !5873
  %max_age = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %71, i32 0, i32 8, !dbg !5874
  %72 = load i32, i32* %max_age, align 8, !dbg !5874
  %cmp81 = icmp sge i32 %72, 0, !dbg !5875
  br i1 %cmp81, label %if.then83, label %if.end97, !dbg !5876

if.then83:                                        ; preds = %if.end79
  %73 = load i64, i64* %now, align 8, !dbg !5877
  %74 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5879
  %hs84 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %74, i32 0, i32 1, !dbg !5880
  %75 = load %struct.httpd_server*, %struct.httpd_server** %hs84, align 8, !dbg !5880
  %max_age85 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %75, i32 0, i32 8, !dbg !5881
  %76 = load i32, i32* %max_age85, align 8, !dbg !5881
  %conv86 = sext i32 %76 to i64, !dbg !5879
  %add87 = add nsw i64 %73, %conv86, !dbg !5882
  store i64 %add87, i64* %expires, align 8, !dbg !5883
  %arraydecay88 = getelementptr inbounds [100 x i8], [100 x i8]* %expbuf, i64 0, i64 0, !dbg !5884
  %77 = load i8*, i8** %rfc1123fmt, align 8, !dbg !5885
  %call89 = call %struct.tm* @gmtime(i64* %expires), !dbg !5886
  %call90 = call i64 @"\01_strftime"(i8* %arraydecay88, i64 100, i8* %77, %struct.tm* %call89), !dbg !5887
  %arraydecay91 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5888
  %78 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5889
  %hs92 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %78, i32 0, i32 1, !dbg !5890
  %79 = load %struct.httpd_server*, %struct.httpd_server** %hs92, align 8, !dbg !5890
  %max_age93 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %79, i32 0, i32 8, !dbg !5891
  %80 = load i32, i32* %max_age93, align 8, !dbg !5891
  %arraydecay94 = getelementptr inbounds [100 x i8], [100 x i8]* %expbuf, i64 0, i64 0, !dbg !5892
  %call95 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay91, i64 1000, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.82.219, i64 0, i64 0), i32 %80, i8* %arraydecay94), !dbg !5893
  %81 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5894
  %arraydecay96 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !5895
  call void @add_response(%struct.httpd_conn* %81, i8* %arraydecay96), !dbg !5896
  br label %if.end97, !dbg !5897

if.end97:                                         ; preds = %if.then83, %if.end79
  %82 = load i8*, i8** %extraheads.addr, align 8, !dbg !5898
  %arrayidx98 = getelementptr inbounds i8, i8* %82, i64 0, !dbg !5898
  %83 = load i8, i8* %arrayidx98, align 1, !dbg !5898
  %conv99 = sext i8 %83 to i32, !dbg !5898
  %cmp100 = icmp ne i32 %conv99, 0, !dbg !5900
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !5901

if.then102:                                       ; preds = %if.end97
  %84 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5902
  %85 = load i8*, i8** %extraheads.addr, align 8, !dbg !5903
  call void @add_response(%struct.httpd_conn* %84, i8* %85), !dbg !5904
  br label %if.end103, !dbg !5904

if.end103:                                        ; preds = %if.then102, %if.end97
  %86 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5905
  call void @add_response(%struct.httpd_conn* %86, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83.220, i64 0, i64 0)), !dbg !5906
  br label %if.end104, !dbg !5907

if.end104:                                        ; preds = %if.end103, %entry
  ret void, !dbg !5908
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @add_response(%struct.httpd_conn* %hc, i8* %str) #0 !dbg !5909 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %str.addr = alloca i8*, align 8
  %len = alloca i64, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !5910, metadata !DIExpression()), !dbg !5911
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5912, metadata !DIExpression()), !dbg !5913
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5914, metadata !DIExpression()), !dbg !5915
  %0 = load i8*, i8** %str.addr, align 8, !dbg !5916
  %call = call i64 @strlen(i8* %0), !dbg !5917
  store i64 %call, i64* %len, align 8, !dbg !5918
  %1 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5919
  %response = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %1, i32 0, i32 32, !dbg !5920
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5921
  %maxresponse = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 44, !dbg !5922
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5923
  %responselen = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %3, i32 0, i32 45, !dbg !5924
  %4 = load i64, i64* %responselen, align 8, !dbg !5924
  %5 = load i64, i64* %len, align 8, !dbg !5925
  %add = add i64 %4, %5, !dbg !5926
  call void @httpd_realloc_str(i8** %response, i64* %maxresponse, i64 %add), !dbg !5927
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5928
  %response1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 32, !dbg !5928
  %7 = load i8*, i8** %response1, align 8, !dbg !5928
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5928
  %responselen2 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 45, !dbg !5928
  %9 = load i64, i64* %responselen2, align 8, !dbg !5928
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %9, !dbg !5928
  %10 = load i8*, i8** %str.addr, align 8, !dbg !5928
  %11 = load i64, i64* %len, align 8, !dbg !5928
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5928
  %response3 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 32, !dbg !5928
  %13 = load i8*, i8** %response3, align 8, !dbg !5928
  %14 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5928
  %responselen4 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %14, i32 0, i32 45, !dbg !5928
  %15 = load i64, i64* %responselen4, align 8, !dbg !5928
  %arrayidx5 = getelementptr inbounds i8, i8* %13, i64 %15, !dbg !5928
  %16 = call i64 @llvm.objectsize.i64.p0i8(i8* %arrayidx5, i1 false, i1 true, i1 false), !dbg !5928
  %call6 = call i8* @__memmove_chk(i8* %arrayidx, i8* %10, i64 %11, i64 %16) #11, !dbg !5928
  %17 = load i64, i64* %len, align 8, !dbg !5929
  %18 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !5930
  %responselen7 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %18, i32 0, i32 45, !dbg !5931
  %19 = load i64, i64* %responselen7, align 8, !dbg !5932
  %add8 = add i64 %19, %17, !dbg !5932
  store i64 %add8, i64* %responselen7, align 8, !dbg !5932
  ret void, !dbg !5933
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @defang(i8* %str, i8* %dfstr, i32 %dfsize) #0 !dbg !5934 {
entry:
  %str.addr = alloca i8*, align 8
  %dfstr.addr = alloca i8*, align 8
  %dfsize.addr = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5937, metadata !DIExpression()), !dbg !5938
  store i8* %dfstr, i8** %dfstr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dfstr.addr, metadata !5939, metadata !DIExpression()), !dbg !5940
  store i32 %dfsize, i32* %dfsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dfsize.addr, metadata !5941, metadata !DIExpression()), !dbg !5942
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !5943, metadata !DIExpression()), !dbg !5944
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !5945, metadata !DIExpression()), !dbg !5946
  %0 = load i8*, i8** %str.addr, align 8, !dbg !5947
  store i8* %0, i8** %cp1, align 8, !dbg !5949
  %1 = load i8*, i8** %dfstr.addr, align 8, !dbg !5950
  store i8* %1, i8** %cp2, align 8, !dbg !5951
  br label %for.cond, !dbg !5952

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i8*, i8** %cp1, align 8, !dbg !5953
  %3 = load i8, i8* %2, align 1, !dbg !5955
  %conv = sext i8 %3 to i32, !dbg !5955
  %cmp = icmp ne i32 %conv, 0, !dbg !5956
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5957

land.rhs:                                         ; preds = %for.cond
  %4 = load i8*, i8** %cp2, align 8, !dbg !5958
  %5 = load i8*, i8** %dfstr.addr, align 8, !dbg !5959
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !5960
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !5960
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5960
  %6 = load i32, i32* %dfsize.addr, align 4, !dbg !5961
  %sub = sub nsw i32 %6, 5, !dbg !5962
  %conv2 = sext i32 %sub to i64, !dbg !5961
  %cmp3 = icmp slt i64 %sub.ptr.sub, %conv2, !dbg !5963
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %7 = phi i1 [ false, %for.cond ], [ %cmp3, %land.rhs ], !dbg !5964
  br i1 %7, label %for.body, label %for.end, !dbg !5965

for.body:                                         ; preds = %land.end
  %8 = load i8*, i8** %cp1, align 8, !dbg !5966
  %9 = load i8, i8* %8, align 1, !dbg !5968
  %conv5 = sext i8 %9 to i32, !dbg !5968
  switch i32 %conv5, label %sw.default [
    i32 60, label %sw.bb
    i32 62, label %sw.bb8
  ], !dbg !5969

sw.bb:                                            ; preds = %for.body
  %10 = load i8*, i8** %cp2, align 8, !dbg !5970
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5970
  store i8* %incdec.ptr, i8** %cp2, align 8, !dbg !5970
  store i8 38, i8* %10, align 1, !dbg !5972
  %11 = load i8*, i8** %cp2, align 8, !dbg !5973
  %incdec.ptr6 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !5973
  store i8* %incdec.ptr6, i8** %cp2, align 8, !dbg !5973
  store i8 108, i8* %11, align 1, !dbg !5974
  %12 = load i8*, i8** %cp2, align 8, !dbg !5975
  %incdec.ptr7 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !5975
  store i8* %incdec.ptr7, i8** %cp2, align 8, !dbg !5975
  store i8 116, i8* %12, align 1, !dbg !5976
  %13 = load i8*, i8** %cp2, align 8, !dbg !5977
  store i8 59, i8* %13, align 1, !dbg !5978
  br label %sw.epilog, !dbg !5979

sw.bb8:                                           ; preds = %for.body
  %14 = load i8*, i8** %cp2, align 8, !dbg !5980
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !5980
  store i8* %incdec.ptr9, i8** %cp2, align 8, !dbg !5980
  store i8 38, i8* %14, align 1, !dbg !5981
  %15 = load i8*, i8** %cp2, align 8, !dbg !5982
  %incdec.ptr10 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5982
  store i8* %incdec.ptr10, i8** %cp2, align 8, !dbg !5982
  store i8 103, i8* %15, align 1, !dbg !5983
  %16 = load i8*, i8** %cp2, align 8, !dbg !5984
  %incdec.ptr11 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !5984
  store i8* %incdec.ptr11, i8** %cp2, align 8, !dbg !5984
  store i8 116, i8* %16, align 1, !dbg !5985
  %17 = load i8*, i8** %cp2, align 8, !dbg !5986
  store i8 59, i8* %17, align 1, !dbg !5987
  br label %sw.epilog, !dbg !5988

sw.default:                                       ; preds = %for.body
  %18 = load i8*, i8** %cp1, align 8, !dbg !5989
  %19 = load i8, i8* %18, align 1, !dbg !5990
  %20 = load i8*, i8** %cp2, align 8, !dbg !5991
  store i8 %19, i8* %20, align 1, !dbg !5992
  br label %sw.epilog, !dbg !5993

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb
  br label %for.inc, !dbg !5994

for.inc:                                          ; preds = %sw.epilog
  %21 = load i8*, i8** %cp1, align 8, !dbg !5995
  %incdec.ptr12 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !5995
  store i8* %incdec.ptr12, i8** %cp1, align 8, !dbg !5995
  %22 = load i8*, i8** %cp2, align 8, !dbg !5996
  %incdec.ptr13 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !5996
  store i8* %incdec.ptr13, i8** %cp2, align 8, !dbg !5996
  br label %for.cond, !dbg !5997, !llvm.loop !5998

for.end:                                          ; preds = %land.end
  %23 = load i8*, i8** %cp2, align 8, !dbg !6000
  store i8 0, i8* %23, align 1, !dbg !6001
  ret void, !dbg !6002
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @send_response_tail(%struct.httpd_conn* %hc) #0 !dbg !6003 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %buf = alloca [1000 x i8], align 16
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !6004, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.declare(metadata [1000 x i8]* %buf, metadata !6006, metadata !DIExpression()), !dbg !6007
  %arraydecay = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !6008
  %call = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay, i64 1000, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.85.210, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.86.211, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.144, i64 0, i64 0)), !dbg !6009
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6010
  %arraydecay1 = getelementptr inbounds [1000 x i8], [1000 x i8]* %buf, i64 0, i64 0, !dbg !6011
  call void @add_response(%struct.httpd_conn* %0, i8* %arraydecay1), !dbg !6012
  ret void, !dbg !6013
}

declare %struct.tm* @gmtime(i64*) #3

declare i64 @"\01_strftime"(i8*, i64, i8*, %struct.tm*) #3

declare i64 @fread(i8*, i64, i64, %struct.__sFILE*) #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #11

declare i32 @__vsnprintf_chk(i8*, i64, i32, i64, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #11

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @httpd_method_str(i32 %method) #0 !dbg !6014 {
entry:
  %retval = alloca i8*, align 8
  %method.addr = alloca i32, align 4
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !6017, metadata !DIExpression()), !dbg !6018
  %0 = load i32, i32* %method.addr, align 4, !dbg !6019
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
    i32 5, label %sw.bb4
    i32 6, label %sw.bb5
  ], !dbg !6020

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.223, i64 0, i64 0), i8** %retval, align 8, !dbg !6021
  br label %return, !dbg !6021

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21.224, i64 0, i64 0), i8** %retval, align 8, !dbg !6023
  br label %return, !dbg !6023

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22.225, i64 0, i64 0), i8** %retval, align 8, !dbg !6024
  br label %return, !dbg !6024

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.226, i64 0, i64 0), i8** %retval, align 8, !dbg !6025
  br label %return, !dbg !6025

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24.227, i64 0, i64 0), i8** %retval, align 8, !dbg !6026
  br label %return, !dbg !6026

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25.228, i64 0, i64 0), i8** %retval, align 8, !dbg !6027
  br label %return, !dbg !6027

sw.default:                                       ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26.229, i64 0, i64 0), i8** %retval, align 8, !dbg !6028
  br label %return, !dbg !6028

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !6029
  ret i8* %1, !dbg !6029
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @httpd_get_conn(%struct.httpd_server* %hs, i32 %listen_fd, %struct.httpd_conn* %hc) #0 !dbg !6030 {
entry:
  %retval = alloca i32, align 4
  %hs.addr = alloca %struct.httpd_server*, align 8
  %listen_fd.addr = alloca i32, align 4
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %sa = alloca %union.httpd_sockaddr, align 8
  %sz = alloca i32, align 4
  store %struct.httpd_server* %hs, %struct.httpd_server** %hs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_server** %hs.addr, metadata !6033, metadata !DIExpression()), !dbg !6034
  store i32 %listen_fd, i32* %listen_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %listen_fd.addr, metadata !6035, metadata !DIExpression()), !dbg !6036
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !6037, metadata !DIExpression()), !dbg !6038
  call void @llvm.dbg.declare(metadata %union.httpd_sockaddr* %sa, metadata !6039, metadata !DIExpression()), !dbg !6040
  call void @llvm.dbg.declare(metadata i32* %sz, metadata !6041, metadata !DIExpression()), !dbg !6042
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6043
  %initialized = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 0, !dbg !6045
  %1 = load i32, i32* %initialized, align 8, !dbg !6045
  %tobool = icmp ne i32 %1, 0, !dbg !6043
  br i1 %tobool, label %if.end, label %if.then, !dbg !6046

if.then:                                          ; preds = %entry
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6047
  %read_size = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 4, !dbg !6049
  store i64 0, i64* %read_size, align 8, !dbg !6050
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6051
  %read_buf = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %3, i32 0, i32 3, !dbg !6052
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6053
  %read_size1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %4, i32 0, i32 4, !dbg !6054
  call void @httpd_realloc_str(i8** %read_buf, i64* %read_size1, i64 500), !dbg !6055
  %5 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6056
  %maxresponse = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %5, i32 0, i32 44, !dbg !6057
  store i64 0, i64* %maxresponse, align 8, !dbg !6058
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6059
  %maxremoteuser = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 43, !dbg !6060
  store i64 0, i64* %maxremoteuser, align 8, !dbg !6061
  %7 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6062
  %maxhostdir = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %7, i32 0, i32 42, !dbg !6063
  store i64 0, i64* %maxhostdir, align 8, !dbg !6064
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6065
  %maxreqhost = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 41, !dbg !6066
  store i64 0, i64* %maxreqhost, align 8, !dbg !6067
  %9 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6068
  %maxaccepte = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %9, i32 0, i32 40, !dbg !6069
  store i64 0, i64* %maxaccepte, align 8, !dbg !6070
  %10 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6071
  %maxaccept = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %10, i32 0, i32 39, !dbg !6072
  store i64 0, i64* %maxaccept, align 8, !dbg !6073
  %11 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6074
  %maxquery = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %11, i32 0, i32 38, !dbg !6075
  store i64 0, i64* %maxquery, align 8, !dbg !6076
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6077
  %maxpathinfo = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 37, !dbg !6078
  store i64 0, i64* %maxpathinfo, align 8, !dbg !6079
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6080
  %maxencodings = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 36, !dbg !6081
  store i64 0, i64* %maxencodings, align 8, !dbg !6082
  %14 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6083
  %maxexpnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %14, i32 0, i32 35, !dbg !6084
  store i64 0, i64* %maxexpnfilename, align 8, !dbg !6085
  %15 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6086
  %maxorigfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %15, i32 0, i32 34, !dbg !6087
  store i64 0, i64* %maxorigfilename, align 8, !dbg !6088
  %16 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6089
  %maxdecodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %16, i32 0, i32 33, !dbg !6090
  store i64 0, i64* %maxdecodedurl, align 8, !dbg !6091
  %17 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6092
  %decodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %17, i32 0, i32 13, !dbg !6093
  %18 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6094
  %maxdecodedurl2 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %18, i32 0, i32 33, !dbg !6095
  call void @httpd_realloc_str(i8** %decodedurl, i64* %maxdecodedurl2, i64 1), !dbg !6096
  %19 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6097
  %origfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %19, i32 0, i32 15, !dbg !6098
  %20 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6099
  %maxorigfilename3 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %20, i32 0, i32 34, !dbg !6100
  call void @httpd_realloc_str(i8** %origfilename, i64* %maxorigfilename3, i64 1), !dbg !6101
  %21 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6102
  %expnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %21, i32 0, i32 16, !dbg !6103
  %22 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6104
  %maxexpnfilename4 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %22, i32 0, i32 35, !dbg !6105
  call void @httpd_realloc_str(i8** %expnfilename, i64* %maxexpnfilename4, i64 0), !dbg !6106
  %23 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6107
  %encodings = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %23, i32 0, i32 17, !dbg !6108
  %24 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6109
  %maxencodings5 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %24, i32 0, i32 36, !dbg !6110
  call void @httpd_realloc_str(i8** %encodings, i64* %maxencodings5, i64 0), !dbg !6111
  %25 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6112
  %pathinfo = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %25, i32 0, i32 18, !dbg !6113
  %26 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6114
  %maxpathinfo6 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %26, i32 0, i32 37, !dbg !6115
  call void @httpd_realloc_str(i8** %pathinfo, i64* %maxpathinfo6, i64 0), !dbg !6116
  %27 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6117
  %query = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %27, i32 0, i32 19, !dbg !6118
  %28 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6119
  %maxquery7 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %28, i32 0, i32 38, !dbg !6120
  call void @httpd_realloc_str(i8** %query, i64* %maxquery7, i64 0), !dbg !6121
  %29 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6122
  %accept = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %29, i32 0, i32 22, !dbg !6123
  %30 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6124
  %maxaccept8 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %30, i32 0, i32 39, !dbg !6125
  call void @httpd_realloc_str(i8** %accept, i64* %maxaccept8, i64 0), !dbg !6126
  %31 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6127
  %accepte = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %31, i32 0, i32 23, !dbg !6128
  %32 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6129
  %maxaccepte9 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %32, i32 0, i32 40, !dbg !6130
  call void @httpd_realloc_str(i8** %accepte, i64* %maxaccepte9, i64 0), !dbg !6131
  %33 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6132
  %reqhost = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %33, i32 0, i32 27, !dbg !6133
  %34 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6134
  %maxreqhost10 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %34, i32 0, i32 41, !dbg !6135
  call void @httpd_realloc_str(i8** %reqhost, i64* %maxreqhost10, i64 0), !dbg !6136
  %35 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6137
  %hostdir = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %35, i32 0, i32 29, !dbg !6138
  %36 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6139
  %maxhostdir11 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %36, i32 0, i32 42, !dbg !6140
  call void @httpd_realloc_str(i8** %hostdir, i64* %maxhostdir11, i64 0), !dbg !6141
  %37 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6142
  %remoteuser = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %37, i32 0, i32 31, !dbg !6143
  %38 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6144
  %maxremoteuser12 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %38, i32 0, i32 43, !dbg !6145
  call void @httpd_realloc_str(i8** %remoteuser, i64* %maxremoteuser12, i64 0), !dbg !6146
  %39 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6147
  %response = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %39, i32 0, i32 32, !dbg !6148
  %40 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6149
  %maxresponse13 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %40, i32 0, i32 44, !dbg !6150
  call void @httpd_realloc_str(i8** %response, i64* %maxresponse13, i64 0), !dbg !6151
  %41 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6152
  %initialized14 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %41, i32 0, i32 0, !dbg !6153
  store i32 1, i32* %initialized14, align 8, !dbg !6154
  br label %if.end, !dbg !6155

if.end:                                           ; preds = %if.then, %entry
  store i32 128, i32* %sz, align 4, !dbg !6156
  %42 = load i32, i32* %listen_fd.addr, align 4, !dbg !6157
  %sa15 = bitcast %union.httpd_sockaddr* %sa to %struct.sockaddr*, !dbg !6158
  %call = call i32 @"\01_accept"(i32 %42, %struct.sockaddr* %sa15, i32* %sz), !dbg !6159
  %43 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6160
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %43, i32 0, i32 60, !dbg !6161
  store i32 %call, i32* %conn_fd, align 8, !dbg !6162
  %44 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6163
  %conn_fd16 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %44, i32 0, i32 60, !dbg !6165
  %45 = load i32, i32* %conn_fd16, align 8, !dbg !6165
  %cmp = icmp slt i32 %45, 0, !dbg !6166
  br i1 %cmp, label %if.then17, label %if.end26, !dbg !6167

if.then17:                                        ; preds = %if.end
  %call18 = call i32* @__error(), !dbg !6168
  %46 = load i32, i32* %call18, align 4, !dbg !6168
  %cmp19 = icmp eq i32 %46, 35, !dbg !6171
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !6172

if.then20:                                        ; preds = %if.then17
  store i32 2, i32* %retval, align 4, !dbg !6173
  br label %return, !dbg !6173

if.end21:                                         ; preds = %if.then17
  %call22 = call i32* @__error(), !dbg !6174
  %47 = load i32, i32* %call22, align 4, !dbg !6174
  %cmp23 = icmp ne i32 %47, 53, !dbg !6176
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !6177

if.then24:                                        ; preds = %if.end21
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27.232, i64 0, i64 0)), !dbg !6178
  br label %if.end25, !dbg !6178

if.end25:                                         ; preds = %if.then24, %if.end21
  store i32 0, i32* %retval, align 4, !dbg !6179
  br label %return, !dbg !6179

if.end26:                                         ; preds = %if.end
  %call27 = call i32 @sockaddr_check(%union.httpd_sockaddr* %sa), !dbg !6180
  %tobool28 = icmp ne i32 %call27, 0, !dbg !6180
  br i1 %tobool28, label %if.end33, label %if.then29, !dbg !6182

if.then29:                                        ; preds = %if.end26
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28.233, i64 0, i64 0)), !dbg !6183
  %48 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6185
  %conn_fd30 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %48, i32 0, i32 60, !dbg !6186
  %49 = load i32, i32* %conn_fd30, align 8, !dbg !6186
  %call31 = call i32 @"\01_close"(i32 %49), !dbg !6187
  %50 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6188
  %conn_fd32 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %50, i32 0, i32 60, !dbg !6189
  store i32 -1, i32* %conn_fd32, align 8, !dbg !6190
  store i32 0, i32* %retval, align 4, !dbg !6191
  br label %return, !dbg !6191

if.end33:                                         ; preds = %if.end26
  %51 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6192
  %conn_fd34 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %51, i32 0, i32 60, !dbg !6193
  %52 = load i32, i32* %conn_fd34, align 8, !dbg !6193
  %call35 = call i32 (i32, i32, ...) @"\01_fcntl"(i32 %52, i32 2, i32 1), !dbg !6194
  %53 = load %struct.httpd_server*, %struct.httpd_server** %hs.addr, align 8, !dbg !6195
  %54 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6196
  %hs36 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %54, i32 0, i32 1, !dbg !6197
  store %struct.httpd_server* %53, %struct.httpd_server** %hs36, align 8, !dbg !6198
  %55 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6199
  %client_addr = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %55, i32 0, i32 2, !dbg !6199
  %56 = bitcast %union.httpd_sockaddr* %client_addr to i8*, !dbg !6199
  %57 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6199
  %client_addr37 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %57, i32 0, i32 2, !dbg !6199
  %58 = bitcast %union.httpd_sockaddr* %client_addr37 to i8*, !dbg !6199
  %59 = call i64 @llvm.objectsize.i64.p0i8(i8* %58, i1 false, i1 true, i1 false), !dbg !6199
  %call38 = call i8* @__memset_chk(i8* %56, i32 0, i64 128, i64 %59) #11, !dbg !6199
  %60 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6200
  %client_addr39 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %60, i32 0, i32 2, !dbg !6200
  %61 = bitcast %union.httpd_sockaddr* %client_addr39 to i8*, !dbg !6200
  %62 = bitcast %union.httpd_sockaddr* %sa to i8*, !dbg !6200
  %call40 = call i64 @sockaddr_len(%union.httpd_sockaddr* %sa), !dbg !6200
  %63 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6200
  %client_addr41 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %63, i32 0, i32 2, !dbg !6200
  %64 = bitcast %union.httpd_sockaddr* %client_addr41 to i8*, !dbg !6200
  %65 = call i64 @llvm.objectsize.i64.p0i8(i8* %64, i1 false, i1 true, i1 false), !dbg !6200
  %call42 = call i8* @__memmove_chk(i8* %61, i8* %62, i64 %call40, i64 %65) #11, !dbg !6200
  %66 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6201
  %read_idx = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %66, i32 0, i32 5, !dbg !6202
  store i64 0, i64* %read_idx, align 8, !dbg !6203
  %67 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6204
  %checked_idx = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %67, i32 0, i32 6, !dbg !6205
  store i64 0, i64* %checked_idx, align 8, !dbg !6206
  %68 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6207
  %checked_state = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %68, i32 0, i32 7, !dbg !6208
  store i32 0, i32* %checked_state, align 8, !dbg !6209
  %69 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6210
  %method = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %69, i32 0, i32 8, !dbg !6211
  store i32 0, i32* %method, align 4, !dbg !6212
  %70 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6213
  %status = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %70, i32 0, i32 9, !dbg !6214
  store i32 0, i32* %status, align 8, !dbg !6215
  %71 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6216
  %bytes_to_send = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %71, i32 0, i32 10, !dbg !6217
  store i64 0, i64* %bytes_to_send, align 8, !dbg !6218
  %72 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6219
  %bytes_sent = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %72, i32 0, i32 11, !dbg !6220
  store i64 0, i64* %bytes_sent, align 8, !dbg !6221
  %73 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6222
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %73, i32 0, i32 12, !dbg !6223
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8** %encodedurl, align 8, !dbg !6224
  %74 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6225
  %decodedurl43 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %74, i32 0, i32 13, !dbg !6226
  %75 = load i8*, i8** %decodedurl43, align 8, !dbg !6226
  %arrayidx = getelementptr inbounds i8, i8* %75, i64 0, !dbg !6225
  store i8 0, i8* %arrayidx, align 1, !dbg !6227
  %76 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6228
  %protocol = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %76, i32 0, i32 14, !dbg !6229
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26.229, i64 0, i64 0), i8** %protocol, align 8, !dbg !6230
  %77 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6231
  %origfilename44 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %77, i32 0, i32 15, !dbg !6232
  %78 = load i8*, i8** %origfilename44, align 8, !dbg !6232
  %arrayidx45 = getelementptr inbounds i8, i8* %78, i64 0, !dbg !6231
  store i8 0, i8* %arrayidx45, align 1, !dbg !6233
  %79 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6234
  %expnfilename46 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %79, i32 0, i32 16, !dbg !6235
  %80 = load i8*, i8** %expnfilename46, align 8, !dbg !6235
  %arrayidx47 = getelementptr inbounds i8, i8* %80, i64 0, !dbg !6234
  store i8 0, i8* %arrayidx47, align 1, !dbg !6236
  %81 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6237
  %encodings48 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %81, i32 0, i32 17, !dbg !6238
  %82 = load i8*, i8** %encodings48, align 8, !dbg !6238
  %arrayidx49 = getelementptr inbounds i8, i8* %82, i64 0, !dbg !6237
  store i8 0, i8* %arrayidx49, align 1, !dbg !6239
  %83 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6240
  %pathinfo50 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %83, i32 0, i32 18, !dbg !6241
  %84 = load i8*, i8** %pathinfo50, align 8, !dbg !6241
  %arrayidx51 = getelementptr inbounds i8, i8* %84, i64 0, !dbg !6240
  store i8 0, i8* %arrayidx51, align 1, !dbg !6242
  %85 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6243
  %query52 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %85, i32 0, i32 19, !dbg !6244
  %86 = load i8*, i8** %query52, align 8, !dbg !6244
  %arrayidx53 = getelementptr inbounds i8, i8* %86, i64 0, !dbg !6243
  store i8 0, i8* %arrayidx53, align 1, !dbg !6245
  %87 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6246
  %referrer = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %87, i32 0, i32 20, !dbg !6247
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8** %referrer, align 8, !dbg !6248
  %88 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6249
  %useragent = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %88, i32 0, i32 21, !dbg !6250
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8** %useragent, align 8, !dbg !6251
  %89 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6252
  %accept54 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %89, i32 0, i32 22, !dbg !6253
  %90 = load i8*, i8** %accept54, align 8, !dbg !6253
  %arrayidx55 = getelementptr inbounds i8, i8* %90, i64 0, !dbg !6252
  store i8 0, i8* %arrayidx55, align 1, !dbg !6254
  %91 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6255
  %accepte56 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %91, i32 0, i32 23, !dbg !6256
  %92 = load i8*, i8** %accepte56, align 8, !dbg !6256
  %arrayidx57 = getelementptr inbounds i8, i8* %92, i64 0, !dbg !6255
  store i8 0, i8* %arrayidx57, align 1, !dbg !6257
  %93 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6258
  %acceptl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %93, i32 0, i32 24, !dbg !6259
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8** %acceptl, align 8, !dbg !6260
  %94 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6261
  %cookie = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %94, i32 0, i32 25, !dbg !6262
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8** %cookie, align 8, !dbg !6263
  %95 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6264
  %contenttype = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %95, i32 0, i32 26, !dbg !6265
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8** %contenttype, align 8, !dbg !6266
  %96 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6267
  %reqhost58 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %96, i32 0, i32 27, !dbg !6268
  %97 = load i8*, i8** %reqhost58, align 8, !dbg !6268
  %arrayidx59 = getelementptr inbounds i8, i8* %97, i64 0, !dbg !6267
  store i8 0, i8* %arrayidx59, align 1, !dbg !6269
  %98 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6270
  %hdrhost = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %98, i32 0, i32 28, !dbg !6271
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8** %hdrhost, align 8, !dbg !6272
  %99 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6273
  %hostdir60 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %99, i32 0, i32 29, !dbg !6274
  %100 = load i8*, i8** %hostdir60, align 8, !dbg !6274
  %arrayidx61 = getelementptr inbounds i8, i8* %100, i64 0, !dbg !6273
  store i8 0, i8* %arrayidx61, align 1, !dbg !6275
  %101 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6276
  %authorization = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %101, i32 0, i32 30, !dbg !6277
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8** %authorization, align 8, !dbg !6278
  %102 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6279
  %remoteuser62 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %102, i32 0, i32 31, !dbg !6280
  %103 = load i8*, i8** %remoteuser62, align 8, !dbg !6280
  %arrayidx63 = getelementptr inbounds i8, i8* %103, i64 0, !dbg !6279
  store i8 0, i8* %arrayidx63, align 1, !dbg !6281
  %104 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6282
  %response64 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %104, i32 0, i32 32, !dbg !6283
  %105 = load i8*, i8** %response64, align 8, !dbg !6283
  %arrayidx65 = getelementptr inbounds i8, i8* %105, i64 0, !dbg !6282
  store i8 0, i8* %arrayidx65, align 1, !dbg !6284
  %106 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6285
  %responselen = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %106, i32 0, i32 45, !dbg !6286
  store i64 0, i64* %responselen, align 8, !dbg !6287
  %107 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6288
  %if_modified_since = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %107, i32 0, i32 46, !dbg !6289
  store i64 -1, i64* %if_modified_since, align 8, !dbg !6290
  %108 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6291
  %range_if = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %108, i32 0, i32 47, !dbg !6292
  store i64 -1, i64* %range_if, align 8, !dbg !6293
  %109 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6294
  %contentlength = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %109, i32 0, i32 48, !dbg !6295
  store i64 -1, i64* %contentlength, align 8, !dbg !6296
  %110 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6297
  %type = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %110, i32 0, i32 49, !dbg !6298
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8** %type, align 8, !dbg !6299
  %111 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6300
  %hostname = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %111, i32 0, i32 50, !dbg !6301
  store i8* null, i8** %hostname, align 8, !dbg !6302
  %112 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6303
  %mime_flag = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %112, i32 0, i32 51, !dbg !6304
  store i32 1, i32* %mime_flag, align 8, !dbg !6305
  %113 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6306
  %one_one = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %113, i32 0, i32 52, !dbg !6307
  store i32 0, i32* %one_one, align 4, !dbg !6308
  %114 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6309
  %got_range = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %114, i32 0, i32 53, !dbg !6310
  store i32 0, i32* %got_range, align 8, !dbg !6311
  %115 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6312
  %tildemapped = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %115, i32 0, i32 54, !dbg !6313
  store i32 0, i32* %tildemapped, align 4, !dbg !6314
  %116 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6315
  %first_byte_index = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %116, i32 0, i32 55, !dbg !6316
  store i64 0, i64* %first_byte_index, align 8, !dbg !6317
  %117 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6318
  %last_byte_index = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %117, i32 0, i32 56, !dbg !6319
  store i64 -1, i64* %last_byte_index, align 8, !dbg !6320
  %118 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6321
  %keep_alive = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %118, i32 0, i32 57, !dbg !6322
  store i32 0, i32* %keep_alive, align 8, !dbg !6323
  %119 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6324
  %should_linger = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %119, i32 0, i32 58, !dbg !6325
  store i32 0, i32* %should_linger, align 4, !dbg !6326
  %120 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6327
  %file_address = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %120, i32 0, i32 61, !dbg !6328
  store i8* null, i8** %file_address, align 8, !dbg !6329
  store i32 1, i32* %retval, align 4, !dbg !6330
  br label %return, !dbg !6330

return:                                           ; preds = %if.end33, %if.then29, %if.end25, %if.then20
  %121 = load i32, i32* %retval, align 4, !dbg !6331
  ret i32 %121, !dbg !6331
}

declare i32 @"\01_accept"(i32, %struct.sockaddr*, i32*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @httpd_got_request(%struct.httpd_conn* %hc) #0 !dbg !6332 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %c = alloca i8, align 1
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !6333, metadata !DIExpression()), !dbg !6334
  call void @llvm.dbg.declare(metadata i8* %c, metadata !6335, metadata !DIExpression()), !dbg !6336
  br label %for.cond, !dbg !6337

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6338
  %checked_idx = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 6, !dbg !6341
  %1 = load i64, i64* %checked_idx, align 8, !dbg !6341
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6342
  %read_idx = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 5, !dbg !6343
  %3 = load i64, i64* %read_idx, align 8, !dbg !6343
  %cmp = icmp ult i64 %1, %3, !dbg !6344
  br i1 %cmp, label %for.body, label %for.end, !dbg !6345

for.body:                                         ; preds = %for.cond
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6346
  %read_buf = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %4, i32 0, i32 3, !dbg !6348
  %5 = load i8*, i8** %read_buf, align 8, !dbg !6348
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6349
  %checked_idx1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 6, !dbg !6350
  %7 = load i64, i64* %checked_idx1, align 8, !dbg !6350
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %7, !dbg !6346
  %8 = load i8, i8* %arrayidx, align 1, !dbg !6346
  store i8 %8, i8* %c, align 1, !dbg !6351
  %9 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6352
  %checked_state = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %9, i32 0, i32 7, !dbg !6353
  %10 = load i32, i32* %checked_state, align 8, !dbg !6353
  switch i32 %10, label %sw.epilog84 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb13
    i32 3, label %sw.bb19
    i32 4, label %sw.bb27
    i32 5, label %sw.bb36
    i32 6, label %sw.bb46
    i32 7, label %sw.bb53
    i32 8, label %sw.bb61
    i32 9, label %sw.bb69
    i32 10, label %sw.bb77
    i32 11, label %sw.bb83
  ], !dbg !6354

sw.bb:                                            ; preds = %for.body
  %11 = load i8, i8* %c, align 1, !dbg !6355
  %conv = sext i8 %11 to i32, !dbg !6355
  switch i32 %conv, label %sw.epilog [
    i32 32, label %sw.bb2
    i32 9, label %sw.bb2
    i32 10, label %sw.bb4
    i32 13, label %sw.bb4
  ], !dbg !6357

sw.bb2:                                           ; preds = %sw.bb, %sw.bb
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6358
  %checked_state3 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 7, !dbg !6360
  store i32 1, i32* %checked_state3, align 8, !dbg !6361
  br label %sw.epilog, !dbg !6362

sw.bb4:                                           ; preds = %sw.bb, %sw.bb
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6363
  %checked_state5 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 7, !dbg !6364
  store i32 11, i32* %checked_state5, align 8, !dbg !6365
  store i32 2, i32* %retval, align 4, !dbg !6366
  br label %return, !dbg !6366

sw.epilog:                                        ; preds = %sw.bb, %sw.bb2
  br label %sw.epilog84, !dbg !6367

sw.bb6:                                           ; preds = %for.body
  %14 = load i8, i8* %c, align 1, !dbg !6368
  %conv7 = sext i8 %14 to i32, !dbg !6368
  switch i32 %conv7, label %sw.default [
    i32 32, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb9
    i32 13, label %sw.bb9
  ], !dbg !6369

sw.bb8:                                           ; preds = %sw.bb6, %sw.bb6
  br label %sw.epilog12, !dbg !6370

sw.bb9:                                           ; preds = %sw.bb6, %sw.bb6
  %15 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6372
  %checked_state10 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %15, i32 0, i32 7, !dbg !6373
  store i32 11, i32* %checked_state10, align 8, !dbg !6374
  store i32 2, i32* %retval, align 4, !dbg !6375
  br label %return, !dbg !6375

sw.default:                                       ; preds = %sw.bb6
  %16 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6376
  %checked_state11 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %16, i32 0, i32 7, !dbg !6377
  store i32 2, i32* %checked_state11, align 8, !dbg !6378
  br label %sw.epilog12, !dbg !6379

sw.epilog12:                                      ; preds = %sw.default, %sw.bb8
  br label %sw.epilog84, !dbg !6380

sw.bb13:                                          ; preds = %for.body
  %17 = load i8, i8* %c, align 1, !dbg !6381
  %conv14 = sext i8 %17 to i32, !dbg !6381
  switch i32 %conv14, label %sw.epilog18 [
    i32 32, label %sw.bb15
    i32 9, label %sw.bb15
    i32 10, label %sw.bb17
    i32 13, label %sw.bb17
  ], !dbg !6382

sw.bb15:                                          ; preds = %sw.bb13, %sw.bb13
  %18 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6383
  %checked_state16 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %18, i32 0, i32 7, !dbg !6385
  store i32 3, i32* %checked_state16, align 8, !dbg !6386
  br label %sw.epilog18, !dbg !6387

sw.bb17:                                          ; preds = %sw.bb13, %sw.bb13
  store i32 1, i32* %retval, align 4, !dbg !6388
  br label %return, !dbg !6388

sw.epilog18:                                      ; preds = %sw.bb13, %sw.bb15
  br label %sw.epilog84, !dbg !6389

sw.bb19:                                          ; preds = %for.body
  %19 = load i8, i8* %c, align 1, !dbg !6390
  %conv20 = sext i8 %19 to i32, !dbg !6390
  switch i32 %conv20, label %sw.default24 [
    i32 32, label %sw.bb21
    i32 9, label %sw.bb21
    i32 10, label %sw.bb22
    i32 13, label %sw.bb22
  ], !dbg !6391

sw.bb21:                                          ; preds = %sw.bb19, %sw.bb19
  br label %sw.epilog26, !dbg !6392

sw.bb22:                                          ; preds = %sw.bb19, %sw.bb19
  %20 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6394
  %checked_state23 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %20, i32 0, i32 7, !dbg !6395
  store i32 11, i32* %checked_state23, align 8, !dbg !6396
  store i32 2, i32* %retval, align 4, !dbg !6397
  br label %return, !dbg !6397

sw.default24:                                     ; preds = %sw.bb19
  %21 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6398
  %checked_state25 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %21, i32 0, i32 7, !dbg !6399
  store i32 4, i32* %checked_state25, align 8, !dbg !6400
  br label %sw.epilog26, !dbg !6401

sw.epilog26:                                      ; preds = %sw.default24, %sw.bb21
  br label %sw.epilog84, !dbg !6402

sw.bb27:                                          ; preds = %for.body
  %22 = load i8, i8* %c, align 1, !dbg !6403
  %conv28 = sext i8 %22 to i32, !dbg !6403
  switch i32 %conv28, label %sw.epilog35 [
    i32 32, label %sw.bb29
    i32 9, label %sw.bb29
    i32 10, label %sw.bb31
    i32 13, label %sw.bb33
  ], !dbg !6404

sw.bb29:                                          ; preds = %sw.bb27, %sw.bb27
  %23 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6405
  %checked_state30 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %23, i32 0, i32 7, !dbg !6407
  store i32 5, i32* %checked_state30, align 8, !dbg !6408
  br label %sw.epilog35, !dbg !6409

sw.bb31:                                          ; preds = %sw.bb27
  %24 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6410
  %checked_state32 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %24, i32 0, i32 7, !dbg !6411
  store i32 7, i32* %checked_state32, align 8, !dbg !6412
  br label %sw.epilog35, !dbg !6413

sw.bb33:                                          ; preds = %sw.bb27
  %25 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6414
  %checked_state34 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %25, i32 0, i32 7, !dbg !6415
  store i32 8, i32* %checked_state34, align 8, !dbg !6416
  br label %sw.epilog35, !dbg !6417

sw.epilog35:                                      ; preds = %sw.bb27, %sw.bb33, %sw.bb31, %sw.bb29
  br label %sw.epilog84, !dbg !6418

sw.bb36:                                          ; preds = %for.body
  %26 = load i8, i8* %c, align 1, !dbg !6419
  %conv37 = sext i8 %26 to i32, !dbg !6419
  switch i32 %conv37, label %sw.default43 [
    i32 32, label %sw.bb38
    i32 9, label %sw.bb38
    i32 10, label %sw.bb39
    i32 13, label %sw.bb41
  ], !dbg !6420

sw.bb38:                                          ; preds = %sw.bb36, %sw.bb36
  br label %sw.epilog45, !dbg !6421

sw.bb39:                                          ; preds = %sw.bb36
  %27 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6423
  %checked_state40 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %27, i32 0, i32 7, !dbg !6424
  store i32 7, i32* %checked_state40, align 8, !dbg !6425
  br label %sw.epilog45, !dbg !6426

sw.bb41:                                          ; preds = %sw.bb36
  %28 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6427
  %checked_state42 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %28, i32 0, i32 7, !dbg !6428
  store i32 8, i32* %checked_state42, align 8, !dbg !6429
  br label %sw.epilog45, !dbg !6430

sw.default43:                                     ; preds = %sw.bb36
  %29 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6431
  %checked_state44 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %29, i32 0, i32 7, !dbg !6432
  store i32 11, i32* %checked_state44, align 8, !dbg !6433
  store i32 2, i32* %retval, align 4, !dbg !6434
  br label %return, !dbg !6434

sw.epilog45:                                      ; preds = %sw.bb41, %sw.bb39, %sw.bb38
  br label %sw.epilog84, !dbg !6435

sw.bb46:                                          ; preds = %for.body
  %30 = load i8, i8* %c, align 1, !dbg !6436
  %conv47 = sext i8 %30 to i32, !dbg !6436
  switch i32 %conv47, label %sw.epilog52 [
    i32 10, label %sw.bb48
    i32 13, label %sw.bb50
  ], !dbg !6437

sw.bb48:                                          ; preds = %sw.bb46
  %31 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6438
  %checked_state49 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %31, i32 0, i32 7, !dbg !6440
  store i32 7, i32* %checked_state49, align 8, !dbg !6441
  br label %sw.epilog52, !dbg !6442

sw.bb50:                                          ; preds = %sw.bb46
  %32 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6443
  %checked_state51 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %32, i32 0, i32 7, !dbg !6444
  store i32 8, i32* %checked_state51, align 8, !dbg !6445
  br label %sw.epilog52, !dbg !6446

sw.epilog52:                                      ; preds = %sw.bb46, %sw.bb50, %sw.bb48
  br label %sw.epilog84, !dbg !6447

sw.bb53:                                          ; preds = %for.body
  %33 = load i8, i8* %c, align 1, !dbg !6448
  %conv54 = sext i8 %33 to i32, !dbg !6448
  switch i32 %conv54, label %sw.default58 [
    i32 10, label %sw.bb55
    i32 13, label %sw.bb56
  ], !dbg !6449

sw.bb55:                                          ; preds = %sw.bb53
  store i32 1, i32* %retval, align 4, !dbg !6450
  br label %return, !dbg !6450

sw.bb56:                                          ; preds = %sw.bb53
  %34 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6452
  %checked_state57 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %34, i32 0, i32 7, !dbg !6453
  store i32 8, i32* %checked_state57, align 8, !dbg !6454
  br label %sw.epilog60, !dbg !6455

sw.default58:                                     ; preds = %sw.bb53
  %35 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6456
  %checked_state59 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %35, i32 0, i32 7, !dbg !6457
  store i32 6, i32* %checked_state59, align 8, !dbg !6458
  br label %sw.epilog60, !dbg !6459

sw.epilog60:                                      ; preds = %sw.default58, %sw.bb56
  br label %sw.epilog84, !dbg !6460

sw.bb61:                                          ; preds = %for.body
  %36 = load i8, i8* %c, align 1, !dbg !6461
  %conv62 = sext i8 %36 to i32, !dbg !6461
  switch i32 %conv62, label %sw.default66 [
    i32 10, label %sw.bb63
    i32 13, label %sw.bb65
  ], !dbg !6462

sw.bb63:                                          ; preds = %sw.bb61
  %37 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6463
  %checked_state64 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %37, i32 0, i32 7, !dbg !6465
  store i32 9, i32* %checked_state64, align 8, !dbg !6466
  br label %sw.epilog68, !dbg !6467

sw.bb65:                                          ; preds = %sw.bb61
  store i32 1, i32* %retval, align 4, !dbg !6468
  br label %return, !dbg !6468

sw.default66:                                     ; preds = %sw.bb61
  %38 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6469
  %checked_state67 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %38, i32 0, i32 7, !dbg !6470
  store i32 6, i32* %checked_state67, align 8, !dbg !6471
  br label %sw.epilog68, !dbg !6472

sw.epilog68:                                      ; preds = %sw.default66, %sw.bb63
  br label %sw.epilog84, !dbg !6473

sw.bb69:                                          ; preds = %for.body
  %39 = load i8, i8* %c, align 1, !dbg !6474
  %conv70 = sext i8 %39 to i32, !dbg !6474
  switch i32 %conv70, label %sw.default74 [
    i32 10, label %sw.bb71
    i32 13, label %sw.bb72
  ], !dbg !6475

sw.bb71:                                          ; preds = %sw.bb69
  store i32 1, i32* %retval, align 4, !dbg !6476
  br label %return, !dbg !6476

sw.bb72:                                          ; preds = %sw.bb69
  %40 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6478
  %checked_state73 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %40, i32 0, i32 7, !dbg !6479
  store i32 10, i32* %checked_state73, align 8, !dbg !6480
  br label %sw.epilog76, !dbg !6481

sw.default74:                                     ; preds = %sw.bb69
  %41 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6482
  %checked_state75 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %41, i32 0, i32 7, !dbg !6483
  store i32 6, i32* %checked_state75, align 8, !dbg !6484
  br label %sw.epilog76, !dbg !6485

sw.epilog76:                                      ; preds = %sw.default74, %sw.bb72
  br label %sw.epilog84, !dbg !6486

sw.bb77:                                          ; preds = %for.body
  %42 = load i8, i8* %c, align 1, !dbg !6487
  %conv78 = sext i8 %42 to i32, !dbg !6487
  switch i32 %conv78, label %sw.default80 [
    i32 10, label %sw.bb79
    i32 13, label %sw.bb79
  ], !dbg !6488

sw.bb79:                                          ; preds = %sw.bb77, %sw.bb77
  store i32 1, i32* %retval, align 4, !dbg !6489
  br label %return, !dbg !6489

sw.default80:                                     ; preds = %sw.bb77
  %43 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6491
  %checked_state81 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %43, i32 0, i32 7, !dbg !6492
  store i32 6, i32* %checked_state81, align 8, !dbg !6493
  br label %sw.epilog82, !dbg !6494

sw.epilog82:                                      ; preds = %sw.default80
  br label %sw.epilog84, !dbg !6495

sw.bb83:                                          ; preds = %for.body
  store i32 2, i32* %retval, align 4, !dbg !6496
  br label %return, !dbg !6496

sw.epilog84:                                      ; preds = %for.body, %sw.epilog82, %sw.epilog76, %sw.epilog68, %sw.epilog60, %sw.epilog52, %sw.epilog45, %sw.epilog35, %sw.epilog26, %sw.epilog18, %sw.epilog12, %sw.epilog
  br label %for.inc, !dbg !6497

for.inc:                                          ; preds = %sw.epilog84
  %44 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6498
  %checked_idx85 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %44, i32 0, i32 6, !dbg !6499
  %45 = load i64, i64* %checked_idx85, align 8, !dbg !6500
  %inc = add i64 %45, 1, !dbg !6500
  store i64 %inc, i64* %checked_idx85, align 8, !dbg !6500
  br label %for.cond, !dbg !6501, !llvm.loop !6502

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6504
  br label %return, !dbg !6504

return:                                           ; preds = %for.end, %sw.bb83, %sw.bb79, %sw.bb71, %sw.bb65, %sw.bb55, %sw.default43, %sw.bb22, %sw.bb17, %sw.bb9, %sw.bb4
  %46 = load i32, i32* %retval, align 4, !dbg !6505
  ret i32 %46, !dbg !6505
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @httpd_parse_request(%struct.httpd_conn* %hc) #0 !dbg !6506 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %buf = alloca i8*, align 8
  %method_str = alloca i8*, align 8
  %url = alloca i8*, align 8
  %protocol = alloca i8*, align 8
  %reqhost = alloca i8*, align 8
  %eol = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %pi = alloca i8*, align 8
  %cp_dash = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !6507, metadata !DIExpression()), !dbg !6508
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6509, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.declare(metadata i8** %method_str, metadata !6511, metadata !DIExpression()), !dbg !6512
  call void @llvm.dbg.declare(metadata i8** %url, metadata !6513, metadata !DIExpression()), !dbg !6514
  call void @llvm.dbg.declare(metadata i8** %protocol, metadata !6515, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.declare(metadata i8** %reqhost, metadata !6517, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.declare(metadata i8** %eol, metadata !6519, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !6521, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.declare(metadata i8** %pi, metadata !6523, metadata !DIExpression()), !dbg !6524
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6525
  %checked_idx = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 6, !dbg !6526
  store i64 0, i64* %checked_idx, align 8, !dbg !6527
  %1 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6528
  %call = call i8* @bufgets(%struct.httpd_conn* %1), !dbg !6529
  store i8* %call, i8** %method_str, align 8, !dbg !6530
  %2 = load i8*, i8** %method_str, align 8, !dbg !6531
  %call1 = call i8* @strpbrk(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30.238, i64 0, i64 0)), !dbg !6532
  store i8* %call1, i8** %url, align 8, !dbg !6533
  %3 = load i8*, i8** %url, align 8, !dbg !6534
  %cmp = icmp eq i8* %3, null, !dbg !6536
  br i1 %cmp, label %if.then, label %if.end, !dbg !6537

if.then:                                          ; preds = %entry
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6538
  %5 = load i8*, i8** @httpd_err400title, align 8, !dbg !6540
  %6 = load i8*, i8** @httpd_err400form, align 8, !dbg !6541
  call void @httpd_send_err(%struct.httpd_conn* %4, i32 400, i8* %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0)), !dbg !6542
  store i32 -1, i32* %retval, align 4, !dbg !6543
  br label %return, !dbg !6543

if.end:                                           ; preds = %entry
  %7 = load i8*, i8** %url, align 8, !dbg !6544
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6544
  store i8* %incdec.ptr, i8** %url, align 8, !dbg !6544
  store i8 0, i8* %7, align 1, !dbg !6545
  %8 = load i8*, i8** %url, align 8, !dbg !6546
  %call2 = call i64 @strspn(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30.238, i64 0, i64 0)), !dbg !6547
  %9 = load i8*, i8** %url, align 8, !dbg !6548
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %call2, !dbg !6548
  store i8* %add.ptr, i8** %url, align 8, !dbg !6548
  %10 = load i8*, i8** %url, align 8, !dbg !6549
  %call3 = call i8* @strpbrk(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30.238, i64 0, i64 0)), !dbg !6550
  store i8* %call3, i8** %protocol, align 8, !dbg !6551
  %11 = load i8*, i8** %protocol, align 8, !dbg !6552
  %cmp4 = icmp eq i8* %11, null, !dbg !6554
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !6555

if.then5:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31.239, i64 0, i64 0), i8** %protocol, align 8, !dbg !6556
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6558
  %mime_flag = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 51, !dbg !6559
  store i32 0, i32* %mime_flag, align 8, !dbg !6560
  br label %if.end23, !dbg !6561

if.else:                                          ; preds = %if.end
  %13 = load i8*, i8** %protocol, align 8, !dbg !6562
  %incdec.ptr6 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6562
  store i8* %incdec.ptr6, i8** %protocol, align 8, !dbg !6562
  store i8 0, i8* %13, align 1, !dbg !6564
  %14 = load i8*, i8** %protocol, align 8, !dbg !6565
  %call7 = call i64 @strspn(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30.238, i64 0, i64 0)), !dbg !6566
  %15 = load i8*, i8** %protocol, align 8, !dbg !6567
  %add.ptr8 = getelementptr inbounds i8, i8* %15, i64 %call7, !dbg !6567
  store i8* %add.ptr8, i8** %protocol, align 8, !dbg !6567
  %16 = load i8*, i8** %protocol, align 8, !dbg !6568
  %17 = load i8, i8* %16, align 1, !dbg !6570
  %conv = sext i8 %17 to i32, !dbg !6570
  %cmp9 = icmp ne i32 %conv, 0, !dbg !6571
  br i1 %cmp9, label %if.then11, label %if.end22, !dbg !6572

if.then11:                                        ; preds = %if.else
  %18 = load i8*, i8** %protocol, align 8, !dbg !6573
  %call12 = call i8* @strpbrk(i8* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30.238, i64 0, i64 0)), !dbg !6575
  store i8* %call12, i8** %eol, align 8, !dbg !6576
  %19 = load i8*, i8** %eol, align 8, !dbg !6577
  %cmp13 = icmp ne i8* %19, null, !dbg !6579
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !6580

if.then15:                                        ; preds = %if.then11
  %20 = load i8*, i8** %eol, align 8, !dbg !6581
  store i8 0, i8* %20, align 1, !dbg !6582
  br label %if.end16, !dbg !6583

if.end16:                                         ; preds = %if.then15, %if.then11
  %21 = load i8*, i8** %protocol, align 8, !dbg !6584
  %call17 = call i32 @strcasecmp(i8* %21, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32.240, i64 0, i64 0)), !dbg !6586
  %cmp18 = icmp ne i32 %call17, 0, !dbg !6587
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !6588

if.then20:                                        ; preds = %if.end16
  %22 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6589
  %one_one = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %22, i32 0, i32 52, !dbg !6590
  store i32 1, i32* %one_one, align 4, !dbg !6591
  br label %if.end21, !dbg !6589

if.end21:                                         ; preds = %if.then20, %if.end16
  br label %if.end22, !dbg !6592

if.end22:                                         ; preds = %if.end21, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then5
  %23 = load i8*, i8** %protocol, align 8, !dbg !6593
  %24 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6594
  %protocol24 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %24, i32 0, i32 14, !dbg !6595
  store i8* %23, i8** %protocol24, align 8, !dbg !6596
  %25 = load i8*, i8** %url, align 8, !dbg !6597
  %call25 = call i32 @strncasecmp(i8* %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33.241, i64 0, i64 0), i64 7), !dbg !6599
  %cmp26 = icmp eq i32 %call25, 0, !dbg !6600
  br i1 %cmp26, label %if.then28, label %if.end51, !dbg !6601

if.then28:                                        ; preds = %if.end23
  %26 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6602
  %one_one29 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %26, i32 0, i32 52, !dbg !6605
  %27 = load i32, i32* %one_one29, align 4, !dbg !6605
  %tobool = icmp ne i32 %27, 0, !dbg !6602
  br i1 %tobool, label %if.end31, label %if.then30, !dbg !6606

if.then30:                                        ; preds = %if.then28
  %28 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6607
  %29 = load i8*, i8** @httpd_err400title, align 8, !dbg !6609
  %30 = load i8*, i8** @httpd_err400form, align 8, !dbg !6610
  call void @httpd_send_err(%struct.httpd_conn* %28, i32 400, i8* %29, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %30, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0)), !dbg !6611
  store i32 -1, i32* %retval, align 4, !dbg !6612
  br label %return, !dbg !6612

if.end31:                                         ; preds = %if.then28
  %31 = load i8*, i8** %url, align 8, !dbg !6613
  %add.ptr32 = getelementptr inbounds i8, i8* %31, i64 7, !dbg !6614
  store i8* %add.ptr32, i8** %reqhost, align 8, !dbg !6615
  %32 = load i8*, i8** %reqhost, align 8, !dbg !6616
  %call33 = call i8* @strchr(i8* %32, i32 47), !dbg !6617
  store i8* %call33, i8** %url, align 8, !dbg !6618
  %33 = load i8*, i8** %url, align 8, !dbg !6619
  %cmp34 = icmp eq i8* %33, null, !dbg !6621
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !6622

if.then36:                                        ; preds = %if.end31
  %34 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6623
  %35 = load i8*, i8** @httpd_err400title, align 8, !dbg !6625
  %36 = load i8*, i8** @httpd_err400form, align 8, !dbg !6626
  call void @httpd_send_err(%struct.httpd_conn* %34, i32 400, i8* %35, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %36, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0)), !dbg !6627
  store i32 -1, i32* %retval, align 4, !dbg !6628
  br label %return, !dbg !6628

if.end37:                                         ; preds = %if.end31
  %37 = load i8*, i8** %url, align 8, !dbg !6629
  store i8 0, i8* %37, align 1, !dbg !6630
  %38 = load i8*, i8** %reqhost, align 8, !dbg !6631
  %call38 = call i8* @strchr(i8* %38, i32 47), !dbg !6633
  %cmp39 = icmp ne i8* %call38, null, !dbg !6634
  br i1 %cmp39, label %if.then44, label %lor.lhs.false, !dbg !6635

lor.lhs.false:                                    ; preds = %if.end37
  %39 = load i8*, i8** %reqhost, align 8, !dbg !6636
  %arrayidx = getelementptr inbounds i8, i8* %39, i64 0, !dbg !6636
  %40 = load i8, i8* %arrayidx, align 1, !dbg !6636
  %conv41 = sext i8 %40 to i32, !dbg !6636
  %cmp42 = icmp eq i32 %conv41, 46, !dbg !6637
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !6638

if.then44:                                        ; preds = %lor.lhs.false, %if.end37
  %41 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6639
  %42 = load i8*, i8** @httpd_err400title, align 8, !dbg !6641
  %43 = load i8*, i8** @httpd_err400form, align 8, !dbg !6642
  call void @httpd_send_err(%struct.httpd_conn* %41, i32 400, i8* %42, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %43, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0)), !dbg !6643
  store i32 -1, i32* %retval, align 4, !dbg !6644
  br label %return, !dbg !6644

if.end45:                                         ; preds = %lor.lhs.false
  %44 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6645
  %reqhost46 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %44, i32 0, i32 27, !dbg !6646
  %45 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6647
  %maxreqhost = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %45, i32 0, i32 41, !dbg !6648
  %46 = load i8*, i8** %reqhost, align 8, !dbg !6649
  %call47 = call i64 @strlen(i8* %46), !dbg !6650
  call void @httpd_realloc_str(i8** %reqhost46, i64* %maxreqhost, i64 %call47), !dbg !6651
  %47 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6652
  %reqhost48 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %47, i32 0, i32 27, !dbg !6652
  %48 = load i8*, i8** %reqhost48, align 8, !dbg !6652
  %49 = load i8*, i8** %reqhost, align 8, !dbg !6652
  %50 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6652
  %reqhost49 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %50, i32 0, i32 27, !dbg !6652
  %51 = load i8*, i8** %reqhost49, align 8, !dbg !6652
  %52 = call i64 @llvm.objectsize.i64.p0i8(i8* %51, i1 false, i1 true, i1 false), !dbg !6652
  %call50 = call i8* @__strcpy_chk(i8* %48, i8* %49, i64 %52) #11, !dbg !6652
  %53 = load i8*, i8** %url, align 8, !dbg !6653
  store i8 47, i8* %53, align 1, !dbg !6654
  br label %if.end51, !dbg !6655

if.end51:                                         ; preds = %if.end45, %if.end23
  %54 = load i8*, i8** %url, align 8, !dbg !6656
  %55 = load i8, i8* %54, align 1, !dbg !6658
  %conv52 = sext i8 %55 to i32, !dbg !6658
  %cmp53 = icmp ne i32 %conv52, 47, !dbg !6659
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !6660

if.then55:                                        ; preds = %if.end51
  %56 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6661
  %57 = load i8*, i8** @httpd_err400title, align 8, !dbg !6663
  %58 = load i8*, i8** @httpd_err400form, align 8, !dbg !6664
  call void @httpd_send_err(%struct.httpd_conn* %56, i32 400, i8* %57, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %58, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0)), !dbg !6665
  store i32 -1, i32* %retval, align 4, !dbg !6666
  br label %return, !dbg !6666

if.end56:                                         ; preds = %if.end51
  %59 = load i8*, i8** %method_str, align 8, !dbg !6667
  %call57 = call i8* @httpd_method_str(i32 1), !dbg !6669
  %call58 = call i32 @strcasecmp(i8* %59, i8* %call57), !dbg !6670
  %cmp59 = icmp eq i32 %call58, 0, !dbg !6671
  br i1 %cmp59, label %if.then61, label %if.else62, !dbg !6672

if.then61:                                        ; preds = %if.end56
  %60 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6673
  %method = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %60, i32 0, i32 8, !dbg !6674
  store i32 1, i32* %method, align 4, !dbg !6675
  br label %if.end103, !dbg !6673

if.else62:                                        ; preds = %if.end56
  %61 = load i8*, i8** %method_str, align 8, !dbg !6676
  %call63 = call i8* @httpd_method_str(i32 2), !dbg !6678
  %call64 = call i32 @strcasecmp(i8* %61, i8* %call63), !dbg !6679
  %cmp65 = icmp eq i32 %call64, 0, !dbg !6680
  br i1 %cmp65, label %if.then67, label %if.else69, !dbg !6681

if.then67:                                        ; preds = %if.else62
  %62 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6682
  %method68 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %62, i32 0, i32 8, !dbg !6683
  store i32 2, i32* %method68, align 4, !dbg !6684
  br label %if.end102, !dbg !6682

if.else69:                                        ; preds = %if.else62
  %63 = load i8*, i8** %method_str, align 8, !dbg !6685
  %call70 = call i8* @httpd_method_str(i32 3), !dbg !6687
  %call71 = call i32 @strcasecmp(i8* %63, i8* %call70), !dbg !6688
  %cmp72 = icmp eq i32 %call71, 0, !dbg !6689
  br i1 %cmp72, label %if.then74, label %if.else76, !dbg !6690

if.then74:                                        ; preds = %if.else69
  %64 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6691
  %method75 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %64, i32 0, i32 8, !dbg !6692
  store i32 3, i32* %method75, align 4, !dbg !6693
  br label %if.end101, !dbg !6691

if.else76:                                        ; preds = %if.else69
  %65 = load i8*, i8** %method_str, align 8, !dbg !6694
  %call77 = call i8* @httpd_method_str(i32 4), !dbg !6696
  %call78 = call i32 @strcasecmp(i8* %65, i8* %call77), !dbg !6697
  %cmp79 = icmp eq i32 %call78, 0, !dbg !6698
  br i1 %cmp79, label %if.then81, label %if.else83, !dbg !6699

if.then81:                                        ; preds = %if.else76
  %66 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6700
  %method82 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %66, i32 0, i32 8, !dbg !6701
  store i32 4, i32* %method82, align 4, !dbg !6702
  br label %if.end100, !dbg !6700

if.else83:                                        ; preds = %if.else76
  %67 = load i8*, i8** %method_str, align 8, !dbg !6703
  %call84 = call i8* @httpd_method_str(i32 5), !dbg !6705
  %call85 = call i32 @strcasecmp(i8* %67, i8* %call84), !dbg !6706
  %cmp86 = icmp eq i32 %call85, 0, !dbg !6707
  br i1 %cmp86, label %if.then88, label %if.else90, !dbg !6708

if.then88:                                        ; preds = %if.else83
  %68 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6709
  %method89 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %68, i32 0, i32 8, !dbg !6710
  store i32 5, i32* %method89, align 4, !dbg !6711
  br label %if.end99, !dbg !6709

if.else90:                                        ; preds = %if.else83
  %69 = load i8*, i8** %method_str, align 8, !dbg !6712
  %call91 = call i8* @httpd_method_str(i32 6), !dbg !6714
  %call92 = call i32 @strcasecmp(i8* %69, i8* %call91), !dbg !6715
  %cmp93 = icmp eq i32 %call92, 0, !dbg !6716
  br i1 %cmp93, label %if.then95, label %if.else97, !dbg !6717

if.then95:                                        ; preds = %if.else90
  %70 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6718
  %method96 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %70, i32 0, i32 8, !dbg !6719
  store i32 6, i32* %method96, align 4, !dbg !6720
  br label %if.end98, !dbg !6718

if.else97:                                        ; preds = %if.else90
  %71 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6721
  %72 = load i8*, i8** @err501title, align 8, !dbg !6723
  %73 = load i8*, i8** @err501form, align 8, !dbg !6724
  %74 = load i8*, i8** %method_str, align 8, !dbg !6725
  call void @httpd_send_err(%struct.httpd_conn* %71, i32 501, i8* %72, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %73, i8* %74), !dbg !6726
  store i32 -1, i32* %retval, align 4, !dbg !6727
  br label %return, !dbg !6727

if.end98:                                         ; preds = %if.then95
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then88
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then81
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then74
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then67
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then61
  %75 = load i8*, i8** %url, align 8, !dbg !6728
  %76 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6729
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %76, i32 0, i32 12, !dbg !6730
  store i8* %75, i8** %encodedurl, align 8, !dbg !6731
  %77 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6732
  %decodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %77, i32 0, i32 13, !dbg !6733
  %78 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6734
  %maxdecodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %78, i32 0, i32 33, !dbg !6735
  %79 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6736
  %encodedurl104 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %79, i32 0, i32 12, !dbg !6737
  %80 = load i8*, i8** %encodedurl104, align 8, !dbg !6737
  %call105 = call i64 @strlen(i8* %80), !dbg !6738
  call void @httpd_realloc_str(i8** %decodedurl, i64* %maxdecodedurl, i64 %call105), !dbg !6739
  %81 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6740
  %decodedurl106 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %81, i32 0, i32 13, !dbg !6741
  %82 = load i8*, i8** %decodedurl106, align 8, !dbg !6741
  %83 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6742
  %encodedurl107 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %83, i32 0, i32 12, !dbg !6743
  %84 = load i8*, i8** %encodedurl107, align 8, !dbg !6743
  call void @strdecode(i8* %82, i8* %84), !dbg !6744
  %85 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6745
  %origfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %85, i32 0, i32 15, !dbg !6746
  %86 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6747
  %maxorigfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %86, i32 0, i32 34, !dbg !6748
  %87 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6749
  %decodedurl108 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %87, i32 0, i32 13, !dbg !6750
  %88 = load i8*, i8** %decodedurl108, align 8, !dbg !6750
  %call109 = call i64 @strlen(i8* %88), !dbg !6751
  call void @httpd_realloc_str(i8** %origfilename, i64* %maxorigfilename, i64 %call109), !dbg !6752
  %89 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6753
  %origfilename110 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %89, i32 0, i32 15, !dbg !6753
  %90 = load i8*, i8** %origfilename110, align 8, !dbg !6753
  %91 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6753
  %decodedurl111 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %91, i32 0, i32 13, !dbg !6753
  %92 = load i8*, i8** %decodedurl111, align 8, !dbg !6753
  %arrayidx112 = getelementptr inbounds i8, i8* %92, i64 1, !dbg !6753
  %93 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6753
  %origfilename113 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %93, i32 0, i32 15, !dbg !6753
  %94 = load i8*, i8** %origfilename113, align 8, !dbg !6753
  %95 = call i64 @llvm.objectsize.i64.p0i8(i8* %94, i1 false, i1 true, i1 false), !dbg !6753
  %call114 = call i8* @__strcpy_chk(i8* %90, i8* %arrayidx112, i64 %95) #11, !dbg !6753
  %96 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6754
  %origfilename115 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %96, i32 0, i32 15, !dbg !6756
  %97 = load i8*, i8** %origfilename115, align 8, !dbg !6756
  %arrayidx116 = getelementptr inbounds i8, i8* %97, i64 0, !dbg !6754
  %98 = load i8, i8* %arrayidx116, align 1, !dbg !6754
  %conv117 = sext i8 %98 to i32, !dbg !6754
  %cmp118 = icmp eq i32 %conv117, 0, !dbg !6757
  br i1 %cmp118, label %if.then120, label %if.end124, !dbg !6758

if.then120:                                       ; preds = %if.end103
  %99 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6759
  %origfilename121 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %99, i32 0, i32 15, !dbg !6759
  %100 = load i8*, i8** %origfilename121, align 8, !dbg !6759
  %101 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6759
  %origfilename122 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %101, i32 0, i32 15, !dbg !6759
  %102 = load i8*, i8** %origfilename122, align 8, !dbg !6759
  %103 = call i64 @llvm.objectsize.i64.p0i8(i8* %102, i1 false, i1 true, i1 false), !dbg !6759
  %call123 = call i8* @__strcpy_chk(i8* %100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.242, i64 0, i64 0), i64 %103) #11, !dbg !6759
  br label %if.end124, !dbg !6760

if.end124:                                        ; preds = %if.then120, %if.end103
  %104 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6761
  %encodedurl125 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %104, i32 0, i32 12, !dbg !6762
  %105 = load i8*, i8** %encodedurl125, align 8, !dbg !6762
  %call126 = call i8* @strchr(i8* %105, i32 63), !dbg !6763
  store i8* %call126, i8** %cp, align 8, !dbg !6764
  %106 = load i8*, i8** %cp, align 8, !dbg !6765
  %cmp127 = icmp ne i8* %106, null, !dbg !6767
  br i1 %cmp127, label %if.then129, label %if.end141, !dbg !6768

if.then129:                                       ; preds = %if.end124
  %107 = load i8*, i8** %cp, align 8, !dbg !6769
  %incdec.ptr130 = getelementptr inbounds i8, i8* %107, i32 1, !dbg !6769
  store i8* %incdec.ptr130, i8** %cp, align 8, !dbg !6769
  %108 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6771
  %query = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %108, i32 0, i32 19, !dbg !6772
  %109 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6773
  %maxquery = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %109, i32 0, i32 38, !dbg !6774
  %110 = load i8*, i8** %cp, align 8, !dbg !6775
  %call131 = call i64 @strlen(i8* %110), !dbg !6776
  call void @httpd_realloc_str(i8** %query, i64* %maxquery, i64 %call131), !dbg !6777
  %111 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6778
  %query132 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %111, i32 0, i32 19, !dbg !6778
  %112 = load i8*, i8** %query132, align 8, !dbg !6778
  %113 = load i8*, i8** %cp, align 8, !dbg !6778
  %114 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6778
  %query133 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %114, i32 0, i32 19, !dbg !6778
  %115 = load i8*, i8** %query133, align 8, !dbg !6778
  %116 = call i64 @llvm.objectsize.i64.p0i8(i8* %115, i1 false, i1 true, i1 false), !dbg !6778
  %call134 = call i8* @__strcpy_chk(i8* %112, i8* %113, i64 %116) #11, !dbg !6778
  %117 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6779
  %origfilename135 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %117, i32 0, i32 15, !dbg !6780
  %118 = load i8*, i8** %origfilename135, align 8, !dbg !6780
  %call136 = call i8* @strchr(i8* %118, i32 63), !dbg !6781
  store i8* %call136, i8** %cp, align 8, !dbg !6782
  %119 = load i8*, i8** %cp, align 8, !dbg !6783
  %cmp137 = icmp ne i8* %119, null, !dbg !6785
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !6786

if.then139:                                       ; preds = %if.then129
  %120 = load i8*, i8** %cp, align 8, !dbg !6787
  store i8 0, i8* %120, align 1, !dbg !6788
  br label %if.end140, !dbg !6789

if.end140:                                        ; preds = %if.then139, %if.then129
  br label %if.end141, !dbg !6790

if.end141:                                        ; preds = %if.end140, %if.end124
  %121 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6791
  %origfilename142 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %121, i32 0, i32 15, !dbg !6792
  %122 = load i8*, i8** %origfilename142, align 8, !dbg !6792
  call void @de_dotdot(i8* %122), !dbg !6793
  %123 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6794
  %origfilename143 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %123, i32 0, i32 15, !dbg !6796
  %124 = load i8*, i8** %origfilename143, align 8, !dbg !6796
  %arrayidx144 = getelementptr inbounds i8, i8* %124, i64 0, !dbg !6794
  %125 = load i8, i8* %arrayidx144, align 1, !dbg !6794
  %conv145 = sext i8 %125 to i32, !dbg !6794
  %cmp146 = icmp eq i32 %conv145, 47, !dbg !6797
  br i1 %cmp146, label %if.then171, label %lor.lhs.false148, !dbg !6798

lor.lhs.false148:                                 ; preds = %if.end141
  %126 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6799
  %origfilename149 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %126, i32 0, i32 15, !dbg !6800
  %127 = load i8*, i8** %origfilename149, align 8, !dbg !6800
  %arrayidx150 = getelementptr inbounds i8, i8* %127, i64 0, !dbg !6799
  %128 = load i8, i8* %arrayidx150, align 1, !dbg !6799
  %conv151 = sext i8 %128 to i32, !dbg !6799
  %cmp152 = icmp eq i32 %conv151, 46, !dbg !6801
  br i1 %cmp152, label %land.lhs.true, label %if.end172, !dbg !6802

land.lhs.true:                                    ; preds = %lor.lhs.false148
  %129 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6803
  %origfilename154 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %129, i32 0, i32 15, !dbg !6804
  %130 = load i8*, i8** %origfilename154, align 8, !dbg !6804
  %arrayidx155 = getelementptr inbounds i8, i8* %130, i64 1, !dbg !6803
  %131 = load i8, i8* %arrayidx155, align 1, !dbg !6803
  %conv156 = sext i8 %131 to i32, !dbg !6803
  %cmp157 = icmp eq i32 %conv156, 46, !dbg !6805
  br i1 %cmp157, label %land.lhs.true159, label %if.end172, !dbg !6806

land.lhs.true159:                                 ; preds = %land.lhs.true
  %132 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6807
  %origfilename160 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %132, i32 0, i32 15, !dbg !6808
  %133 = load i8*, i8** %origfilename160, align 8, !dbg !6808
  %arrayidx161 = getelementptr inbounds i8, i8* %133, i64 2, !dbg !6807
  %134 = load i8, i8* %arrayidx161, align 1, !dbg !6807
  %conv162 = sext i8 %134 to i32, !dbg !6807
  %cmp163 = icmp eq i32 %conv162, 0, !dbg !6809
  br i1 %cmp163, label %if.then171, label %lor.lhs.false165, !dbg !6810

lor.lhs.false165:                                 ; preds = %land.lhs.true159
  %135 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6811
  %origfilename166 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %135, i32 0, i32 15, !dbg !6812
  %136 = load i8*, i8** %origfilename166, align 8, !dbg !6812
  %arrayidx167 = getelementptr inbounds i8, i8* %136, i64 2, !dbg !6811
  %137 = load i8, i8* %arrayidx167, align 1, !dbg !6811
  %conv168 = sext i8 %137 to i32, !dbg !6811
  %cmp169 = icmp eq i32 %conv168, 47, !dbg !6813
  br i1 %cmp169, label %if.then171, label %if.end172, !dbg !6814

if.then171:                                       ; preds = %lor.lhs.false165, %land.lhs.true159, %if.end141
  %138 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6815
  %139 = load i8*, i8** @httpd_err400title, align 8, !dbg !6817
  %140 = load i8*, i8** @httpd_err400form, align 8, !dbg !6818
  call void @httpd_send_err(%struct.httpd_conn* %138, i32 400, i8* %139, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %140, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0)), !dbg !6819
  store i32 -1, i32* %retval, align 4, !dbg !6820
  br label %return, !dbg !6820

if.end172:                                        ; preds = %lor.lhs.false165, %land.lhs.true, %lor.lhs.false148
  %141 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6821
  %mime_flag173 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %141, i32 0, i32 51, !dbg !6823
  %142 = load i32, i32* %mime_flag173, align 8, !dbg !6823
  %tobool174 = icmp ne i32 %142, 0, !dbg !6821
  br i1 %tobool174, label %if.then175, label %if.end451, !dbg !6824

if.then175:                                       ; preds = %if.end172
  br label %while.cond, !dbg !6825

while.cond:                                       ; preds = %if.end450, %if.then288, %if.then252, %if.then175
  %143 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6827
  %call176 = call i8* @bufgets(%struct.httpd_conn* %143), !dbg !6828
  store i8* %call176, i8** %buf, align 8, !dbg !6829
  %cmp177 = icmp ne i8* %call176, null, !dbg !6830
  br i1 %cmp177, label %while.body, label %while.end, !dbg !6825

while.body:                                       ; preds = %while.cond
  %144 = load i8*, i8** %buf, align 8, !dbg !6831
  %arrayidx179 = getelementptr inbounds i8, i8* %144, i64 0, !dbg !6831
  %145 = load i8, i8* %arrayidx179, align 1, !dbg !6831
  %conv180 = sext i8 %145 to i32, !dbg !6831
  %cmp181 = icmp eq i32 %conv180, 0, !dbg !6834
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !6835

if.then183:                                       ; preds = %while.body
  br label %while.end, !dbg !6836

if.end184:                                        ; preds = %while.body
  %146 = load i8*, i8** %buf, align 8, !dbg !6837
  %call185 = call i32 @strncasecmp(i8* %146, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35.243, i64 0, i64 0), i64 8), !dbg !6839
  %cmp186 = icmp eq i32 %call185, 0, !dbg !6840
  br i1 %cmp186, label %if.then188, label %if.else192, !dbg !6841

if.then188:                                       ; preds = %if.end184
  %147 = load i8*, i8** %buf, align 8, !dbg !6842
  %arrayidx189 = getelementptr inbounds i8, i8* %147, i64 8, !dbg !6842
  store i8* %arrayidx189, i8** %cp, align 8, !dbg !6844
  %148 = load i8*, i8** %cp, align 8, !dbg !6845
  %call190 = call i64 @strspn(i8* %148, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !6846
  %149 = load i8*, i8** %cp, align 8, !dbg !6847
  %add.ptr191 = getelementptr inbounds i8, i8* %149, i64 %call190, !dbg !6847
  store i8* %add.ptr191, i8** %cp, align 8, !dbg !6847
  %150 = load i8*, i8** %cp, align 8, !dbg !6848
  %151 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6849
  %referrer = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %151, i32 0, i32 20, !dbg !6850
  store i8* %150, i8** %referrer, align 8, !dbg !6851
  br label %if.end450, !dbg !6852

if.else192:                                       ; preds = %if.end184
  %152 = load i8*, i8** %buf, align 8, !dbg !6853
  %call193 = call i32 @strncasecmp(i8* %152, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37.245, i64 0, i64 0), i64 9), !dbg !6855
  %cmp194 = icmp eq i32 %call193, 0, !dbg !6856
  br i1 %cmp194, label %if.then196, label %if.else201, !dbg !6857

if.then196:                                       ; preds = %if.else192
  %153 = load i8*, i8** %buf, align 8, !dbg !6858
  %arrayidx197 = getelementptr inbounds i8, i8* %153, i64 9, !dbg !6858
  store i8* %arrayidx197, i8** %cp, align 8, !dbg !6860
  %154 = load i8*, i8** %cp, align 8, !dbg !6861
  %call198 = call i64 @strspn(i8* %154, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !6862
  %155 = load i8*, i8** %cp, align 8, !dbg !6863
  %add.ptr199 = getelementptr inbounds i8, i8* %155, i64 %call198, !dbg !6863
  store i8* %add.ptr199, i8** %cp, align 8, !dbg !6863
  %156 = load i8*, i8** %cp, align 8, !dbg !6864
  %157 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6865
  %referrer200 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %157, i32 0, i32 20, !dbg !6866
  store i8* %156, i8** %referrer200, align 8, !dbg !6867
  br label %if.end449, !dbg !6868

if.else201:                                       ; preds = %if.else192
  %158 = load i8*, i8** %buf, align 8, !dbg !6869
  %call202 = call i32 @strncasecmp(i8* %158, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.246, i64 0, i64 0), i64 11), !dbg !6871
  %cmp203 = icmp eq i32 %call202, 0, !dbg !6872
  br i1 %cmp203, label %if.then205, label %if.else209, !dbg !6873

if.then205:                                       ; preds = %if.else201
  %159 = load i8*, i8** %buf, align 8, !dbg !6874
  %arrayidx206 = getelementptr inbounds i8, i8* %159, i64 11, !dbg !6874
  store i8* %arrayidx206, i8** %cp, align 8, !dbg !6876
  %160 = load i8*, i8** %cp, align 8, !dbg !6877
  %call207 = call i64 @strspn(i8* %160, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !6878
  %161 = load i8*, i8** %cp, align 8, !dbg !6879
  %add.ptr208 = getelementptr inbounds i8, i8* %161, i64 %call207, !dbg !6879
  store i8* %add.ptr208, i8** %cp, align 8, !dbg !6879
  %162 = load i8*, i8** %cp, align 8, !dbg !6880
  %163 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6881
  %useragent = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %163, i32 0, i32 21, !dbg !6882
  store i8* %162, i8** %useragent, align 8, !dbg !6883
  br label %if.end448, !dbg !6884

if.else209:                                       ; preds = %if.else201
  %164 = load i8*, i8** %buf, align 8, !dbg !6885
  %call210 = call i32 @strncasecmp(i8* %164, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39.247, i64 0, i64 0), i64 5), !dbg !6887
  %cmp211 = icmp eq i32 %call210, 0, !dbg !6888
  br i1 %cmp211, label %if.then213, label %if.else235, !dbg !6889

if.then213:                                       ; preds = %if.else209
  %165 = load i8*, i8** %buf, align 8, !dbg !6890
  %arrayidx214 = getelementptr inbounds i8, i8* %165, i64 5, !dbg !6890
  store i8* %arrayidx214, i8** %cp, align 8, !dbg !6892
  %166 = load i8*, i8** %cp, align 8, !dbg !6893
  %call215 = call i64 @strspn(i8* %166, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !6894
  %167 = load i8*, i8** %cp, align 8, !dbg !6895
  %add.ptr216 = getelementptr inbounds i8, i8* %167, i64 %call215, !dbg !6895
  store i8* %add.ptr216, i8** %cp, align 8, !dbg !6895
  %168 = load i8*, i8** %cp, align 8, !dbg !6896
  %169 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6897
  %hdrhost = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %169, i32 0, i32 28, !dbg !6898
  store i8* %168, i8** %hdrhost, align 8, !dbg !6899
  %170 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6900
  %hdrhost217 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %170, i32 0, i32 28, !dbg !6901
  %171 = load i8*, i8** %hdrhost217, align 8, !dbg !6901
  %call218 = call i8* @strchr(i8* %171, i32 58), !dbg !6902
  store i8* %call218, i8** %cp, align 8, !dbg !6903
  %172 = load i8*, i8** %cp, align 8, !dbg !6904
  %cmp219 = icmp ne i8* %172, null, !dbg !6906
  br i1 %cmp219, label %if.then221, label %if.end222, !dbg !6907

if.then221:                                       ; preds = %if.then213
  %173 = load i8*, i8** %cp, align 8, !dbg !6908
  store i8 0, i8* %173, align 1, !dbg !6909
  br label %if.end222, !dbg !6910

if.end222:                                        ; preds = %if.then221, %if.then213
  %174 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6911
  %hdrhost223 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %174, i32 0, i32 28, !dbg !6913
  %175 = load i8*, i8** %hdrhost223, align 8, !dbg !6913
  %call224 = call i8* @strchr(i8* %175, i32 47), !dbg !6914
  %cmp225 = icmp ne i8* %call224, null, !dbg !6915
  br i1 %cmp225, label %if.then233, label %lor.lhs.false227, !dbg !6916

lor.lhs.false227:                                 ; preds = %if.end222
  %176 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6917
  %hdrhost228 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %176, i32 0, i32 28, !dbg !6918
  %177 = load i8*, i8** %hdrhost228, align 8, !dbg !6918
  %arrayidx229 = getelementptr inbounds i8, i8* %177, i64 0, !dbg !6917
  %178 = load i8, i8* %arrayidx229, align 1, !dbg !6917
  %conv230 = sext i8 %178 to i32, !dbg !6917
  %cmp231 = icmp eq i32 %conv230, 46, !dbg !6919
  br i1 %cmp231, label %if.then233, label %if.end234, !dbg !6920

if.then233:                                       ; preds = %lor.lhs.false227, %if.end222
  %179 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6921
  %180 = load i8*, i8** @httpd_err400title, align 8, !dbg !6923
  %181 = load i8*, i8** @httpd_err400form, align 8, !dbg !6924
  call void @httpd_send_err(%struct.httpd_conn* %179, i32 400, i8* %180, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %181, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0)), !dbg !6925
  store i32 -1, i32* %retval, align 4, !dbg !6926
  br label %return, !dbg !6926

if.end234:                                        ; preds = %lor.lhs.false227
  br label %if.end447, !dbg !6927

if.else235:                                       ; preds = %if.else209
  %182 = load i8*, i8** %buf, align 8, !dbg !6928
  %call236 = call i32 @strncasecmp(i8* %182, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40.248, i64 0, i64 0), i64 7), !dbg !6930
  %cmp237 = icmp eq i32 %call236, 0, !dbg !6931
  br i1 %cmp237, label %if.then239, label %if.else271, !dbg !6932

if.then239:                                       ; preds = %if.else235
  %183 = load i8*, i8** %buf, align 8, !dbg !6933
  %arrayidx240 = getelementptr inbounds i8, i8* %183, i64 7, !dbg !6933
  store i8* %arrayidx240, i8** %cp, align 8, !dbg !6935
  %184 = load i8*, i8** %cp, align 8, !dbg !6936
  %call241 = call i64 @strspn(i8* %184, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !6937
  %185 = load i8*, i8** %cp, align 8, !dbg !6938
  %add.ptr242 = getelementptr inbounds i8, i8* %185, i64 %call241, !dbg !6938
  store i8* %add.ptr242, i8** %cp, align 8, !dbg !6938
  %186 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6939
  %accept = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %186, i32 0, i32 22, !dbg !6941
  %187 = load i8*, i8** %accept, align 8, !dbg !6941
  %arrayidx243 = getelementptr inbounds i8, i8* %187, i64 0, !dbg !6939
  %188 = load i8, i8* %arrayidx243, align 1, !dbg !6939
  %conv244 = sext i8 %188 to i32, !dbg !6939
  %cmp245 = icmp ne i32 %conv244, 0, !dbg !6942
  br i1 %cmp245, label %if.then247, label %if.else263, !dbg !6943

if.then247:                                       ; preds = %if.then239
  %189 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6944
  %accept248 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %189, i32 0, i32 22, !dbg !6947
  %190 = load i8*, i8** %accept248, align 8, !dbg !6947
  %call249 = call i64 @strlen(i8* %190), !dbg !6948
  %cmp250 = icmp ugt i64 %call249, 5000, !dbg !6949
  br i1 %cmp250, label %if.then252, label %if.end254, !dbg !6950

if.then252:                                       ; preds = %if.then247
  %191 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6951
  %client_addr = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %191, i32 0, i32 2, !dbg !6953
  %call253 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr), !dbg !6954
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.41.249, i64 0, i64 0), i8* %call253), !dbg !6955
  br label %while.cond, !dbg !6956, !llvm.loop !6957

if.end254:                                        ; preds = %if.then247
  %192 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6959
  %accept255 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %192, i32 0, i32 22, !dbg !6960
  %193 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6961
  %maxaccept = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %193, i32 0, i32 39, !dbg !6962
  %194 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6963
  %accept256 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %194, i32 0, i32 22, !dbg !6964
  %195 = load i8*, i8** %accept256, align 8, !dbg !6964
  %call257 = call i64 @strlen(i8* %195), !dbg !6965
  %add = add i64 %call257, 2, !dbg !6966
  %196 = load i8*, i8** %cp, align 8, !dbg !6967
  %call258 = call i64 @strlen(i8* %196), !dbg !6968
  %add259 = add i64 %add, %call258, !dbg !6969
  call void @httpd_realloc_str(i8** %accept255, i64* %maxaccept, i64 %add259), !dbg !6970
  %197 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6971
  %accept260 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %197, i32 0, i32 22, !dbg !6971
  %198 = load i8*, i8** %accept260, align 8, !dbg !6971
  %199 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6971
  %accept261 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %199, i32 0, i32 22, !dbg !6971
  %200 = load i8*, i8** %accept261, align 8, !dbg !6971
  %201 = call i64 @llvm.objectsize.i64.p0i8(i8* %200, i1 false, i1 true, i1 false), !dbg !6971
  %call262 = call i8* @__strcat_chk(i8* %198, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42.250, i64 0, i64 0), i64 %201) #11, !dbg !6971
  br label %if.end267, !dbg !6972

if.else263:                                       ; preds = %if.then239
  %202 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6973
  %accept264 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %202, i32 0, i32 22, !dbg !6974
  %203 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6975
  %maxaccept265 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %203, i32 0, i32 39, !dbg !6976
  %204 = load i8*, i8** %cp, align 8, !dbg !6977
  %call266 = call i64 @strlen(i8* %204), !dbg !6978
  call void @httpd_realloc_str(i8** %accept264, i64* %maxaccept265, i64 %call266), !dbg !6979
  br label %if.end267

if.end267:                                        ; preds = %if.else263, %if.end254
  %205 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6980
  %accept268 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %205, i32 0, i32 22, !dbg !6980
  %206 = load i8*, i8** %accept268, align 8, !dbg !6980
  %207 = load i8*, i8** %cp, align 8, !dbg !6980
  %208 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6980
  %accept269 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %208, i32 0, i32 22, !dbg !6980
  %209 = load i8*, i8** %accept269, align 8, !dbg !6980
  %210 = call i64 @llvm.objectsize.i64.p0i8(i8* %209, i1 false, i1 true, i1 false), !dbg !6980
  %call270 = call i8* @__strcat_chk(i8* %206, i8* %207, i64 %210) #11, !dbg !6980
  br label %if.end446, !dbg !6981

if.else271:                                       ; preds = %if.else235
  %211 = load i8*, i8** %buf, align 8, !dbg !6982
  %call272 = call i32 @strncasecmp(i8* %211, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43.251, i64 0, i64 0), i64 16), !dbg !6984
  %cmp273 = icmp eq i32 %call272, 0, !dbg !6985
  br i1 %cmp273, label %if.then275, label %if.else309, !dbg !6986

if.then275:                                       ; preds = %if.else271
  %212 = load i8*, i8** %buf, align 8, !dbg !6987
  %arrayidx276 = getelementptr inbounds i8, i8* %212, i64 16, !dbg !6987
  store i8* %arrayidx276, i8** %cp, align 8, !dbg !6989
  %213 = load i8*, i8** %cp, align 8, !dbg !6990
  %call277 = call i64 @strspn(i8* %213, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !6991
  %214 = load i8*, i8** %cp, align 8, !dbg !6992
  %add.ptr278 = getelementptr inbounds i8, i8* %214, i64 %call277, !dbg !6992
  store i8* %add.ptr278, i8** %cp, align 8, !dbg !6992
  %215 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6993
  %accepte = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %215, i32 0, i32 23, !dbg !6995
  %216 = load i8*, i8** %accepte, align 8, !dbg !6995
  %arrayidx279 = getelementptr inbounds i8, i8* %216, i64 0, !dbg !6993
  %217 = load i8, i8* %arrayidx279, align 1, !dbg !6993
  %conv280 = sext i8 %217 to i32, !dbg !6993
  %cmp281 = icmp ne i32 %conv280, 0, !dbg !6996
  br i1 %cmp281, label %if.then283, label %if.else301, !dbg !6997

if.then283:                                       ; preds = %if.then275
  %218 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !6998
  %accepte284 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %218, i32 0, i32 23, !dbg !7001
  %219 = load i8*, i8** %accepte284, align 8, !dbg !7001
  %call285 = call i64 @strlen(i8* %219), !dbg !7002
  %cmp286 = icmp ugt i64 %call285, 5000, !dbg !7003
  br i1 %cmp286, label %if.then288, label %if.end291, !dbg !7004

if.then288:                                       ; preds = %if.then283
  %220 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7005
  %client_addr289 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %220, i32 0, i32 2, !dbg !7007
  %call290 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr289), !dbg !7008
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.44.252, i64 0, i64 0), i8* %call290), !dbg !7009
  br label %while.cond, !dbg !7010, !llvm.loop !6957

if.end291:                                        ; preds = %if.then283
  %221 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7011
  %accepte292 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %221, i32 0, i32 23, !dbg !7012
  %222 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7013
  %maxaccepte = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %222, i32 0, i32 40, !dbg !7014
  %223 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7015
  %accepte293 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %223, i32 0, i32 23, !dbg !7016
  %224 = load i8*, i8** %accepte293, align 8, !dbg !7016
  %call294 = call i64 @strlen(i8* %224), !dbg !7017
  %add295 = add i64 %call294, 2, !dbg !7018
  %225 = load i8*, i8** %cp, align 8, !dbg !7019
  %call296 = call i64 @strlen(i8* %225), !dbg !7020
  %add297 = add i64 %add295, %call296, !dbg !7021
  call void @httpd_realloc_str(i8** %accepte292, i64* %maxaccepte, i64 %add297), !dbg !7022
  %226 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7023
  %accepte298 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %226, i32 0, i32 23, !dbg !7023
  %227 = load i8*, i8** %accepte298, align 8, !dbg !7023
  %228 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7023
  %accepte299 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %228, i32 0, i32 23, !dbg !7023
  %229 = load i8*, i8** %accepte299, align 8, !dbg !7023
  %230 = call i64 @llvm.objectsize.i64.p0i8(i8* %229, i1 false, i1 true, i1 false), !dbg !7023
  %call300 = call i8* @__strcat_chk(i8* %227, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42.250, i64 0, i64 0), i64 %230) #11, !dbg !7023
  br label %if.end305, !dbg !7024

if.else301:                                       ; preds = %if.then275
  %231 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7025
  %accepte302 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %231, i32 0, i32 23, !dbg !7026
  %232 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7027
  %maxaccepte303 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %232, i32 0, i32 40, !dbg !7028
  %233 = load i8*, i8** %cp, align 8, !dbg !7029
  %call304 = call i64 @strlen(i8* %233), !dbg !7030
  call void @httpd_realloc_str(i8** %accepte302, i64* %maxaccepte303, i64 %call304), !dbg !7031
  br label %if.end305

if.end305:                                        ; preds = %if.else301, %if.end291
  %234 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7032
  %accepte306 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %234, i32 0, i32 23, !dbg !7032
  %235 = load i8*, i8** %accepte306, align 8, !dbg !7032
  %236 = load i8*, i8** %cp, align 8, !dbg !7032
  %237 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7032
  %accepte307 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %237, i32 0, i32 23, !dbg !7032
  %238 = load i8*, i8** %accepte307, align 8, !dbg !7032
  %239 = call i64 @llvm.objectsize.i64.p0i8(i8* %238, i1 false, i1 true, i1 false), !dbg !7032
  %call308 = call i8* @__strcpy_chk(i8* %235, i8* %236, i64 %239) #11, !dbg !7032
  br label %if.end445, !dbg !7033

if.else309:                                       ; preds = %if.else271
  %240 = load i8*, i8** %buf, align 8, !dbg !7034
  %call310 = call i32 @strncasecmp(i8* %240, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45.253, i64 0, i64 0), i64 16), !dbg !7036
  %cmp311 = icmp eq i32 %call310, 0, !dbg !7037
  br i1 %cmp311, label %if.then313, label %if.else317, !dbg !7038

if.then313:                                       ; preds = %if.else309
  %241 = load i8*, i8** %buf, align 8, !dbg !7039
  %arrayidx314 = getelementptr inbounds i8, i8* %241, i64 16, !dbg !7039
  store i8* %arrayidx314, i8** %cp, align 8, !dbg !7041
  %242 = load i8*, i8** %cp, align 8, !dbg !7042
  %call315 = call i64 @strspn(i8* %242, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !7043
  %243 = load i8*, i8** %cp, align 8, !dbg !7044
  %add.ptr316 = getelementptr inbounds i8, i8* %243, i64 %call315, !dbg !7044
  store i8* %add.ptr316, i8** %cp, align 8, !dbg !7044
  %244 = load i8*, i8** %cp, align 8, !dbg !7045
  %245 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7046
  %acceptl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %245, i32 0, i32 24, !dbg !7047
  store i8* %244, i8** %acceptl, align 8, !dbg !7048
  br label %if.end444, !dbg !7049

if.else317:                                       ; preds = %if.else309
  %246 = load i8*, i8** %buf, align 8, !dbg !7050
  %call318 = call i32 @strncasecmp(i8* %246, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46.254, i64 0, i64 0), i64 18), !dbg !7052
  %cmp319 = icmp eq i32 %call318, 0, !dbg !7053
  br i1 %cmp319, label %if.then321, label %if.else329, !dbg !7054

if.then321:                                       ; preds = %if.else317
  %247 = load i8*, i8** %buf, align 8, !dbg !7055
  %arrayidx322 = getelementptr inbounds i8, i8* %247, i64 18, !dbg !7055
  store i8* %arrayidx322, i8** %cp, align 8, !dbg !7057
  %248 = load i8*, i8** %cp, align 8, !dbg !7058
  %call323 = call i64 @tdate_parse(i8* %248), !dbg !7059
  %249 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7060
  %if_modified_since = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %249, i32 0, i32 46, !dbg !7061
  store i64 %call323, i64* %if_modified_since, align 8, !dbg !7062
  %250 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7063
  %if_modified_since324 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %250, i32 0, i32 46, !dbg !7065
  %251 = load i64, i64* %if_modified_since324, align 8, !dbg !7065
  %cmp325 = icmp eq i64 %251, -1, !dbg !7066
  br i1 %cmp325, label %if.then327, label %if.end328, !dbg !7067

if.then327:                                       ; preds = %if.then321
  %252 = load i8*, i8** %cp, align 8, !dbg !7068
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47.255, i64 0, i64 0), i8* %252), !dbg !7069
  br label %if.end328, !dbg !7069

if.end328:                                        ; preds = %if.then327, %if.then321
  br label %if.end443, !dbg !7070

if.else329:                                       ; preds = %if.else317
  %253 = load i8*, i8** %buf, align 8, !dbg !7071
  %call330 = call i32 @strncasecmp(i8* %253, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48.256, i64 0, i64 0), i64 7), !dbg !7073
  %cmp331 = icmp eq i32 %call330, 0, !dbg !7074
  br i1 %cmp331, label %if.then333, label %if.else337, !dbg !7075

if.then333:                                       ; preds = %if.else329
  %254 = load i8*, i8** %buf, align 8, !dbg !7076
  %arrayidx334 = getelementptr inbounds i8, i8* %254, i64 7, !dbg !7076
  store i8* %arrayidx334, i8** %cp, align 8, !dbg !7078
  %255 = load i8*, i8** %cp, align 8, !dbg !7079
  %call335 = call i64 @strspn(i8* %255, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !7080
  %256 = load i8*, i8** %cp, align 8, !dbg !7081
  %add.ptr336 = getelementptr inbounds i8, i8* %256, i64 %call335, !dbg !7081
  store i8* %add.ptr336, i8** %cp, align 8, !dbg !7081
  %257 = load i8*, i8** %cp, align 8, !dbg !7082
  %258 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7083
  %cookie = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %258, i32 0, i32 25, !dbg !7084
  store i8* %257, i8** %cookie, align 8, !dbg !7085
  br label %if.end442, !dbg !7086

if.else337:                                       ; preds = %if.else329
  %259 = load i8*, i8** %buf, align 8, !dbg !7087
  %call338 = call i32 @strncasecmp(i8* %259, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49.257, i64 0, i64 0), i64 6), !dbg !7089
  %cmp339 = icmp eq i32 %call338, 0, !dbg !7090
  br i1 %cmp339, label %if.then341, label %if.else384, !dbg !7091

if.then341:                                       ; preds = %if.else337
  %260 = load i8*, i8** %buf, align 8, !dbg !7092
  %call342 = call i8* @strchr(i8* %260, i32 44), !dbg !7095
  %cmp343 = icmp eq i8* %call342, null, !dbg !7096
  br i1 %cmp343, label %if.then345, label %if.end383, !dbg !7097

if.then345:                                       ; preds = %if.then341
  call void @llvm.dbg.declare(metadata i8** %cp_dash, metadata !7098, metadata !DIExpression()), !dbg !7100
  %261 = load i8*, i8** %buf, align 8, !dbg !7101
  %call346 = call i8* @strpbrk(i8* %261, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.50.258, i64 0, i64 0)), !dbg !7102
  store i8* %call346, i8** %cp, align 8, !dbg !7103
  %262 = load i8*, i8** %cp, align 8, !dbg !7104
  %cmp347 = icmp ne i8* %262, null, !dbg !7106
  br i1 %cmp347, label %if.then349, label %if.end382, !dbg !7107

if.then349:                                       ; preds = %if.then345
  %263 = load i8*, i8** %cp, align 8, !dbg !7108
  %add.ptr350 = getelementptr inbounds i8, i8* %263, i64 1, !dbg !7110
  %call351 = call i8* @strchr(i8* %add.ptr350, i32 45), !dbg !7111
  store i8* %call351, i8** %cp_dash, align 8, !dbg !7112
  %264 = load i8*, i8** %cp_dash, align 8, !dbg !7113
  %cmp352 = icmp ne i8* %264, null, !dbg !7115
  br i1 %cmp352, label %land.lhs.true354, label %if.end381, !dbg !7116

land.lhs.true354:                                 ; preds = %if.then349
  %265 = load i8*, i8** %cp_dash, align 8, !dbg !7117
  %266 = load i8*, i8** %cp, align 8, !dbg !7118
  %add.ptr355 = getelementptr inbounds i8, i8* %266, i64 1, !dbg !7119
  %cmp356 = icmp ne i8* %265, %add.ptr355, !dbg !7120
  br i1 %cmp356, label %if.then358, label %if.end381, !dbg !7121

if.then358:                                       ; preds = %land.lhs.true354
  %267 = load i8*, i8** %cp_dash, align 8, !dbg !7122
  store i8 0, i8* %267, align 1, !dbg !7124
  %268 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7125
  %got_range = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %268, i32 0, i32 53, !dbg !7126
  store i32 1, i32* %got_range, align 8, !dbg !7127
  %269 = load i8*, i8** %cp, align 8, !dbg !7128
  %add.ptr359 = getelementptr inbounds i8, i8* %269, i64 1, !dbg !7129
  %call360 = call i64 @atoll(i8* %add.ptr359), !dbg !7130
  %270 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7131
  %first_byte_index = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %270, i32 0, i32 55, !dbg !7132
  store i64 %call360, i64* %first_byte_index, align 8, !dbg !7133
  %271 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7134
  %first_byte_index361 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %271, i32 0, i32 55, !dbg !7136
  %272 = load i64, i64* %first_byte_index361, align 8, !dbg !7136
  %cmp362 = icmp slt i64 %272, 0, !dbg !7137
  br i1 %cmp362, label %if.then364, label %if.end366, !dbg !7138

if.then364:                                       ; preds = %if.then358
  %273 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7139
  %first_byte_index365 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %273, i32 0, i32 55, !dbg !7140
  store i64 0, i64* %first_byte_index365, align 8, !dbg !7141
  br label %if.end366, !dbg !7139

if.end366:                                        ; preds = %if.then364, %if.then358
  %274 = load i8*, i8** %cp_dash, align 8, !dbg !7142
  %arrayidx367 = getelementptr inbounds i8, i8* %274, i64 1, !dbg !7142
  %275 = load i8, i8* %arrayidx367, align 1, !dbg !7142
  %conv368 = sext i8 %275 to i32, !dbg !7144
  %call369 = call i32 @isdigit(i32 %conv368) #18, !dbg !7145
  %tobool370 = icmp ne i32 %call369, 0, !dbg !7145
  br i1 %tobool370, label %if.then371, label %if.end380, !dbg !7146

if.then371:                                       ; preds = %if.end366
  %276 = load i8*, i8** %cp_dash, align 8, !dbg !7147
  %add.ptr372 = getelementptr inbounds i8, i8* %276, i64 1, !dbg !7149
  %call373 = call i64 @atoll(i8* %add.ptr372), !dbg !7150
  %277 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7151
  %last_byte_index = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %277, i32 0, i32 56, !dbg !7152
  store i64 %call373, i64* %last_byte_index, align 8, !dbg !7153
  %278 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7154
  %last_byte_index374 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %278, i32 0, i32 56, !dbg !7156
  %279 = load i64, i64* %last_byte_index374, align 8, !dbg !7156
  %cmp375 = icmp slt i64 %279, 0, !dbg !7157
  br i1 %cmp375, label %if.then377, label %if.end379, !dbg !7158

if.then377:                                       ; preds = %if.then371
  %280 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7159
  %last_byte_index378 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %280, i32 0, i32 56, !dbg !7160
  store i64 -1, i64* %last_byte_index378, align 8, !dbg !7161
  br label %if.end379, !dbg !7159

if.end379:                                        ; preds = %if.then377, %if.then371
  br label %if.end380, !dbg !7162

if.end380:                                        ; preds = %if.end379, %if.end366
  br label %if.end381, !dbg !7163

if.end381:                                        ; preds = %if.end380, %land.lhs.true354, %if.then349
  br label %if.end382, !dbg !7164

if.end382:                                        ; preds = %if.end381, %if.then345
  br label %if.end383, !dbg !7165

if.end383:                                        ; preds = %if.end382, %if.then341
  br label %if.end441, !dbg !7166

if.else384:                                       ; preds = %if.else337
  %281 = load i8*, i8** %buf, align 8, !dbg !7167
  %call385 = call i32 @strncasecmp(i8* %281, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51.259, i64 0, i64 0), i64 9), !dbg !7169
  %cmp386 = icmp eq i32 %call385, 0, !dbg !7170
  br i1 %cmp386, label %if.then392, label %lor.lhs.false388, !dbg !7171

lor.lhs.false388:                                 ; preds = %if.else384
  %282 = load i8*, i8** %buf, align 8, !dbg !7172
  %call389 = call i32 @strncasecmp(i8* %282, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52.260, i64 0, i64 0), i64 9), !dbg !7173
  %cmp390 = icmp eq i32 %call389, 0, !dbg !7174
  br i1 %cmp390, label %if.then392, label %if.else400, !dbg !7175

if.then392:                                       ; preds = %lor.lhs.false388, %if.else384
  %283 = load i8*, i8** %buf, align 8, !dbg !7176
  %arrayidx393 = getelementptr inbounds i8, i8* %283, i64 9, !dbg !7176
  store i8* %arrayidx393, i8** %cp, align 8, !dbg !7178
  %284 = load i8*, i8** %cp, align 8, !dbg !7179
  %call394 = call i64 @tdate_parse(i8* %284), !dbg !7180
  %285 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7181
  %range_if = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %285, i32 0, i32 47, !dbg !7182
  store i64 %call394, i64* %range_if, align 8, !dbg !7183
  %286 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7184
  %range_if395 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %286, i32 0, i32 47, !dbg !7186
  %287 = load i64, i64* %range_if395, align 8, !dbg !7186
  %cmp396 = icmp eq i64 %287, -1, !dbg !7187
  br i1 %cmp396, label %if.then398, label %if.end399, !dbg !7188

if.then398:                                       ; preds = %if.then392
  %288 = load i8*, i8** %cp, align 8, !dbg !7189
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47.255, i64 0, i64 0), i8* %288), !dbg !7190
  br label %if.end399, !dbg !7190

if.end399:                                        ; preds = %if.then398, %if.then392
  br label %if.end440, !dbg !7191

if.else400:                                       ; preds = %lor.lhs.false388
  %289 = load i8*, i8** %buf, align 8, !dbg !7192
  %call401 = call i32 @strncasecmp(i8* %289, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53.261, i64 0, i64 0), i64 13), !dbg !7194
  %cmp402 = icmp eq i32 %call401, 0, !dbg !7195
  br i1 %cmp402, label %if.then404, label %if.else408, !dbg !7196

if.then404:                                       ; preds = %if.else400
  %290 = load i8*, i8** %buf, align 8, !dbg !7197
  %arrayidx405 = getelementptr inbounds i8, i8* %290, i64 13, !dbg !7197
  store i8* %arrayidx405, i8** %cp, align 8, !dbg !7199
  %291 = load i8*, i8** %cp, align 8, !dbg !7200
  %call406 = call i64 @strspn(i8* %291, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !7201
  %292 = load i8*, i8** %cp, align 8, !dbg !7202
  %add.ptr407 = getelementptr inbounds i8, i8* %292, i64 %call406, !dbg !7202
  store i8* %add.ptr407, i8** %cp, align 8, !dbg !7202
  %293 = load i8*, i8** %cp, align 8, !dbg !7203
  %294 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7204
  %contenttype = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %294, i32 0, i32 26, !dbg !7205
  store i8* %293, i8** %contenttype, align 8, !dbg !7206
  br label %if.end439, !dbg !7207

if.else408:                                       ; preds = %if.else400
  %295 = load i8*, i8** %buf, align 8, !dbg !7208
  %call409 = call i32 @strncasecmp(i8* %295, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.54.262, i64 0, i64 0), i64 15), !dbg !7210
  %cmp410 = icmp eq i32 %call409, 0, !dbg !7211
  br i1 %cmp410, label %if.then412, label %if.else415, !dbg !7212

if.then412:                                       ; preds = %if.else408
  %296 = load i8*, i8** %buf, align 8, !dbg !7213
  %arrayidx413 = getelementptr inbounds i8, i8* %296, i64 15, !dbg !7213
  store i8* %arrayidx413, i8** %cp, align 8, !dbg !7215
  %297 = load i8*, i8** %cp, align 8, !dbg !7216
  %call414 = call i64 @atol(i8* %297), !dbg !7217
  %298 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7218
  %contentlength = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %298, i32 0, i32 48, !dbg !7219
  store i64 %call414, i64* %contentlength, align 8, !dbg !7220
  br label %if.end438, !dbg !7221

if.else415:                                       ; preds = %if.else408
  %299 = load i8*, i8** %buf, align 8, !dbg !7222
  %call416 = call i32 @strncasecmp(i8* %299, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55.263, i64 0, i64 0), i64 14), !dbg !7224
  %cmp417 = icmp eq i32 %call416, 0, !dbg !7225
  br i1 %cmp417, label %if.then419, label %if.else423, !dbg !7226

if.then419:                                       ; preds = %if.else415
  %300 = load i8*, i8** %buf, align 8, !dbg !7227
  %arrayidx420 = getelementptr inbounds i8, i8* %300, i64 14, !dbg !7227
  store i8* %arrayidx420, i8** %cp, align 8, !dbg !7229
  %301 = load i8*, i8** %cp, align 8, !dbg !7230
  %call421 = call i64 @strspn(i8* %301, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !7231
  %302 = load i8*, i8** %cp, align 8, !dbg !7232
  %add.ptr422 = getelementptr inbounds i8, i8* %302, i64 %call421, !dbg !7232
  store i8* %add.ptr422, i8** %cp, align 8, !dbg !7232
  %303 = load i8*, i8** %cp, align 8, !dbg !7233
  %304 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7234
  %authorization = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %304, i32 0, i32 30, !dbg !7235
  store i8* %303, i8** %authorization, align 8, !dbg !7236
  br label %if.end437, !dbg !7237

if.else423:                                       ; preds = %if.else415
  %305 = load i8*, i8** %buf, align 8, !dbg !7238
  %call424 = call i32 @strncasecmp(i8* %305, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56.264, i64 0, i64 0), i64 11), !dbg !7240
  %cmp425 = icmp eq i32 %call424, 0, !dbg !7241
  br i1 %cmp425, label %if.then427, label %if.end436, !dbg !7242

if.then427:                                       ; preds = %if.else423
  %306 = load i8*, i8** %buf, align 8, !dbg !7243
  %arrayidx428 = getelementptr inbounds i8, i8* %306, i64 11, !dbg !7243
  store i8* %arrayidx428, i8** %cp, align 8, !dbg !7245
  %307 = load i8*, i8** %cp, align 8, !dbg !7246
  %call429 = call i64 @strspn(i8* %307, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !7247
  %308 = load i8*, i8** %cp, align 8, !dbg !7248
  %add.ptr430 = getelementptr inbounds i8, i8* %308, i64 %call429, !dbg !7248
  store i8* %add.ptr430, i8** %cp, align 8, !dbg !7248
  %309 = load i8*, i8** %cp, align 8, !dbg !7249
  %call431 = call i32 @strcasecmp(i8* %309, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57.265, i64 0, i64 0)), !dbg !7251
  %cmp432 = icmp eq i32 %call431, 0, !dbg !7252
  br i1 %cmp432, label %if.then434, label %if.end435, !dbg !7253

if.then434:                                       ; preds = %if.then427
  %310 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7254
  %keep_alive = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %310, i32 0, i32 57, !dbg !7255
  store i32 1, i32* %keep_alive, align 8, !dbg !7256
  br label %if.end435, !dbg !7254

if.end435:                                        ; preds = %if.then434, %if.then427
  br label %if.end436, !dbg !7257

if.end436:                                        ; preds = %if.end435, %if.else423
  br label %if.end437

if.end437:                                        ; preds = %if.end436, %if.then419
  br label %if.end438

if.end438:                                        ; preds = %if.end437, %if.then412
  br label %if.end439

if.end439:                                        ; preds = %if.end438, %if.then404
  br label %if.end440

if.end440:                                        ; preds = %if.end439, %if.end399
  br label %if.end441

if.end441:                                        ; preds = %if.end440, %if.end383
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.then333
  br label %if.end443

if.end443:                                        ; preds = %if.end442, %if.end328
  br label %if.end444

if.end444:                                        ; preds = %if.end443, %if.then313
  br label %if.end445

if.end445:                                        ; preds = %if.end444, %if.end305
  br label %if.end446

if.end446:                                        ; preds = %if.end445, %if.end267
  br label %if.end447

if.end447:                                        ; preds = %if.end446, %if.end234
  br label %if.end448

if.end448:                                        ; preds = %if.end447, %if.then205
  br label %if.end449

if.end449:                                        ; preds = %if.end448, %if.then196
  br label %if.end450

if.end450:                                        ; preds = %if.end449, %if.then188
  br label %while.cond, !dbg !6825, !llvm.loop !6957

while.end:                                        ; preds = %if.then183, %while.cond
  br label %if.end451, !dbg !7258

if.end451:                                        ; preds = %while.end, %if.end172
  %311 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7259
  %one_one452 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %311, i32 0, i32 52, !dbg !7261
  %312 = load i32, i32* %one_one452, align 4, !dbg !7261
  %tobool453 = icmp ne i32 %312, 0, !dbg !7259
  br i1 %tobool453, label %if.then454, label %if.end472, !dbg !7262

if.then454:                                       ; preds = %if.end451
  %313 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7263
  %reqhost455 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %313, i32 0, i32 27, !dbg !7266
  %314 = load i8*, i8** %reqhost455, align 8, !dbg !7266
  %arrayidx456 = getelementptr inbounds i8, i8* %314, i64 0, !dbg !7263
  %315 = load i8, i8* %arrayidx456, align 1, !dbg !7263
  %conv457 = sext i8 %315 to i32, !dbg !7263
  %cmp458 = icmp eq i32 %conv457, 0, !dbg !7267
  br i1 %cmp458, label %land.lhs.true460, label %if.end467, !dbg !7268

land.lhs.true460:                                 ; preds = %if.then454
  %316 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7269
  %hdrhost461 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %316, i32 0, i32 28, !dbg !7270
  %317 = load i8*, i8** %hdrhost461, align 8, !dbg !7270
  %arrayidx462 = getelementptr inbounds i8, i8* %317, i64 0, !dbg !7269
  %318 = load i8, i8* %arrayidx462, align 1, !dbg !7269
  %conv463 = sext i8 %318 to i32, !dbg !7269
  %cmp464 = icmp eq i32 %conv463, 0, !dbg !7271
  br i1 %cmp464, label %if.then466, label %if.end467, !dbg !7272

if.then466:                                       ; preds = %land.lhs.true460
  %319 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7273
  %320 = load i8*, i8** @httpd_err400title, align 8, !dbg !7275
  %321 = load i8*, i8** @httpd_err400form, align 8, !dbg !7276
  call void @httpd_send_err(%struct.httpd_conn* %319, i32 400, i8* %320, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %321, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0)), !dbg !7277
  store i32 -1, i32* %retval, align 4, !dbg !7278
  br label %return, !dbg !7278

if.end467:                                        ; preds = %land.lhs.true460, %if.then454
  %322 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7279
  %keep_alive468 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %322, i32 0, i32 57, !dbg !7281
  %323 = load i32, i32* %keep_alive468, align 8, !dbg !7281
  %tobool469 = icmp ne i32 %323, 0, !dbg !7279
  br i1 %tobool469, label %if.then470, label %if.end471, !dbg !7282

if.then470:                                       ; preds = %if.end467
  %324 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7283
  %should_linger = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %324, i32 0, i32 58, !dbg !7284
  store i32 1, i32* %should_linger, align 4, !dbg !7285
  br label %if.end471, !dbg !7283

if.end471:                                        ; preds = %if.then470, %if.end467
  br label %if.end472, !dbg !7286

if.end472:                                        ; preds = %if.end471, %if.end451
  %325 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7287
  %expnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %325, i32 0, i32 16, !dbg !7288
  %326 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7289
  %maxexpnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %326, i32 0, i32 35, !dbg !7290
  %327 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7291
  %origfilename473 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %327, i32 0, i32 15, !dbg !7292
  %328 = load i8*, i8** %origfilename473, align 8, !dbg !7292
  %call474 = call i64 @strlen(i8* %328), !dbg !7293
  call void @httpd_realloc_str(i8** %expnfilename, i64* %maxexpnfilename, i64 %call474), !dbg !7294
  %329 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7295
  %expnfilename475 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %329, i32 0, i32 16, !dbg !7295
  %330 = load i8*, i8** %expnfilename475, align 8, !dbg !7295
  %331 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7295
  %origfilename476 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %331, i32 0, i32 15, !dbg !7295
  %332 = load i8*, i8** %origfilename476, align 8, !dbg !7295
  %333 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7295
  %expnfilename477 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %333, i32 0, i32 16, !dbg !7295
  %334 = load i8*, i8** %expnfilename477, align 8, !dbg !7295
  %335 = call i64 @llvm.objectsize.i64.p0i8(i8* %334, i1 false, i1 true, i1 false), !dbg !7295
  %call478 = call i8* @__strcpy_chk(i8* %330, i8* %332, i64 %335) #11, !dbg !7295
  %336 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7296
  %expnfilename479 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %336, i32 0, i32 16, !dbg !7298
  %337 = load i8*, i8** %expnfilename479, align 8, !dbg !7298
  %arrayidx480 = getelementptr inbounds i8, i8* %337, i64 0, !dbg !7296
  %338 = load i8, i8* %arrayidx480, align 1, !dbg !7296
  %conv481 = sext i8 %338 to i32, !dbg !7296
  %cmp482 = icmp eq i32 %conv481, 126, !dbg !7299
  br i1 %cmp482, label %if.then484, label %if.end485, !dbg !7300

if.then484:                                       ; preds = %if.end472
  br label %if.end485, !dbg !7301

if.end485:                                        ; preds = %if.then484, %if.end472
  %339 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7303
  %hs = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %339, i32 0, i32 1, !dbg !7305
  %340 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !7305
  %vhost = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %340, i32 0, i32 15, !dbg !7306
  %341 = load i32, i32* %vhost, align 4, !dbg !7306
  %tobool486 = icmp ne i32 %341, 0, !dbg !7303
  br i1 %tobool486, label %if.then487, label %if.end493, !dbg !7307

if.then487:                                       ; preds = %if.end485
  %342 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7308
  %call488 = call i32 @vhost_map(%struct.httpd_conn* %342), !dbg !7310
  %tobool489 = icmp ne i32 %call488, 0, !dbg !7310
  br i1 %tobool489, label %if.end492, label %if.then490, !dbg !7311

if.then490:                                       ; preds = %if.then487
  %343 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7312
  %344 = load i8*, i8** @err500title, align 8, !dbg !7314
  %345 = load i8*, i8** @err500form, align 8, !dbg !7315
  %346 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7316
  %encodedurl491 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %346, i32 0, i32 12, !dbg !7317
  %347 = load i8*, i8** %encodedurl491, align 8, !dbg !7317
  call void @httpd_send_err(%struct.httpd_conn* %343, i32 500, i8* %344, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %345, i8* %347), !dbg !7318
  store i32 -1, i32* %retval, align 4, !dbg !7319
  br label %return, !dbg !7319

if.end492:                                        ; preds = %if.then487
  br label %if.end493, !dbg !7320

if.end493:                                        ; preds = %if.end492, %if.end485
  %348 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7321
  %expnfilename494 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %348, i32 0, i32 16, !dbg !7322
  %349 = load i8*, i8** %expnfilename494, align 8, !dbg !7322
  %350 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7323
  %hs495 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %350, i32 0, i32 1, !dbg !7324
  %351 = load %struct.httpd_server*, %struct.httpd_server** %hs495, align 8, !dbg !7324
  %no_symlink_check = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %351, i32 0, i32 14, !dbg !7325
  %352 = load i32, i32* %no_symlink_check, align 8, !dbg !7325
  %353 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7326
  %tildemapped = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %353, i32 0, i32 54, !dbg !7327
  %354 = load i32, i32* %tildemapped, align 4, !dbg !7327
  %call496 = call i8* @expand_symlinks(i8* %349, i8** %pi, i32 %352, i32 %354), !dbg !7328
  store i8* %call496, i8** %cp, align 8, !dbg !7329
  %355 = load i8*, i8** %cp, align 8, !dbg !7330
  %cmp497 = icmp eq i8* %355, null, !dbg !7332
  br i1 %cmp497, label %if.then499, label %if.end501, !dbg !7333

if.then499:                                       ; preds = %if.end493
  %356 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7334
  %357 = load i8*, i8** @err500title, align 8, !dbg !7336
  %358 = load i8*, i8** @err500form, align 8, !dbg !7337
  %359 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7338
  %encodedurl500 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %359, i32 0, i32 12, !dbg !7339
  %360 = load i8*, i8** %encodedurl500, align 8, !dbg !7339
  call void @httpd_send_err(%struct.httpd_conn* %356, i32 500, i8* %357, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %358, i8* %360), !dbg !7340
  store i32 -1, i32* %retval, align 4, !dbg !7341
  br label %return, !dbg !7341

if.end501:                                        ; preds = %if.end493
  %361 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7342
  %expnfilename502 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %361, i32 0, i32 16, !dbg !7343
  %362 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7344
  %maxexpnfilename503 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %362, i32 0, i32 35, !dbg !7345
  %363 = load i8*, i8** %cp, align 8, !dbg !7346
  %call504 = call i64 @strlen(i8* %363), !dbg !7347
  call void @httpd_realloc_str(i8** %expnfilename502, i64* %maxexpnfilename503, i64 %call504), !dbg !7348
  %364 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7349
  %expnfilename505 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %364, i32 0, i32 16, !dbg !7349
  %365 = load i8*, i8** %expnfilename505, align 8, !dbg !7349
  %366 = load i8*, i8** %cp, align 8, !dbg !7349
  %367 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7349
  %expnfilename506 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %367, i32 0, i32 16, !dbg !7349
  %368 = load i8*, i8** %expnfilename506, align 8, !dbg !7349
  %369 = call i64 @llvm.objectsize.i64.p0i8(i8* %368, i1 false, i1 true, i1 false), !dbg !7349
  %call507 = call i8* @__strcpy_chk(i8* %365, i8* %366, i64 %369) #11, !dbg !7349
  %370 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7350
  %pathinfo = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %370, i32 0, i32 18, !dbg !7351
  %371 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7352
  %maxpathinfo = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %371, i32 0, i32 37, !dbg !7353
  %372 = load i8*, i8** %pi, align 8, !dbg !7354
  %call508 = call i64 @strlen(i8* %372), !dbg !7355
  call void @httpd_realloc_str(i8** %pathinfo, i64* %maxpathinfo, i64 %call508), !dbg !7356
  %373 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7357
  %pathinfo509 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %373, i32 0, i32 18, !dbg !7357
  %374 = load i8*, i8** %pathinfo509, align 8, !dbg !7357
  %375 = load i8*, i8** %pi, align 8, !dbg !7357
  %376 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7357
  %pathinfo510 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %376, i32 0, i32 18, !dbg !7357
  %377 = load i8*, i8** %pathinfo510, align 8, !dbg !7357
  %378 = call i64 @llvm.objectsize.i64.p0i8(i8* %377, i1 false, i1 true, i1 false), !dbg !7357
  %call511 = call i8* @__strcpy_chk(i8* %374, i8* %375, i64 %378) #11, !dbg !7357
  %379 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7358
  %pathinfo512 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %379, i32 0, i32 18, !dbg !7360
  %380 = load i8*, i8** %pathinfo512, align 8, !dbg !7360
  %arrayidx513 = getelementptr inbounds i8, i8* %380, i64 0, !dbg !7358
  %381 = load i8, i8* %arrayidx513, align 1, !dbg !7358
  %conv514 = sext i8 %381 to i32, !dbg !7358
  %cmp515 = icmp ne i32 %conv514, 0, !dbg !7361
  br i1 %cmp515, label %if.then517, label %if.end538, !dbg !7362

if.then517:                                       ; preds = %if.end501
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7363, metadata !DIExpression()), !dbg !7365
  %382 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7366
  %origfilename518 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %382, i32 0, i32 15, !dbg !7367
  %383 = load i8*, i8** %origfilename518, align 8, !dbg !7367
  %call519 = call i64 @strlen(i8* %383), !dbg !7368
  %384 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7369
  %pathinfo520 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %384, i32 0, i32 18, !dbg !7370
  %385 = load i8*, i8** %pathinfo520, align 8, !dbg !7370
  %call521 = call i64 @strlen(i8* %385), !dbg !7371
  %sub = sub i64 %call519, %call521, !dbg !7372
  %conv522 = trunc i64 %sub to i32, !dbg !7368
  store i32 %conv522, i32* %i, align 4, !dbg !7373
  %386 = load i32, i32* %i, align 4, !dbg !7374
  %cmp523 = icmp sgt i32 %386, 0, !dbg !7376
  br i1 %cmp523, label %land.lhs.true525, label %if.end537, !dbg !7377

land.lhs.true525:                                 ; preds = %if.then517
  %387 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7378
  %origfilename526 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %387, i32 0, i32 15, !dbg !7379
  %388 = load i8*, i8** %origfilename526, align 8, !dbg !7379
  %389 = load i32, i32* %i, align 4, !dbg !7380
  %idxprom = sext i32 %389 to i64, !dbg !7378
  %arrayidx527 = getelementptr inbounds i8, i8* %388, i64 %idxprom, !dbg !7378
  %390 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7381
  %pathinfo528 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %390, i32 0, i32 18, !dbg !7382
  %391 = load i8*, i8** %pathinfo528, align 8, !dbg !7382
  %call529 = call i32 @strcmp(i8* %arrayidx527, i8* %391), !dbg !7383
  %cmp530 = icmp eq i32 %call529, 0, !dbg !7384
  br i1 %cmp530, label %if.then532, label %if.end537, !dbg !7385

if.then532:                                       ; preds = %land.lhs.true525
  %392 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7386
  %origfilename533 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %392, i32 0, i32 15, !dbg !7387
  %393 = load i8*, i8** %origfilename533, align 8, !dbg !7387
  %394 = load i32, i32* %i, align 4, !dbg !7388
  %sub534 = sub nsw i32 %394, 1, !dbg !7389
  %idxprom535 = sext i32 %sub534 to i64, !dbg !7386
  %arrayidx536 = getelementptr inbounds i8, i8* %393, i64 %idxprom535, !dbg !7386
  store i8 0, i8* %arrayidx536, align 1, !dbg !7390
  br label %if.end537, !dbg !7386

if.end537:                                        ; preds = %if.then532, %land.lhs.true525, %if.then517
  br label %if.end538, !dbg !7391

if.end538:                                        ; preds = %if.end537, %if.end501
  %395 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7392
  %expnfilename539 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %395, i32 0, i32 16, !dbg !7394
  %396 = load i8*, i8** %expnfilename539, align 8, !dbg !7394
  %arrayidx540 = getelementptr inbounds i8, i8* %396, i64 0, !dbg !7392
  %397 = load i8, i8* %arrayidx540, align 1, !dbg !7392
  %conv541 = sext i8 %397 to i32, !dbg !7392
  %cmp542 = icmp eq i32 %conv541, 47, !dbg !7395
  br i1 %cmp542, label %if.then544, label %if.end575, !dbg !7396

if.then544:                                       ; preds = %if.end538
  %398 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7397
  %expnfilename545 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %398, i32 0, i32 16, !dbg !7400
  %399 = load i8*, i8** %expnfilename545, align 8, !dbg !7400
  %400 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7401
  %hs546 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %400, i32 0, i32 1, !dbg !7402
  %401 = load %struct.httpd_server*, %struct.httpd_server** %hs546, align 8, !dbg !7402
  %cwd = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %401, i32 0, i32 9, !dbg !7403
  %402 = load i8*, i8** %cwd, align 8, !dbg !7403
  %403 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7404
  %hs547 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %403, i32 0, i32 1, !dbg !7405
  %404 = load %struct.httpd_server*, %struct.httpd_server** %hs547, align 8, !dbg !7405
  %cwd548 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %404, i32 0, i32 9, !dbg !7406
  %405 = load i8*, i8** %cwd548, align 8, !dbg !7406
  %call549 = call i64 @strlen(i8* %405), !dbg !7407
  %call550 = call i32 @strncmp(i8* %399, i8* %402, i64 %call549), !dbg !7408
  %cmp551 = icmp eq i32 %call550, 0, !dbg !7409
  br i1 %cmp551, label %if.then553, label %if.else569, !dbg !7410

if.then553:                                       ; preds = %if.then544
  %406 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7411
  %expnfilename554 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %406, i32 0, i32 16, !dbg !7411
  %407 = load i8*, i8** %expnfilename554, align 8, !dbg !7411
  %408 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7411
  %expnfilename555 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %408, i32 0, i32 16, !dbg !7411
  %409 = load i8*, i8** %expnfilename555, align 8, !dbg !7411
  %410 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7411
  %hs556 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %410, i32 0, i32 1, !dbg !7411
  %411 = load %struct.httpd_server*, %struct.httpd_server** %hs556, align 8, !dbg !7411
  %cwd557 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %411, i32 0, i32 9, !dbg !7411
  %412 = load i8*, i8** %cwd557, align 8, !dbg !7411
  %call558 = call i64 @strlen(i8* %412), !dbg !7411
  %arrayidx559 = getelementptr inbounds i8, i8* %409, i64 %call558, !dbg !7411
  %413 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7411
  %expnfilename560 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %413, i32 0, i32 16, !dbg !7411
  %414 = load i8*, i8** %expnfilename560, align 8, !dbg !7411
  %415 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7411
  %hs561 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %415, i32 0, i32 1, !dbg !7411
  %416 = load %struct.httpd_server*, %struct.httpd_server** %hs561, align 8, !dbg !7411
  %cwd562 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %416, i32 0, i32 9, !dbg !7411
  %417 = load i8*, i8** %cwd562, align 8, !dbg !7411
  %call563 = call i64 @strlen(i8* %417), !dbg !7411
  %arrayidx564 = getelementptr inbounds i8, i8* %414, i64 %call563, !dbg !7411
  %call565 = call i64 @strlen(i8* %arrayidx564), !dbg !7411
  %add566 = add i64 %call565, 1, !dbg !7411
  %418 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7411
  %expnfilename567 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %418, i32 0, i32 16, !dbg !7411
  %419 = load i8*, i8** %expnfilename567, align 8, !dbg !7411
  %420 = call i64 @llvm.objectsize.i64.p0i8(i8* %419, i1 false, i1 true, i1 false), !dbg !7411
  %call568 = call i8* @__memmove_chk(i8* %407, i8* %arrayidx559, i64 %add566, i64 %420) #11, !dbg !7411
  br label %if.end574, !dbg !7413

if.else569:                                       ; preds = %if.then544
  %421 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7414
  %client_addr570 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %421, i32 0, i32 2, !dbg !7416
  %call571 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr570), !dbg !7417
  %422 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7418
  %encodedurl572 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %422, i32 0, i32 12, !dbg !7419
  %423 = load i8*, i8** %encodedurl572, align 8, !dbg !7419
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.58.266, i64 0, i64 0), i8* %call571, i8* %423), !dbg !7420
  %424 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7421
  %425 = load i8*, i8** @err403title, align 8, !dbg !7422
  %426 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7423
  %encodedurl573 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %426, i32 0, i32 12, !dbg !7424
  %427 = load i8*, i8** %encodedurl573, align 8, !dbg !7424
  call void @httpd_send_err(%struct.httpd_conn* %424, i32 403, i8* %425, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.59.267, i64 0, i64 0), i8* %427), !dbg !7425
  store i32 -1, i32* %retval, align 4, !dbg !7426
  br label %return, !dbg !7426

if.end574:                                        ; preds = %if.then553
  br label %if.end575, !dbg !7427

if.end575:                                        ; preds = %if.end574, %if.end538
  store i32 0, i32* %retval, align 4, !dbg !7428
  br label %return, !dbg !7428

return:                                           ; preds = %if.end575, %if.else569, %if.then499, %if.then490, %if.then466, %if.then233, %if.then171, %if.else97, %if.then55, %if.then44, %if.then36, %if.then30, %if.then
  %428 = load i32, i32* %retval, align 4, !dbg !7429
  ret i32 %428, !dbg !7429
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i8* @bufgets(%struct.httpd_conn* %hc) #0 !dbg !7430 {
entry:
  %retval = alloca i8*, align 8
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %i = alloca i32, align 4
  %c = alloca i8, align 1
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !7433, metadata !DIExpression()), !dbg !7434
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7435, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.declare(metadata i8* %c, metadata !7437, metadata !DIExpression()), !dbg !7438
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7439
  %checked_idx = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 6, !dbg !7441
  %1 = load i64, i64* %checked_idx, align 8, !dbg !7441
  %conv = trunc i64 %1 to i32, !dbg !7439
  store i32 %conv, i32* %i, align 4, !dbg !7442
  br label %for.cond, !dbg !7443

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7444
  %checked_idx1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 6, !dbg !7446
  %3 = load i64, i64* %checked_idx1, align 8, !dbg !7446
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7447
  %read_idx = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %4, i32 0, i32 5, !dbg !7448
  %5 = load i64, i64* %read_idx, align 8, !dbg !7448
  %cmp = icmp ult i64 %3, %5, !dbg !7449
  br i1 %cmp, label %for.body, label %for.end, !dbg !7450

for.body:                                         ; preds = %for.cond
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7451
  %read_buf = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 3, !dbg !7453
  %7 = load i8*, i8** %read_buf, align 8, !dbg !7453
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7454
  %checked_idx3 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 6, !dbg !7455
  %9 = load i64, i64* %checked_idx3, align 8, !dbg !7455
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %9, !dbg !7451
  %10 = load i8, i8* %arrayidx, align 1, !dbg !7451
  store i8 %10, i8* %c, align 1, !dbg !7456
  %11 = load i8, i8* %c, align 1, !dbg !7457
  %conv4 = sext i8 %11 to i32, !dbg !7457
  %cmp5 = icmp eq i32 %conv4, 10, !dbg !7459
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !7460

lor.lhs.false:                                    ; preds = %for.body
  %12 = load i8, i8* %c, align 1, !dbg !7461
  %conv7 = sext i8 %12 to i32, !dbg !7461
  %cmp8 = icmp eq i32 %conv7, 13, !dbg !7462
  br i1 %cmp8, label %if.then, label %if.end36, !dbg !7463

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7464
  %read_buf10 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 3, !dbg !7466
  %14 = load i8*, i8** %read_buf10, align 8, !dbg !7466
  %15 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7467
  %checked_idx11 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %15, i32 0, i32 6, !dbg !7468
  %16 = load i64, i64* %checked_idx11, align 8, !dbg !7468
  %arrayidx12 = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !7464
  store i8 0, i8* %arrayidx12, align 1, !dbg !7469
  %17 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7470
  %checked_idx13 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %17, i32 0, i32 6, !dbg !7471
  %18 = load i64, i64* %checked_idx13, align 8, !dbg !7472
  %inc = add i64 %18, 1, !dbg !7472
  store i64 %inc, i64* %checked_idx13, align 8, !dbg !7472
  %19 = load i8, i8* %c, align 1, !dbg !7473
  %conv14 = sext i8 %19 to i32, !dbg !7473
  %cmp15 = icmp eq i32 %conv14, 13, !dbg !7475
  br i1 %cmp15, label %land.lhs.true, label %if.end, !dbg !7476

land.lhs.true:                                    ; preds = %if.then
  %20 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7477
  %checked_idx17 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %20, i32 0, i32 6, !dbg !7478
  %21 = load i64, i64* %checked_idx17, align 8, !dbg !7478
  %22 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7479
  %read_idx18 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %22, i32 0, i32 5, !dbg !7480
  %23 = load i64, i64* %read_idx18, align 8, !dbg !7480
  %cmp19 = icmp ult i64 %21, %23, !dbg !7481
  br i1 %cmp19, label %land.lhs.true21, label %if.end, !dbg !7482

land.lhs.true21:                                  ; preds = %land.lhs.true
  %24 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7483
  %read_buf22 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %24, i32 0, i32 3, !dbg !7484
  %25 = load i8*, i8** %read_buf22, align 8, !dbg !7484
  %26 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7485
  %checked_idx23 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %26, i32 0, i32 6, !dbg !7486
  %27 = load i64, i64* %checked_idx23, align 8, !dbg !7486
  %arrayidx24 = getelementptr inbounds i8, i8* %25, i64 %27, !dbg !7483
  %28 = load i8, i8* %arrayidx24, align 1, !dbg !7483
  %conv25 = sext i8 %28 to i32, !dbg !7483
  %cmp26 = icmp eq i32 %conv25, 10, !dbg !7487
  br i1 %cmp26, label %if.then28, label %if.end, !dbg !7488

if.then28:                                        ; preds = %land.lhs.true21
  %29 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7489
  %read_buf29 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %29, i32 0, i32 3, !dbg !7491
  %30 = load i8*, i8** %read_buf29, align 8, !dbg !7491
  %31 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7492
  %checked_idx30 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %31, i32 0, i32 6, !dbg !7493
  %32 = load i64, i64* %checked_idx30, align 8, !dbg !7493
  %arrayidx31 = getelementptr inbounds i8, i8* %30, i64 %32, !dbg !7489
  store i8 0, i8* %arrayidx31, align 1, !dbg !7494
  %33 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7495
  %checked_idx32 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %33, i32 0, i32 6, !dbg !7496
  %34 = load i64, i64* %checked_idx32, align 8, !dbg !7497
  %inc33 = add i64 %34, 1, !dbg !7497
  store i64 %inc33, i64* %checked_idx32, align 8, !dbg !7497
  br label %if.end, !dbg !7498

if.end:                                           ; preds = %if.then28, %land.lhs.true21, %land.lhs.true, %if.then
  %35 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7499
  %read_buf34 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %35, i32 0, i32 3, !dbg !7500
  %36 = load i8*, i8** %read_buf34, align 8, !dbg !7500
  %37 = load i32, i32* %i, align 4, !dbg !7501
  %idxprom = sext i32 %37 to i64, !dbg !7499
  %arrayidx35 = getelementptr inbounds i8, i8* %36, i64 %idxprom, !dbg !7499
  store i8* %arrayidx35, i8** %retval, align 8, !dbg !7502
  br label %return, !dbg !7502

if.end36:                                         ; preds = %lor.lhs.false
  br label %for.inc, !dbg !7503

for.inc:                                          ; preds = %if.end36
  %38 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7504
  %checked_idx37 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %38, i32 0, i32 6, !dbg !7505
  %39 = load i64, i64* %checked_idx37, align 8, !dbg !7506
  %inc38 = add i64 %39, 1, !dbg !7506
  store i64 %inc38, i64* %checked_idx37, align 8, !dbg !7506
  br label %for.cond, !dbg !7507, !llvm.loop !7508

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !7510
  br label %return, !dbg !7510

return:                                           ; preds = %for.end, %if.end
  %40 = load i8*, i8** %retval, align 8, !dbg !7511
  ret i8* %40, !dbg !7511
}

declare i8* @strpbrk(i8*, i8*) #3

declare i32 @strncasecmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @strdecode(i8* %to, i8* %from) #0 !dbg !7512 {
entry:
  %to.addr = alloca i8*, align 8
  %from.addr = alloca i8*, align 8
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !7513, metadata !DIExpression()), !dbg !7514
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !7515, metadata !DIExpression()), !dbg !7516
  br label %for.cond, !dbg !7517

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %from.addr, align 8, !dbg !7518
  %1 = load i8, i8* %0, align 1, !dbg !7521
  %conv = sext i8 %1 to i32, !dbg !7521
  %cmp = icmp ne i32 %conv, 0, !dbg !7522
  br i1 %cmp, label %for.body, label %for.end, !dbg !7523

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %from.addr, align 8, !dbg !7524
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0, !dbg !7524
  %3 = load i8, i8* %arrayidx, align 1, !dbg !7524
  %conv2 = sext i8 %3 to i32, !dbg !7524
  %cmp3 = icmp eq i32 %conv2, 37, !dbg !7527
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !7528

land.lhs.true:                                    ; preds = %for.body
  %4 = load i8*, i8** %from.addr, align 8, !dbg !7529
  %arrayidx5 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !7529
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !7529
  %conv6 = sext i8 %5 to i32, !dbg !7529
  %call = call i32 @isxdigit(i32 %conv6) #18, !dbg !7530
  %tobool = icmp ne i32 %call, 0, !dbg !7530
  br i1 %tobool, label %land.lhs.true7, label %if.else, !dbg !7531

land.lhs.true7:                                   ; preds = %land.lhs.true
  %6 = load i8*, i8** %from.addr, align 8, !dbg !7532
  %arrayidx8 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !7532
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !7532
  %conv9 = sext i8 %7 to i32, !dbg !7532
  %call10 = call i32 @isxdigit(i32 %conv9) #18, !dbg !7533
  %tobool11 = icmp ne i32 %call10, 0, !dbg !7533
  br i1 %tobool11, label %if.then, label %if.else, !dbg !7534

if.then:                                          ; preds = %land.lhs.true7
  %8 = load i8*, i8** %from.addr, align 8, !dbg !7535
  %arrayidx12 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !7535
  %9 = load i8, i8* %arrayidx12, align 1, !dbg !7535
  %call13 = call i32 @hexit(i8 signext %9), !dbg !7537
  %mul = mul nsw i32 %call13, 16, !dbg !7538
  %10 = load i8*, i8** %from.addr, align 8, !dbg !7539
  %arrayidx14 = getelementptr inbounds i8, i8* %10, i64 2, !dbg !7539
  %11 = load i8, i8* %arrayidx14, align 1, !dbg !7539
  %call15 = call i32 @hexit(i8 signext %11), !dbg !7540
  %add = add nsw i32 %mul, %call15, !dbg !7541
  %conv16 = trunc i32 %add to i8, !dbg !7537
  %12 = load i8*, i8** %to.addr, align 8, !dbg !7542
  store i8 %conv16, i8* %12, align 1, !dbg !7543
  %13 = load i8*, i8** %from.addr, align 8, !dbg !7544
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 2, !dbg !7544
  store i8* %add.ptr, i8** %from.addr, align 8, !dbg !7544
  br label %if.end, !dbg !7545

if.else:                                          ; preds = %land.lhs.true7, %land.lhs.true, %for.body
  %14 = load i8*, i8** %from.addr, align 8, !dbg !7546
  %15 = load i8, i8* %14, align 1, !dbg !7547
  %16 = load i8*, i8** %to.addr, align 8, !dbg !7548
  store i8 %15, i8* %16, align 1, !dbg !7549
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !7550

for.inc:                                          ; preds = %if.end
  %17 = load i8*, i8** %to.addr, align 8, !dbg !7551
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7551
  store i8* %incdec.ptr, i8** %to.addr, align 8, !dbg !7551
  %18 = load i8*, i8** %from.addr, align 8, !dbg !7552
  %incdec.ptr17 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7552
  store i8* %incdec.ptr17, i8** %from.addr, align 8, !dbg !7552
  br label %for.cond, !dbg !7553, !llvm.loop !7554

for.end:                                          ; preds = %for.cond
  %19 = load i8*, i8** %to.addr, align 8, !dbg !7556
  store i8 0, i8* %19, align 1, !dbg !7557
  ret void, !dbg !7558
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @de_dotdot(i8* %file) #0 !dbg !7559 {
entry:
  %file.addr = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %l = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7560, metadata !DIExpression()), !dbg !7561
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !7562, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !7564, metadata !DIExpression()), !dbg !7565
  call void @llvm.dbg.declare(metadata i32* %l, metadata !7566, metadata !DIExpression()), !dbg !7567
  br label %while.cond, !dbg !7568

while.cond:                                       ; preds = %for.end, %entry
  %0 = load i8*, i8** %file.addr, align 8, !dbg !7569
  %call = call i8* @strstr(i8* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98.276, i64 0, i64 0)), !dbg !7570
  store i8* %call, i8** %cp, align 8, !dbg !7571
  %cmp = icmp ne i8* %call, null, !dbg !7572
  br i1 %cmp, label %while.body, label %while.end, !dbg !7568

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %cp, align 8, !dbg !7573
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 2, !dbg !7576
  store i8* %add.ptr, i8** %cp2, align 8, !dbg !7577
  br label %for.cond, !dbg !7578

for.cond:                                         ; preds = %for.inc, %while.body
  %2 = load i8*, i8** %cp2, align 8, !dbg !7579
  %3 = load i8, i8* %2, align 1, !dbg !7581
  %conv = sext i8 %3 to i32, !dbg !7581
  %cmp1 = icmp eq i32 %conv, 47, !dbg !7582
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7583

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !7584

for.inc:                                          ; preds = %for.body
  %4 = load i8*, i8** %cp2, align 8, !dbg !7585
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7585
  store i8* %incdec.ptr, i8** %cp2, align 8, !dbg !7585
  br label %for.cond, !dbg !7586, !llvm.loop !7587

for.end:                                          ; preds = %for.cond
  %5 = load i8*, i8** %cp, align 8, !dbg !7589
  %add.ptr3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !7589
  %6 = load i8*, i8** %cp2, align 8, !dbg !7589
  %7 = load i8*, i8** %cp2, align 8, !dbg !7589
  %call4 = call i64 @strlen(i8* %7), !dbg !7589
  %add = add i64 %call4, 1, !dbg !7589
  %8 = load i8*, i8** %cp, align 8, !dbg !7589
  %add.ptr5 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !7589
  %9 = call i64 @llvm.objectsize.i64.p0i8(i8* %add.ptr5, i1 false, i1 true, i1 false), !dbg !7589
  %call6 = call i8* @__memmove_chk(i8* %add.ptr3, i8* %6, i64 %add, i64 %9) #11, !dbg !7589
  br label %while.cond, !dbg !7568, !llvm.loop !7590

while.end:                                        ; preds = %while.cond
  br label %while.cond7, !dbg !7592

while.cond7:                                      ; preds = %while.body11, %while.end
  %10 = load i8*, i8** %file.addr, align 8, !dbg !7593
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99.277, i64 0, i64 0), i64 2), !dbg !7594
  %cmp9 = icmp eq i32 %call8, 0, !dbg !7595
  br i1 %cmp9, label %while.body11, label %while.end17, !dbg !7592

while.body11:                                     ; preds = %while.cond7
  %11 = load i8*, i8** %file.addr, align 8, !dbg !7596
  %12 = load i8*, i8** %file.addr, align 8, !dbg !7596
  %add.ptr12 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !7596
  %13 = load i8*, i8** %file.addr, align 8, !dbg !7596
  %add.ptr13 = getelementptr inbounds i8, i8* %13, i64 2, !dbg !7596
  %call14 = call i64 @strlen(i8* %add.ptr13), !dbg !7596
  %add15 = add i64 %call14, 1, !dbg !7596
  %14 = load i8*, i8** %file.addr, align 8, !dbg !7596
  %15 = call i64 @llvm.objectsize.i64.p0i8(i8* %14, i1 false, i1 true, i1 false), !dbg !7596
  %call16 = call i8* @__memmove_chk(i8* %11, i8* %add.ptr12, i64 %add15, i64 %15) #11, !dbg !7596
  br label %while.cond7, !dbg !7592, !llvm.loop !7597

while.end17:                                      ; preds = %while.cond7
  br label %while.cond18, !dbg !7598

while.cond18:                                     ; preds = %while.body22, %while.end17
  %16 = load i8*, i8** %file.addr, align 8, !dbg !7599
  %call19 = call i8* @strstr(i8* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.100.278, i64 0, i64 0)), !dbg !7600
  store i8* %call19, i8** %cp, align 8, !dbg !7601
  %cmp20 = icmp ne i8* %call19, null, !dbg !7602
  br i1 %cmp20, label %while.body22, label %while.end28, !dbg !7598

while.body22:                                     ; preds = %while.cond18
  %17 = load i8*, i8** %cp, align 8, !dbg !7603
  %18 = load i8*, i8** %cp, align 8, !dbg !7603
  %add.ptr23 = getelementptr inbounds i8, i8* %18, i64 2, !dbg !7603
  %19 = load i8*, i8** %cp, align 8, !dbg !7603
  %add.ptr24 = getelementptr inbounds i8, i8* %19, i64 2, !dbg !7603
  %call25 = call i64 @strlen(i8* %add.ptr24), !dbg !7603
  %add26 = add i64 %call25, 1, !dbg !7603
  %20 = load i8*, i8** %cp, align 8, !dbg !7603
  %21 = call i64 @llvm.objectsize.i64.p0i8(i8* %20, i1 false, i1 true, i1 false), !dbg !7603
  %call27 = call i8* @__memmove_chk(i8* %17, i8* %add.ptr23, i64 %add26, i64 %21) #11, !dbg !7603
  br label %while.cond18, !dbg !7598, !llvm.loop !7604

while.end28:                                      ; preds = %while.cond18
  br label %for.cond29, !dbg !7605

for.cond29:                                       ; preds = %for.end54, %while.end28
  br label %while.cond30, !dbg !7606

while.cond30:                                     ; preds = %while.body34, %for.cond29
  %22 = load i8*, i8** %file.addr, align 8, !dbg !7610
  %call31 = call i32 @strncmp(i8* %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101.279, i64 0, i64 0), i64 3), !dbg !7611
  %cmp32 = icmp eq i32 %call31, 0, !dbg !7612
  br i1 %cmp32, label %while.body34, label %while.end40, !dbg !7606

while.body34:                                     ; preds = %while.cond30
  %23 = load i8*, i8** %file.addr, align 8, !dbg !7613
  %24 = load i8*, i8** %file.addr, align 8, !dbg !7613
  %add.ptr35 = getelementptr inbounds i8, i8* %24, i64 3, !dbg !7613
  %25 = load i8*, i8** %file.addr, align 8, !dbg !7613
  %add.ptr36 = getelementptr inbounds i8, i8* %25, i64 3, !dbg !7613
  %call37 = call i64 @strlen(i8* %add.ptr36), !dbg !7613
  %add38 = add i64 %call37, 1, !dbg !7613
  %26 = load i8*, i8** %file.addr, align 8, !dbg !7613
  %27 = call i64 @llvm.objectsize.i64.p0i8(i8* %26, i1 false, i1 true, i1 false), !dbg !7613
  %call39 = call i8* @__memmove_chk(i8* %23, i8* %add.ptr35, i64 %add38, i64 %27) #11, !dbg !7613
  br label %while.cond30, !dbg !7606, !llvm.loop !7614

while.end40:                                      ; preds = %while.cond30
  %28 = load i8*, i8** %file.addr, align 8, !dbg !7615
  %call41 = call i8* @strstr(i8* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102.280, i64 0, i64 0)), !dbg !7616
  store i8* %call41, i8** %cp, align 8, !dbg !7617
  %29 = load i8*, i8** %cp, align 8, !dbg !7618
  %cmp42 = icmp eq i8* %29, null, !dbg !7620
  br i1 %cmp42, label %if.then, label %if.end, !dbg !7621

if.then:                                          ; preds = %while.end40
  br label %for.end62, !dbg !7622

if.end:                                           ; preds = %while.end40
  %30 = load i8*, i8** %cp, align 8, !dbg !7623
  %add.ptr44 = getelementptr inbounds i8, i8* %30, i64 -1, !dbg !7625
  store i8* %add.ptr44, i8** %cp2, align 8, !dbg !7626
  br label %for.cond45, !dbg !7627

for.cond45:                                       ; preds = %for.inc52, %if.end
  %31 = load i8*, i8** %cp2, align 8, !dbg !7628
  %32 = load i8*, i8** %file.addr, align 8, !dbg !7630
  %cmp46 = icmp uge i8* %31, %32, !dbg !7631
  br i1 %cmp46, label %land.rhs, label %land.end, !dbg !7632

land.rhs:                                         ; preds = %for.cond45
  %33 = load i8*, i8** %cp2, align 8, !dbg !7633
  %34 = load i8, i8* %33, align 1, !dbg !7634
  %conv48 = sext i8 %34 to i32, !dbg !7634
  %cmp49 = icmp ne i32 %conv48, 47, !dbg !7635
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond45
  %35 = phi i1 [ false, %for.cond45 ], [ %cmp49, %land.rhs ], !dbg !7636
  br i1 %35, label %for.body51, label %for.end54, !dbg !7637

for.body51:                                       ; preds = %land.end
  br label %for.inc52, !dbg !7638

for.inc52:                                        ; preds = %for.body51
  %36 = load i8*, i8** %cp2, align 8, !dbg !7639
  %incdec.ptr53 = getelementptr inbounds i8, i8* %36, i32 -1, !dbg !7639
  store i8* %incdec.ptr53, i8** %cp2, align 8, !dbg !7639
  br label %for.cond45, !dbg !7640, !llvm.loop !7641

for.end54:                                        ; preds = %land.end
  %37 = load i8*, i8** %cp2, align 8, !dbg !7643
  %add.ptr55 = getelementptr inbounds i8, i8* %37, i64 1, !dbg !7643
  %38 = load i8*, i8** %cp, align 8, !dbg !7643
  %add.ptr56 = getelementptr inbounds i8, i8* %38, i64 4, !dbg !7643
  %39 = load i8*, i8** %cp, align 8, !dbg !7643
  %add.ptr57 = getelementptr inbounds i8, i8* %39, i64 4, !dbg !7643
  %call58 = call i64 @strlen(i8* %add.ptr57), !dbg !7643
  %add59 = add i64 %call58, 1, !dbg !7643
  %40 = load i8*, i8** %cp2, align 8, !dbg !7643
  %add.ptr60 = getelementptr inbounds i8, i8* %40, i64 1, !dbg !7643
  %41 = call i64 @llvm.objectsize.i64.p0i8(i8* %add.ptr60, i1 false, i1 true, i1 false), !dbg !7643
  %call61 = call i8* @__memmove_chk(i8* %add.ptr55, i8* %add.ptr56, i64 %add59, i64 %41) #11, !dbg !7643
  br label %for.cond29, !dbg !7644, !llvm.loop !7645

for.end62:                                        ; preds = %if.then
  br label %while.cond63, !dbg !7648

while.cond63:                                     ; preds = %if.end92, %for.end62
  %42 = load i8*, i8** %file.addr, align 8, !dbg !7649
  %call64 = call i64 @strlen(i8* %42), !dbg !7650
  %conv65 = trunc i64 %call64 to i32, !dbg !7650
  store i32 %conv65, i32* %l, align 4, !dbg !7651
  %cmp66 = icmp sgt i32 %conv65, 3, !dbg !7652
  br i1 %cmp66, label %land.rhs68, label %land.end74, !dbg !7653

land.rhs68:                                       ; preds = %while.cond63
  %43 = load i8*, i8** %file.addr, align 8, !dbg !7654
  %44 = load i32, i32* %l, align 4, !dbg !7655
  %idx.ext = sext i32 %44 to i64, !dbg !7656
  %add.ptr69 = getelementptr inbounds i8, i8* %43, i64 %idx.ext, !dbg !7656
  %add.ptr70 = getelementptr inbounds i8, i8* %add.ptr69, i64 -3, !dbg !7657
  store i8* %add.ptr70, i8** %cp, align 8, !dbg !7658
  %call71 = call i32 @strcmp(i8* %add.ptr70, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103.281, i64 0, i64 0)), !dbg !7659
  %cmp72 = icmp eq i32 %call71, 0, !dbg !7660
  br label %land.end74

land.end74:                                       ; preds = %land.rhs68, %while.cond63
  %45 = phi i1 [ false, %while.cond63 ], [ %cmp72, %land.rhs68 ], !dbg !7661
  br i1 %45, label %while.body75, label %while.end93, !dbg !7648

while.body75:                                     ; preds = %land.end74
  %46 = load i8*, i8** %cp, align 8, !dbg !7662
  %add.ptr76 = getelementptr inbounds i8, i8* %46, i64 -1, !dbg !7665
  store i8* %add.ptr76, i8** %cp2, align 8, !dbg !7666
  br label %for.cond77, !dbg !7667

for.cond77:                                       ; preds = %for.inc86, %while.body75
  %47 = load i8*, i8** %cp2, align 8, !dbg !7668
  %48 = load i8*, i8** %file.addr, align 8, !dbg !7670
  %cmp78 = icmp uge i8* %47, %48, !dbg !7671
  br i1 %cmp78, label %land.rhs80, label %land.end84, !dbg !7672

land.rhs80:                                       ; preds = %for.cond77
  %49 = load i8*, i8** %cp2, align 8, !dbg !7673
  %50 = load i8, i8* %49, align 1, !dbg !7674
  %conv81 = sext i8 %50 to i32, !dbg !7674
  %cmp82 = icmp ne i32 %conv81, 47, !dbg !7675
  br label %land.end84

land.end84:                                       ; preds = %land.rhs80, %for.cond77
  %51 = phi i1 [ false, %for.cond77 ], [ %cmp82, %land.rhs80 ], !dbg !7676
  br i1 %51, label %for.body85, label %for.end88, !dbg !7677

for.body85:                                       ; preds = %land.end84
  br label %for.inc86, !dbg !7678

for.inc86:                                        ; preds = %for.body85
  %52 = load i8*, i8** %cp2, align 8, !dbg !7679
  %incdec.ptr87 = getelementptr inbounds i8, i8* %52, i32 -1, !dbg !7679
  store i8* %incdec.ptr87, i8** %cp2, align 8, !dbg !7679
  br label %for.cond77, !dbg !7680, !llvm.loop !7681

for.end88:                                        ; preds = %land.end84
  %53 = load i8*, i8** %cp2, align 8, !dbg !7683
  %54 = load i8*, i8** %file.addr, align 8, !dbg !7685
  %cmp89 = icmp ult i8* %53, %54, !dbg !7686
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !7687

if.then91:                                        ; preds = %for.end88
  br label %while.end93, !dbg !7688

if.end92:                                         ; preds = %for.end88
  %55 = load i8*, i8** %cp2, align 8, !dbg !7689
  store i8 0, i8* %55, align 1, !dbg !7690
  br label %while.cond63, !dbg !7648, !llvm.loop !7691

while.end93:                                      ; preds = %if.then91, %land.end74
  ret void, !dbg !7693
}

declare i64 @tdate_parse(i8*) #3

declare i64 @atoll(i8*) #3

; Function Attrs: nobuiltin nounwind readonly
declare i32 @isdigit(i32) #12

declare i64 @atol(i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @vhost_map(%struct.httpd_conn* %hc) #0 !dbg !706 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %sa = alloca %union.httpd_sockaddr, align 8
  %sz = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %len = alloca i32, align 4
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !7694, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.declare(metadata %union.httpd_sockaddr* %sa, metadata !7696, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.declare(metadata i32* %sz, metadata !7698, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !7700, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7702, metadata !DIExpression()), !dbg !7703
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7704
  %reqhost = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 27, !dbg !7706
  %1 = load i8*, i8** %reqhost, align 8, !dbg !7706
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !7704
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7704
  %conv = sext i8 %2 to i32, !dbg !7704
  %cmp = icmp ne i32 %conv, 0, !dbg !7707
  br i1 %cmp, label %if.then, label %if.else, !dbg !7708

if.then:                                          ; preds = %entry
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7709
  %reqhost2 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %3, i32 0, i32 27, !dbg !7710
  %4 = load i8*, i8** %reqhost2, align 8, !dbg !7710
  %5 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7711
  %hostname = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %5, i32 0, i32 50, !dbg !7712
  store i8* %4, i8** %hostname, align 8, !dbg !7713
  br label %if.end18, !dbg !7711

if.else:                                          ; preds = %entry
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7714
  %hdrhost = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 28, !dbg !7716
  %7 = load i8*, i8** %hdrhost, align 8, !dbg !7716
  %arrayidx3 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !7714
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !7714
  %conv4 = sext i8 %8 to i32, !dbg !7714
  %cmp5 = icmp ne i32 %conv4, 0, !dbg !7717
  br i1 %cmp5, label %if.then7, label %if.else10, !dbg !7718

if.then7:                                         ; preds = %if.else
  %9 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7719
  %hdrhost8 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %9, i32 0, i32 28, !dbg !7720
  %10 = load i8*, i8** %hdrhost8, align 8, !dbg !7720
  %11 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7721
  %hostname9 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %11, i32 0, i32 50, !dbg !7722
  store i8* %10, i8** %hostname9, align 8, !dbg !7723
  br label %if.end17, !dbg !7721

if.else10:                                        ; preds = %if.else
  store i32 128, i32* %sz, align 4, !dbg !7724
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7726
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 60, !dbg !7728
  %13 = load i32, i32* %conn_fd, align 8, !dbg !7728
  %sa11 = bitcast %union.httpd_sockaddr* %sa to %struct.sockaddr*, !dbg !7729
  %call = call i32 @"\01_getsockname"(i32 %13, %struct.sockaddr* %sa11, i32* %sz), !dbg !7730
  %cmp12 = icmp slt i32 %call, 0, !dbg !7731
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !7732

if.then14:                                        ; preds = %if.else10
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90.274, i64 0, i64 0)), !dbg !7733
  store i32 0, i32* %retval, align 4, !dbg !7735
  br label %return, !dbg !7735

if.end:                                           ; preds = %if.else10
  %call15 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %sa), !dbg !7736
  %14 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7737
  %hostname16 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %14, i32 0, i32 50, !dbg !7738
  store i8* %call15, i8** %hostname16, align 8, !dbg !7739
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  %15 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7740
  %hostname19 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %15, i32 0, i32 50, !dbg !7742
  %16 = load i8*, i8** %hostname19, align 8, !dbg !7742
  store i8* %16, i8** %cp1, align 8, !dbg !7743
  br label %for.cond, !dbg !7744

for.cond:                                         ; preds = %for.inc, %if.end18
  %17 = load i8*, i8** %cp1, align 8, !dbg !7745
  %18 = load i8, i8* %17, align 1, !dbg !7747
  %conv20 = sext i8 %18 to i32, !dbg !7747
  %cmp21 = icmp ne i32 %conv20, 0, !dbg !7748
  br i1 %cmp21, label %for.body, label %for.end, !dbg !7749

for.body:                                         ; preds = %for.cond
  %19 = load i8*, i8** %cp1, align 8, !dbg !7750
  %20 = load i8, i8* %19, align 1, !dbg !7752
  %conv23 = sext i8 %20 to i32, !dbg !7752
  %call24 = call i32 @isupper(i32 %conv23) #18, !dbg !7753
  %tobool = icmp ne i32 %call24, 0, !dbg !7753
  br i1 %tobool, label %if.then25, label %if.end29, !dbg !7754

if.then25:                                        ; preds = %for.body
  %21 = load i8*, i8** %cp1, align 8, !dbg !7755
  %22 = load i8, i8* %21, align 1, !dbg !7756
  %conv26 = sext i8 %22 to i32, !dbg !7756
  %call27 = call i32 @tolower(i32 %conv26) #18, !dbg !7757
  %conv28 = trunc i32 %call27 to i8, !dbg !7757
  %23 = load i8*, i8** %cp1, align 8, !dbg !7758
  store i8 %conv28, i8* %23, align 1, !dbg !7759
  br label %if.end29, !dbg !7760

if.end29:                                         ; preds = %if.then25, %for.body
  br label %for.inc, !dbg !7761

for.inc:                                          ; preds = %if.end29
  %24 = load i8*, i8** %cp1, align 8, !dbg !7762
  %incdec.ptr = getelementptr inbounds i8, i8* %24, i32 1, !dbg !7762
  store i8* %incdec.ptr, i8** %cp1, align 8, !dbg !7762
  br label %for.cond, !dbg !7763, !llvm.loop !7764

for.end:                                          ; preds = %for.cond
  %25 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7766
  %tildemapped = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %25, i32 0, i32 54, !dbg !7768
  %26 = load i32, i32* %tildemapped, align 4, !dbg !7768
  %tobool30 = icmp ne i32 %26, 0, !dbg !7766
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !7769

if.then31:                                        ; preds = %for.end
  store i32 1, i32* %retval, align 4, !dbg !7770
  br label %return, !dbg !7770

if.end32:                                         ; preds = %for.end
  %27 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7771
  %hostdir = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %27, i32 0, i32 29, !dbg !7772
  %28 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7773
  %maxhostdir = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %28, i32 0, i32 42, !dbg !7774
  %29 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7775
  %hostname33 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %29, i32 0, i32 50, !dbg !7776
  %30 = load i8*, i8** %hostname33, align 8, !dbg !7776
  %call34 = call i64 @strlen(i8* %30), !dbg !7777
  call void @httpd_realloc_str(i8** %hostdir, i64* %maxhostdir, i64 %call34), !dbg !7778
  %31 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7779
  %hostdir35 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %31, i32 0, i32 29, !dbg !7779
  %32 = load i8*, i8** %hostdir35, align 8, !dbg !7779
  %33 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7779
  %hostname36 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %33, i32 0, i32 50, !dbg !7779
  %34 = load i8*, i8** %hostname36, align 8, !dbg !7779
  %35 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7779
  %hostdir37 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %35, i32 0, i32 29, !dbg !7779
  %36 = load i8*, i8** %hostdir37, align 8, !dbg !7779
  %37 = call i64 @llvm.objectsize.i64.p0i8(i8* %36, i1 false, i1 true, i1 false), !dbg !7779
  %call38 = call i8* @__strcpy_chk(i8* %32, i8* %34, i64 %37) #11, !dbg !7779
  %38 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7780
  %expnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %38, i32 0, i32 16, !dbg !7781
  %39 = load i8*, i8** %expnfilename, align 8, !dbg !7781
  %call39 = call i64 @strlen(i8* %39), !dbg !7782
  %conv40 = trunc i64 %call39 to i32, !dbg !7782
  store i32 %conv40, i32* %len, align 4, !dbg !7783
  %40 = load i32, i32* %len, align 4, !dbg !7784
  %conv41 = sext i32 %40 to i64, !dbg !7784
  call void @httpd_realloc_str(i8** @vhost_map.tempfilename, i64* @vhost_map.maxtempfilename, i64 %conv41), !dbg !7785
  %41 = load i8*, i8** @vhost_map.tempfilename, align 8, !dbg !7786
  %42 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7786
  %expnfilename42 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %42, i32 0, i32 16, !dbg !7786
  %43 = load i8*, i8** %expnfilename42, align 8, !dbg !7786
  %44 = load i8*, i8** @vhost_map.tempfilename, align 8, !dbg !7786
  %45 = call i64 @llvm.objectsize.i64.p0i8(i8* %44, i1 false, i1 true, i1 false), !dbg !7786
  %call43 = call i8* @__strcpy_chk(i8* %41, i8* %43, i64 %45) #11, !dbg !7786
  %46 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7787
  %expnfilename44 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %46, i32 0, i32 16, !dbg !7788
  %47 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7789
  %maxexpnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %47, i32 0, i32 35, !dbg !7790
  %48 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7791
  %hostdir45 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %48, i32 0, i32 29, !dbg !7792
  %49 = load i8*, i8** %hostdir45, align 8, !dbg !7792
  %call46 = call i64 @strlen(i8* %49), !dbg !7793
  %add = add i64 %call46, 1, !dbg !7794
  %50 = load i32, i32* %len, align 4, !dbg !7795
  %conv47 = sext i32 %50 to i64, !dbg !7795
  %add48 = add i64 %add, %conv47, !dbg !7796
  call void @httpd_realloc_str(i8** %expnfilename44, i64* %maxexpnfilename, i64 %add48), !dbg !7797
  %51 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7798
  %expnfilename49 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %51, i32 0, i32 16, !dbg !7798
  %52 = load i8*, i8** %expnfilename49, align 8, !dbg !7798
  %53 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7798
  %hostdir50 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %53, i32 0, i32 29, !dbg !7798
  %54 = load i8*, i8** %hostdir50, align 8, !dbg !7798
  %55 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7798
  %expnfilename51 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %55, i32 0, i32 16, !dbg !7798
  %56 = load i8*, i8** %expnfilename51, align 8, !dbg !7798
  %57 = call i64 @llvm.objectsize.i64.p0i8(i8* %56, i1 false, i1 true, i1 false), !dbg !7798
  %call52 = call i8* @__strcpy_chk(i8* %52, i8* %54, i64 %57) #11, !dbg !7798
  %58 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7799
  %expnfilename53 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %58, i32 0, i32 16, !dbg !7799
  %59 = load i8*, i8** %expnfilename53, align 8, !dbg !7799
  %60 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7799
  %expnfilename54 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %60, i32 0, i32 16, !dbg !7799
  %61 = load i8*, i8** %expnfilename54, align 8, !dbg !7799
  %62 = call i64 @llvm.objectsize.i64.p0i8(i8* %61, i1 false, i1 true, i1 false), !dbg !7799
  %call55 = call i8* @__strcat_chk(i8* %59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.91.275, i64 0, i64 0), i64 %62) #11, !dbg !7799
  %63 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7800
  %expnfilename56 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %63, i32 0, i32 16, !dbg !7800
  %64 = load i8*, i8** %expnfilename56, align 8, !dbg !7800
  %65 = load i8*, i8** @vhost_map.tempfilename, align 8, !dbg !7800
  %66 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !7800
  %expnfilename57 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %66, i32 0, i32 16, !dbg !7800
  %67 = load i8*, i8** %expnfilename57, align 8, !dbg !7800
  %68 = call i64 @llvm.objectsize.i64.p0i8(i8* %67, i1 false, i1 true, i1 false), !dbg !7800
  %call58 = call i8* @__strcat_chk(i8* %64, i8* %65, i64 %68) #11, !dbg !7800
  store i32 1, i32* %retval, align 4, !dbg !7801
  br label %return, !dbg !7801

return:                                           ; preds = %if.end32, %if.then31, %if.then14
  %69 = load i32, i32* %retval, align 4, !dbg !7802
  ret i32 %69, !dbg !7802
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i8* @expand_symlinks(i8* %path, i8** %restP, i32 %no_symlink_check, i32 %tildemapped) #0 !dbg !807 {
entry:
  %retval = alloca i8*, align 8
  %path.addr = alloca i8*, align 8
  %restP.addr = alloca i8**, align 8
  %no_symlink_check.addr = alloca i32, align 4
  %tildemapped.addr = alloca i32, align 4
  %lnk = alloca [5000 x i8], align 16
  %checkedlen = alloca i64, align 8
  %restlen = alloca i64, align 8
  %linklen = alloca i64, align 8
  %prevcheckedlen = alloca i64, align 8
  %prevrestlen = alloca i64, align 8
  %nlinks = alloca i32, align 4
  %i = alloca i32, align 4
  %r = alloca i8*, align 8
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %sb = alloca %struct.stat, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !7803, metadata !DIExpression()), !dbg !7804
  store i8** %restP, i8*** %restP.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %restP.addr, metadata !7805, metadata !DIExpression()), !dbg !7806
  store i32 %no_symlink_check, i32* %no_symlink_check.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %no_symlink_check.addr, metadata !7807, metadata !DIExpression()), !dbg !7808
  store i32 %tildemapped, i32* %tildemapped.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tildemapped.addr, metadata !7809, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.declare(metadata [5000 x i8]* %lnk, metadata !7811, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.declare(metadata i64* %checkedlen, metadata !7813, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.declare(metadata i64* %restlen, metadata !7815, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.declare(metadata i64* %linklen, metadata !7817, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.declare(metadata i64* %prevcheckedlen, metadata !7819, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.declare(metadata i64* %prevrestlen, metadata !7821, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.declare(metadata i32* %nlinks, metadata !7823, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7825, metadata !DIExpression()), !dbg !7826
  call void @llvm.dbg.declare(metadata i8** %r, metadata !7827, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !7829, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !7831, metadata !DIExpression()), !dbg !7832
  %0 = load i32, i32* %no_symlink_check.addr, align 4, !dbg !7833
  %tobool = icmp ne i32 %0, 0, !dbg !7833
  br i1 %tobool, label %if.then, label %if.end9, !dbg !7835

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !7836, metadata !DIExpression()), !dbg !7838
  %1 = load i8*, i8** %path.addr, align 8, !dbg !7839
  %call = call i32 @"\01_stat$INODE64"(i8* %1, %struct.stat* %sb), !dbg !7841
  %cmp = icmp ne i32 %call, -1, !dbg !7842
  br i1 %cmp, label %if.then1, label %if.end, !dbg !7843

if.then1:                                         ; preds = %if.then
  %2 = load i8*, i8** %path.addr, align 8, !dbg !7844
  %call2 = call i64 @strlen(i8* %2), !dbg !7846
  store i64 %call2, i64* %checkedlen, align 8, !dbg !7847
  %3 = load i64, i64* %checkedlen, align 8, !dbg !7848
  call void @httpd_realloc_str(i8** @expand_symlinks.checked, i64* @expand_symlinks.maxchecked, i64 %3), !dbg !7849
  %4 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7850
  %5 = load i8*, i8** %path.addr, align 8, !dbg !7850
  %6 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7850
  %7 = call i64 @llvm.objectsize.i64.p0i8(i8* %6, i1 false, i1 true, i1 false), !dbg !7850
  %call3 = call i8* @__strcpy_chk(i8* %4, i8* %5, i64 %7) #11, !dbg !7850
  br label %while.cond, !dbg !7851

while.cond:                                       ; preds = %while.body, %if.then1
  %8 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7852
  %9 = load i64, i64* %checkedlen, align 8, !dbg !7853
  %sub = sub i64 %9, 1, !dbg !7854
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 %sub, !dbg !7852
  %10 = load i8, i8* %arrayidx, align 1, !dbg !7852
  %conv = sext i8 %10 to i32, !dbg !7852
  %cmp4 = icmp eq i32 %conv, 47, !dbg !7855
  br i1 %cmp4, label %while.body, label %while.end, !dbg !7851

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7856
  %12 = load i64, i64* %checkedlen, align 8, !dbg !7858
  %sub6 = sub i64 %12, 1, !dbg !7859
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 %sub6, !dbg !7856
  store i8 0, i8* %arrayidx7, align 1, !dbg !7860
  %13 = load i64, i64* %checkedlen, align 8, !dbg !7861
  %dec = add i64 %13, -1, !dbg !7861
  store i64 %dec, i64* %checkedlen, align 8, !dbg !7861
  br label %while.cond, !dbg !7851, !llvm.loop !7862

while.end:                                        ; preds = %while.cond
  call void @httpd_realloc_str(i8** @expand_symlinks.rest, i64* @expand_symlinks.maxrest, i64 0), !dbg !7864
  %14 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !7865
  %arrayidx8 = getelementptr inbounds i8, i8* %14, i64 0, !dbg !7865
  store i8 0, i8* %arrayidx8, align 1, !dbg !7866
  %15 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !7867
  %16 = load i8**, i8*** %restP.addr, align 8, !dbg !7868
  store i8* %15, i8** %16, align 8, !dbg !7869
  %17 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7870
  store i8* %17, i8** %retval, align 8, !dbg !7871
  br label %return, !dbg !7871

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !7872

if.end9:                                          ; preds = %if.end, %entry
  call void @httpd_realloc_str(i8** @expand_symlinks.checked, i64* @expand_symlinks.maxchecked, i64 1), !dbg !7873
  %18 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7874
  %arrayidx10 = getelementptr inbounds i8, i8* %18, i64 0, !dbg !7874
  store i8 0, i8* %arrayidx10, align 1, !dbg !7875
  store i64 0, i64* %checkedlen, align 8, !dbg !7876
  %19 = load i8*, i8** %path.addr, align 8, !dbg !7877
  %call11 = call i64 @strlen(i8* %19), !dbg !7878
  store i64 %call11, i64* %restlen, align 8, !dbg !7879
  %20 = load i64, i64* %restlen, align 8, !dbg !7880
  call void @httpd_realloc_str(i8** @expand_symlinks.rest, i64* @expand_symlinks.maxrest, i64 %20), !dbg !7881
  %21 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !7882
  %22 = load i8*, i8** %path.addr, align 8, !dbg !7882
  %23 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !7882
  %24 = call i64 @llvm.objectsize.i64.p0i8(i8* %23, i1 false, i1 true, i1 false), !dbg !7882
  %call12 = call i8* @__strcpy_chk(i8* %21, i8* %22, i64 %24) #11, !dbg !7882
  %25 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !7883
  %26 = load i64, i64* %restlen, align 8, !dbg !7885
  %sub13 = sub i64 %26, 1, !dbg !7886
  %arrayidx14 = getelementptr inbounds i8, i8* %25, i64 %sub13, !dbg !7883
  %27 = load i8, i8* %arrayidx14, align 1, !dbg !7883
  %conv15 = sext i8 %27 to i32, !dbg !7883
  %cmp16 = icmp eq i32 %conv15, 47, !dbg !7887
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !7888

if.then18:                                        ; preds = %if.end9
  %28 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !7889
  %29 = load i64, i64* %restlen, align 8, !dbg !7890
  %dec19 = add i64 %29, -1, !dbg !7890
  store i64 %dec19, i64* %restlen, align 8, !dbg !7890
  %arrayidx20 = getelementptr inbounds i8, i8* %28, i64 %dec19, !dbg !7889
  store i8 0, i8* %arrayidx20, align 1, !dbg !7891
  br label %if.end21, !dbg !7889

if.end21:                                         ; preds = %if.then18, %if.end9
  %30 = load i32, i32* %tildemapped.addr, align 4, !dbg !7892
  %tobool22 = icmp ne i32 %30, 0, !dbg !7892
  br i1 %tobool22, label %if.end36, label %if.then23, !dbg !7894

if.then23:                                        ; preds = %if.end21
  br label %while.cond24, !dbg !7895

while.cond24:                                     ; preds = %while.body29, %if.then23
  %31 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !7896
  %arrayidx25 = getelementptr inbounds i8, i8* %31, i64 0, !dbg !7896
  %32 = load i8, i8* %arrayidx25, align 1, !dbg !7896
  %conv26 = sext i8 %32 to i32, !dbg !7896
  %cmp27 = icmp eq i32 %conv26, 47, !dbg !7897
  br i1 %cmp27, label %while.body29, label %while.end35, !dbg !7895

while.body29:                                     ; preds = %while.cond24
  %33 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !7898
  %34 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !7898
  %arrayidx30 = getelementptr inbounds i8, i8* %34, i64 1, !dbg !7898
  %35 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !7898
  %arrayidx31 = getelementptr inbounds i8, i8* %35, i64 1, !dbg !7898
  %call32 = call i64 @strlen(i8* %arrayidx31), !dbg !7898
  %add = add i64 %call32, 1, !dbg !7898
  %36 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !7898
  %37 = call i64 @llvm.objectsize.i64.p0i8(i8* %36, i1 false, i1 true, i1 false), !dbg !7898
  %call33 = call i8* @__memmove_chk(i8* %33, i8* %arrayidx30, i64 %add, i64 %37) #11, !dbg !7898
  %38 = load i64, i64* %restlen, align 8, !dbg !7900
  %dec34 = add i64 %38, -1, !dbg !7900
  store i64 %dec34, i64* %restlen, align 8, !dbg !7900
  br label %while.cond24, !dbg !7895, !llvm.loop !7901

while.end35:                                      ; preds = %while.cond24
  br label %if.end36, !dbg !7895

if.end36:                                         ; preds = %while.end35, %if.end21
  %39 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !7903
  store i8* %39, i8** %r, align 8, !dbg !7904
  store i32 0, i32* %nlinks, align 4, !dbg !7905
  br label %while.cond37, !dbg !7906

while.cond37:                                     ; preds = %if.end238, %if.then165, %if.then156, %if.end36
  %40 = load i64, i64* %restlen, align 8, !dbg !7907
  %cmp38 = icmp ugt i64 %40, 0, !dbg !7908
  br i1 %cmp38, label %while.body40, label %while.end239, !dbg !7906

while.body40:                                     ; preds = %while.cond37
  %41 = load i64, i64* %checkedlen, align 8, !dbg !7909
  store i64 %41, i64* %prevcheckedlen, align 8, !dbg !7911
  %42 = load i64, i64* %restlen, align 8, !dbg !7912
  store i64 %42, i64* %prevrestlen, align 8, !dbg !7913
  %43 = load i8*, i8** %r, align 8, !dbg !7914
  %call41 = call i8* @strchr(i8* %43, i32 47), !dbg !7915
  store i8* %call41, i8** %cp1, align 8, !dbg !7916
  %44 = load i8*, i8** %cp1, align 8, !dbg !7917
  %cmp42 = icmp ne i8* %44, null, !dbg !7919
  br i1 %cmp42, label %if.then44, label %if.else106, !dbg !7920

if.then44:                                        ; preds = %while.body40
  %45 = load i8*, i8** %cp1, align 8, !dbg !7921
  %46 = load i8*, i8** %r, align 8, !dbg !7923
  %sub.ptr.lhs.cast = ptrtoint i8* %45 to i64, !dbg !7924
  %sub.ptr.rhs.cast = ptrtoint i8* %46 to i64, !dbg !7924
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7924
  %conv45 = trunc i64 %sub.ptr.sub to i32, !dbg !7921
  store i32 %conv45, i32* %i, align 4, !dbg !7925
  %47 = load i32, i32* %i, align 4, !dbg !7926
  %cmp46 = icmp eq i32 %47, 0, !dbg !7928
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !7929

if.then48:                                        ; preds = %if.then44
  %48 = load i64, i64* %checkedlen, align 8, !dbg !7930
  %add49 = add i64 %48, 1, !dbg !7932
  call void @httpd_realloc_str(i8** @expand_symlinks.checked, i64* @expand_symlinks.maxchecked, i64 %add49), !dbg !7933
  %49 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7934
  %50 = load i64, i64* %checkedlen, align 8, !dbg !7934
  %arrayidx50 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !7934
  %51 = load i8*, i8** %r, align 8, !dbg !7934
  %52 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7934
  %53 = load i64, i64* %checkedlen, align 8, !dbg !7934
  %arrayidx51 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !7934
  %54 = call i64 @llvm.objectsize.i64.p0i8(i8* %arrayidx51, i1 false, i1 true, i1 false), !dbg !7934
  %call52 = call i8* @__strncpy_chk(i8* %arrayidx50, i8* %51, i64 1, i64 %54) #11, !dbg !7934
  %55 = load i64, i64* %checkedlen, align 8, !dbg !7935
  %add53 = add i64 %55, 1, !dbg !7935
  store i64 %add53, i64* %checkedlen, align 8, !dbg !7935
  br label %if.end100, !dbg !7936

if.else:                                          ; preds = %if.then44
  %56 = load i8*, i8** %r, align 8, !dbg !7937
  %57 = load i32, i32* %i, align 4, !dbg !7939
  %cmp54 = icmp sgt i32 %57, 2, !dbg !7939
  br i1 %cmp54, label %cond.true, label %cond.false, !dbg !7939

cond.true:                                        ; preds = %if.else
  %58 = load i32, i32* %i, align 4, !dbg !7939
  br label %cond.end, !dbg !7939

cond.false:                                       ; preds = %if.else
  br label %cond.end, !dbg !7939

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %58, %cond.true ], [ 2, %cond.false ], !dbg !7939
  %conv56 = sext i32 %cond to i64, !dbg !7939
  %call57 = call i32 @strncmp(i8* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94.269, i64 0, i64 0), i64 %conv56), !dbg !7940
  %cmp58 = icmp eq i32 %call57, 0, !dbg !7941
  br i1 %cmp58, label %if.then60, label %if.else79, !dbg !7942

if.then60:                                        ; preds = %cond.end
  %59 = load i64, i64* %checkedlen, align 8, !dbg !7943
  %cmp61 = icmp ne i64 %59, 0, !dbg !7946
  br i1 %cmp61, label %if.then63, label %if.end78, !dbg !7947

if.then63:                                        ; preds = %if.then60
  %60 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7948
  %call64 = call i8* @strrchr(i8* %60, i32 47), !dbg !7950
  store i8* %call64, i8** %cp2, align 8, !dbg !7951
  %61 = load i8*, i8** %cp2, align 8, !dbg !7952
  %cmp65 = icmp eq i8* %61, null, !dbg !7954
  br i1 %cmp65, label %if.then67, label %if.else68, !dbg !7955

if.then67:                                        ; preds = %if.then63
  store i64 0, i64* %checkedlen, align 8, !dbg !7956
  br label %if.end77, !dbg !7957

if.else68:                                        ; preds = %if.then63
  %62 = load i8*, i8** %cp2, align 8, !dbg !7958
  %63 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7960
  %cmp69 = icmp eq i8* %62, %63, !dbg !7961
  br i1 %cmp69, label %if.then71, label %if.else72, !dbg !7962

if.then71:                                        ; preds = %if.else68
  store i64 1, i64* %checkedlen, align 8, !dbg !7963
  br label %if.end76, !dbg !7964

if.else72:                                        ; preds = %if.else68
  %64 = load i8*, i8** %cp2, align 8, !dbg !7965
  %65 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7966
  %sub.ptr.lhs.cast73 = ptrtoint i8* %64 to i64, !dbg !7967
  %sub.ptr.rhs.cast74 = ptrtoint i8* %65 to i64, !dbg !7967
  %sub.ptr.sub75 = sub i64 %sub.ptr.lhs.cast73, %sub.ptr.rhs.cast74, !dbg !7967
  store i64 %sub.ptr.sub75, i64* %checkedlen, align 8, !dbg !7968
  br label %if.end76

if.end76:                                         ; preds = %if.else72, %if.then71
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then67
  br label %if.end78, !dbg !7969

if.end78:                                         ; preds = %if.end77, %if.then60
  br label %if.end99, !dbg !7970

if.else79:                                        ; preds = %cond.end
  %66 = load i64, i64* %checkedlen, align 8, !dbg !7971
  %add80 = add i64 %66, 1, !dbg !7973
  %67 = load i32, i32* %i, align 4, !dbg !7974
  %conv81 = sext i32 %67 to i64, !dbg !7974
  %add82 = add i64 %add80, %conv81, !dbg !7975
  call void @httpd_realloc_str(i8** @expand_symlinks.checked, i64* @expand_symlinks.maxchecked, i64 %add82), !dbg !7976
  %68 = load i64, i64* %checkedlen, align 8, !dbg !7977
  %cmp83 = icmp ugt i64 %68, 0, !dbg !7979
  br i1 %cmp83, label %land.lhs.true, label %if.end92, !dbg !7980

land.lhs.true:                                    ; preds = %if.else79
  %69 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7981
  %70 = load i64, i64* %checkedlen, align 8, !dbg !7982
  %sub85 = sub i64 %70, 1, !dbg !7983
  %arrayidx86 = getelementptr inbounds i8, i8* %69, i64 %sub85, !dbg !7981
  %71 = load i8, i8* %arrayidx86, align 1, !dbg !7981
  %conv87 = sext i8 %71 to i32, !dbg !7981
  %cmp88 = icmp ne i32 %conv87, 47, !dbg !7984
  br i1 %cmp88, label %if.then90, label %if.end92, !dbg !7985

if.then90:                                        ; preds = %land.lhs.true
  %72 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7986
  %73 = load i64, i64* %checkedlen, align 8, !dbg !7987
  %inc = add i64 %73, 1, !dbg !7987
  store i64 %inc, i64* %checkedlen, align 8, !dbg !7987
  %arrayidx91 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !7986
  store i8 47, i8* %arrayidx91, align 1, !dbg !7988
  br label %if.end92, !dbg !7986

if.end92:                                         ; preds = %if.then90, %land.lhs.true, %if.else79
  %74 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7989
  %75 = load i64, i64* %checkedlen, align 8, !dbg !7989
  %arrayidx93 = getelementptr inbounds i8, i8* %74, i64 %75, !dbg !7989
  %76 = load i8*, i8** %r, align 8, !dbg !7989
  %77 = load i32, i32* %i, align 4, !dbg !7989
  %conv94 = sext i32 %77 to i64, !dbg !7989
  %78 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7989
  %79 = load i64, i64* %checkedlen, align 8, !dbg !7989
  %arrayidx95 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !7989
  %80 = call i64 @llvm.objectsize.i64.p0i8(i8* %arrayidx95, i1 false, i1 true, i1 false), !dbg !7989
  %call96 = call i8* @__strncpy_chk(i8* %arrayidx93, i8* %76, i64 %conv94, i64 %80) #11, !dbg !7989
  %81 = load i32, i32* %i, align 4, !dbg !7990
  %conv97 = sext i32 %81 to i64, !dbg !7990
  %82 = load i64, i64* %checkedlen, align 8, !dbg !7991
  %add98 = add i64 %82, %conv97, !dbg !7991
  store i64 %add98, i64* %checkedlen, align 8, !dbg !7991
  br label %if.end99

if.end99:                                         ; preds = %if.end92, %if.end78
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then48
  %83 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !7992
  %84 = load i64, i64* %checkedlen, align 8, !dbg !7993
  %arrayidx101 = getelementptr inbounds i8, i8* %83, i64 %84, !dbg !7992
  store i8 0, i8* %arrayidx101, align 1, !dbg !7994
  %85 = load i32, i32* %i, align 4, !dbg !7995
  %add102 = add nsw i32 %85, 1, !dbg !7996
  %86 = load i8*, i8** %r, align 8, !dbg !7997
  %idx.ext = sext i32 %add102 to i64, !dbg !7997
  %add.ptr = getelementptr inbounds i8, i8* %86, i64 %idx.ext, !dbg !7997
  store i8* %add.ptr, i8** %r, align 8, !dbg !7997
  %87 = load i32, i32* %i, align 4, !dbg !7998
  %add103 = add nsw i32 %87, 1, !dbg !7999
  %conv104 = sext i32 %add103 to i64, !dbg !7998
  %88 = load i64, i64* %restlen, align 8, !dbg !8000
  %sub105 = sub i64 %88, %conv104, !dbg !8000
  store i64 %sub105, i64* %restlen, align 8, !dbg !8000
  br label %if.end151, !dbg !8001

if.else106:                                       ; preds = %while.body40
  %89 = load i8*, i8** %r, align 8, !dbg !8002
  %call107 = call i32 @strcmp(i8* %89, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94.269, i64 0, i64 0)), !dbg !8005
  %cmp108 = icmp eq i32 %call107, 0, !dbg !8006
  br i1 %cmp108, label %if.then110, label %if.else130, !dbg !8007

if.then110:                                       ; preds = %if.else106
  %90 = load i64, i64* %checkedlen, align 8, !dbg !8008
  %cmp111 = icmp ne i64 %90, 0, !dbg !8011
  br i1 %cmp111, label %if.then113, label %if.end129, !dbg !8012

if.then113:                                       ; preds = %if.then110
  %91 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8013
  %call114 = call i8* @strrchr(i8* %91, i32 47), !dbg !8015
  store i8* %call114, i8** %cp2, align 8, !dbg !8016
  %92 = load i8*, i8** %cp2, align 8, !dbg !8017
  %cmp115 = icmp eq i8* %92, null, !dbg !8019
  br i1 %cmp115, label %if.then117, label %if.else118, !dbg !8020

if.then117:                                       ; preds = %if.then113
  store i64 0, i64* %checkedlen, align 8, !dbg !8021
  br label %if.end127, !dbg !8022

if.else118:                                       ; preds = %if.then113
  %93 = load i8*, i8** %cp2, align 8, !dbg !8023
  %94 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8025
  %cmp119 = icmp eq i8* %93, %94, !dbg !8026
  br i1 %cmp119, label %if.then121, label %if.else122, !dbg !8027

if.then121:                                       ; preds = %if.else118
  store i64 1, i64* %checkedlen, align 8, !dbg !8028
  br label %if.end126, !dbg !8029

if.else122:                                       ; preds = %if.else118
  %95 = load i8*, i8** %cp2, align 8, !dbg !8030
  %96 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8031
  %sub.ptr.lhs.cast123 = ptrtoint i8* %95 to i64, !dbg !8032
  %sub.ptr.rhs.cast124 = ptrtoint i8* %96 to i64, !dbg !8032
  %sub.ptr.sub125 = sub i64 %sub.ptr.lhs.cast123, %sub.ptr.rhs.cast124, !dbg !8032
  store i64 %sub.ptr.sub125, i64* %checkedlen, align 8, !dbg !8033
  br label %if.end126

if.end126:                                        ; preds = %if.else122, %if.then121
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then117
  %97 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8034
  %98 = load i64, i64* %checkedlen, align 8, !dbg !8035
  %arrayidx128 = getelementptr inbounds i8, i8* %97, i64 %98, !dbg !8034
  store i8 0, i8* %arrayidx128, align 1, !dbg !8036
  br label %if.end129, !dbg !8037

if.end129:                                        ; preds = %if.end127, %if.then110
  br label %if.end149, !dbg !8038

if.else130:                                       ; preds = %if.else106
  %99 = load i64, i64* %checkedlen, align 8, !dbg !8039
  %add131 = add i64 %99, 1, !dbg !8041
  %100 = load i64, i64* %restlen, align 8, !dbg !8042
  %add132 = add i64 %add131, %100, !dbg !8043
  call void @httpd_realloc_str(i8** @expand_symlinks.checked, i64* @expand_symlinks.maxchecked, i64 %add132), !dbg !8044
  %101 = load i64, i64* %checkedlen, align 8, !dbg !8045
  %cmp133 = icmp ugt i64 %101, 0, !dbg !8047
  br i1 %cmp133, label %land.lhs.true135, label %if.end144, !dbg !8048

land.lhs.true135:                                 ; preds = %if.else130
  %102 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8049
  %103 = load i64, i64* %checkedlen, align 8, !dbg !8050
  %sub136 = sub i64 %103, 1, !dbg !8051
  %arrayidx137 = getelementptr inbounds i8, i8* %102, i64 %sub136, !dbg !8049
  %104 = load i8, i8* %arrayidx137, align 1, !dbg !8049
  %conv138 = sext i8 %104 to i32, !dbg !8049
  %cmp139 = icmp ne i32 %conv138, 47, !dbg !8052
  br i1 %cmp139, label %if.then141, label %if.end144, !dbg !8053

if.then141:                                       ; preds = %land.lhs.true135
  %105 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8054
  %106 = load i64, i64* %checkedlen, align 8, !dbg !8055
  %inc142 = add i64 %106, 1, !dbg !8055
  store i64 %inc142, i64* %checkedlen, align 8, !dbg !8055
  %arrayidx143 = getelementptr inbounds i8, i8* %105, i64 %106, !dbg !8054
  store i8 47, i8* %arrayidx143, align 1, !dbg !8056
  br label %if.end144, !dbg !8054

if.end144:                                        ; preds = %if.then141, %land.lhs.true135, %if.else130
  %107 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8057
  %108 = load i64, i64* %checkedlen, align 8, !dbg !8057
  %arrayidx145 = getelementptr inbounds i8, i8* %107, i64 %108, !dbg !8057
  %109 = load i8*, i8** %r, align 8, !dbg !8057
  %110 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8057
  %111 = load i64, i64* %checkedlen, align 8, !dbg !8057
  %arrayidx146 = getelementptr inbounds i8, i8* %110, i64 %111, !dbg !8057
  %112 = call i64 @llvm.objectsize.i64.p0i8(i8* %arrayidx146, i1 false, i1 true, i1 false), !dbg !8057
  %call147 = call i8* @__strcpy_chk(i8* %arrayidx145, i8* %109, i64 %112) #11, !dbg !8057
  %113 = load i64, i64* %restlen, align 8, !dbg !8058
  %114 = load i64, i64* %checkedlen, align 8, !dbg !8059
  %add148 = add i64 %114, %113, !dbg !8059
  store i64 %add148, i64* %checkedlen, align 8, !dbg !8059
  br label %if.end149

if.end149:                                        ; preds = %if.end144, %if.end129
  %115 = load i64, i64* %restlen, align 8, !dbg !8060
  %116 = load i8*, i8** %r, align 8, !dbg !8061
  %add.ptr150 = getelementptr inbounds i8, i8* %116, i64 %115, !dbg !8061
  store i8* %add.ptr150, i8** %r, align 8, !dbg !8061
  store i64 0, i64* %restlen, align 8, !dbg !8062
  br label %if.end151

if.end151:                                        ; preds = %if.end149, %if.end100
  %117 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8063
  %arrayidx152 = getelementptr inbounds i8, i8* %117, i64 0, !dbg !8063
  %118 = load i8, i8* %arrayidx152, align 1, !dbg !8063
  %conv153 = sext i8 %118 to i32, !dbg !8063
  %cmp154 = icmp eq i32 %conv153, 0, !dbg !8065
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !8066

if.then156:                                       ; preds = %if.end151
  br label %while.cond37, !dbg !8067, !llvm.loop !8068

if.end157:                                        ; preds = %if.end151
  %119 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8070
  %arraydecay = getelementptr inbounds [5000 x i8], [5000 x i8]* %lnk, i64 0, i64 0, !dbg !8071
  %call158 = call i64 @readlink(i8* %119, i8* %arraydecay, i64 4999), !dbg !8072
  store i64 %call158, i64* %linklen, align 8, !dbg !8073
  %120 = load i64, i64* %linklen, align 8, !dbg !8074
  %cmp159 = icmp eq i64 %120, -1, !dbg !8076
  br i1 %cmp159, label %if.then161, label %if.end188, !dbg !8077

if.then161:                                       ; preds = %if.end157
  %call162 = call i32* @__error(), !dbg !8078
  %121 = load i32, i32* %call162, align 4, !dbg !8078
  %cmp163 = icmp eq i32 %121, 22, !dbg !8081
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !8082

if.then165:                                       ; preds = %if.then161
  br label %while.cond37, !dbg !8083, !llvm.loop !8068

if.end166:                                        ; preds = %if.then161
  %call167 = call i32* @__error(), !dbg !8084
  %122 = load i32, i32* %call167, align 4, !dbg !8084
  %cmp168 = icmp eq i32 %122, 13, !dbg !8086
  br i1 %cmp168, label %if.then177, label %lor.lhs.false, !dbg !8087

lor.lhs.false:                                    ; preds = %if.end166
  %call170 = call i32* @__error(), !dbg !8088
  %123 = load i32, i32* %call170, align 4, !dbg !8088
  %cmp171 = icmp eq i32 %123, 2, !dbg !8089
  br i1 %cmp171, label %if.then177, label %lor.lhs.false173, !dbg !8090

lor.lhs.false173:                                 ; preds = %lor.lhs.false
  %call174 = call i32* @__error(), !dbg !8091
  %124 = load i32, i32* %call174, align 4, !dbg !8091
  %cmp175 = icmp eq i32 %124, 20, !dbg !8092
  br i1 %cmp175, label %if.then177, label %if.end187, !dbg !8093

if.then177:                                       ; preds = %lor.lhs.false173, %lor.lhs.false, %if.end166
  %125 = load i8*, i8** %r, align 8, !dbg !8094
  %126 = load i64, i64* %prevrestlen, align 8, !dbg !8096
  %127 = load i64, i64* %restlen, align 8, !dbg !8097
  %sub178 = sub i64 %126, %127, !dbg !8098
  %idx.neg = sub i64 0, %sub178, !dbg !8099
  %add.ptr179 = getelementptr inbounds i8, i8* %125, i64 %idx.neg, !dbg !8099
  %128 = load i8**, i8*** %restP.addr, align 8, !dbg !8100
  store i8* %add.ptr179, i8** %128, align 8, !dbg !8101
  %129 = load i64, i64* %prevcheckedlen, align 8, !dbg !8102
  %cmp180 = icmp eq i64 %129, 0, !dbg !8104
  br i1 %cmp180, label %if.then182, label %if.else184, !dbg !8105

if.then182:                                       ; preds = %if.then177
  %130 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8106
  %131 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8106
  %132 = call i64 @llvm.objectsize.i64.p0i8(i8* %131, i1 false, i1 true, i1 false), !dbg !8106
  %call183 = call i8* @__strcpy_chk(i8* %130, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.242, i64 0, i64 0), i64 %132) #11, !dbg !8106
  br label %if.end186, !dbg !8107

if.else184:                                       ; preds = %if.then177
  %133 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8108
  %134 = load i64, i64* %prevcheckedlen, align 8, !dbg !8109
  %arrayidx185 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !8108
  store i8 0, i8* %arrayidx185, align 1, !dbg !8110
  br label %if.end186

if.end186:                                        ; preds = %if.else184, %if.then182
  %135 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8111
  store i8* %135, i8** %retval, align 8, !dbg !8112
  br label %return, !dbg !8112

if.end187:                                        ; preds = %lor.lhs.false173
  %136 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8113
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.95.270, i64 0, i64 0), i8* %136), !dbg !8114
  store i8* null, i8** %retval, align 8, !dbg !8115
  br label %return, !dbg !8115

if.end188:                                        ; preds = %if.end157
  %137 = load i32, i32* %nlinks, align 4, !dbg !8116
  %inc189 = add nsw i32 %137, 1, !dbg !8116
  store i32 %inc189, i32* %nlinks, align 4, !dbg !8116
  %138 = load i32, i32* %nlinks, align 4, !dbg !8117
  %cmp190 = icmp sgt i32 %138, 32, !dbg !8119
  br i1 %cmp190, label %if.then192, label %if.end193, !dbg !8120

if.then192:                                       ; preds = %if.end188
  %139 = load i8*, i8** %path.addr, align 8, !dbg !8121
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.96.271, i64 0, i64 0), i8* %139), !dbg !8123
  store i8* null, i8** %retval, align 8, !dbg !8124
  br label %return, !dbg !8124

if.end193:                                        ; preds = %if.end188
  %140 = load i64, i64* %linklen, align 8, !dbg !8125
  %arrayidx194 = getelementptr inbounds [5000 x i8], [5000 x i8]* %lnk, i64 0, i64 %140, !dbg !8126
  store i8 0, i8* %arrayidx194, align 1, !dbg !8127
  %141 = load i64, i64* %linklen, align 8, !dbg !8128
  %sub195 = sub i64 %141, 1, !dbg !8130
  %arrayidx196 = getelementptr inbounds [5000 x i8], [5000 x i8]* %lnk, i64 0, i64 %sub195, !dbg !8131
  %142 = load i8, i8* %arrayidx196, align 1, !dbg !8131
  %conv197 = sext i8 %142 to i32, !dbg !8131
  %cmp198 = icmp eq i32 %conv197, 47, !dbg !8132
  br i1 %cmp198, label %if.then200, label %if.end203, !dbg !8133

if.then200:                                       ; preds = %if.end193
  %143 = load i64, i64* %linklen, align 8, !dbg !8134
  %dec201 = add i64 %143, -1, !dbg !8134
  store i64 %dec201, i64* %linklen, align 8, !dbg !8134
  %arrayidx202 = getelementptr inbounds [5000 x i8], [5000 x i8]* %lnk, i64 0, i64 %dec201, !dbg !8135
  store i8 0, i8* %arrayidx202, align 1, !dbg !8136
  br label %if.end203, !dbg !8135

if.end203:                                        ; preds = %if.then200, %if.end193
  %144 = load i64, i64* %restlen, align 8, !dbg !8137
  %cmp204 = icmp ne i64 %144, 0, !dbg !8139
  br i1 %cmp204, label %if.then206, label %if.else226, !dbg !8140

if.then206:                                       ; preds = %if.end203
  %145 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !8141
  %146 = load i8*, i8** %r, align 8, !dbg !8141
  %147 = load i8*, i8** %r, align 8, !dbg !8141
  %call207 = call i64 @strlen(i8* %147), !dbg !8141
  %add208 = add i64 %call207, 1, !dbg !8141
  %148 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !8141
  %149 = call i64 @llvm.objectsize.i64.p0i8(i8* %148, i1 false, i1 true, i1 false), !dbg !8141
  %call209 = call i8* @__memmove_chk(i8* %145, i8* %146, i64 %add208, i64 %149) #11, !dbg !8141
  %150 = load i64, i64* %restlen, align 8, !dbg !8143
  %151 = load i64, i64* %linklen, align 8, !dbg !8144
  %add210 = add i64 %150, %151, !dbg !8145
  %add211 = add i64 %add210, 1, !dbg !8146
  call void @httpd_realloc_str(i8** @expand_symlinks.rest, i64* @expand_symlinks.maxrest, i64 %add211), !dbg !8147
  %152 = load i64, i64* %restlen, align 8, !dbg !8148
  %conv212 = trunc i64 %152 to i32, !dbg !8148
  store i32 %conv212, i32* %i, align 4, !dbg !8150
  br label %for.cond, !dbg !8151

for.cond:                                         ; preds = %for.inc, %if.then206
  %153 = load i32, i32* %i, align 4, !dbg !8152
  %cmp213 = icmp sge i32 %153, 0, !dbg !8154
  br i1 %cmp213, label %for.body, label %for.end, !dbg !8155

for.body:                                         ; preds = %for.cond
  %154 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !8156
  %155 = load i32, i32* %i, align 4, !dbg !8157
  %idxprom = sext i32 %155 to i64, !dbg !8156
  %arrayidx215 = getelementptr inbounds i8, i8* %154, i64 %idxprom, !dbg !8156
  %156 = load i8, i8* %arrayidx215, align 1, !dbg !8156
  %157 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !8158
  %158 = load i32, i32* %i, align 4, !dbg !8159
  %conv216 = sext i32 %158 to i64, !dbg !8159
  %159 = load i64, i64* %linklen, align 8, !dbg !8160
  %add217 = add i64 %conv216, %159, !dbg !8161
  %add218 = add i64 %add217, 1, !dbg !8162
  %arrayidx219 = getelementptr inbounds i8, i8* %157, i64 %add218, !dbg !8158
  store i8 %156, i8* %arrayidx219, align 1, !dbg !8163
  br label %for.inc, !dbg !8158

for.inc:                                          ; preds = %for.body
  %160 = load i32, i32* %i, align 4, !dbg !8164
  %dec220 = add nsw i32 %160, -1, !dbg !8164
  store i32 %dec220, i32* %i, align 4, !dbg !8164
  br label %for.cond, !dbg !8165, !llvm.loop !8166

for.end:                                          ; preds = %for.cond
  %161 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !8168
  %arraydecay221 = getelementptr inbounds [5000 x i8], [5000 x i8]* %lnk, i64 0, i64 0, !dbg !8168
  %162 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !8168
  %163 = call i64 @llvm.objectsize.i64.p0i8(i8* %162, i1 false, i1 true, i1 false), !dbg !8168
  %call222 = call i8* @__strcpy_chk(i8* %161, i8* %arraydecay221, i64 %163) #11, !dbg !8168
  %164 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !8169
  %165 = load i64, i64* %linklen, align 8, !dbg !8170
  %arrayidx223 = getelementptr inbounds i8, i8* %164, i64 %165, !dbg !8169
  store i8 47, i8* %arrayidx223, align 1, !dbg !8171
  %166 = load i64, i64* %linklen, align 8, !dbg !8172
  %add224 = add i64 %166, 1, !dbg !8173
  %167 = load i64, i64* %restlen, align 8, !dbg !8174
  %add225 = add i64 %167, %add224, !dbg !8174
  store i64 %add225, i64* %restlen, align 8, !dbg !8174
  %168 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !8175
  store i8* %168, i8** %r, align 8, !dbg !8176
  br label %if.end229, !dbg !8177

if.else226:                                       ; preds = %if.end203
  %169 = load i64, i64* %linklen, align 8, !dbg !8178
  call void @httpd_realloc_str(i8** @expand_symlinks.rest, i64* @expand_symlinks.maxrest, i64 %169), !dbg !8180
  %170 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !8181
  %arraydecay227 = getelementptr inbounds [5000 x i8], [5000 x i8]* %lnk, i64 0, i64 0, !dbg !8181
  %171 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !8181
  %172 = call i64 @llvm.objectsize.i64.p0i8(i8* %171, i1 false, i1 true, i1 false), !dbg !8181
  %call228 = call i8* @__strcpy_chk(i8* %170, i8* %arraydecay227, i64 %172) #11, !dbg !8181
  %173 = load i64, i64* %linklen, align 8, !dbg !8182
  store i64 %173, i64* %restlen, align 8, !dbg !8183
  %174 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !8184
  store i8* %174, i8** %r, align 8, !dbg !8185
  br label %if.end229

if.end229:                                        ; preds = %if.else226, %for.end
  %175 = load i8*, i8** @expand_symlinks.rest, align 8, !dbg !8186
  %arrayidx230 = getelementptr inbounds i8, i8* %175, i64 0, !dbg !8186
  %176 = load i8, i8* %arrayidx230, align 1, !dbg !8186
  %conv231 = sext i8 %176 to i32, !dbg !8186
  %cmp232 = icmp eq i32 %conv231, 47, !dbg !8188
  br i1 %cmp232, label %if.then234, label %if.else236, !dbg !8189

if.then234:                                       ; preds = %if.end229
  %177 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8190
  %arrayidx235 = getelementptr inbounds i8, i8* %177, i64 0, !dbg !8190
  store i8 0, i8* %arrayidx235, align 1, !dbg !8192
  store i64 0, i64* %checkedlen, align 8, !dbg !8193
  br label %if.end238, !dbg !8194

if.else236:                                       ; preds = %if.end229
  %178 = load i64, i64* %prevcheckedlen, align 8, !dbg !8195
  store i64 %178, i64* %checkedlen, align 8, !dbg !8197
  %179 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8198
  %180 = load i64, i64* %checkedlen, align 8, !dbg !8199
  %arrayidx237 = getelementptr inbounds i8, i8* %179, i64 %180, !dbg !8198
  store i8 0, i8* %arrayidx237, align 1, !dbg !8200
  br label %if.end238

if.end238:                                        ; preds = %if.else236, %if.then234
  br label %while.cond37, !dbg !7906, !llvm.loop !8068

while.end239:                                     ; preds = %while.cond37
  %181 = load i8*, i8** %r, align 8, !dbg !8201
  %182 = load i8**, i8*** %restP.addr, align 8, !dbg !8202
  store i8* %181, i8** %182, align 8, !dbg !8203
  %183 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8204
  %arrayidx240 = getelementptr inbounds i8, i8* %183, i64 0, !dbg !8204
  %184 = load i8, i8* %arrayidx240, align 1, !dbg !8204
  %conv241 = sext i8 %184 to i32, !dbg !8204
  %cmp242 = icmp eq i32 %conv241, 0, !dbg !8206
  br i1 %cmp242, label %if.then244, label %if.end246, !dbg !8207

if.then244:                                       ; preds = %while.end239
  %185 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8208
  %186 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8208
  %187 = call i64 @llvm.objectsize.i64.p0i8(i8* %186, i1 false, i1 true, i1 false), !dbg !8208
  %call245 = call i8* @__strcpy_chk(i8* %185, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.242, i64 0, i64 0), i64 %187) #11, !dbg !8208
  br label %if.end246, !dbg !8209

if.end246:                                        ; preds = %if.then244, %while.end239
  %188 = load i8*, i8** @expand_symlinks.checked, align 8, !dbg !8210
  store i8* %188, i8** %retval, align 8, !dbg !8211
  br label %return, !dbg !8211

return:                                           ; preds = %if.end246, %if.then192, %if.end187, %if.end186, %while.end
  %189 = load i8*, i8** %retval, align 8, !dbg !8212
  ret i8* %189, !dbg !8212
}

declare i32 @"\01_stat$INODE64"(i8*, %struct.stat*) #3

; Function Attrs: nounwind
declare i8* @__strncpy_chk(i8*, i8*, i64, i64) #6

declare i64 @readlink(i8*, i8*, i64) #3

declare i32 @"\01_getsockname"(i32, %struct.sockaddr*, i32*) #3

; Function Attrs: nobuiltin nounwind readonly
declare i32 @isupper(i32) #12

; Function Attrs: nobuiltin nounwind readonly
declare i32 @tolower(i32) #12

; Function Attrs: nobuiltin nounwind readonly
declare i32 @isxdigit(i32) #12

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @hexit(i8 signext %c) #0 !dbg !8213 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i8, align 1
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !8216, metadata !DIExpression()), !dbg !8217
  %0 = load i8, i8* %c.addr, align 1, !dbg !8218
  %conv = sext i8 %0 to i32, !dbg !8218
  %cmp = icmp sge i32 %conv, 48, !dbg !8220
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8221

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* %c.addr, align 1, !dbg !8222
  %conv2 = sext i8 %1 to i32, !dbg !8222
  %cmp3 = icmp sle i32 %conv2, 57, !dbg !8223
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8224

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8, i8* %c.addr, align 1, !dbg !8225
  %conv5 = sext i8 %2 to i32, !dbg !8225
  %sub = sub nsw i32 %conv5, 48, !dbg !8226
  store i32 %sub, i32* %retval, align 4, !dbg !8227
  br label %return, !dbg !8227

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8, i8* %c.addr, align 1, !dbg !8228
  %conv6 = sext i8 %3 to i32, !dbg !8228
  %cmp7 = icmp sge i32 %conv6, 97, !dbg !8230
  br i1 %cmp7, label %land.lhs.true9, label %if.end16, !dbg !8231

land.lhs.true9:                                   ; preds = %if.end
  %4 = load i8, i8* %c.addr, align 1, !dbg !8232
  %conv10 = sext i8 %4 to i32, !dbg !8232
  %cmp11 = icmp sle i32 %conv10, 102, !dbg !8233
  br i1 %cmp11, label %if.then13, label %if.end16, !dbg !8234

if.then13:                                        ; preds = %land.lhs.true9
  %5 = load i8, i8* %c.addr, align 1, !dbg !8235
  %conv14 = sext i8 %5 to i32, !dbg !8235
  %sub15 = sub nsw i32 %conv14, 97, !dbg !8236
  %add = add nsw i32 %sub15, 10, !dbg !8237
  store i32 %add, i32* %retval, align 4, !dbg !8238
  br label %return, !dbg !8238

if.end16:                                         ; preds = %land.lhs.true9, %if.end
  %6 = load i8, i8* %c.addr, align 1, !dbg !8239
  %conv17 = sext i8 %6 to i32, !dbg !8239
  %cmp18 = icmp sge i32 %conv17, 65, !dbg !8241
  br i1 %cmp18, label %land.lhs.true20, label %if.end28, !dbg !8242

land.lhs.true20:                                  ; preds = %if.end16
  %7 = load i8, i8* %c.addr, align 1, !dbg !8243
  %conv21 = sext i8 %7 to i32, !dbg !8243
  %cmp22 = icmp sle i32 %conv21, 70, !dbg !8244
  br i1 %cmp22, label %if.then24, label %if.end28, !dbg !8245

if.then24:                                        ; preds = %land.lhs.true20
  %8 = load i8, i8* %c.addr, align 1, !dbg !8246
  %conv25 = sext i8 %8 to i32, !dbg !8246
  %sub26 = sub nsw i32 %conv25, 65, !dbg !8247
  %add27 = add nsw i32 %sub26, 10, !dbg !8248
  store i32 %add27, i32* %retval, align 4, !dbg !8249
  br label %return, !dbg !8249

if.end28:                                         ; preds = %land.lhs.true20, %if.end16
  store i32 0, i32* %retval, align 4, !dbg !8250
  br label %return, !dbg !8250

return:                                           ; preds = %if.end28, %if.then24, %if.then13, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !8251
  ret i32 %9, !dbg !8251
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @httpd_close_conn(%struct.httpd_conn* %hc, %struct.timeval* %nowP) #0 !dbg !8252 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %nowP.addr = alloca %struct.timeval*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !8255, metadata !DIExpression()), !dbg !8256
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !8257, metadata !DIExpression()), !dbg !8258
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8259
  %1 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !8260
  call void @make_log_entry(%struct.httpd_conn* %0, %struct.timeval* %1), !dbg !8261
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8262
  %file_address = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 61, !dbg !8264
  %3 = load i8*, i8** %file_address, align 8, !dbg !8264
  %cmp = icmp ne i8* %3, null, !dbg !8265
  br i1 %cmp, label %if.then, label %if.end, !dbg !8266

if.then:                                          ; preds = %entry
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8267
  %file_address1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %4, i32 0, i32 61, !dbg !8269
  %5 = load i8*, i8** %file_address1, align 8, !dbg !8269
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8270
  %sb = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 59, !dbg !8271
  %7 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !8272
  call void @mmc_unmap(i8* %5, %struct.stat* %sb, %struct.timeval* %7), !dbg !8273
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8274
  %file_address2 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 61, !dbg !8275
  store i8* null, i8** %file_address2, align 8, !dbg !8276
  br label %if.end, !dbg !8277

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8278
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %9, i32 0, i32 60, !dbg !8280
  %10 = load i32, i32* %conn_fd, align 8, !dbg !8280
  %cmp3 = icmp sge i32 %10, 0, !dbg !8281
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !8282

if.then4:                                         ; preds = %if.end
  %11 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8283
  %conn_fd5 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %11, i32 0, i32 60, !dbg !8285
  %12 = load i32, i32* %conn_fd5, align 8, !dbg !8285
  %call = call i32 @"\01_close"(i32 %12), !dbg !8286
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8287
  %conn_fd6 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 60, !dbg !8288
  store i32 -1, i32* %conn_fd6, align 8, !dbg !8289
  br label %if.end7, !dbg !8290

if.end7:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !8291
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @make_log_entry(%struct.httpd_conn* %hc, %struct.timeval* %nowP) #0 !dbg !8292 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %nowP.addr = alloca %struct.timeval*, align 8
  %ru = alloca i8*, align 8
  %url = alloca [305 x i8], align 16
  %bytes = alloca [40 x i8], align 16
  %now = alloca i64, align 8
  %t = alloca %struct.tm*, align 8
  %cernfmt_nozone = alloca i8*, align 8
  %date_nozone = alloca [100 x i8], align 16
  %zone = alloca i32, align 4
  %sign = alloca i8, align 1
  %date = alloca [100 x i8], align 16
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !8293, metadata !DIExpression()), !dbg !8294
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !8295, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.declare(metadata i8** %ru, metadata !8297, metadata !DIExpression()), !dbg !8298
  call void @llvm.dbg.declare(metadata [305 x i8]* %url, metadata !8299, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.declare(metadata [40 x i8]* %bytes, metadata !8304, metadata !DIExpression()), !dbg !8308
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8309
  %hs = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 1, !dbg !8311
  %1 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !8311
  %no_log = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %1, i32 0, i32 12, !dbg !8312
  %2 = load i32, i32* %no_log, align 8, !dbg !8312
  %tobool = icmp ne i32 %2, 0, !dbg !8309
  br i1 %tobool, label %if.then, label %if.end, !dbg !8313

if.then:                                          ; preds = %entry
  br label %if.end74, !dbg !8314

if.end:                                           ; preds = %entry
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8315
  %remoteuser = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %3, i32 0, i32 31, !dbg !8317
  %4 = load i8*, i8** %remoteuser, align 8, !dbg !8317
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 0, !dbg !8315
  %5 = load i8, i8* %arrayidx, align 1, !dbg !8315
  %conv = sext i8 %5 to i32, !dbg !8315
  %cmp = icmp ne i32 %conv, 0, !dbg !8318
  br i1 %cmp, label %if.then2, label %if.else, !dbg !8319

if.then2:                                         ; preds = %if.end
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8320
  %remoteuser3 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 31, !dbg !8321
  %7 = load i8*, i8** %remoteuser3, align 8, !dbg !8321
  store i8* %7, i8** %ru, align 8, !dbg !8322
  br label %if.end4, !dbg !8323

if.else:                                          ; preds = %if.end
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.541, i64 0, i64 0), i8** %ru, align 8, !dbg !8324
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8325
  %hs5 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 1, !dbg !8327
  %9 = load %struct.httpd_server*, %struct.httpd_server** %hs5, align 8, !dbg !8327
  %vhost = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %9, i32 0, i32 15, !dbg !8328
  %10 = load i32, i32* %vhost, align 4, !dbg !8328
  %tobool6 = icmp ne i32 %10, 0, !dbg !8325
  br i1 %tobool6, label %land.lhs.true, label %if.else13, !dbg !8329

land.lhs.true:                                    ; preds = %if.end4
  %11 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8330
  %tildemapped = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %11, i32 0, i32 54, !dbg !8331
  %12 = load i32, i32* %tildemapped, align 4, !dbg !8331
  %tobool7 = icmp ne i32 %12, 0, !dbg !8330
  br i1 %tobool7, label %if.else13, label %if.then8, !dbg !8332

if.then8:                                         ; preds = %land.lhs.true
  %arraydecay = getelementptr inbounds [305 x i8], [305 x i8]* %url, i64 0, i64 0, !dbg !8333
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8334
  %hostname = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 50, !dbg !8335
  %14 = load i8*, i8** %hostname, align 8, !dbg !8335
  %cmp9 = icmp eq i8* %14, null, !dbg !8336
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !8334

cond.true:                                        ; preds = %if.then8
  %15 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8337
  %hs11 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %15, i32 0, i32 1, !dbg !8338
  %16 = load %struct.httpd_server*, %struct.httpd_server** %hs11, align 8, !dbg !8338
  %server_hostname = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %16, i32 0, i32 1, !dbg !8339
  %17 = load i8*, i8** %server_hostname, align 8, !dbg !8339
  br label %cond.end, !dbg !8334

cond.false:                                       ; preds = %if.then8
  %18 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8340
  %hostname12 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %18, i32 0, i32 50, !dbg !8341
  %19 = load i8*, i8** %hostname12, align 8, !dbg !8341
  br label %cond.end, !dbg !8334

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %17, %cond.true ], [ %19, %cond.false ], !dbg !8334
  %20 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8342
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %20, i32 0, i32 12, !dbg !8343
  %21 = load i8*, i8** %encodedurl, align 8, !dbg !8343
  %call = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay, i64 305, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.542, i64 0, i64 0), i8* %cond, i8* %21), !dbg !8344
  br label %if.end17, !dbg !8345

if.else13:                                        ; preds = %land.lhs.true, %if.end4
  %arraydecay14 = getelementptr inbounds [305 x i8], [305 x i8]* %url, i64 0, i64 0, !dbg !8346
  %22 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8347
  %encodedurl15 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %22, i32 0, i32 12, !dbg !8348
  %23 = load i8*, i8** %encodedurl15, align 8, !dbg !8348
  %call16 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay14, i64 305, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.543, i64 0, i64 0), i8* %23), !dbg !8349
  br label %if.end17

if.end17:                                         ; preds = %if.else13, %cond.end
  %24 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8350
  %bytes_sent = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %24, i32 0, i32 11, !dbg !8352
  %25 = load i64, i64* %bytes_sent, align 8, !dbg !8352
  %cmp18 = icmp sge i64 %25, 0, !dbg !8353
  br i1 %cmp18, label %if.then20, label %if.else24, !dbg !8354

if.then20:                                        ; preds = %if.end17
  %arraydecay21 = getelementptr inbounds [40 x i8], [40 x i8]* %bytes, i64 0, i64 0, !dbg !8355
  %26 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8356
  %bytes_sent22 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %26, i32 0, i32 11, !dbg !8357
  %27 = load i64, i64* %bytes_sent22, align 8, !dbg !8357
  %call23 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay21, i64 40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.544, i64 0, i64 0), i64 %27), !dbg !8358
  br label %if.end27, !dbg !8359

if.else24:                                        ; preds = %if.end17
  %arraydecay25 = getelementptr inbounds [40 x i8], [40 x i8]* %bytes, i64 0, i64 0, !dbg !8360
  %call26 = call i8* @__strcpy_chk(i8* %arraydecay25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.541, i64 0, i64 0), i64 40) #11, !dbg !8360
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then20
  %28 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8361
  %hs28 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %28, i32 0, i32 1, !dbg !8363
  %29 = load %struct.httpd_server*, %struct.httpd_server** %hs28, align 8, !dbg !8363
  %logfp = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %29, i32 0, i32 13, !dbg !8364
  %30 = load %struct.__sFILE*, %struct.__sFILE** %logfp, align 8, !dbg !8364
  %cmp29 = icmp ne %struct.__sFILE* %30, null, !dbg !8365
  br i1 %cmp29, label %if.then31, label %if.else63, !dbg !8366

if.then31:                                        ; preds = %if.end27
  call void @llvm.dbg.declare(metadata i64* %now, metadata !8367, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.declare(metadata %struct.tm** %t, metadata !8370, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.declare(metadata i8** %cernfmt_nozone, metadata !8387, metadata !DIExpression()), !dbg !8388
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.545, i64 0, i64 0), i8** %cernfmt_nozone, align 8, !dbg !8388
  call void @llvm.dbg.declare(metadata [100 x i8]* %date_nozone, metadata !8389, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.declare(metadata i32* %zone, metadata !8391, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !8393, metadata !DIExpression()), !dbg !8394
  call void @llvm.dbg.declare(metadata [100 x i8]* %date, metadata !8395, metadata !DIExpression()), !dbg !8396
  %31 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !8397
  %cmp32 = icmp ne %struct.timeval* %31, null, !dbg !8399
  br i1 %cmp32, label %if.then34, label %if.else35, !dbg !8400

if.then34:                                        ; preds = %if.then31
  %32 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !8401
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %32, i32 0, i32 0, !dbg !8402
  %33 = load i64, i64* %tv_sec, align 8, !dbg !8402
  store i64 %33, i64* %now, align 8, !dbg !8403
  br label %if.end37, !dbg !8404

if.else35:                                        ; preds = %if.then31
  %call36 = call i64 @time(i64* null), !dbg !8405
  store i64 %call36, i64* %now, align 8, !dbg !8406
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.then34
  %call38 = call %struct.tm* @localtime(i64* %now), !dbg !8407
  store %struct.tm* %call38, %struct.tm** %t, align 8, !dbg !8408
  %arraydecay39 = getelementptr inbounds [100 x i8], [100 x i8]* %date_nozone, i64 0, i64 0, !dbg !8409
  %34 = load i8*, i8** %cernfmt_nozone, align 8, !dbg !8410
  %35 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !8411
  %call40 = call i64 @"\01_strftime"(i8* %arraydecay39, i64 100, i8* %34, %struct.tm* %35), !dbg !8412
  %36 = load %struct.tm*, %struct.tm** %t, align 8, !dbg !8413
  %tm_gmtoff = getelementptr inbounds %struct.tm, %struct.tm* %36, i32 0, i32 9, !dbg !8414
  %37 = load i64, i64* %tm_gmtoff, align 8, !dbg !8414
  %div = sdiv i64 %37, 60, !dbg !8415
  %conv41 = trunc i64 %div to i32, !dbg !8413
  store i32 %conv41, i32* %zone, align 4, !dbg !8416
  %38 = load i32, i32* %zone, align 4, !dbg !8417
  %cmp42 = icmp sge i32 %38, 0, !dbg !8419
  br i1 %cmp42, label %if.then44, label %if.else45, !dbg !8420

if.then44:                                        ; preds = %if.end37
  store i8 43, i8* %sign, align 1, !dbg !8421
  br label %if.end46, !dbg !8422

if.else45:                                        ; preds = %if.end37
  store i8 45, i8* %sign, align 1, !dbg !8423
  %39 = load i32, i32* %zone, align 4, !dbg !8425
  %sub = sub nsw i32 0, %39, !dbg !8426
  store i32 %sub, i32* %zone, align 4, !dbg !8427
  br label %if.end46

if.end46:                                         ; preds = %if.else45, %if.then44
  %40 = load i32, i32* %zone, align 4, !dbg !8428
  %div47 = sdiv i32 %40, 60, !dbg !8429
  %mul = mul nsw i32 %div47, 100, !dbg !8430
  %41 = load i32, i32* %zone, align 4, !dbg !8431
  %rem = srem i32 %41, 60, !dbg !8432
  %add = add nsw i32 %mul, %rem, !dbg !8433
  store i32 %add, i32* %zone, align 4, !dbg !8434
  %arraydecay48 = getelementptr inbounds [100 x i8], [100 x i8]* %date, i64 0, i64 0, !dbg !8435
  %arraydecay49 = getelementptr inbounds [100 x i8], [100 x i8]* %date_nozone, i64 0, i64 0, !dbg !8436
  %42 = load i8, i8* %sign, align 1, !dbg !8437
  %conv50 = sext i8 %42 to i32, !dbg !8437
  %43 = load i32, i32* %zone, align 4, !dbg !8438
  %call51 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay48, i64 100, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.546, i64 0, i64 0), i8* %arraydecay49, i32 %conv50, i32 %43), !dbg !8439
  %44 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8440
  %hs52 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %44, i32 0, i32 1, !dbg !8441
  %45 = load %struct.httpd_server*, %struct.httpd_server** %hs52, align 8, !dbg !8441
  %logfp53 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %45, i32 0, i32 13, !dbg !8442
  %46 = load %struct.__sFILE*, %struct.__sFILE** %logfp53, align 8, !dbg !8442
  %47 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8443
  %client_addr = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %47, i32 0, i32 2, !dbg !8444
  %call54 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr), !dbg !8445
  %48 = load i8*, i8** %ru, align 8, !dbg !8446
  %arraydecay55 = getelementptr inbounds [100 x i8], [100 x i8]* %date, i64 0, i64 0, !dbg !8447
  %49 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8448
  %method = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %49, i32 0, i32 8, !dbg !8449
  %50 = load i32, i32* %method, align 4, !dbg !8449
  %call56 = call i8* @httpd_method_str(i32 %50), !dbg !8450
  %arraydecay57 = getelementptr inbounds [305 x i8], [305 x i8]* %url, i64 0, i64 0, !dbg !8451
  %51 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8452
  %protocol = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %51, i32 0, i32 14, !dbg !8453
  %52 = load i8*, i8** %protocol, align 8, !dbg !8453
  %53 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8454
  %status = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %53, i32 0, i32 9, !dbg !8455
  %54 = load i32, i32* %status, align 8, !dbg !8455
  %arraydecay58 = getelementptr inbounds [40 x i8], [40 x i8]* %bytes, i64 0, i64 0, !dbg !8456
  %55 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8457
  %referrer = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %55, i32 0, i32 20, !dbg !8458
  %56 = load i8*, i8** %referrer, align 8, !dbg !8458
  %57 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8459
  %useragent = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %57, i32 0, i32 21, !dbg !8460
  %58 = load i8*, i8** %useragent, align 8, !dbg !8460
  %call59 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %46, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.547, i64 0, i64 0), i8* %call54, i8* %48, i8* %arraydecay55, i8* %call56, i8* %arraydecay57, i8* %52, i32 %54, i8* %arraydecay58, i8* %56, i8* %58), !dbg !8461
  %59 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8462
  %hs60 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %59, i32 0, i32 1, !dbg !8463
  %60 = load %struct.httpd_server*, %struct.httpd_server** %hs60, align 8, !dbg !8463
  %logfp61 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %60, i32 0, i32 13, !dbg !8464
  %61 = load %struct.__sFILE*, %struct.__sFILE** %logfp61, align 8, !dbg !8464
  %call62 = call i32 @fflush(%struct.__sFILE* %61), !dbg !8465
  br label %if.end74, !dbg !8466

if.else63:                                        ; preds = %if.end27
  %62 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8467
  %client_addr64 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %62, i32 0, i32 2, !dbg !8468
  %call65 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr64), !dbg !8469
  %63 = load i8*, i8** %ru, align 8, !dbg !8470
  %64 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8471
  %method66 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %64, i32 0, i32 8, !dbg !8472
  %65 = load i32, i32* %method66, align 4, !dbg !8472
  %call67 = call i8* @httpd_method_str(i32 %65), !dbg !8473
  %arraydecay68 = getelementptr inbounds [305 x i8], [305 x i8]* %url, i64 0, i64 0, !dbg !8474
  %66 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8475
  %protocol69 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %66, i32 0, i32 14, !dbg !8476
  %67 = load i8*, i8** %protocol69, align 8, !dbg !8476
  %68 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8477
  %status70 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %68, i32 0, i32 9, !dbg !8478
  %69 = load i32, i32* %status70, align 8, !dbg !8478
  %arraydecay71 = getelementptr inbounds [40 x i8], [40 x i8]* %bytes, i64 0, i64 0, !dbg !8479
  %70 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8480
  %referrer72 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %70, i32 0, i32 20, !dbg !8481
  %71 = load i8*, i8** %referrer72, align 8, !dbg !8481
  %72 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8482
  %useragent73 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %72, i32 0, i32 21, !dbg !8483
  %73 = load i8*, i8** %useragent73, align 8, !dbg !8483
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.548, i64 0, i64 0), i8* %call65, i8* %63, i8* %call67, i8* %arraydecay68, i8* %67, i32 %69, i8* %arraydecay71, i8* %71, i8* %73), !dbg !8484
  br label %if.end74

if.end74:                                         ; preds = %if.then, %if.else63, %if.end46
  ret void, !dbg !8485
}

declare void @mmc_unmap(i8*, %struct.stat*, %struct.timeval*) #3

declare %struct.tm* @localtime(i64*) #3

declare i32 @fflush(%struct.__sFILE*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @httpd_destroy_conn(%struct.httpd_conn* %hc) #0 !dbg !8486 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !8487, metadata !DIExpression()), !dbg !8488
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8489
  %initialized = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 0, !dbg !8491
  %1 = load i32, i32* %initialized, align 8, !dbg !8491
  %tobool = icmp ne i32 %1, 0, !dbg !8489
  br i1 %tobool, label %if.then, label %if.end, !dbg !8492

if.then:                                          ; preds = %entry
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8493
  %read_buf = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 3, !dbg !8495
  %3 = load i8*, i8** %read_buf, align 8, !dbg !8495
  call void @free(i8* %3), !dbg !8496
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8497
  %decodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %4, i32 0, i32 13, !dbg !8498
  %5 = load i8*, i8** %decodedurl, align 8, !dbg !8498
  call void @free(i8* %5), !dbg !8499
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8500
  %origfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 15, !dbg !8501
  %7 = load i8*, i8** %origfilename, align 8, !dbg !8501
  call void @free(i8* %7), !dbg !8502
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8503
  %expnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 16, !dbg !8504
  %9 = load i8*, i8** %expnfilename, align 8, !dbg !8504
  call void @free(i8* %9), !dbg !8505
  %10 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8506
  %encodings = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %10, i32 0, i32 17, !dbg !8507
  %11 = load i8*, i8** %encodings, align 8, !dbg !8507
  call void @free(i8* %11), !dbg !8508
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8509
  %pathinfo = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 18, !dbg !8510
  %13 = load i8*, i8** %pathinfo, align 8, !dbg !8510
  call void @free(i8* %13), !dbg !8511
  %14 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8512
  %query = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %14, i32 0, i32 19, !dbg !8513
  %15 = load i8*, i8** %query, align 8, !dbg !8513
  call void @free(i8* %15), !dbg !8514
  %16 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8515
  %accept = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %16, i32 0, i32 22, !dbg !8516
  %17 = load i8*, i8** %accept, align 8, !dbg !8516
  call void @free(i8* %17), !dbg !8517
  %18 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8518
  %accepte = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %18, i32 0, i32 23, !dbg !8519
  %19 = load i8*, i8** %accepte, align 8, !dbg !8519
  call void @free(i8* %19), !dbg !8520
  %20 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8521
  %reqhost = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %20, i32 0, i32 27, !dbg !8522
  %21 = load i8*, i8** %reqhost, align 8, !dbg !8522
  call void @free(i8* %21), !dbg !8523
  %22 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8524
  %hostdir = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %22, i32 0, i32 29, !dbg !8525
  %23 = load i8*, i8** %hostdir, align 8, !dbg !8525
  call void @free(i8* %23), !dbg !8526
  %24 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8527
  %remoteuser = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %24, i32 0, i32 31, !dbg !8528
  %25 = load i8*, i8** %remoteuser, align 8, !dbg !8528
  call void @free(i8* %25), !dbg !8529
  %26 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8530
  %response = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %26, i32 0, i32 32, !dbg !8531
  %27 = load i8*, i8** %response, align 8, !dbg !8531
  call void @free(i8* %27), !dbg !8532
  %28 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8533
  %initialized1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %28, i32 0, i32 0, !dbg !8534
  store i32 0, i32* %initialized1, align 8, !dbg !8535
  br label %if.end, !dbg !8536

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8537
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @httpd_start_request(%struct.httpd_conn* %hc, %struct.timeval* %nowP) #0 !dbg !8538 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %nowP.addr = alloca %struct.timeval*, align 8
  %r = alloca i32, align 4
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !8539, metadata !DIExpression()), !dbg !8540
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !8541, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8543, metadata !DIExpression()), !dbg !8544
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8545
  %1 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !8546
  %call = call i32 @really_start_request(%struct.httpd_conn* %0, %struct.timeval* %1), !dbg !8547
  store i32 %call, i32* %r, align 4, !dbg !8548
  %2 = load i32, i32* %r, align 4, !dbg !8549
  ret i32 %2, !dbg !8550
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @really_start_request(%struct.httpd_conn* %hc, %struct.timeval* %nowP) #0 !dbg !833 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %nowP.addr = alloca %struct.timeval*, align 8
  %i = alloca i32, align 4
  %expnlen = alloca i64, align 8
  %indxlen = alloca i64, align 8
  %cp = alloca i8*, align 8
  %pi = alloca i8*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !8551, metadata !DIExpression()), !dbg !8552
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !8553, metadata !DIExpression()), !dbg !8554
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8555, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.declare(metadata i64* %expnlen, metadata !8557, metadata !DIExpression()), !dbg !8558
  call void @llvm.dbg.declare(metadata i64* %indxlen, metadata !8559, metadata !DIExpression()), !dbg !8560
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !8561, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.declare(metadata i8** %pi, metadata !8563, metadata !DIExpression()), !dbg !8564
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8565
  %expnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 16, !dbg !8566
  %1 = load i8*, i8** %expnfilename, align 8, !dbg !8566
  %call = call i64 @strlen(i8* %1), !dbg !8567
  store i64 %call, i64* %expnlen, align 8, !dbg !8568
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8569
  %expnfilename1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 16, !dbg !8571
  %3 = load i8*, i8** %expnfilename1, align 8, !dbg !8571
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8572
  %sb = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %4, i32 0, i32 59, !dbg !8573
  %call2 = call i32 @"\01_stat$INODE64"(i8* %3, %struct.stat* %sb), !dbg !8574
  %cmp = icmp slt i32 %call2, 0, !dbg !8575
  br i1 %cmp, label %if.then, label %if.end, !dbg !8576

if.then:                                          ; preds = %entry
  %5 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8577
  %6 = load i8*, i8** @err500title, align 8, !dbg !8579
  %7 = load i8*, i8** @err500form, align 8, !dbg !8580
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8581
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 12, !dbg !8582
  %9 = load i8*, i8** %encodedurl, align 8, !dbg !8582
  call void @httpd_send_err(%struct.httpd_conn* %5, i32 500, i8* %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %7, i8* %9), !dbg !8583
  store i32 -1, i32* %retval, align 4, !dbg !8584
  br label %return, !dbg !8584

if.end:                                           ; preds = %entry
  %10 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8585
  %sb3 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %10, i32 0, i32 59, !dbg !8587
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %sb3, i32 0, i32 1, !dbg !8588
  %11 = load i16, i16* %st_mode, align 4, !dbg !8588
  %conv = zext i16 %11 to i32, !dbg !8585
  %and = and i32 %conv, 5, !dbg !8589
  %tobool = icmp ne i32 %and, 0, !dbg !8589
  br i1 %tobool, label %if.end8, label %if.then4, !dbg !8590

if.then4:                                         ; preds = %if.end
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8591
  %client_addr = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 2, !dbg !8593
  %call5 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr), !dbg !8594
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8595
  %encodedurl6 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 12, !dbg !8596
  %14 = load i8*, i8** %encodedurl6, align 8, !dbg !8596
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 6, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.444, i64 0, i64 0), i8* %call5, i8* %14), !dbg !8597
  %15 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8598
  %16 = load i8*, i8** @err403title, align 8, !dbg !8599
  %17 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8600
  %encodedurl7 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %17, i32 0, i32 12, !dbg !8601
  %18 = load i8*, i8** %encodedurl7, align 8, !dbg !8601
  call void @httpd_send_err(%struct.httpd_conn* %15, i32 403, i8* %16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.445, i64 0, i64 0), i8* %18), !dbg !8602
  store i32 -1, i32* %retval, align 4, !dbg !8603
  br label %return, !dbg !8603

if.end8:                                          ; preds = %if.end
  %19 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8604
  %sb9 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %19, i32 0, i32 59, !dbg !8604
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %sb9, i32 0, i32 1, !dbg !8604
  %20 = load i16, i16* %st_mode10, align 4, !dbg !8604
  %conv11 = zext i16 %20 to i32, !dbg !8604
  %and12 = and i32 %conv11, 61440, !dbg !8604
  %cmp13 = icmp eq i32 %and12, 16384, !dbg !8604
  br i1 %cmp13, label %if.then15, label %if.end122, !dbg !8606

if.then15:                                        ; preds = %if.end8
  %21 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8607
  %pathinfo = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %21, i32 0, i32 18, !dbg !8610
  %22 = load i8*, i8** %pathinfo, align 8, !dbg !8610
  %arrayidx = getelementptr inbounds i8, i8* %22, i64 0, !dbg !8607
  %23 = load i8, i8* %arrayidx, align 1, !dbg !8607
  %conv16 = sext i8 %23 to i32, !dbg !8607
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !8611
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !8612

if.then19:                                        ; preds = %if.then15
  %24 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8613
  %25 = load i8*, i8** @err404title, align 8, !dbg !8615
  %26 = load i8*, i8** @err404form, align 8, !dbg !8616
  %27 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8617
  %encodedurl20 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %27, i32 0, i32 12, !dbg !8618
  %28 = load i8*, i8** %encodedurl20, align 8, !dbg !8618
  call void @httpd_send_err(%struct.httpd_conn* %24, i32 404, i8* %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %26, i8* %28), !dbg !8619
  store i32 -1, i32* %retval, align 4, !dbg !8620
  br label %return, !dbg !8620

if.end21:                                         ; preds = %if.then15
  %29 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8621
  %origfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %29, i32 0, i32 15, !dbg !8623
  %30 = load i8*, i8** %origfilename, align 8, !dbg !8623
  %call22 = call i32 @strcmp(i8* %30, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0)), !dbg !8624
  %cmp23 = icmp ne i32 %call22, 0, !dbg !8625
  br i1 %cmp23, label %land.lhs.true, label %if.end38, !dbg !8626

land.lhs.true:                                    ; preds = %if.end21
  %31 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8627
  %origfilename25 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %31, i32 0, i32 15, !dbg !8628
  %32 = load i8*, i8** %origfilename25, align 8, !dbg !8628
  %call26 = call i32 @strcmp(i8* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.242, i64 0, i64 0)), !dbg !8629
  %cmp27 = icmp ne i32 %call26, 0, !dbg !8630
  br i1 %cmp27, label %land.lhs.true29, label %if.end38, !dbg !8631

land.lhs.true29:                                  ; preds = %land.lhs.true
  %33 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8632
  %origfilename30 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %33, i32 0, i32 15, !dbg !8633
  %34 = load i8*, i8** %origfilename30, align 8, !dbg !8633
  %35 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8634
  %origfilename31 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %35, i32 0, i32 15, !dbg !8635
  %36 = load i8*, i8** %origfilename31, align 8, !dbg !8635
  %call32 = call i64 @strlen(i8* %36), !dbg !8636
  %sub = sub i64 %call32, 1, !dbg !8637
  %arrayidx33 = getelementptr inbounds i8, i8* %34, i64 %sub, !dbg !8632
  %37 = load i8, i8* %arrayidx33, align 1, !dbg !8632
  %conv34 = sext i8 %37 to i32, !dbg !8632
  %cmp35 = icmp ne i32 %conv34, 47, !dbg !8638
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !8639

if.then37:                                        ; preds = %land.lhs.true29
  %38 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8640
  call void @send_dirredirect(%struct.httpd_conn* %38), !dbg !8642
  store i32 -1, i32* %retval, align 4, !dbg !8643
  br label %return, !dbg !8643

if.end38:                                         ; preds = %land.lhs.true29, %land.lhs.true, %if.end21
  store i32 0, i32* %i, align 4, !dbg !8644
  br label %for.cond, !dbg !8646

for.cond:                                         ; preds = %for.inc, %if.end38
  %39 = load i32, i32* %i, align 4, !dbg !8647
  %conv39 = sext i32 %39 to i64, !dbg !8647
  %cmp40 = icmp ult i64 %conv39, 6, !dbg !8649
  br i1 %cmp40, label %for.body, label %for.end, !dbg !8650

for.body:                                         ; preds = %for.cond
  %40 = load i64, i64* %expnlen, align 8, !dbg !8651
  %add = add i64 %40, 1, !dbg !8653
  %41 = load i32, i32* %i, align 4, !dbg !8654
  %idxprom = sext i32 %41 to i64, !dbg !8655
  %arrayidx42 = getelementptr inbounds [6 x i8*], [6 x i8*]* @really_start_request.index_names, i64 0, i64 %idxprom, !dbg !8655
  %42 = load i8*, i8** %arrayidx42, align 8, !dbg !8655
  %call43 = call i64 @strlen(i8* %42), !dbg !8656
  %add44 = add i64 %add, %call43, !dbg !8657
  call void @httpd_realloc_str(i8** @really_start_request.indexname, i64* @really_start_request.maxindexname, i64 %add44), !dbg !8658
  %43 = load i8*, i8** @really_start_request.indexname, align 8, !dbg !8659
  %44 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8659
  %expnfilename45 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %44, i32 0, i32 16, !dbg !8659
  %45 = load i8*, i8** %expnfilename45, align 8, !dbg !8659
  %46 = load i8*, i8** @really_start_request.indexname, align 8, !dbg !8659
  %47 = call i64 @llvm.objectsize.i64.p0i8(i8* %46, i1 false, i1 true, i1 false), !dbg !8659
  %call46 = call i8* @__strcpy_chk(i8* %43, i8* %45, i64 %47) #11, !dbg !8659
  %48 = load i8*, i8** @really_start_request.indexname, align 8, !dbg !8660
  %call47 = call i64 @strlen(i8* %48), !dbg !8661
  store i64 %call47, i64* %indxlen, align 8, !dbg !8662
  %49 = load i64, i64* %indxlen, align 8, !dbg !8663
  %cmp48 = icmp eq i64 %49, 0, !dbg !8665
  br i1 %cmp48, label %if.then55, label %lor.lhs.false, !dbg !8666

lor.lhs.false:                                    ; preds = %for.body
  %50 = load i8*, i8** @really_start_request.indexname, align 8, !dbg !8667
  %51 = load i64, i64* %indxlen, align 8, !dbg !8668
  %sub50 = sub i64 %51, 1, !dbg !8669
  %arrayidx51 = getelementptr inbounds i8, i8* %50, i64 %sub50, !dbg !8667
  %52 = load i8, i8* %arrayidx51, align 1, !dbg !8667
  %conv52 = sext i8 %52 to i32, !dbg !8667
  %cmp53 = icmp ne i32 %conv52, 47, !dbg !8670
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !8671

if.then55:                                        ; preds = %lor.lhs.false, %for.body
  %53 = load i8*, i8** @really_start_request.indexname, align 8, !dbg !8672
  %54 = load i8*, i8** @really_start_request.indexname, align 8, !dbg !8672
  %55 = call i64 @llvm.objectsize.i64.p0i8(i8* %54, i1 false, i1 true, i1 false), !dbg !8672
  %call56 = call i8* @__strcat_chk(i8* %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.91.275, i64 0, i64 0), i64 %55) #11, !dbg !8672
  br label %if.end57, !dbg !8673

if.end57:                                         ; preds = %if.then55, %lor.lhs.false
  %56 = load i8*, i8** @really_start_request.indexname, align 8, !dbg !8674
  %call58 = call i32 @strcmp(i8* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99.277, i64 0, i64 0)), !dbg !8676
  %cmp59 = icmp eq i32 %call58, 0, !dbg !8677
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !8678

if.then61:                                        ; preds = %if.end57
  %57 = load i8*, i8** @really_start_request.indexname, align 8, !dbg !8679
  %arrayidx62 = getelementptr inbounds i8, i8* %57, i64 0, !dbg !8679
  store i8 0, i8* %arrayidx62, align 1, !dbg !8680
  br label %if.end63, !dbg !8679

if.end63:                                         ; preds = %if.then61, %if.end57
  %58 = load i8*, i8** @really_start_request.indexname, align 8, !dbg !8681
  %59 = load i32, i32* %i, align 4, !dbg !8681
  %idxprom64 = sext i32 %59 to i64, !dbg !8681
  %arrayidx65 = getelementptr inbounds [6 x i8*], [6 x i8*]* @really_start_request.index_names, i64 0, i64 %idxprom64, !dbg !8681
  %60 = load i8*, i8** %arrayidx65, align 8, !dbg !8681
  %61 = load i8*, i8** @really_start_request.indexname, align 8, !dbg !8681
  %62 = call i64 @llvm.objectsize.i64.p0i8(i8* %61, i1 false, i1 true, i1 false), !dbg !8681
  %call66 = call i8* @__strcat_chk(i8* %58, i8* %60, i64 %62) #11, !dbg !8681
  %63 = load i8*, i8** @really_start_request.indexname, align 8, !dbg !8682
  %64 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8684
  %sb67 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %64, i32 0, i32 59, !dbg !8685
  %call68 = call i32 @"\01_stat$INODE64"(i8* %63, %struct.stat* %sb67), !dbg !8686
  %cmp69 = icmp sge i32 %call68, 0, !dbg !8687
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !8688

if.then71:                                        ; preds = %if.end63
  br label %got_one, !dbg !8689

if.end72:                                         ; preds = %if.end63
  br label %for.inc, !dbg !8690

for.inc:                                          ; preds = %if.end72
  %65 = load i32, i32* %i, align 4, !dbg !8691
  %inc = add nsw i32 %65, 1, !dbg !8691
  store i32 %inc, i32* %i, align 4, !dbg !8691
  br label %for.cond, !dbg !8692, !llvm.loop !8693

for.end:                                          ; preds = %for.cond
  %66 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8695
  %sb73 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %66, i32 0, i32 59, !dbg !8697
  %st_mode74 = getelementptr inbounds %struct.stat, %struct.stat* %sb73, i32 0, i32 1, !dbg !8698
  %67 = load i16, i16* %st_mode74, align 4, !dbg !8698
  %conv75 = zext i16 %67 to i32, !dbg !8695
  %and76 = and i32 %conv75, 4, !dbg !8699
  %tobool77 = icmp ne i32 %and76, 0, !dbg !8699
  br i1 %tobool77, label %if.end83, label %if.then78, !dbg !8700

if.then78:                                        ; preds = %for.end
  %68 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8701
  %client_addr79 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %68, i32 0, i32 2, !dbg !8703
  %call80 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr79), !dbg !8704
  %69 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8705
  %encodedurl81 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %69, i32 0, i32 12, !dbg !8706
  %70 = load i8*, i8** %encodedurl81, align 8, !dbg !8706
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 6, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.446, i64 0, i64 0), i8* %call80, i8* %70), !dbg !8707
  %71 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8708
  %72 = load i8*, i8** @err403title, align 8, !dbg !8709
  %73 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8710
  %encodedurl82 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %73, i32 0, i32 12, !dbg !8711
  %74 = load i8*, i8** %encodedurl82, align 8, !dbg !8711
  call void @httpd_send_err(%struct.httpd_conn* %71, i32 403, i8* %72, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.447, i64 0, i64 0), i8* %74), !dbg !8712
  store i32 -1, i32* %retval, align 4, !dbg !8713
  br label %return, !dbg !8713

if.end83:                                         ; preds = %for.end
  %75 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8714
  %76 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8716
  %expnfilename84 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %76, i32 0, i32 16, !dbg !8717
  %77 = load i8*, i8** %expnfilename84, align 8, !dbg !8717
  %call85 = call i32 @auth_check(%struct.httpd_conn* %75, i8* %77), !dbg !8718
  %cmp86 = icmp eq i32 %call85, -1, !dbg !8719
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !8720

if.then88:                                        ; preds = %if.end83
  store i32 -1, i32* %retval, align 4, !dbg !8721
  br label %return, !dbg !8721

if.end89:                                         ; preds = %if.end83
  %78 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8722
  %call90 = call i32 @check_referrer(%struct.httpd_conn* %78), !dbg !8724
  %tobool91 = icmp ne i32 %call90, 0, !dbg !8724
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !8725

if.then92:                                        ; preds = %if.end89
  store i32 -1, i32* %retval, align 4, !dbg !8726
  br label %return, !dbg !8726

if.end93:                                         ; preds = %if.end89
  %79 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8727
  %call94 = call i32 @ls(%struct.httpd_conn* %79), !dbg !8728
  store i32 %call94, i32* %retval, align 4, !dbg !8729
  br label %return, !dbg !8729

got_one:                                          ; preds = %if.then71
  call void @llvm.dbg.label(metadata !8730), !dbg !8731
  %80 = load i8*, i8** @really_start_request.indexname, align 8, !dbg !8732
  %81 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8733
  %hs = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %81, i32 0, i32 1, !dbg !8734
  %82 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !8734
  %no_symlink_check = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %82, i32 0, i32 14, !dbg !8735
  %83 = load i32, i32* %no_symlink_check, align 8, !dbg !8735
  %84 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8736
  %tildemapped = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %84, i32 0, i32 54, !dbg !8737
  %85 = load i32, i32* %tildemapped, align 4, !dbg !8737
  %call95 = call i8* @expand_symlinks(i8* %80, i8** %pi, i32 %83, i32 %85), !dbg !8738
  store i8* %call95, i8** %cp, align 8, !dbg !8739
  %86 = load i8*, i8** %cp, align 8, !dbg !8740
  %cmp96 = icmp eq i8* %86, null, !dbg !8742
  br i1 %cmp96, label %if.then103, label %lor.lhs.false98, !dbg !8743

lor.lhs.false98:                                  ; preds = %got_one
  %87 = load i8*, i8** %pi, align 8, !dbg !8744
  %arrayidx99 = getelementptr inbounds i8, i8* %87, i64 0, !dbg !8744
  %88 = load i8, i8* %arrayidx99, align 1, !dbg !8744
  %conv100 = sext i8 %88 to i32, !dbg !8744
  %cmp101 = icmp ne i32 %conv100, 0, !dbg !8745
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !8746

if.then103:                                       ; preds = %lor.lhs.false98, %got_one
  %89 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8747
  %90 = load i8*, i8** @err500title, align 8, !dbg !8749
  %91 = load i8*, i8** @err500form, align 8, !dbg !8750
  %92 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8751
  %encodedurl104 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %92, i32 0, i32 12, !dbg !8752
  %93 = load i8*, i8** %encodedurl104, align 8, !dbg !8752
  call void @httpd_send_err(%struct.httpd_conn* %89, i32 500, i8* %90, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %91, i8* %93), !dbg !8753
  store i32 -1, i32* %retval, align 4, !dbg !8754
  br label %return, !dbg !8754

if.end105:                                        ; preds = %lor.lhs.false98
  %94 = load i8*, i8** %cp, align 8, !dbg !8755
  %call106 = call i64 @strlen(i8* %94), !dbg !8756
  store i64 %call106, i64* %expnlen, align 8, !dbg !8757
  %95 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8758
  %expnfilename107 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %95, i32 0, i32 16, !dbg !8759
  %96 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8760
  %maxexpnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %96, i32 0, i32 35, !dbg !8761
  %97 = load i64, i64* %expnlen, align 8, !dbg !8762
  call void @httpd_realloc_str(i8** %expnfilename107, i64* %maxexpnfilename, i64 %97), !dbg !8763
  %98 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8764
  %expnfilename108 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %98, i32 0, i32 16, !dbg !8764
  %99 = load i8*, i8** %expnfilename108, align 8, !dbg !8764
  %100 = load i8*, i8** %cp, align 8, !dbg !8764
  %101 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8764
  %expnfilename109 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %101, i32 0, i32 16, !dbg !8764
  %102 = load i8*, i8** %expnfilename109, align 8, !dbg !8764
  %103 = call i64 @llvm.objectsize.i64.p0i8(i8* %102, i1 false, i1 true, i1 false), !dbg !8764
  %call110 = call i8* @__strcpy_chk(i8* %99, i8* %100, i64 %103) #11, !dbg !8764
  %104 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8765
  %sb111 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %104, i32 0, i32 59, !dbg !8767
  %st_mode112 = getelementptr inbounds %struct.stat, %struct.stat* %sb111, i32 0, i32 1, !dbg !8768
  %105 = load i16, i16* %st_mode112, align 4, !dbg !8768
  %conv113 = zext i16 %105 to i32, !dbg !8765
  %and114 = and i32 %conv113, 5, !dbg !8769
  %tobool115 = icmp ne i32 %and114, 0, !dbg !8769
  br i1 %tobool115, label %if.end121, label %if.then116, !dbg !8770

if.then116:                                       ; preds = %if.end105
  %106 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8771
  %client_addr117 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %106, i32 0, i32 2, !dbg !8773
  %call118 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr117), !dbg !8774
  %107 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8775
  %encodedurl119 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %107, i32 0, i32 12, !dbg !8776
  %108 = load i8*, i8** %encodedurl119, align 8, !dbg !8776
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.448, i64 0, i64 0), i8* %call118, i8* %108), !dbg !8777
  %109 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8778
  %110 = load i8*, i8** @err403title, align 8, !dbg !8779
  %111 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8780
  %encodedurl120 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %111, i32 0, i32 12, !dbg !8781
  %112 = load i8*, i8** %encodedurl120, align 8, !dbg !8781
  call void @httpd_send_err(%struct.httpd_conn* %109, i32 403, i8* %110, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.449, i64 0, i64 0), i8* %112), !dbg !8782
  store i32 -1, i32* %retval, align 4, !dbg !8783
  br label %return, !dbg !8783

if.end121:                                        ; preds = %if.end105
  br label %if.end122, !dbg !8784

if.end122:                                        ; preds = %if.end121, %if.end8
  %113 = load i64, i64* %expnlen, align 8, !dbg !8785
  call void @httpd_realloc_str(i8** @really_start_request.dirname, i64* @really_start_request.maxdirname, i64 %113), !dbg !8786
  %114 = load i8*, i8** @really_start_request.dirname, align 8, !dbg !8787
  %115 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8787
  %expnfilename123 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %115, i32 0, i32 16, !dbg !8787
  %116 = load i8*, i8** %expnfilename123, align 8, !dbg !8787
  %117 = load i8*, i8** @really_start_request.dirname, align 8, !dbg !8787
  %118 = call i64 @llvm.objectsize.i64.p0i8(i8* %117, i1 false, i1 true, i1 false), !dbg !8787
  %call124 = call i8* @__strcpy_chk(i8* %114, i8* %116, i64 %118) #11, !dbg !8787
  %119 = load i8*, i8** @really_start_request.dirname, align 8, !dbg !8788
  %call125 = call i8* @strrchr(i8* %119, i32 47), !dbg !8789
  store i8* %call125, i8** %cp, align 8, !dbg !8790
  %120 = load i8*, i8** %cp, align 8, !dbg !8791
  %cmp126 = icmp eq i8* %120, null, !dbg !8793
  br i1 %cmp126, label %if.then128, label %if.else, !dbg !8794

if.then128:                                       ; preds = %if.end122
  %121 = load i8*, i8** @really_start_request.dirname, align 8, !dbg !8795
  %122 = load i8*, i8** @really_start_request.dirname, align 8, !dbg !8795
  %123 = call i64 @llvm.objectsize.i64.p0i8(i8* %122, i1 false, i1 true, i1 false), !dbg !8795
  %call129 = call i8* @__strcpy_chk(i8* %121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.242, i64 0, i64 0), i64 %123) #11, !dbg !8795
  br label %if.end130, !dbg !8796

if.else:                                          ; preds = %if.end122
  %124 = load i8*, i8** %cp, align 8, !dbg !8797
  store i8 0, i8* %124, align 1, !dbg !8798
  br label %if.end130

if.end130:                                        ; preds = %if.else, %if.then128
  %125 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8799
  %126 = load i8*, i8** @really_start_request.dirname, align 8, !dbg !8801
  %call131 = call i32 @auth_check(%struct.httpd_conn* %125, i8* %126), !dbg !8802
  %cmp132 = icmp eq i32 %call131, -1, !dbg !8803
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !8804

if.then134:                                       ; preds = %if.end130
  store i32 -1, i32* %retval, align 4, !dbg !8805
  br label %return, !dbg !8805

if.end135:                                        ; preds = %if.end130
  %127 = load i64, i64* %expnlen, align 8, !dbg !8806
  %cmp136 = icmp eq i64 %127, 9, !dbg !8808
  br i1 %cmp136, label %if.then138, label %if.else149, !dbg !8809

if.then138:                                       ; preds = %if.end135
  %128 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8810
  %expnfilename139 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %128, i32 0, i32 16, !dbg !8813
  %129 = load i8*, i8** %expnfilename139, align 8, !dbg !8813
  %call140 = call i32 @strcmp(i8* %129, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.450, i64 0, i64 0)), !dbg !8814
  %cmp141 = icmp eq i32 %call140, 0, !dbg !8815
  br i1 %cmp141, label %if.then143, label %if.end148, !dbg !8816

if.then143:                                       ; preds = %if.then138
  %130 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8817
  %client_addr144 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %130, i32 0, i32 2, !dbg !8819
  %call145 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr144), !dbg !8820
  %131 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8821
  %encodedurl146 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %131, i32 0, i32 12, !dbg !8822
  %132 = load i8*, i8** %encodedurl146, align 8, !dbg !8822
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.451, i64 0, i64 0), i8* %call145, i8* %132), !dbg !8823
  %133 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8824
  %134 = load i8*, i8** @err403title, align 8, !dbg !8825
  %135 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8826
  %encodedurl147 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %135, i32 0, i32 12, !dbg !8827
  %136 = load i8*, i8** %encodedurl147, align 8, !dbg !8827
  call void @httpd_send_err(%struct.httpd_conn* %133, i32 403, i8* %134, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.452, i64 0, i64 0), i8* %136), !dbg !8828
  store i32 -1, i32* %retval, align 4, !dbg !8829
  br label %return, !dbg !8829

if.end148:                                        ; preds = %if.then138
  br label %if.end173, !dbg !8830

if.else149:                                       ; preds = %if.end135
  %137 = load i64, i64* %expnlen, align 8, !dbg !8831
  %cmp150 = icmp uge i64 %137, 10, !dbg !8833
  br i1 %cmp150, label %land.lhs.true152, label %if.end172, !dbg !8834

land.lhs.true152:                                 ; preds = %if.else149
  %138 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8835
  %expnfilename153 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %138, i32 0, i32 16, !dbg !8836
  %139 = load i8*, i8** %expnfilename153, align 8, !dbg !8836
  %140 = load i64, i64* %expnlen, align 8, !dbg !8837
  %sub154 = sub i64 %140, 10, !dbg !8838
  %add155 = add i64 %sub154, 1, !dbg !8839
  %arrayidx156 = getelementptr inbounds i8, i8* %139, i64 %add155, !dbg !8835
  %call157 = call i32 @strcmp(i8* %arrayidx156, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.450, i64 0, i64 0)), !dbg !8840
  %cmp158 = icmp eq i32 %call157, 0, !dbg !8841
  br i1 %cmp158, label %land.lhs.true160, label %if.end172, !dbg !8842

land.lhs.true160:                                 ; preds = %land.lhs.true152
  %141 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8843
  %expnfilename161 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %141, i32 0, i32 16, !dbg !8844
  %142 = load i8*, i8** %expnfilename161, align 8, !dbg !8844
  %143 = load i64, i64* %expnlen, align 8, !dbg !8845
  %sub162 = sub i64 %143, 10, !dbg !8846
  %arrayidx163 = getelementptr inbounds i8, i8* %142, i64 %sub162, !dbg !8843
  %144 = load i8, i8* %arrayidx163, align 1, !dbg !8843
  %conv164 = sext i8 %144 to i32, !dbg !8843
  %cmp165 = icmp eq i32 %conv164, 47, !dbg !8847
  br i1 %cmp165, label %if.then167, label %if.end172, !dbg !8848

if.then167:                                       ; preds = %land.lhs.true160
  %145 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8849
  %client_addr168 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %145, i32 0, i32 2, !dbg !8851
  %call169 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr168), !dbg !8852
  %146 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8853
  %encodedurl170 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %146, i32 0, i32 12, !dbg !8854
  %147 = load i8*, i8** %encodedurl170, align 8, !dbg !8854
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.451, i64 0, i64 0), i8* %call169, i8* %147), !dbg !8855
  %148 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8856
  %149 = load i8*, i8** @err403title, align 8, !dbg !8857
  %150 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8858
  %encodedurl171 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %150, i32 0, i32 12, !dbg !8859
  %151 = load i8*, i8** %encodedurl171, align 8, !dbg !8859
  call void @httpd_send_err(%struct.httpd_conn* %148, i32 403, i8* %149, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.452, i64 0, i64 0), i8* %151), !dbg !8860
  store i32 -1, i32* %retval, align 4, !dbg !8861
  br label %return, !dbg !8861

if.end172:                                        ; preds = %land.lhs.true160, %land.lhs.true152, %if.else149
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.end148
  %152 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8862
  %call174 = call i32 @check_referrer(%struct.httpd_conn* %152), !dbg !8864
  %tobool175 = icmp ne i32 %call174, 0, !dbg !8864
  br i1 %tobool175, label %if.end177, label %if.then176, !dbg !8865

if.then176:                                       ; preds = %if.end173
  store i32 -1, i32* %retval, align 4, !dbg !8866
  br label %return, !dbg !8866

if.end177:                                        ; preds = %if.end173
  %153 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8867
  %hs178 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %153, i32 0, i32 1, !dbg !8869
  %154 = load %struct.httpd_server*, %struct.httpd_server** %hs178, align 8, !dbg !8869
  %cgi_pattern = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %154, i32 0, i32 3, !dbg !8870
  %155 = load i8*, i8** %cgi_pattern, align 8, !dbg !8870
  %cmp179 = icmp ne i8* %155, null, !dbg !8871
  br i1 %cmp179, label %land.lhs.true181, label %if.end195, !dbg !8872

land.lhs.true181:                                 ; preds = %if.end177
  %156 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8873
  %sb182 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %156, i32 0, i32 59, !dbg !8874
  %st_mode183 = getelementptr inbounds %struct.stat, %struct.stat* %sb182, i32 0, i32 1, !dbg !8875
  %157 = load i16, i16* %st_mode183, align 4, !dbg !8875
  %conv184 = zext i16 %157 to i32, !dbg !8873
  %and185 = and i32 %conv184, 1, !dbg !8876
  %tobool186 = icmp ne i32 %and185, 0, !dbg !8876
  br i1 %tobool186, label %land.lhs.true187, label %if.end195, !dbg !8877

land.lhs.true187:                                 ; preds = %land.lhs.true181
  %158 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8878
  %hs188 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %158, i32 0, i32 1, !dbg !8879
  %159 = load %struct.httpd_server*, %struct.httpd_server** %hs188, align 8, !dbg !8879
  %cgi_pattern189 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %159, i32 0, i32 3, !dbg !8880
  %160 = load i8*, i8** %cgi_pattern189, align 8, !dbg !8880
  %161 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8881
  %expnfilename190 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %161, i32 0, i32 16, !dbg !8882
  %162 = load i8*, i8** %expnfilename190, align 8, !dbg !8882
  %call191 = call i32 @match(i8* %160, i8* %162), !dbg !8883
  %tobool192 = icmp ne i32 %call191, 0, !dbg !8883
  br i1 %tobool192, label %if.then193, label %if.end195, !dbg !8884

if.then193:                                       ; preds = %land.lhs.true187
  %163 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8885
  %call194 = call i32 @cgi(%struct.httpd_conn* %163), !dbg !8886
  store i32 %call194, i32* %retval, align 4, !dbg !8887
  br label %return, !dbg !8887

if.end195:                                        ; preds = %land.lhs.true187, %land.lhs.true181, %if.end177
  %164 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8888
  %sb196 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %164, i32 0, i32 59, !dbg !8890
  %st_mode197 = getelementptr inbounds %struct.stat, %struct.stat* %sb196, i32 0, i32 1, !dbg !8891
  %165 = load i16, i16* %st_mode197, align 4, !dbg !8891
  %conv198 = zext i16 %165 to i32, !dbg !8888
  %and199 = and i32 %conv198, 1, !dbg !8892
  %tobool200 = icmp ne i32 %and199, 0, !dbg !8892
  br i1 %tobool200, label %if.then201, label %if.end206, !dbg !8893

if.then201:                                       ; preds = %if.end195
  %166 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8894
  %client_addr202 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %166, i32 0, i32 2, !dbg !8896
  %call203 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr202), !dbg !8897
  %167 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8898
  %encodedurl204 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %167, i32 0, i32 12, !dbg !8899
  %168 = load i8*, i8** %encodedurl204, align 8, !dbg !8899
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.453, i64 0, i64 0), i8* %call203, i8* %168), !dbg !8900
  %169 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8901
  %170 = load i8*, i8** @err403title, align 8, !dbg !8902
  %171 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8903
  %encodedurl205 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %171, i32 0, i32 12, !dbg !8904
  %172 = load i8*, i8** %encodedurl205, align 8, !dbg !8904
  call void @httpd_send_err(%struct.httpd_conn* %169, i32 403, i8* %170, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([124 x i8], [124 x i8]* @.str.454, i64 0, i64 0), i8* %172), !dbg !8905
  store i32 -1, i32* %retval, align 4, !dbg !8906
  br label %return, !dbg !8906

if.end206:                                        ; preds = %if.end195
  %173 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8907
  %pathinfo207 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %173, i32 0, i32 18, !dbg !8909
  %174 = load i8*, i8** %pathinfo207, align 8, !dbg !8909
  %arrayidx208 = getelementptr inbounds i8, i8* %174, i64 0, !dbg !8907
  %175 = load i8, i8* %arrayidx208, align 1, !dbg !8907
  %conv209 = sext i8 %175 to i32, !dbg !8907
  %cmp210 = icmp ne i32 %conv209, 0, !dbg !8910
  br i1 %cmp210, label %if.then212, label %if.end217, !dbg !8911

if.then212:                                       ; preds = %if.end206
  %176 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8912
  %client_addr213 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %176, i32 0, i32 2, !dbg !8914
  %call214 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr213), !dbg !8915
  %177 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8916
  %encodedurl215 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %177, i32 0, i32 12, !dbg !8917
  %178 = load i8*, i8** %encodedurl215, align 8, !dbg !8917
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 6, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.455, i64 0, i64 0), i8* %call214, i8* %178), !dbg !8918
  %179 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8919
  %180 = load i8*, i8** @err403title, align 8, !dbg !8920
  %181 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8921
  %encodedurl216 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %181, i32 0, i32 12, !dbg !8922
  %182 = load i8*, i8** %encodedurl216, align 8, !dbg !8922
  call void @httpd_send_err(%struct.httpd_conn* %179, i32 403, i8* %180, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.456, i64 0, i64 0), i8* %182), !dbg !8923
  store i32 -1, i32* %retval, align 4, !dbg !8924
  br label %return, !dbg !8924

if.end217:                                        ; preds = %if.end206
  %183 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8925
  %method = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %183, i32 0, i32 8, !dbg !8927
  %184 = load i32, i32* %method, align 4, !dbg !8927
  %cmp218 = icmp ne i32 %184, 1, !dbg !8928
  br i1 %cmp218, label %land.lhs.true220, label %if.end227, !dbg !8929

land.lhs.true220:                                 ; preds = %if.end217
  %185 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8930
  %method221 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %185, i32 0, i32 8, !dbg !8931
  %186 = load i32, i32* %method221, align 4, !dbg !8931
  %cmp222 = icmp ne i32 %186, 2, !dbg !8932
  br i1 %cmp222, label %if.then224, label %if.end227, !dbg !8933

if.then224:                                       ; preds = %land.lhs.true220
  %187 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8934
  %188 = load i8*, i8** @err501title, align 8, !dbg !8936
  %189 = load i8*, i8** @err501form, align 8, !dbg !8937
  %190 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8938
  %method225 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %190, i32 0, i32 8, !dbg !8939
  %191 = load i32, i32* %method225, align 4, !dbg !8939
  %call226 = call i8* @httpd_method_str(i32 %191), !dbg !8940
  call void @httpd_send_err(%struct.httpd_conn* %187, i32 501, i8* %188, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %189, i8* %call226), !dbg !8941
  store i32 -1, i32* %retval, align 4, !dbg !8942
  br label %return, !dbg !8942

if.end227:                                        ; preds = %land.lhs.true220, %if.end217
  %192 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8943
  %got_range = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %192, i32 0, i32 53, !dbg !8945
  %193 = load i32, i32* %got_range, align 8, !dbg !8945
  %tobool228 = icmp ne i32 %193, 0, !dbg !8943
  br i1 %tobool228, label %land.lhs.true229, label %if.end242, !dbg !8946

land.lhs.true229:                                 ; preds = %if.end227
  %194 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8947
  %last_byte_index = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %194, i32 0, i32 56, !dbg !8948
  %195 = load i64, i64* %last_byte_index, align 8, !dbg !8948
  %cmp230 = icmp eq i64 %195, -1, !dbg !8949
  br i1 %cmp230, label %if.then237, label %lor.lhs.false232, !dbg !8950

lor.lhs.false232:                                 ; preds = %land.lhs.true229
  %196 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8951
  %last_byte_index233 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %196, i32 0, i32 56, !dbg !8952
  %197 = load i64, i64* %last_byte_index233, align 8, !dbg !8952
  %198 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8953
  %sb234 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %198, i32 0, i32 59, !dbg !8954
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %sb234, i32 0, i32 11, !dbg !8955
  %199 = load i64, i64* %st_size, align 8, !dbg !8955
  %cmp235 = icmp sge i64 %197, %199, !dbg !8956
  br i1 %cmp235, label %if.then237, label %if.end242, !dbg !8957

if.then237:                                       ; preds = %lor.lhs.false232, %land.lhs.true229
  %200 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8958
  %sb238 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %200, i32 0, i32 59, !dbg !8959
  %st_size239 = getelementptr inbounds %struct.stat, %struct.stat* %sb238, i32 0, i32 11, !dbg !8960
  %201 = load i64, i64* %st_size239, align 8, !dbg !8960
  %sub240 = sub nsw i64 %201, 1, !dbg !8961
  %202 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8962
  %last_byte_index241 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %202, i32 0, i32 56, !dbg !8963
  store i64 %sub240, i64* %last_byte_index241, align 8, !dbg !8964
  br label %if.end242, !dbg !8962

if.end242:                                        ; preds = %if.then237, %lor.lhs.false232, %if.end227
  %203 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8965
  call void @figure_mime(%struct.httpd_conn* %203), !dbg !8966
  %204 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8967
  %method243 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %204, i32 0, i32 8, !dbg !8969
  %205 = load i32, i32* %method243, align 4, !dbg !8969
  %cmp244 = icmp eq i32 %205, 2, !dbg !8970
  br i1 %cmp244, label %if.then246, label %if.else250, !dbg !8971

if.then246:                                       ; preds = %if.end242
  %206 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8972
  %207 = load i8*, i8** @ok200title, align 8, !dbg !8974
  %208 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8975
  %encodings = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %208, i32 0, i32 17, !dbg !8976
  %209 = load i8*, i8** %encodings, align 8, !dbg !8976
  %210 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8977
  %type = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %210, i32 0, i32 49, !dbg !8978
  %211 = load i8*, i8** %type, align 8, !dbg !8978
  %212 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8979
  %sb247 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %212, i32 0, i32 59, !dbg !8980
  %st_size248 = getelementptr inbounds %struct.stat, %struct.stat* %sb247, i32 0, i32 11, !dbg !8981
  %213 = load i64, i64* %st_size248, align 8, !dbg !8981
  %214 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8982
  %sb249 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %214, i32 0, i32 59, !dbg !8983
  %st_mtimespec = getelementptr inbounds %struct.stat, %struct.stat* %sb249, i32 0, i32 8, !dbg !8984
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtimespec, i32 0, i32 0, !dbg !8984
  %215 = load i64, i64* %tv_sec, align 8, !dbg !8984
  call void @send_mime(%struct.httpd_conn* %206, i32 200, i8* %207, i8* %209, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %211, i64 %213, i64 %215), !dbg !8985
  br label %if.end284, !dbg !8986

if.else250:                                       ; preds = %if.end242
  %216 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8987
  %if_modified_since = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %216, i32 0, i32 46, !dbg !8989
  %217 = load i64, i64* %if_modified_since, align 8, !dbg !8989
  %cmp251 = icmp ne i64 %217, -1, !dbg !8990
  br i1 %cmp251, label %land.lhs.true253, label %if.else266, !dbg !8991

land.lhs.true253:                                 ; preds = %if.else250
  %218 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8992
  %if_modified_since254 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %218, i32 0, i32 46, !dbg !8993
  %219 = load i64, i64* %if_modified_since254, align 8, !dbg !8993
  %220 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8994
  %sb255 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %220, i32 0, i32 59, !dbg !8995
  %st_mtimespec256 = getelementptr inbounds %struct.stat, %struct.stat* %sb255, i32 0, i32 8, !dbg !8996
  %tv_sec257 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtimespec256, i32 0, i32 0, !dbg !8996
  %221 = load i64, i64* %tv_sec257, align 8, !dbg !8996
  %cmp258 = icmp sge i64 %219, %221, !dbg !8997
  br i1 %cmp258, label %if.then260, label %if.else266, !dbg !8998

if.then260:                                       ; preds = %land.lhs.true253
  %222 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !8999
  %223 = load i8*, i8** @err304title, align 8, !dbg !9001
  %224 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9002
  %encodings261 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %224, i32 0, i32 17, !dbg !9003
  %225 = load i8*, i8** %encodings261, align 8, !dbg !9003
  %226 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9004
  %type262 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %226, i32 0, i32 49, !dbg !9005
  %227 = load i8*, i8** %type262, align 8, !dbg !9005
  %228 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9006
  %sb263 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %228, i32 0, i32 59, !dbg !9007
  %st_mtimespec264 = getelementptr inbounds %struct.stat, %struct.stat* %sb263, i32 0, i32 8, !dbg !9008
  %tv_sec265 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtimespec264, i32 0, i32 0, !dbg !9008
  %229 = load i64, i64* %tv_sec265, align 8, !dbg !9008
  call void @send_mime(%struct.httpd_conn* %222, i32 304, i8* %223, i8* %225, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %227, i64 -1, i64 %229), !dbg !9009
  br label %if.end283, !dbg !9010

if.else266:                                       ; preds = %land.lhs.true253, %if.else250
  %230 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9011
  %expnfilename267 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %230, i32 0, i32 16, !dbg !9013
  %231 = load i8*, i8** %expnfilename267, align 8, !dbg !9013
  %232 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9014
  %sb268 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %232, i32 0, i32 59, !dbg !9015
  %233 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !9016
  %call269 = call i8* @mmc_map(i8* %231, %struct.stat* %sb268, %struct.timeval* %233), !dbg !9017
  %234 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9018
  %file_address = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %234, i32 0, i32 61, !dbg !9019
  store i8* %call269, i8** %file_address, align 8, !dbg !9020
  %235 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9021
  %file_address270 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %235, i32 0, i32 61, !dbg !9023
  %236 = load i8*, i8** %file_address270, align 8, !dbg !9023
  %cmp271 = icmp eq i8* %236, null, !dbg !9024
  br i1 %cmp271, label %if.then273, label %if.end275, !dbg !9025

if.then273:                                       ; preds = %if.else266
  %237 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9026
  %238 = load i8*, i8** @err500title, align 8, !dbg !9028
  %239 = load i8*, i8** @err500form, align 8, !dbg !9029
  %240 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9030
  %encodedurl274 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %240, i32 0, i32 12, !dbg !9031
  %241 = load i8*, i8** %encodedurl274, align 8, !dbg !9031
  call void @httpd_send_err(%struct.httpd_conn* %237, i32 500, i8* %238, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %239, i8* %241), !dbg !9032
  store i32 -1, i32* %retval, align 4, !dbg !9033
  br label %return, !dbg !9033

if.end275:                                        ; preds = %if.else266
  %242 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9034
  %243 = load i8*, i8** @ok200title, align 8, !dbg !9035
  %244 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9036
  %encodings276 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %244, i32 0, i32 17, !dbg !9037
  %245 = load i8*, i8** %encodings276, align 8, !dbg !9037
  %246 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9038
  %type277 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %246, i32 0, i32 49, !dbg !9039
  %247 = load i8*, i8** %type277, align 8, !dbg !9039
  %248 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9040
  %sb278 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %248, i32 0, i32 59, !dbg !9041
  %st_size279 = getelementptr inbounds %struct.stat, %struct.stat* %sb278, i32 0, i32 11, !dbg !9042
  %249 = load i64, i64* %st_size279, align 8, !dbg !9042
  %250 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9043
  %sb280 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %250, i32 0, i32 59, !dbg !9044
  %st_mtimespec281 = getelementptr inbounds %struct.stat, %struct.stat* %sb280, i32 0, i32 8, !dbg !9045
  %tv_sec282 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtimespec281, i32 0, i32 0, !dbg !9045
  %251 = load i64, i64* %tv_sec282, align 8, !dbg !9045
  call void @send_mime(%struct.httpd_conn* %242, i32 200, i8* %243, i8* %245, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %247, i64 %249, i64 %251), !dbg !9046
  br label %if.end283

if.end283:                                        ; preds = %if.end275, %if.then260
  br label %if.end284

if.end284:                                        ; preds = %if.end283, %if.then246
  store i32 0, i32* %retval, align 4, !dbg !9047
  br label %return, !dbg !9047

return:                                           ; preds = %if.end284, %if.then273, %if.then224, %if.then212, %if.then201, %if.then193, %if.then176, %if.then167, %if.then143, %if.then134, %if.then116, %if.then103, %if.end93, %if.then92, %if.then88, %if.then78, %if.then37, %if.then19, %if.then4, %if.then
  %252 = load i32, i32* %retval, align 4, !dbg !9048
  ret i32 %252, !dbg !9048
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @send_dirredirect(%struct.httpd_conn* %hc) #0 !dbg !851 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %cp = alloca i8*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !9049, metadata !DIExpression()), !dbg !9050
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9051
  %query = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 19, !dbg !9053
  %1 = load i8*, i8** %query, align 8, !dbg !9053
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !9051
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9051
  %conv = sext i8 %2 to i32, !dbg !9051
  %cmp = icmp ne i32 %conv, 0, !dbg !9054
  br i1 %cmp, label %if.then, label %if.else, !dbg !9055

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !9056, metadata !DIExpression()), !dbg !9058
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9059
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %3, i32 0, i32 12, !dbg !9060
  %4 = load i8*, i8** %encodedurl, align 8, !dbg !9060
  %call = call i8* @strchr(i8* %4, i32 63), !dbg !9061
  store i8* %call, i8** %cp, align 8, !dbg !9058
  %5 = load i8*, i8** %cp, align 8, !dbg !9062
  %cmp2 = icmp ne i8* %5, null, !dbg !9064
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !9065

if.then4:                                         ; preds = %if.then
  %6 = load i8*, i8** %cp, align 8, !dbg !9066
  store i8 0, i8* %6, align 1, !dbg !9067
  br label %if.end, !dbg !9068

if.end:                                           ; preds = %if.then4, %if.then
  %7 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9069
  %encodedurl5 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %7, i32 0, i32 12, !dbg !9070
  %8 = load i8*, i8** %encodedurl5, align 8, !dbg !9070
  %call6 = call i64 @strlen(i8* %8), !dbg !9071
  %add = add i64 %call6, 2, !dbg !9072
  %9 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9073
  %query7 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %9, i32 0, i32 19, !dbg !9074
  %10 = load i8*, i8** %query7, align 8, !dbg !9074
  %call8 = call i64 @strlen(i8* %10), !dbg !9075
  %add9 = add i64 %add, %call8, !dbg !9076
  call void @httpd_realloc_str(i8** @send_dirredirect.location, i64* @send_dirredirect.maxlocation, i64 %add9), !dbg !9077
  %11 = load i8*, i8** @send_dirredirect.location, align 8, !dbg !9078
  %12 = load i64, i64* @send_dirredirect.maxlocation, align 8, !dbg !9079
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9080
  %encodedurl10 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 12, !dbg !9081
  %14 = load i8*, i8** %encodedurl10, align 8, !dbg !9081
  %15 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9082
  %query11 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %15, i32 0, i32 19, !dbg !9083
  %16 = load i8*, i8** %query11, align 8, !dbg !9083
  %call12 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %11, i64 %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.459, i64 0, i64 0), i8* %14, i8* %16), !dbg !9084
  br label %if.end18, !dbg !9085

if.else:                                          ; preds = %entry
  %17 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9086
  %encodedurl13 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %17, i32 0, i32 12, !dbg !9088
  %18 = load i8*, i8** %encodedurl13, align 8, !dbg !9088
  %call14 = call i64 @strlen(i8* %18), !dbg !9089
  %add15 = add i64 %call14, 1, !dbg !9090
  call void @httpd_realloc_str(i8** @send_dirredirect.location, i64* @send_dirredirect.maxlocation, i64 %add15), !dbg !9091
  %19 = load i8*, i8** @send_dirredirect.location, align 8, !dbg !9092
  %20 = load i64, i64* @send_dirredirect.maxlocation, align 8, !dbg !9093
  %21 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9094
  %encodedurl16 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %21, i32 0, i32 12, !dbg !9095
  %22 = load i8*, i8** %encodedurl16, align 8, !dbg !9095
  %call17 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %19, i64 %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.460, i64 0, i64 0), i8* %22), !dbg !9096
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.end
  %23 = load i8*, i8** @send_dirredirect.location, align 8, !dbg !9097
  %call19 = call i64 @strlen(i8* %23), !dbg !9098
  %add20 = add i64 11, %call19, !dbg !9099
  call void @httpd_realloc_str(i8** @send_dirredirect.header, i64* @send_dirredirect.maxheader, i64 %add20), !dbg !9100
  %24 = load i8*, i8** @send_dirredirect.header, align 8, !dbg !9101
  %25 = load i64, i64* @send_dirredirect.maxheader, align 8, !dbg !9102
  %26 = load i8*, i8** @send_dirredirect.location, align 8, !dbg !9103
  %call21 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %24, i64 %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.461, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @send_dirredirect.headstr, i64 0, i64 0), i8* %26), !dbg !9104
  %27 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9105
  %28 = load i8*, i8** @err302title, align 8, !dbg !9106
  %29 = load i8*, i8** @send_dirredirect.header, align 8, !dbg !9107
  %30 = load i8*, i8** @err302form, align 8, !dbg !9108
  %31 = load i8*, i8** @send_dirredirect.location, align 8, !dbg !9109
  call void @send_response(%struct.httpd_conn* %27, i32 302, i8* %28, i8* %29, i8* %30, i8* %31), !dbg !9110
  ret void, !dbg !9111
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @auth_check(%struct.httpd_conn* %hc, i8* %dirname) #0 !dbg !9112 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %dirname.addr = alloca i8*, align 8
  %topdir = alloca i8*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !9113, metadata !DIExpression()), !dbg !9114
  store i8* %dirname, i8** %dirname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !9115, metadata !DIExpression()), !dbg !9116
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9117
  %hs = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 1, !dbg !9119
  %1 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !9119
  %global_passwd = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %1, i32 0, i32 16, !dbg !9120
  %2 = load i32, i32* %global_passwd, align 8, !dbg !9120
  %tobool = icmp ne i32 %2, 0, !dbg !9117
  br i1 %tobool, label %if.then, label %if.end7, !dbg !9121

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %topdir, metadata !9122, metadata !DIExpression()), !dbg !9124
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9125
  %hs1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %3, i32 0, i32 1, !dbg !9127
  %4 = load %struct.httpd_server*, %struct.httpd_server** %hs1, align 8, !dbg !9127
  %vhost = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %4, i32 0, i32 15, !dbg !9128
  %5 = load i32, i32* %vhost, align 4, !dbg !9128
  %tobool2 = icmp ne i32 %5, 0, !dbg !9125
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !9129

land.lhs.true:                                    ; preds = %if.then
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9130
  %hostdir = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 29, !dbg !9131
  %7 = load i8*, i8** %hostdir, align 8, !dbg !9131
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !9130
  %8 = load i8, i8* %arrayidx, align 1, !dbg !9130
  %conv = sext i8 %8 to i32, !dbg !9130
  %cmp = icmp ne i32 %conv, 0, !dbg !9132
  br i1 %cmp, label %if.then4, label %if.else, !dbg !9133

if.then4:                                         ; preds = %land.lhs.true
  %9 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9134
  %hostdir5 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %9, i32 0, i32 29, !dbg !9135
  %10 = load i8*, i8** %hostdir5, align 8, !dbg !9135
  store i8* %10, i8** %topdir, align 8, !dbg !9136
  br label %if.end, !dbg !9137

if.else:                                          ; preds = %land.lhs.true, %if.then
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.242, i64 0, i64 0), i8** %topdir, align 8, !dbg !9138
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %11 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9139
  %12 = load i8*, i8** %topdir, align 8, !dbg !9140
  %call = call i32 @auth_check2(%struct.httpd_conn* %11, i8* %12), !dbg !9141
  switch i32 %call, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 1, label %sw.bb6
  ], !dbg !9142

sw.bb:                                            ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !9143
  br label %return, !dbg !9143

sw.bb6:                                           ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !9145
  br label %return, !dbg !9145

sw.epilog:                                        ; preds = %if.end
  br label %if.end7, !dbg !9146

if.end7:                                          ; preds = %sw.epilog, %entry
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9147
  %14 = load i8*, i8** %dirname.addr, align 8, !dbg !9148
  %call8 = call i32 @auth_check2(%struct.httpd_conn* %13, i8* %14), !dbg !9149
  store i32 %call8, i32* %retval, align 4, !dbg !9150
  br label %return, !dbg !9150

return:                                           ; preds = %if.end7, %sw.bb6, %sw.bb
  %15 = load i32, i32* %retval, align 4, !dbg !9151
  ret i32 %15, !dbg !9151
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @check_referrer(%struct.httpd_conn* %hc) #0 !dbg !9152 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %r = alloca i32, align 4
  %cp = alloca i8*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !9153, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.declare(metadata i32* %r, metadata !9155, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !9157, metadata !DIExpression()), !dbg !9158
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9159
  %hs = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 1, !dbg !9161
  %1 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !9161
  %url_pattern = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %1, i32 0, i32 17, !dbg !9162
  %2 = load i8*, i8** %url_pattern, align 8, !dbg !9162
  %cmp = icmp eq i8* %2, null, !dbg !9163
  br i1 %cmp, label %if.then, label %if.end, !dbg !9164

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !9165
  br label %return, !dbg !9165

if.end:                                           ; preds = %entry
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9166
  %call = call i32 @really_check_referrer(%struct.httpd_conn* %3), !dbg !9167
  store i32 %call, i32* %r, align 4, !dbg !9168
  %4 = load i32, i32* %r, align 4, !dbg !9169
  %tobool = icmp ne i32 %4, 0, !dbg !9169
  br i1 %tobool, label %if.end14, label %if.then1, !dbg !9171

if.then1:                                         ; preds = %if.end
  %5 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9172
  %hs2 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %5, i32 0, i32 1, !dbg !9175
  %6 = load %struct.httpd_server*, %struct.httpd_server** %hs2, align 8, !dbg !9175
  %vhost = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %6, i32 0, i32 15, !dbg !9176
  %7 = load i32, i32* %vhost, align 4, !dbg !9176
  %tobool3 = icmp ne i32 %7, 0, !dbg !9172
  br i1 %tobool3, label %land.lhs.true, label %if.else, !dbg !9177

land.lhs.true:                                    ; preds = %if.then1
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9178
  %hostname = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 50, !dbg !9179
  %9 = load i8*, i8** %hostname, align 8, !dbg !9179
  %cmp4 = icmp ne i8* %9, null, !dbg !9180
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !9181

if.then5:                                         ; preds = %land.lhs.true
  %10 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9182
  %hostname6 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %10, i32 0, i32 50, !dbg !9183
  %11 = load i8*, i8** %hostname6, align 8, !dbg !9183
  store i8* %11, i8** %cp, align 8, !dbg !9184
  br label %if.end8, !dbg !9185

if.else:                                          ; preds = %land.lhs.true, %if.then1
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9186
  %hs7 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 1, !dbg !9187
  %13 = load %struct.httpd_server*, %struct.httpd_server** %hs7, align 8, !dbg !9187
  %server_hostname = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %13, i32 0, i32 1, !dbg !9188
  %14 = load i8*, i8** %server_hostname, align 8, !dbg !9188
  store i8* %14, i8** %cp, align 8, !dbg !9189
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then5
  %15 = load i8*, i8** %cp, align 8, !dbg !9190
  %cmp9 = icmp eq i8* %15, null, !dbg !9192
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !9193

if.then10:                                        ; preds = %if.end8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8** %cp, align 8, !dbg !9194
  br label %if.end11, !dbg !9195

if.end11:                                         ; preds = %if.then10, %if.end8
  %16 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9196
  %client_addr = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %16, i32 0, i32 2, !dbg !9197
  %call12 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr), !dbg !9198
  %17 = load i8*, i8** %cp, align 8, !dbg !9199
  %18 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9200
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %18, i32 0, i32 12, !dbg !9201
  %19 = load i8*, i8** %encodedurl, align 8, !dbg !9201
  %20 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9202
  %referrer = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %20, i32 0, i32 20, !dbg !9203
  %21 = load i8*, i8** %referrer, align 8, !dbg !9203
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 6, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.471, i64 0, i64 0), i8* %call12, i8* %17, i8* %19, i8* %21), !dbg !9204
  %22 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9205
  %23 = load i8*, i8** @err403title, align 8, !dbg !9206
  %24 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9207
  %encodedurl13 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %24, i32 0, i32 12, !dbg !9208
  %25 = load i8*, i8** %encodedurl13, align 8, !dbg !9208
  call void @httpd_send_err(%struct.httpd_conn* %22, i32 403, i8* %23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.472, i64 0, i64 0), i8* %25), !dbg !9209
  br label %if.end14, !dbg !9210

if.end14:                                         ; preds = %if.end11, %if.end
  %26 = load i32, i32* %r, align 4, !dbg !9211
  store i32 %26, i32* %retval, align 4, !dbg !9212
  br label %return, !dbg !9212

return:                                           ; preds = %if.end14, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !9213
  ret i32 %27, !dbg !9213
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @ls(%struct.httpd_conn* %hc) #0 !dbg !916 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %dirp = alloca %struct.DIR*, align 8
  %de = alloca %struct.dirent*, align 8
  %namlen = alloca i32, align 4
  %nnames = alloca i32, align 4
  %fp = alloca %struct.__sFILE*, align 8
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %sb = alloca %struct.stat, align 8
  %lsb = alloca %struct.stat, align 8
  %modestr = alloca [20 x i8], align 16
  %linkprefix = alloca i8*, align 8
  %lnk = alloca [1025 x i8], align 16
  %linklen = alloca i32, align 4
  %fileclass = alloca i8*, align 8
  %now = alloca i64, align 8
  %timestr = alloca i8*, align 8
  %client_data = alloca %union.ClientData, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !9214, metadata !DIExpression()), !dbg !9215
  call void @llvm.dbg.declare(metadata %struct.DIR** %dirp, metadata !9216, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.declare(metadata %struct.dirent** %de, metadata !9218, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.declare(metadata i32* %namlen, metadata !9233, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.declare(metadata i32* %nnames, metadata !9235, metadata !DIExpression()), !dbg !9236
  call void @llvm.dbg.declare(metadata %struct.__sFILE** %fp, metadata !9237, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9239, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.declare(metadata i32* %r, metadata !9241, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !9243, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.declare(metadata %struct.stat* %lsb, metadata !9245, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.declare(metadata [20 x i8]* %modestr, metadata !9247, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.declare(metadata i8** %linkprefix, metadata !9252, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.declare(metadata [1025 x i8]* %lnk, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.declare(metadata i32* %linklen, metadata !9256, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.declare(metadata i8** %fileclass, metadata !9258, metadata !DIExpression()), !dbg !9259
  call void @llvm.dbg.declare(metadata i64* %now, metadata !9260, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.declare(metadata i8** %timestr, metadata !9262, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !9264, metadata !DIExpression()), !dbg !9265
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9266
  %expnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 16, !dbg !9267
  %1 = load i8*, i8** %expnfilename, align 8, !dbg !9267
  %call = call %struct.DIR* @"\01_opendir$INODE64"(i8* %1), !dbg !9268
  store %struct.DIR* %call, %struct.DIR** %dirp, align 8, !dbg !9269
  %2 = load %struct.DIR*, %struct.DIR** %dirp, align 8, !dbg !9270
  %cmp = icmp eq %struct.DIR* %2, null, !dbg !9272
  br i1 %cmp, label %if.then, label %if.end, !dbg !9273

if.then:                                          ; preds = %entry
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9274
  %expnfilename1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %3, i32 0, i32 16, !dbg !9276
  %4 = load i8*, i8** %expnfilename1, align 8, !dbg !9276
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.473, i64 0, i64 0), i8* %4), !dbg !9277
  %5 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9278
  %6 = load i8*, i8** @err404title, align 8, !dbg !9279
  %7 = load i8*, i8** @err404form, align 8, !dbg !9280
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9281
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 12, !dbg !9282
  %9 = load i8*, i8** %encodedurl, align 8, !dbg !9282
  call void @httpd_send_err(%struct.httpd_conn* %5, i32 404, i8* %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %7, i8* %9), !dbg !9283
  store i32 -1, i32* %retval, align 4, !dbg !9284
  br label %return, !dbg !9284

if.end:                                           ; preds = %entry
  %10 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9285
  %method = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %10, i32 0, i32 8, !dbg !9287
  %11 = load i32, i32* %method, align 4, !dbg !9287
  %cmp2 = icmp eq i32 %11, 2, !dbg !9288
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !9289

if.then3:                                         ; preds = %if.end
  %12 = load %struct.DIR*, %struct.DIR** %dirp, align 8, !dbg !9290
  %call4 = call i32 @"\01_closedir"(%struct.DIR* %12), !dbg !9292
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9293
  %14 = load i8*, i8** @ok200title, align 8, !dbg !9294
  %15 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9295
  %sb5 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %15, i32 0, i32 59, !dbg !9296
  %st_mtimespec = getelementptr inbounds %struct.stat, %struct.stat* %sb5, i32 0, i32 8, !dbg !9297
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtimespec, i32 0, i32 0, !dbg !9297
  %16 = load i64, i64* %tv_sec, align 8, !dbg !9297
  call void @send_mime(%struct.httpd_conn* %13, i32 200, i8* %14, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69.174, i64 0, i64 0), i64 -1, i64 %16), !dbg !9298
  br label %if.end290, !dbg !9299

if.else:                                          ; preds = %if.end
  %17 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9300
  %method6 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %17, i32 0, i32 8, !dbg !9302
  %18 = load i32, i32* %method6, align 4, !dbg !9302
  %cmp7 = icmp eq i32 %18, 1, !dbg !9303
  br i1 %cmp7, label %if.then8, label %if.else285, !dbg !9304

if.then8:                                         ; preds = %if.else
  %19 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9305
  %hs = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %19, i32 0, i32 1, !dbg !9308
  %20 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !9308
  %cgi_limit = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %20, i32 0, i32 4, !dbg !9309
  %21 = load i32, i32* %cgi_limit, align 8, !dbg !9309
  %cmp9 = icmp ne i32 %21, 0, !dbg !9310
  br i1 %cmp9, label %land.lhs.true, label %if.end17, !dbg !9311

land.lhs.true:                                    ; preds = %if.then8
  %22 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9312
  %hs10 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %22, i32 0, i32 1, !dbg !9313
  %23 = load %struct.httpd_server*, %struct.httpd_server** %hs10, align 8, !dbg !9313
  %cgi_count = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %23, i32 0, i32 5, !dbg !9314
  %24 = load i32, i32* %cgi_count, align 4, !dbg !9314
  %25 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9315
  %hs11 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %25, i32 0, i32 1, !dbg !9316
  %26 = load %struct.httpd_server*, %struct.httpd_server** %hs11, align 8, !dbg !9316
  %cgi_limit12 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %26, i32 0, i32 4, !dbg !9317
  %27 = load i32, i32* %cgi_limit12, align 8, !dbg !9317
  %cmp13 = icmp sge i32 %24, %27, !dbg !9318
  br i1 %cmp13, label %if.then14, label %if.end17, !dbg !9319

if.then14:                                        ; preds = %land.lhs.true
  %28 = load %struct.DIR*, %struct.DIR** %dirp, align 8, !dbg !9320
  %call15 = call i32 @"\01_closedir"(%struct.DIR* %28), !dbg !9322
  %29 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9323
  %30 = load i8*, i8** @httpd_err503title, align 8, !dbg !9324
  %31 = load i8*, i8** @httpd_err503form, align 8, !dbg !9325
  %32 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9326
  %encodedurl16 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %32, i32 0, i32 12, !dbg !9327
  %33 = load i8*, i8** %encodedurl16, align 8, !dbg !9327
  call void @httpd_send_err(%struct.httpd_conn* %29, i32 503, i8* %30, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %31, i8* %33), !dbg !9328
  store i32 -1, i32* %retval, align 4, !dbg !9329
  br label %return, !dbg !9329

if.end17:                                         ; preds = %land.lhs.true, %if.then8
  %34 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9330
  %hs18 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %34, i32 0, i32 1, !dbg !9331
  %35 = load %struct.httpd_server*, %struct.httpd_server** %hs18, align 8, !dbg !9331
  %cgi_count19 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %35, i32 0, i32 5, !dbg !9332
  %36 = load i32, i32* %cgi_count19, align 4, !dbg !9333
  %inc = add nsw i32 %36, 1, !dbg !9333
  store i32 %inc, i32* %cgi_count19, align 4, !dbg !9333
  %call20 = call i32 @fork(), !dbg !9334
  store i32 %call20, i32* %r, align 4, !dbg !9335
  %37 = load i32, i32* %r, align 4, !dbg !9336
  %cmp21 = icmp slt i32 %37, 0, !dbg !9338
  br i1 %cmp21, label %if.then22, label %if.end25, !dbg !9339

if.then22:                                        ; preds = %if.end17
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.474, i64 0, i64 0)), !dbg !9340
  %38 = load %struct.DIR*, %struct.DIR** %dirp, align 8, !dbg !9342
  %call23 = call i32 @"\01_closedir"(%struct.DIR* %38), !dbg !9343
  %39 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9344
  %40 = load i8*, i8** @err500title, align 8, !dbg !9345
  %41 = load i8*, i8** @err500form, align 8, !dbg !9346
  %42 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9347
  %encodedurl24 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %42, i32 0, i32 12, !dbg !9348
  %43 = load i8*, i8** %encodedurl24, align 8, !dbg !9348
  call void @httpd_send_err(%struct.httpd_conn* %39, i32 500, i8* %40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %41, i8* %43), !dbg !9349
  store i32 -1, i32* %retval, align 4, !dbg !9350
  br label %return, !dbg !9350

if.end25:                                         ; preds = %if.end17
  %44 = load i32, i32* %r, align 4, !dbg !9351
  %cmp26 = icmp eq i32 %44, 0, !dbg !9353
  br i1 %cmp26, label %if.then27, label %if.end276, !dbg !9354

if.then27:                                        ; preds = %if.end25
  store i32 1, i32* @sub_process, align 4, !dbg !9355
  %45 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9357
  %hs28 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %45, i32 0, i32 1, !dbg !9358
  %46 = load %struct.httpd_server*, %struct.httpd_server** %hs28, align 8, !dbg !9358
  call void @httpd_unlisten(%struct.httpd_server* %46), !dbg !9359
  %47 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9360
  %48 = load i8*, i8** @ok200title, align 8, !dbg !9361
  %49 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9362
  %sb29 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %49, i32 0, i32 59, !dbg !9363
  %st_mtimespec30 = getelementptr inbounds %struct.stat, %struct.stat* %sb29, i32 0, i32 8, !dbg !9364
  %tv_sec31 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtimespec30, i32 0, i32 0, !dbg !9364
  %50 = load i64, i64* %tv_sec31, align 8, !dbg !9364
  call void @send_mime(%struct.httpd_conn* %47, i32 200, i8* %48, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69.174, i64 0, i64 0), i64 -1, i64 %50), !dbg !9365
  %51 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9366
  call void @httpd_write_response(%struct.httpd_conn* %51), !dbg !9367
  %call32 = call i32 @"\01_nice"(i32 10), !dbg !9368
  %52 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9369
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %52, i32 0, i32 60, !dbg !9370
  %53 = load i32, i32* %conn_fd, align 8, !dbg !9370
  %call33 = call %struct.__sFILE* @"\01_fdopen"(i32 %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.475, i64 0, i64 0)), !dbg !9371
  store %struct.__sFILE* %call33, %struct.__sFILE** %fp, align 8, !dbg !9372
  %54 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !9373
  %cmp34 = icmp eq %struct.__sFILE* %54, null, !dbg !9375
  br i1 %cmp34, label %if.then35, label %if.end38, !dbg !9376

if.then35:                                        ; preds = %if.then27
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.476, i64 0, i64 0)), !dbg !9377
  %55 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9379
  %56 = load i8*, i8** @err500title, align 8, !dbg !9380
  %57 = load i8*, i8** @err500form, align 8, !dbg !9381
  %58 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9382
  %encodedurl36 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %58, i32 0, i32 12, !dbg !9383
  %59 = load i8*, i8** %encodedurl36, align 8, !dbg !9383
  call void @httpd_send_err(%struct.httpd_conn* %55, i32 500, i8* %56, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %57, i8* %59), !dbg !9384
  %60 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9385
  call void @httpd_write_response(%struct.httpd_conn* %60), !dbg !9386
  %61 = load %struct.DIR*, %struct.DIR** %dirp, align 8, !dbg !9387
  %call37 = call i32 @"\01_closedir"(%struct.DIR* %61), !dbg !9388
  call void @exit(i32 1) #13, !dbg !9389
  unreachable, !dbg !9389

if.end38:                                         ; preds = %if.then27
  %62 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !9390
  %63 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9391
  %encodedurl39 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %63, i32 0, i32 12, !dbg !9392
  %64 = load i8*, i8** %encodedurl39, align 8, !dbg !9392
  %65 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9393
  %encodedurl40 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %65, i32 0, i32 12, !dbg !9394
  %66 = load i8*, i8** %encodedurl40, align 8, !dbg !9394
  %call41 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %62, i8* getelementptr inbounds ([400 x i8], [400 x i8]* @.str.477, i64 0, i64 0), i8* %64, i8* %66), !dbg !9395
  store i32 0, i32* %nnames, align 4, !dbg !9396
  br label %while.cond, !dbg !9397

while.cond:                                       ; preds = %if.end75, %if.end38
  %67 = load %struct.DIR*, %struct.DIR** %dirp, align 8, !dbg !9398
  %call42 = call %struct.dirent* @"\01_readdir$INODE64"(%struct.DIR* %67), !dbg !9399
  store %struct.dirent* %call42, %struct.dirent** %de, align 8, !dbg !9400
  %cmp43 = icmp ne %struct.dirent* %call42, null, !dbg !9401
  br i1 %cmp43, label %while.body, label %while.end, !dbg !9397

while.body:                                       ; preds = %while.cond
  %68 = load i32, i32* %nnames, align 4, !dbg !9402
  %69 = load i32, i32* @ls.maxnames, align 4, !dbg !9405
  %cmp44 = icmp sge i32 %68, %69, !dbg !9406
  br i1 %cmp44, label %if.then45, label %if.end75, !dbg !9407

if.then45:                                        ; preds = %while.body
  %70 = load i32, i32* @ls.maxnames, align 4, !dbg !9408
  %cmp46 = icmp eq i32 %70, 0, !dbg !9411
  br i1 %cmp46, label %if.then47, label %if.else53, !dbg !9412

if.then47:                                        ; preds = %if.then45
  store i32 100, i32* @ls.maxnames, align 4, !dbg !9413
  %71 = load i32, i32* @ls.maxnames, align 4, !dbg !9415
  %mul = mul nsw i32 %71, 1025, !dbg !9415
  %conv = sext i32 %mul to i64, !dbg !9415
  %mul48 = mul i64 1, %conv, !dbg !9415
  %call49 = call i8* @malloc(i64 %mul48) #15, !dbg !9415
  store i8* %call49, i8** @ls.names, align 8, !dbg !9416
  %72 = load i32, i32* @ls.maxnames, align 4, !dbg !9417
  %conv50 = sext i32 %72 to i64, !dbg !9417
  %mul51 = mul i64 8, %conv50, !dbg !9417
  %call52 = call i8* @malloc(i64 %mul51) #15, !dbg !9417
  %73 = bitcast i8* %call52 to i8**, !dbg !9417
  store i8** %73, i8*** @ls.nameptrs, align 8, !dbg !9418
  br label %if.end62, !dbg !9419

if.else53:                                        ; preds = %if.then45
  %74 = load i32, i32* @ls.maxnames, align 4, !dbg !9420
  %mul54 = mul nsw i32 %74, 2, !dbg !9420
  store i32 %mul54, i32* @ls.maxnames, align 4, !dbg !9420
  %75 = load i8*, i8** @ls.names, align 8, !dbg !9422
  %76 = load i32, i32* @ls.maxnames, align 4, !dbg !9422
  %mul55 = mul nsw i32 %76, 1025, !dbg !9422
  %conv56 = sext i32 %mul55 to i64, !dbg !9422
  %mul57 = mul i64 1, %conv56, !dbg !9422
  %call58 = call i8* @realloc(i8* %75, i64 %mul57) #16, !dbg !9422
  store i8* %call58, i8** @ls.names, align 8, !dbg !9423
  %77 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9424
  %78 = bitcast i8** %77 to i8*, !dbg !9424
  %79 = load i32, i32* @ls.maxnames, align 4, !dbg !9424
  %conv59 = sext i32 %79 to i64, !dbg !9424
  %mul60 = mul i64 8, %conv59, !dbg !9424
  %call61 = call i8* @realloc(i8* %78, i64 %mul60) #16, !dbg !9424
  %80 = bitcast i8* %call61 to i8**, !dbg !9424
  store i8** %80, i8*** @ls.nameptrs, align 8, !dbg !9425
  br label %if.end62

if.end62:                                         ; preds = %if.else53, %if.then47
  %81 = load i8*, i8** @ls.names, align 8, !dbg !9426
  %cmp63 = icmp eq i8* %81, null, !dbg !9428
  br i1 %cmp63, label %if.then67, label %lor.lhs.false, !dbg !9429

lor.lhs.false:                                    ; preds = %if.end62
  %82 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9430
  %cmp65 = icmp eq i8** %82, null, !dbg !9431
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !9432

if.then67:                                        ; preds = %lor.lhs.false, %if.end62
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.478, i64 0, i64 0)), !dbg !9433
  call void @exit(i32 1) #13, !dbg !9435
  unreachable, !dbg !9435

if.end68:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !9436
  br label %for.cond, !dbg !9438

for.cond:                                         ; preds = %for.inc, %if.end68
  %83 = load i32, i32* %i, align 4, !dbg !9439
  %84 = load i32, i32* @ls.maxnames, align 4, !dbg !9441
  %cmp69 = icmp slt i32 %83, %84, !dbg !9442
  br i1 %cmp69, label %for.body, label %for.end, !dbg !9443

for.body:                                         ; preds = %for.cond
  %85 = load i8*, i8** @ls.names, align 8, !dbg !9444
  %86 = load i32, i32* %i, align 4, !dbg !9445
  %mul71 = mul nsw i32 %86, 1025, !dbg !9446
  %idxprom = sext i32 %mul71 to i64, !dbg !9444
  %arrayidx = getelementptr inbounds i8, i8* %85, i64 %idxprom, !dbg !9444
  %87 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9447
  %88 = load i32, i32* %i, align 4, !dbg !9448
  %idxprom72 = sext i32 %88 to i64, !dbg !9447
  %arrayidx73 = getelementptr inbounds i8*, i8** %87, i64 %idxprom72, !dbg !9447
  store i8* %arrayidx, i8** %arrayidx73, align 8, !dbg !9449
  br label %for.inc, !dbg !9447

for.inc:                                          ; preds = %for.body
  %89 = load i32, i32* %i, align 4, !dbg !9450
  %inc74 = add nsw i32 %89, 1, !dbg !9450
  store i32 %inc74, i32* %i, align 4, !dbg !9450
  br label %for.cond, !dbg !9451, !llvm.loop !9452

for.end:                                          ; preds = %for.cond
  br label %if.end75, !dbg !9454

if.end75:                                         ; preds = %for.end, %while.body
  %90 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !9455
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %90, i32 0, i32 5, !dbg !9455
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %d_name, i64 0, i64 0, !dbg !9455
  %call76 = call i64 @strlen(i8* %arraydecay), !dbg !9455
  %conv77 = trunc i64 %call76 to i32, !dbg !9455
  store i32 %conv77, i32* %namlen, align 4, !dbg !9456
  %91 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9457
  %92 = load i32, i32* %nnames, align 4, !dbg !9457
  %idxprom78 = sext i32 %92 to i64, !dbg !9457
  %arrayidx79 = getelementptr inbounds i8*, i8** %91, i64 %idxprom78, !dbg !9457
  %93 = load i8*, i8** %arrayidx79, align 8, !dbg !9457
  %94 = load %struct.dirent*, %struct.dirent** %de, align 8, !dbg !9457
  %d_name80 = getelementptr inbounds %struct.dirent, %struct.dirent* %94, i32 0, i32 5, !dbg !9457
  %arraydecay81 = getelementptr inbounds [1024 x i8], [1024 x i8]* %d_name80, i64 0, i64 0, !dbg !9457
  %95 = load i32, i32* %namlen, align 4, !dbg !9457
  %conv82 = sext i32 %95 to i64, !dbg !9457
  %96 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9457
  %97 = load i32, i32* %nnames, align 4, !dbg !9457
  %idxprom83 = sext i32 %97 to i64, !dbg !9457
  %arrayidx84 = getelementptr inbounds i8*, i8** %96, i64 %idxprom83, !dbg !9457
  %98 = load i8*, i8** %arrayidx84, align 8, !dbg !9457
  %99 = call i64 @llvm.objectsize.i64.p0i8(i8* %98, i1 false, i1 true, i1 false), !dbg !9457
  %call85 = call i8* @__strncpy_chk(i8* %93, i8* %arraydecay81, i64 %conv82, i64 %99) #11, !dbg !9457
  %100 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9458
  %101 = load i32, i32* %nnames, align 4, !dbg !9459
  %idxprom86 = sext i32 %101 to i64, !dbg !9458
  %arrayidx87 = getelementptr inbounds i8*, i8** %100, i64 %idxprom86, !dbg !9458
  %102 = load i8*, i8** %arrayidx87, align 8, !dbg !9458
  %103 = load i32, i32* %namlen, align 4, !dbg !9460
  %idxprom88 = sext i32 %103 to i64, !dbg !9458
  %arrayidx89 = getelementptr inbounds i8, i8* %102, i64 %idxprom88, !dbg !9458
  store i8 0, i8* %arrayidx89, align 1, !dbg !9461
  %104 = load i32, i32* %nnames, align 4, !dbg !9462
  %inc90 = add nsw i32 %104, 1, !dbg !9462
  store i32 %inc90, i32* %nnames, align 4, !dbg !9462
  br label %while.cond, !dbg !9397, !llvm.loop !9463

while.end:                                        ; preds = %while.cond
  %105 = load %struct.DIR*, %struct.DIR** %dirp, align 8, !dbg !9465
  %call91 = call i32 @"\01_closedir"(%struct.DIR* %105), !dbg !9466
  %106 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9467
  %107 = bitcast i8** %106 to i8*, !dbg !9467
  %108 = load i32, i32* %nnames, align 4, !dbg !9468
  %conv92 = sext i32 %108 to i64, !dbg !9468
  call void @qsort(i8* %107, i64 %conv92, i64 8, i32 (i8*, i8*)* @name_compare), !dbg !9469
  store i32 0, i32* %i, align 4, !dbg !9470
  br label %for.cond93, !dbg !9472

for.cond93:                                       ; preds = %for.inc271, %while.end
  %109 = load i32, i32* %i, align 4, !dbg !9473
  %110 = load i32, i32* %nnames, align 4, !dbg !9475
  %cmp94 = icmp slt i32 %109, %110, !dbg !9476
  br i1 %cmp94, label %for.body96, label %for.end273, !dbg !9477

for.body96:                                       ; preds = %for.cond93
  %111 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9478
  %expnfilename97 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %111, i32 0, i32 16, !dbg !9480
  %112 = load i8*, i8** %expnfilename97, align 8, !dbg !9480
  %call98 = call i64 @strlen(i8* %112), !dbg !9481
  %add = add i64 %call98, 1, !dbg !9482
  %113 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9483
  %114 = load i32, i32* %i, align 4, !dbg !9484
  %idxprom99 = sext i32 %114 to i64, !dbg !9483
  %arrayidx100 = getelementptr inbounds i8*, i8** %113, i64 %idxprom99, !dbg !9483
  %115 = load i8*, i8** %arrayidx100, align 8, !dbg !9483
  %call101 = call i64 @strlen(i8* %115), !dbg !9485
  %add102 = add i64 %add, %call101, !dbg !9486
  call void @httpd_realloc_str(i8** @ls.name, i64* @ls.maxname, i64 %add102), !dbg !9487
  %116 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9488
  %origfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %116, i32 0, i32 15, !dbg !9489
  %117 = load i8*, i8** %origfilename, align 8, !dbg !9489
  %call103 = call i64 @strlen(i8* %117), !dbg !9490
  %add104 = add i64 %call103, 1, !dbg !9491
  %118 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9492
  %119 = load i32, i32* %i, align 4, !dbg !9493
  %idxprom105 = sext i32 %119 to i64, !dbg !9492
  %arrayidx106 = getelementptr inbounds i8*, i8** %118, i64 %idxprom105, !dbg !9492
  %120 = load i8*, i8** %arrayidx106, align 8, !dbg !9492
  %call107 = call i64 @strlen(i8* %120), !dbg !9494
  %add108 = add i64 %add104, %call107, !dbg !9495
  call void @httpd_realloc_str(i8** @ls.rname, i64* @ls.maxrname, i64 %add108), !dbg !9496
  %121 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9497
  %expnfilename109 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %121, i32 0, i32 16, !dbg !9499
  %122 = load i8*, i8** %expnfilename109, align 8, !dbg !9499
  %arrayidx110 = getelementptr inbounds i8, i8* %122, i64 0, !dbg !9497
  %123 = load i8, i8* %arrayidx110, align 1, !dbg !9497
  %conv111 = sext i8 %123 to i32, !dbg !9497
  %cmp112 = icmp eq i32 %conv111, 0, !dbg !9500
  br i1 %cmp112, label %if.then119, label %lor.lhs.false114, !dbg !9501

lor.lhs.false114:                                 ; preds = %for.body96
  %124 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9502
  %expnfilename115 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %124, i32 0, i32 16, !dbg !9503
  %125 = load i8*, i8** %expnfilename115, align 8, !dbg !9503
  %call116 = call i32 @strcmp(i8* %125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.242, i64 0, i64 0)), !dbg !9504
  %cmp117 = icmp eq i32 %call116, 0, !dbg !9505
  br i1 %cmp117, label %if.then119, label %if.else126, !dbg !9506

if.then119:                                       ; preds = %lor.lhs.false114, %for.body96
  %126 = load i8*, i8** @ls.name, align 8, !dbg !9507
  %127 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9507
  %128 = load i32, i32* %i, align 4, !dbg !9507
  %idxprom120 = sext i32 %128 to i64, !dbg !9507
  %arrayidx121 = getelementptr inbounds i8*, i8** %127, i64 %idxprom120, !dbg !9507
  %129 = load i8*, i8** %arrayidx121, align 8, !dbg !9507
  %130 = load i8*, i8** @ls.name, align 8, !dbg !9507
  %131 = call i64 @llvm.objectsize.i64.p0i8(i8* %130, i1 false, i1 true, i1 false), !dbg !9507
  %call122 = call i8* @__strcpy_chk(i8* %126, i8* %129, i64 %131) #11, !dbg !9507
  %132 = load i8*, i8** @ls.rname, align 8, !dbg !9509
  %133 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9509
  %134 = load i32, i32* %i, align 4, !dbg !9509
  %idxprom123 = sext i32 %134 to i64, !dbg !9509
  %arrayidx124 = getelementptr inbounds i8*, i8** %133, i64 %idxprom123, !dbg !9509
  %135 = load i8*, i8** %arrayidx124, align 8, !dbg !9509
  %136 = load i8*, i8** @ls.rname, align 8, !dbg !9509
  %137 = call i64 @llvm.objectsize.i64.p0i8(i8* %136, i1 false, i1 true, i1 false), !dbg !9509
  %call125 = call i8* @__strcpy_chk(i8* %132, i8* %135, i64 %137) #11, !dbg !9509
  br label %if.end145, !dbg !9510

if.else126:                                       ; preds = %lor.lhs.false114
  %138 = load i8*, i8** @ls.name, align 8, !dbg !9511
  %139 = load i64, i64* @ls.maxname, align 8, !dbg !9513
  %140 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9514
  %expnfilename127 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %140, i32 0, i32 16, !dbg !9515
  %141 = load i8*, i8** %expnfilename127, align 8, !dbg !9515
  %142 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9516
  %143 = load i32, i32* %i, align 4, !dbg !9517
  %idxprom128 = sext i32 %143 to i64, !dbg !9516
  %arrayidx129 = getelementptr inbounds i8*, i8** %142, i64 %idxprom128, !dbg !9516
  %144 = load i8*, i8** %arrayidx129, align 8, !dbg !9516
  %call130 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %138, i64 %139, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.464, i64 0, i64 0), i8* %141, i8* %144), !dbg !9518
  %145 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9519
  %origfilename131 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %145, i32 0, i32 15, !dbg !9521
  %146 = load i8*, i8** %origfilename131, align 8, !dbg !9521
  %call132 = call i32 @strcmp(i8* %146, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.242, i64 0, i64 0)), !dbg !9522
  %cmp133 = icmp eq i32 %call132, 0, !dbg !9523
  br i1 %cmp133, label %if.then135, label %if.else139, !dbg !9524

if.then135:                                       ; preds = %if.else126
  %147 = load i8*, i8** @ls.rname, align 8, !dbg !9525
  %148 = load i64, i64* @ls.maxrname, align 8, !dbg !9526
  %149 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9527
  %150 = load i32, i32* %i, align 4, !dbg !9528
  %idxprom136 = sext i32 %150 to i64, !dbg !9527
  %arrayidx137 = getelementptr inbounds i8*, i8** %149, i64 %idxprom136, !dbg !9527
  %151 = load i8*, i8** %arrayidx137, align 8, !dbg !9527
  %call138 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %147, i64 %148, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.479, i64 0, i64 0), i8* %151), !dbg !9529
  br label %if.end144, !dbg !9530

if.else139:                                       ; preds = %if.else126
  %152 = load i8*, i8** @ls.rname, align 8, !dbg !9531
  %153 = load i64, i64* @ls.maxrname, align 8, !dbg !9532
  %154 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9533
  %origfilename140 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %154, i32 0, i32 15, !dbg !9534
  %155 = load i8*, i8** %origfilename140, align 8, !dbg !9534
  %156 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9535
  %157 = load i32, i32* %i, align 4, !dbg !9536
  %idxprom141 = sext i32 %157 to i64, !dbg !9535
  %arrayidx142 = getelementptr inbounds i8*, i8** %156, i64 %idxprom141, !dbg !9535
  %158 = load i8*, i8** %arrayidx142, align 8, !dbg !9535
  %call143 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %152, i64 %153, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.480, i64 0, i64 0), i8* %155, i8* %158), !dbg !9537
  br label %if.end144

if.end144:                                        ; preds = %if.else139, %if.then135
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.then119
  %159 = load i8*, i8** @ls.rname, align 8, !dbg !9538
  %call146 = call i64 @strlen(i8* %159), !dbg !9539
  %mul147 = mul i64 3, %call146, !dbg !9540
  %add148 = add i64 %mul147, 1, !dbg !9541
  call void @httpd_realloc_str(i8** @ls.encrname, i64* @ls.maxencrname, i64 %add148), !dbg !9542
  %160 = load i8*, i8** @ls.encrname, align 8, !dbg !9543
  %161 = load i64, i64* @ls.maxencrname, align 8, !dbg !9544
  %conv149 = trunc i64 %161 to i32, !dbg !9544
  %162 = load i8*, i8** @ls.rname, align 8, !dbg !9545
  call void @strencode(i8* %160, i32 %conv149, i8* %162), !dbg !9546
  %163 = load i8*, i8** @ls.name, align 8, !dbg !9547
  %call150 = call i32 @"\01_stat$INODE64"(i8* %163, %struct.stat* %sb), !dbg !9549
  %cmp151 = icmp slt i32 %call150, 0, !dbg !9550
  br i1 %cmp151, label %if.then157, label %lor.lhs.false153, !dbg !9551

lor.lhs.false153:                                 ; preds = %if.end145
  %164 = load i8*, i8** @ls.name, align 8, !dbg !9552
  %call154 = call i32 @"\01_lstat$INODE64"(i8* %164, %struct.stat* %lsb), !dbg !9553
  %cmp155 = icmp slt i32 %call154, 0, !dbg !9554
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !9555

if.then157:                                       ; preds = %lor.lhs.false153, %if.end145
  br label %for.inc271, !dbg !9556

if.end158:                                        ; preds = %lor.lhs.false153
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8** %linkprefix, align 8, !dbg !9557
  %arrayidx159 = getelementptr inbounds [1025 x i8], [1025 x i8]* %lnk, i64 0, i64 0, !dbg !9558
  store i8 0, i8* %arrayidx159, align 16, !dbg !9559
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %lsb, i32 0, i32 1, !dbg !9560
  %165 = load i16, i16* %st_mode, align 4, !dbg !9560
  %conv160 = zext i16 %165 to i32, !dbg !9561
  %and = and i32 %conv160, 61440, !dbg !9562
  switch i32 %and, label %sw.default [
    i32 4096, label %sw.bb
    i32 8192, label %sw.bb162
    i32 16384, label %sw.bb164
    i32 24576, label %sw.bb166
    i32 32768, label %sw.bb168
    i32 49152, label %sw.bb170
    i32 40960, label %sw.bb172
  ], !dbg !9563

sw.bb:                                            ; preds = %if.end158
  %arrayidx161 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 0, !dbg !9564
  store i8 112, i8* %arrayidx161, align 16, !dbg !9566
  br label %sw.epilog, !dbg !9567

sw.bb162:                                         ; preds = %if.end158
  %arrayidx163 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 0, !dbg !9568
  store i8 99, i8* %arrayidx163, align 16, !dbg !9569
  br label %sw.epilog, !dbg !9570

sw.bb164:                                         ; preds = %if.end158
  %arrayidx165 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 0, !dbg !9571
  store i8 100, i8* %arrayidx165, align 16, !dbg !9572
  br label %sw.epilog, !dbg !9573

sw.bb166:                                         ; preds = %if.end158
  %arrayidx167 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 0, !dbg !9574
  store i8 98, i8* %arrayidx167, align 16, !dbg !9575
  br label %sw.epilog, !dbg !9576

sw.bb168:                                         ; preds = %if.end158
  %arrayidx169 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 0, !dbg !9577
  store i8 45, i8* %arrayidx169, align 16, !dbg !9578
  br label %sw.epilog, !dbg !9579

sw.bb170:                                         ; preds = %if.end158
  %arrayidx171 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 0, !dbg !9580
  store i8 115, i8* %arrayidx171, align 16, !dbg !9581
  br label %sw.epilog, !dbg !9582

sw.bb172:                                         ; preds = %if.end158
  %arrayidx173 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 0, !dbg !9583
  store i8 108, i8* %arrayidx173, align 16, !dbg !9584
  %166 = load i8*, i8** @ls.name, align 8, !dbg !9585
  %arraydecay174 = getelementptr inbounds [1025 x i8], [1025 x i8]* %lnk, i64 0, i64 0, !dbg !9586
  %call175 = call i64 @readlink(i8* %166, i8* %arraydecay174, i64 1024), !dbg !9587
  %conv176 = trunc i64 %call175 to i32, !dbg !9587
  store i32 %conv176, i32* %linklen, align 4, !dbg !9588
  %167 = load i32, i32* %linklen, align 4, !dbg !9589
  %cmp177 = icmp ne i32 %167, -1, !dbg !9591
  br i1 %cmp177, label %if.then179, label %if.end182, !dbg !9592

if.then179:                                       ; preds = %sw.bb172
  %168 = load i32, i32* %linklen, align 4, !dbg !9593
  %idxprom180 = sext i32 %168 to i64, !dbg !9595
  %arrayidx181 = getelementptr inbounds [1025 x i8], [1025 x i8]* %lnk, i64 0, i64 %idxprom180, !dbg !9595
  store i8 0, i8* %arrayidx181, align 1, !dbg !9596
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.481, i64 0, i64 0), i8** %linkprefix, align 8, !dbg !9597
  br label %if.end182, !dbg !9598

if.end182:                                        ; preds = %if.then179, %sw.bb172
  br label %sw.epilog, !dbg !9599

sw.default:                                       ; preds = %if.end158
  %arrayidx183 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 0, !dbg !9600
  store i8 63, i8* %arrayidx183, align 16, !dbg !9601
  br label %sw.epilog, !dbg !9602

sw.epilog:                                        ; preds = %sw.default, %if.end182, %sw.bb170, %sw.bb168, %sw.bb166, %sw.bb164, %sw.bb162, %sw.bb
  %st_mode184 = getelementptr inbounds %struct.stat, %struct.stat* %lsb, i32 0, i32 1, !dbg !9603
  %169 = load i16, i16* %st_mode184, align 4, !dbg !9603
  %conv185 = zext i16 %169 to i32, !dbg !9604
  %and186 = and i32 %conv185, 4, !dbg !9605
  %tobool = icmp ne i32 %and186, 0, !dbg !9606
  %170 = zext i1 %tobool to i64, !dbg !9606
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !9606
  %conv187 = trunc i32 %cond to i8, !dbg !9606
  %arrayidx188 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 1, !dbg !9607
  store i8 %conv187, i8* %arrayidx188, align 1, !dbg !9608
  %st_mode189 = getelementptr inbounds %struct.stat, %struct.stat* %lsb, i32 0, i32 1, !dbg !9609
  %171 = load i16, i16* %st_mode189, align 4, !dbg !9609
  %conv190 = zext i16 %171 to i32, !dbg !9610
  %and191 = and i32 %conv190, 2, !dbg !9611
  %tobool192 = icmp ne i32 %and191, 0, !dbg !9612
  %172 = zext i1 %tobool192 to i64, !dbg !9612
  %cond193 = select i1 %tobool192, i32 119, i32 45, !dbg !9612
  %conv194 = trunc i32 %cond193 to i8, !dbg !9612
  %arrayidx195 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 2, !dbg !9613
  store i8 %conv194, i8* %arrayidx195, align 2, !dbg !9614
  %st_mode196 = getelementptr inbounds %struct.stat, %struct.stat* %lsb, i32 0, i32 1, !dbg !9615
  %173 = load i16, i16* %st_mode196, align 4, !dbg !9615
  %conv197 = zext i16 %173 to i32, !dbg !9616
  %and198 = and i32 %conv197, 1, !dbg !9617
  %tobool199 = icmp ne i32 %and198, 0, !dbg !9618
  %174 = zext i1 %tobool199 to i64, !dbg !9618
  %cond200 = select i1 %tobool199, i32 120, i32 45, !dbg !9618
  %conv201 = trunc i32 %cond200 to i8, !dbg !9618
  %arrayidx202 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 3, !dbg !9619
  store i8 %conv201, i8* %arrayidx202, align 1, !dbg !9620
  %arrayidx203 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 4, !dbg !9621
  store i8 0, i8* %arrayidx203, align 4, !dbg !9622
  %call204 = call i64 @time(i64* null), !dbg !9623
  store i64 %call204, i64* %now, align 8, !dbg !9624
  %st_mtimespec205 = getelementptr inbounds %struct.stat, %struct.stat* %lsb, i32 0, i32 8, !dbg !9625
  %tv_sec206 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtimespec205, i32 0, i32 0, !dbg !9625
  %call207 = call i8* @ctime(i64* %tv_sec206), !dbg !9626
  store i8* %call207, i8** %timestr, align 8, !dbg !9627
  %175 = load i8*, i8** %timestr, align 8, !dbg !9628
  %arrayidx208 = getelementptr inbounds i8, i8* %175, i64 4, !dbg !9628
  %176 = load i8, i8* %arrayidx208, align 1, !dbg !9628
  %177 = load i8*, i8** %timestr, align 8, !dbg !9629
  %arrayidx209 = getelementptr inbounds i8, i8* %177, i64 0, !dbg !9629
  store i8 %176, i8* %arrayidx209, align 1, !dbg !9630
  %178 = load i8*, i8** %timestr, align 8, !dbg !9631
  %arrayidx210 = getelementptr inbounds i8, i8* %178, i64 5, !dbg !9631
  %179 = load i8, i8* %arrayidx210, align 1, !dbg !9631
  %180 = load i8*, i8** %timestr, align 8, !dbg !9632
  %arrayidx211 = getelementptr inbounds i8, i8* %180, i64 1, !dbg !9632
  store i8 %179, i8* %arrayidx211, align 1, !dbg !9633
  %181 = load i8*, i8** %timestr, align 8, !dbg !9634
  %arrayidx212 = getelementptr inbounds i8, i8* %181, i64 6, !dbg !9634
  %182 = load i8, i8* %arrayidx212, align 1, !dbg !9634
  %183 = load i8*, i8** %timestr, align 8, !dbg !9635
  %arrayidx213 = getelementptr inbounds i8, i8* %183, i64 2, !dbg !9635
  store i8 %182, i8* %arrayidx213, align 1, !dbg !9636
  %184 = load i8*, i8** %timestr, align 8, !dbg !9637
  %arrayidx214 = getelementptr inbounds i8, i8* %184, i64 3, !dbg !9637
  store i8 32, i8* %arrayidx214, align 1, !dbg !9638
  %185 = load i8*, i8** %timestr, align 8, !dbg !9639
  %arrayidx215 = getelementptr inbounds i8, i8* %185, i64 8, !dbg !9639
  %186 = load i8, i8* %arrayidx215, align 1, !dbg !9639
  %187 = load i8*, i8** %timestr, align 8, !dbg !9640
  %arrayidx216 = getelementptr inbounds i8, i8* %187, i64 4, !dbg !9640
  store i8 %186, i8* %arrayidx216, align 1, !dbg !9641
  %188 = load i8*, i8** %timestr, align 8, !dbg !9642
  %arrayidx217 = getelementptr inbounds i8, i8* %188, i64 9, !dbg !9642
  %189 = load i8, i8* %arrayidx217, align 1, !dbg !9642
  %190 = load i8*, i8** %timestr, align 8, !dbg !9643
  %arrayidx218 = getelementptr inbounds i8, i8* %190, i64 5, !dbg !9643
  store i8 %189, i8* %arrayidx218, align 1, !dbg !9644
  %191 = load i8*, i8** %timestr, align 8, !dbg !9645
  %arrayidx219 = getelementptr inbounds i8, i8* %191, i64 6, !dbg !9645
  store i8 32, i8* %arrayidx219, align 1, !dbg !9646
  %192 = load i64, i64* %now, align 8, !dbg !9647
  %st_mtimespec220 = getelementptr inbounds %struct.stat, %struct.stat* %lsb, i32 0, i32 8, !dbg !9649
  %tv_sec221 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtimespec220, i32 0, i32 0, !dbg !9649
  %193 = load i64, i64* %tv_sec221, align 8, !dbg !9649
  %sub = sub nsw i64 %192, %193, !dbg !9650
  %cmp222 = icmp sgt i64 %sub, 15724800, !dbg !9651
  br i1 %cmp222, label %if.then224, label %if.else234, !dbg !9652

if.then224:                                       ; preds = %sw.epilog
  %194 = load i8*, i8** %timestr, align 8, !dbg !9653
  %arrayidx225 = getelementptr inbounds i8, i8* %194, i64 7, !dbg !9653
  store i8 32, i8* %arrayidx225, align 1, !dbg !9655
  %195 = load i8*, i8** %timestr, align 8, !dbg !9656
  %arrayidx226 = getelementptr inbounds i8, i8* %195, i64 20, !dbg !9656
  %196 = load i8, i8* %arrayidx226, align 1, !dbg !9656
  %197 = load i8*, i8** %timestr, align 8, !dbg !9657
  %arrayidx227 = getelementptr inbounds i8, i8* %197, i64 8, !dbg !9657
  store i8 %196, i8* %arrayidx227, align 1, !dbg !9658
  %198 = load i8*, i8** %timestr, align 8, !dbg !9659
  %arrayidx228 = getelementptr inbounds i8, i8* %198, i64 21, !dbg !9659
  %199 = load i8, i8* %arrayidx228, align 1, !dbg !9659
  %200 = load i8*, i8** %timestr, align 8, !dbg !9660
  %arrayidx229 = getelementptr inbounds i8, i8* %200, i64 9, !dbg !9660
  store i8 %199, i8* %arrayidx229, align 1, !dbg !9661
  %201 = load i8*, i8** %timestr, align 8, !dbg !9662
  %arrayidx230 = getelementptr inbounds i8, i8* %201, i64 22, !dbg !9662
  %202 = load i8, i8* %arrayidx230, align 1, !dbg !9662
  %203 = load i8*, i8** %timestr, align 8, !dbg !9663
  %arrayidx231 = getelementptr inbounds i8, i8* %203, i64 10, !dbg !9663
  store i8 %202, i8* %arrayidx231, align 1, !dbg !9664
  %204 = load i8*, i8** %timestr, align 8, !dbg !9665
  %arrayidx232 = getelementptr inbounds i8, i8* %204, i64 23, !dbg !9665
  %205 = load i8, i8* %arrayidx232, align 1, !dbg !9665
  %206 = load i8*, i8** %timestr, align 8, !dbg !9666
  %arrayidx233 = getelementptr inbounds i8, i8* %206, i64 11, !dbg !9666
  store i8 %205, i8* %arrayidx233, align 1, !dbg !9667
  br label %if.end244, !dbg !9668

if.else234:                                       ; preds = %sw.epilog
  %207 = load i8*, i8** %timestr, align 8, !dbg !9669
  %arrayidx235 = getelementptr inbounds i8, i8* %207, i64 11, !dbg !9669
  %208 = load i8, i8* %arrayidx235, align 1, !dbg !9669
  %209 = load i8*, i8** %timestr, align 8, !dbg !9671
  %arrayidx236 = getelementptr inbounds i8, i8* %209, i64 7, !dbg !9671
  store i8 %208, i8* %arrayidx236, align 1, !dbg !9672
  %210 = load i8*, i8** %timestr, align 8, !dbg !9673
  %arrayidx237 = getelementptr inbounds i8, i8* %210, i64 12, !dbg !9673
  %211 = load i8, i8* %arrayidx237, align 1, !dbg !9673
  %212 = load i8*, i8** %timestr, align 8, !dbg !9674
  %arrayidx238 = getelementptr inbounds i8, i8* %212, i64 8, !dbg !9674
  store i8 %211, i8* %arrayidx238, align 1, !dbg !9675
  %213 = load i8*, i8** %timestr, align 8, !dbg !9676
  %arrayidx239 = getelementptr inbounds i8, i8* %213, i64 9, !dbg !9676
  store i8 58, i8* %arrayidx239, align 1, !dbg !9677
  %214 = load i8*, i8** %timestr, align 8, !dbg !9678
  %arrayidx240 = getelementptr inbounds i8, i8* %214, i64 14, !dbg !9678
  %215 = load i8, i8* %arrayidx240, align 1, !dbg !9678
  %216 = load i8*, i8** %timestr, align 8, !dbg !9679
  %arrayidx241 = getelementptr inbounds i8, i8* %216, i64 10, !dbg !9679
  store i8 %215, i8* %arrayidx241, align 1, !dbg !9680
  %217 = load i8*, i8** %timestr, align 8, !dbg !9681
  %arrayidx242 = getelementptr inbounds i8, i8* %217, i64 15, !dbg !9681
  %218 = load i8, i8* %arrayidx242, align 1, !dbg !9681
  %219 = load i8*, i8** %timestr, align 8, !dbg !9682
  %arrayidx243 = getelementptr inbounds i8, i8* %219, i64 11, !dbg !9682
  store i8 %218, i8* %arrayidx243, align 1, !dbg !9683
  br label %if.end244

if.end244:                                        ; preds = %if.else234, %if.then224
  %220 = load i8*, i8** %timestr, align 8, !dbg !9684
  %arrayidx245 = getelementptr inbounds i8, i8* %220, i64 12, !dbg !9684
  store i8 0, i8* %arrayidx245, align 1, !dbg !9685
  %st_mode246 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 1, !dbg !9686
  %221 = load i16, i16* %st_mode246, align 4, !dbg !9686
  %conv247 = zext i16 %221 to i32, !dbg !9687
  %and248 = and i32 %conv247, 61440, !dbg !9688
  switch i32 %and248, label %sw.default252 [
    i32 16384, label %sw.bb249
    i32 49152, label %sw.bb250
    i32 40960, label %sw.bb251
  ], !dbg !9689

sw.bb249:                                         ; preds = %if.end244
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.91.275, i64 0, i64 0), i8** %fileclass, align 8, !dbg !9690
  br label %sw.epilog258, !dbg !9692

sw.bb250:                                         ; preds = %if.end244
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.50.258, i64 0, i64 0), i8** %fileclass, align 8, !dbg !9693
  br label %sw.epilog258, !dbg !9694

sw.bb251:                                         ; preds = %if.end244
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.482, i64 0, i64 0), i8** %fileclass, align 8, !dbg !9695
  br label %sw.epilog258, !dbg !9696

sw.default252:                                    ; preds = %if.end244
  %st_mode253 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 1, !dbg !9697
  %222 = load i16, i16* %st_mode253, align 4, !dbg !9697
  %conv254 = zext i16 %222 to i32, !dbg !9698
  %and255 = and i32 %conv254, 1, !dbg !9699
  %tobool256 = icmp ne i32 %and255, 0, !dbg !9700
  %223 = zext i1 %tobool256 to i64, !dbg !9700
  %cond257 = select i1 %tobool256, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.483, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), !dbg !9700
  store i8* %cond257, i8** %fileclass, align 8, !dbg !9701
  br label %sw.epilog258, !dbg !9702

sw.epilog258:                                     ; preds = %sw.default252, %sw.bb251, %sw.bb250, %sw.bb249
  %224 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !9703
  %arraydecay259 = getelementptr inbounds [20 x i8], [20 x i8]* %modestr, i64 0, i64 0, !dbg !9704
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %lsb, i32 0, i32 2, !dbg !9705
  %225 = load i16, i16* %st_nlink, align 2, !dbg !9705
  %conv260 = zext i16 %225 to i64, !dbg !9706
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %lsb, i32 0, i32 11, !dbg !9707
  %226 = load i64, i64* %st_size, align 8, !dbg !9707
  %227 = load i8*, i8** %timestr, align 8, !dbg !9708
  %228 = load i8*, i8** @ls.encrname, align 8, !dbg !9709
  %st_mode261 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 1, !dbg !9710
  %229 = load i16, i16* %st_mode261, align 4, !dbg !9710
  %conv262 = zext i16 %229 to i32, !dbg !9710
  %and263 = and i32 %conv262, 61440, !dbg !9710
  %cmp264 = icmp eq i32 %and263, 16384, !dbg !9710
  %230 = zext i1 %cmp264 to i64, !dbg !9710
  %cond266 = select i1 %cmp264, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.91.275, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), !dbg !9710
  %231 = load i8**, i8*** @ls.nameptrs, align 8, !dbg !9711
  %232 = load i32, i32* %i, align 4, !dbg !9712
  %idxprom267 = sext i32 %232 to i64, !dbg !9711
  %arrayidx268 = getelementptr inbounds i8*, i8** %231, i64 %idxprom267, !dbg !9711
  %233 = load i8*, i8** %arrayidx268, align 8, !dbg !9711
  %234 = load i8*, i8** %linkprefix, align 8, !dbg !9713
  %arraydecay269 = getelementptr inbounds [1025 x i8], [1025 x i8]* %lnk, i64 0, i64 0, !dbg !9714
  %235 = load i8*, i8** %fileclass, align 8, !dbg !9715
  %call270 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %224, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.484, i64 0, i64 0), i8* %arraydecay259, i64 %conv260, i64 %226, i8* %227, i8* %228, i8* %cond266, i8* %233, i8* %234, i8* %arraydecay269, i8* %235), !dbg !9716
  br label %for.inc271, !dbg !9717

for.inc271:                                       ; preds = %sw.epilog258, %if.then157
  %236 = load i32, i32* %i, align 4, !dbg !9718
  %inc272 = add nsw i32 %236, 1, !dbg !9718
  store i32 %inc272, i32* %i, align 4, !dbg !9718
  br label %for.cond93, !dbg !9719, !llvm.loop !9720

for.end273:                                       ; preds = %for.cond93
  %237 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !9722
  %call274 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %237, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.485, i64 0, i64 0)), !dbg !9723
  %238 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !9724
  %call275 = call i32 @fclose(%struct.__sFILE* %238), !dbg !9725
  call void @exit(i32 0) #13, !dbg !9726
  unreachable, !dbg !9726

if.end276:                                        ; preds = %if.end25
  %239 = load %struct.DIR*, %struct.DIR** %dirp, align 8, !dbg !9727
  %call277 = call i32 @"\01_closedir"(%struct.DIR* %239), !dbg !9728
  %240 = load i32, i32* %r, align 4, !dbg !9729
  %241 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9730
  %expnfilename278 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %241, i32 0, i32 16, !dbg !9731
  %242 = load i8*, i8** %expnfilename278, align 8, !dbg !9731
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 7, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.486, i64 0, i64 0), i32 %240, i8* %242), !dbg !9732
  %243 = load i32, i32* %r, align 4, !dbg !9733
  %i279 = bitcast %union.ClientData* %client_data to i32*, !dbg !9734
  store i32 %243, i32* %i279, align 8, !dbg !9735
  %coerce.dive = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0, !dbg !9736
  %244 = load i8*, i8** %coerce.dive, align 8, !dbg !9736
  %call280 = call %struct.TimerStruct* @tmr_create(%struct.timeval* null, void (i8*, %struct.timeval*)* @cgi_kill, i8* %244, i64 30000, i32 0), !dbg !9736
  %cmp281 = icmp eq %struct.TimerStruct* %call280, null, !dbg !9738
  br i1 %cmp281, label %if.then283, label %if.end284, !dbg !9739

if.then283:                                       ; preds = %if.end276
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.487, i64 0, i64 0)), !dbg !9740
  call void @exit(i32 1) #13, !dbg !9742
  unreachable, !dbg !9742

if.end284:                                        ; preds = %if.end276
  %245 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9743
  %status = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %245, i32 0, i32 9, !dbg !9744
  store i32 200, i32* %status, align 8, !dbg !9745
  %246 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9746
  %bytes_sent = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %246, i32 0, i32 11, !dbg !9747
  store i64 25000, i64* %bytes_sent, align 8, !dbg !9748
  %247 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9749
  %should_linger = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %247, i32 0, i32 58, !dbg !9750
  store i32 0, i32* %should_linger, align 4, !dbg !9751
  br label %if.end289, !dbg !9752

if.else285:                                       ; preds = %if.else
  %248 = load %struct.DIR*, %struct.DIR** %dirp, align 8, !dbg !9753
  %call286 = call i32 @"\01_closedir"(%struct.DIR* %248), !dbg !9755
  %249 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9756
  %250 = load i8*, i8** @err501title, align 8, !dbg !9757
  %251 = load i8*, i8** @err501form, align 8, !dbg !9758
  %252 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9759
  %method287 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %252, i32 0, i32 8, !dbg !9760
  %253 = load i32, i32* %method287, align 4, !dbg !9760
  %call288 = call i8* @httpd_method_str(i32 %253), !dbg !9761
  call void @httpd_send_err(%struct.httpd_conn* %249, i32 501, i8* %250, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %251, i8* %call288), !dbg !9762
  store i32 -1, i32* %retval, align 4, !dbg !9763
  br label %return, !dbg !9763

if.end289:                                        ; preds = %if.end284
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.then3
  store i32 0, i32* %retval, align 4, !dbg !9764
  br label %return, !dbg !9764

return:                                           ; preds = %if.end290, %if.else285, %if.then22, %if.then14, %if.then
  %254 = load i32, i32* %retval, align 4, !dbg !9765
  ret i32 %254, !dbg !9765
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @cgi(%struct.httpd_conn* %hc) #0 !dbg !9766 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %r = alloca i32, align 4
  %client_data = alloca %union.ClientData, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !9767, metadata !DIExpression()), !dbg !9768
  call void @llvm.dbg.declare(metadata i32* %r, metadata !9769, metadata !DIExpression()), !dbg !9770
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !9771, metadata !DIExpression()), !dbg !9772
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9773
  %hs = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 1, !dbg !9775
  %1 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !9775
  %cgi_limit = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %1, i32 0, i32 4, !dbg !9776
  %2 = load i32, i32* %cgi_limit, align 8, !dbg !9776
  %cmp = icmp ne i32 %2, 0, !dbg !9777
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9778

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9779
  %hs1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %3, i32 0, i32 1, !dbg !9780
  %4 = load %struct.httpd_server*, %struct.httpd_server** %hs1, align 8, !dbg !9780
  %cgi_count = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %4, i32 0, i32 5, !dbg !9781
  %5 = load i32, i32* %cgi_count, align 4, !dbg !9781
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9782
  %hs2 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 1, !dbg !9783
  %7 = load %struct.httpd_server*, %struct.httpd_server** %hs2, align 8, !dbg !9783
  %cgi_limit3 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %7, i32 0, i32 4, !dbg !9784
  %8 = load i32, i32* %cgi_limit3, align 8, !dbg !9784
  %cmp4 = icmp sge i32 %5, %8, !dbg !9785
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9786

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9787
  %10 = load i8*, i8** @httpd_err503title, align 8, !dbg !9789
  %11 = load i8*, i8** @httpd_err503form, align 8, !dbg !9790
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9791
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 12, !dbg !9792
  %13 = load i8*, i8** %encodedurl, align 8, !dbg !9792
  call void @httpd_send_err(%struct.httpd_conn* %9, i32 503, i8* %10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %11, i8* %13), !dbg !9793
  store i32 -1, i32* %retval, align 4, !dbg !9794
  br label %return, !dbg !9794

if.end:                                           ; preds = %land.lhs.true, %entry
  %14 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9795
  %hs5 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %14, i32 0, i32 1, !dbg !9796
  %15 = load %struct.httpd_server*, %struct.httpd_server** %hs5, align 8, !dbg !9796
  %cgi_count6 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %15, i32 0, i32 5, !dbg !9797
  %16 = load i32, i32* %cgi_count6, align 4, !dbg !9798
  %inc = add nsw i32 %16, 1, !dbg !9798
  store i32 %inc, i32* %cgi_count6, align 4, !dbg !9798
  %17 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9799
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %17, i32 0, i32 60, !dbg !9800
  %18 = load i32, i32* %conn_fd, align 8, !dbg !9800
  call void @httpd_clear_ndelay(i32 %18), !dbg !9801
  %call = call i32 @fork(), !dbg !9802
  store i32 %call, i32* %r, align 4, !dbg !9803
  %19 = load i32, i32* %r, align 4, !dbg !9804
  %cmp7 = icmp slt i32 %19, 0, !dbg !9806
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !9807

if.then8:                                         ; preds = %if.end
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.474, i64 0, i64 0)), !dbg !9808
  %20 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9810
  %21 = load i8*, i8** @err500title, align 8, !dbg !9811
  %22 = load i8*, i8** @err500form, align 8, !dbg !9812
  %23 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9813
  %encodedurl9 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %23, i32 0, i32 12, !dbg !9814
  %24 = load i8*, i8** %encodedurl9, align 8, !dbg !9814
  call void @httpd_send_err(%struct.httpd_conn* %20, i32 500, i8* %21, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %22, i8* %24), !dbg !9815
  store i32 -1, i32* %retval, align 4, !dbg !9816
  br label %return, !dbg !9816

if.end10:                                         ; preds = %if.end
  %25 = load i32, i32* %r, align 4, !dbg !9817
  %cmp11 = icmp eq i32 %25, 0, !dbg !9819
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !9820

if.then12:                                        ; preds = %if.end10
  store i32 1, i32* @sub_process, align 4, !dbg !9821
  %26 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9823
  %hs13 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %26, i32 0, i32 1, !dbg !9824
  %27 = load %struct.httpd_server*, %struct.httpd_server** %hs13, align 8, !dbg !9824
  call void @httpd_unlisten(%struct.httpd_server* %27), !dbg !9825
  %28 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9826
  call void @cgi_child(%struct.httpd_conn* %28), !dbg !9827
  br label %if.end14, !dbg !9828

if.end14:                                         ; preds = %if.then12, %if.end10
  %29 = load i32, i32* %r, align 4, !dbg !9829
  %30 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9830
  %expnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %30, i32 0, i32 16, !dbg !9831
  %31 = load i8*, i8** %expnfilename, align 8, !dbg !9831
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.493, i64 0, i64 0), i32 %29, i8* %31), !dbg !9832
  %32 = load i32, i32* %r, align 4, !dbg !9833
  %i = bitcast %union.ClientData* %client_data to i32*, !dbg !9834
  store i32 %32, i32* %i, align 8, !dbg !9835
  %coerce.dive = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0, !dbg !9836
  %33 = load i8*, i8** %coerce.dive, align 8, !dbg !9836
  %call15 = call %struct.TimerStruct* @tmr_create(%struct.timeval* null, void (i8*, %struct.timeval*)* @cgi_kill, i8* %33, i64 30000, i32 0), !dbg !9836
  %cmp16 = icmp eq %struct.TimerStruct* %call15, null, !dbg !9838
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !9839

if.then17:                                        ; preds = %if.end14
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.494, i64 0, i64 0)), !dbg !9840
  call void @exit(i32 1) #13, !dbg !9842
  unreachable, !dbg !9842

if.end18:                                         ; preds = %if.end14
  %34 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9843
  %status = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %34, i32 0, i32 9, !dbg !9844
  store i32 200, i32* %status, align 8, !dbg !9845
  %35 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9846
  %bytes_sent = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %35, i32 0, i32 11, !dbg !9847
  store i64 25000, i64* %bytes_sent, align 8, !dbg !9848
  %36 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9849
  %should_linger = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %36, i32 0, i32 58, !dbg !9850
  store i32 0, i32* %should_linger, align 4, !dbg !9851
  store i32 0, i32* %retval, align 4, !dbg !9852
  br label %return, !dbg !9852

return:                                           ; preds = %if.end18, %if.then8, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !9853
  ret i32 %37, !dbg !9853
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @figure_mime(%struct.httpd_conn* %hc) #0 !dbg !9854 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %prev_dot = alloca i8*, align 8
  %dot = alloca i8*, align 8
  %ext = alloca i8*, align 8
  %me_indexes = alloca [100 x i32], align 16
  %n_me_indexes = alloca i32, align 4
  %ext_len = alloca i64, align 8
  %encodings_len = alloca i64, align 8
  %i = alloca i32, align 4
  %top = alloca i32, align 4
  %bot = alloca i32, align 4
  %mid = alloca i32, align 4
  %r = alloca i32, align 4
  %default_type = alloca i8*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !9855, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.declare(metadata i8** %prev_dot, metadata !9857, metadata !DIExpression()), !dbg !9858
  call void @llvm.dbg.declare(metadata i8** %dot, metadata !9859, metadata !DIExpression()), !dbg !9860
  call void @llvm.dbg.declare(metadata i8** %ext, metadata !9861, metadata !DIExpression()), !dbg !9862
  call void @llvm.dbg.declare(metadata [100 x i32]* %me_indexes, metadata !9863, metadata !DIExpression()), !dbg !9865
  call void @llvm.dbg.declare(metadata i32* %n_me_indexes, metadata !9866, metadata !DIExpression()), !dbg !9867
  call void @llvm.dbg.declare(metadata i64* %ext_len, metadata !9868, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.declare(metadata i64* %encodings_len, metadata !9870, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9872, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.declare(metadata i32* %top, metadata !9874, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.declare(metadata i32* %bot, metadata !9876, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.declare(metadata i32* %mid, metadata !9878, metadata !DIExpression()), !dbg !9879
  call void @llvm.dbg.declare(metadata i32* %r, metadata !9880, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.declare(metadata i8** %default_type, metadata !9882, metadata !DIExpression()), !dbg !9883
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.125.164, i64 0, i64 0), i8** %default_type, align 8, !dbg !9883
  store i32 0, i32* %n_me_indexes, align 4, !dbg !9884
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9885
  %expnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 16, !dbg !9887
  %1 = load i8*, i8** %expnfilename, align 8, !dbg !9887
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9888
  %expnfilename1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 16, !dbg !9889
  %3 = load i8*, i8** %expnfilename1, align 8, !dbg !9889
  %call = call i64 @strlen(i8* %3), !dbg !9890
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %call, !dbg !9885
  store i8* %arrayidx, i8** %prev_dot, align 8, !dbg !9891
  br label %for.cond, !dbg !9892

for.cond:                                         ; preds = %for.inc36, %entry
  %4 = load i8*, i8** %prev_dot, align 8, !dbg !9893
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 -1, !dbg !9897
  store i8* %add.ptr, i8** %dot, align 8, !dbg !9898
  br label %for.cond2, !dbg !9899

for.cond2:                                        ; preds = %for.inc, %for.cond
  %5 = load i8*, i8** %dot, align 8, !dbg !9900
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9902
  %expnfilename3 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 16, !dbg !9903
  %7 = load i8*, i8** %expnfilename3, align 8, !dbg !9903
  %cmp = icmp uge i8* %5, %7, !dbg !9904
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9905

land.rhs:                                         ; preds = %for.cond2
  %8 = load i8*, i8** %dot, align 8, !dbg !9906
  %9 = load i8, i8* %8, align 1, !dbg !9907
  %conv = sext i8 %9 to i32, !dbg !9907
  %cmp4 = icmp ne i32 %conv, 46, !dbg !9908
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond2
  %10 = phi i1 [ false, %for.cond2 ], [ %cmp4, %land.rhs ], !dbg !9909
  br i1 %10, label %for.body, label %for.end, !dbg !9910

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !9910

for.inc:                                          ; preds = %for.body
  %11 = load i8*, i8** %dot, align 8, !dbg !9911
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 -1, !dbg !9911
  store i8* %incdec.ptr, i8** %dot, align 8, !dbg !9911
  br label %for.cond2, !dbg !9912, !llvm.loop !9913

for.end:                                          ; preds = %land.end
  %12 = load i8*, i8** %dot, align 8, !dbg !9915
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9917
  %expnfilename6 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 16, !dbg !9918
  %14 = load i8*, i8** %expnfilename6, align 8, !dbg !9918
  %cmp7 = icmp ult i8* %12, %14, !dbg !9919
  br i1 %cmp7, label %if.then, label %if.end, !dbg !9920

if.then:                                          ; preds = %for.end
  %15 = load i8*, i8** %default_type, align 8, !dbg !9921
  %16 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !9923
  %type = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %16, i32 0, i32 49, !dbg !9924
  store i8* %15, i8** %type, align 8, !dbg !9925
  br label %done, !dbg !9926

if.end:                                           ; preds = %for.end
  %17 = load i8*, i8** %dot, align 8, !dbg !9927
  %add.ptr9 = getelementptr inbounds i8, i8* %17, i64 1, !dbg !9928
  store i8* %add.ptr9, i8** %ext, align 8, !dbg !9929
  %18 = load i8*, i8** %prev_dot, align 8, !dbg !9930
  %19 = load i8*, i8** %ext, align 8, !dbg !9931
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !9932
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !9932
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9932
  store i64 %sub.ptr.sub, i64* %ext_len, align 8, !dbg !9933
  store i32 0, i32* %i, align 4, !dbg !9934
  br label %for.cond10, !dbg !9936

for.cond10:                                       ; preds = %for.inc33, %if.end
  %20 = load i32, i32* %i, align 4, !dbg !9937
  %cmp11 = icmp slt i32 %20, 3, !dbg !9939
  br i1 %cmp11, label %for.body13, label %for.end35, !dbg !9940

for.body13:                                       ; preds = %for.cond10
  %21 = load i64, i64* %ext_len, align 8, !dbg !9941
  %22 = load i32, i32* %i, align 4, !dbg !9944
  %idxprom = sext i32 %22 to i64, !dbg !9945
  %arrayidx14 = getelementptr inbounds [3 x %struct.mime_entry], [3 x %struct.mime_entry]* @enc_tab, i64 0, i64 %idxprom, !dbg !9945
  %ext_len15 = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx14, i32 0, i32 1, !dbg !9946
  %23 = load i64, i64* %ext_len15, align 8, !dbg !9946
  %cmp16 = icmp eq i64 %21, %23, !dbg !9947
  br i1 %cmp16, label %land.lhs.true, label %if.end32, !dbg !9948

land.lhs.true:                                    ; preds = %for.body13
  %24 = load i8*, i8** %ext, align 8, !dbg !9949
  %25 = load i32, i32* %i, align 4, !dbg !9950
  %idxprom18 = sext i32 %25 to i64, !dbg !9951
  %arrayidx19 = getelementptr inbounds [3 x %struct.mime_entry], [3 x %struct.mime_entry]* @enc_tab, i64 0, i64 %idxprom18, !dbg !9951
  %ext20 = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx19, i32 0, i32 0, !dbg !9952
  %26 = load i8*, i8** %ext20, align 16, !dbg !9952
  %27 = load i64, i64* %ext_len, align 8, !dbg !9953
  %call21 = call i32 @strncasecmp(i8* %24, i8* %26, i64 %27), !dbg !9954
  %cmp22 = icmp eq i32 %call21, 0, !dbg !9955
  br i1 %cmp22, label %if.then24, label %if.end32, !dbg !9956

if.then24:                                        ; preds = %land.lhs.true
  %28 = load i32, i32* %n_me_indexes, align 4, !dbg !9957
  %conv25 = sext i32 %28 to i64, !dbg !9957
  %cmp26 = icmp ult i64 %conv25, 100, !dbg !9960
  br i1 %cmp26, label %if.then28, label %if.end31, !dbg !9961

if.then28:                                        ; preds = %if.then24
  %29 = load i32, i32* %i, align 4, !dbg !9962
  %30 = load i32, i32* %n_me_indexes, align 4, !dbg !9964
  %idxprom29 = sext i32 %30 to i64, !dbg !9965
  %arrayidx30 = getelementptr inbounds [100 x i32], [100 x i32]* %me_indexes, i64 0, i64 %idxprom29, !dbg !9965
  store i32 %29, i32* %arrayidx30, align 4, !dbg !9966
  %31 = load i32, i32* %n_me_indexes, align 4, !dbg !9967
  %inc = add nsw i32 %31, 1, !dbg !9967
  store i32 %inc, i32* %n_me_indexes, align 4, !dbg !9967
  br label %if.end31, !dbg !9968

if.end31:                                         ; preds = %if.then28, %if.then24
  br label %next, !dbg !9969

if.end32:                                         ; preds = %land.lhs.true, %for.body13
  br label %for.inc33, !dbg !9970

for.inc33:                                        ; preds = %if.end32
  %32 = load i32, i32* %i, align 4, !dbg !9971
  %inc34 = add nsw i32 %32, 1, !dbg !9971
  store i32 %inc34, i32* %i, align 4, !dbg !9971
  br label %for.cond10, !dbg !9972, !llvm.loop !9973

for.end35:                                        ; preds = %for.cond10
  br label %for.end37, !dbg !9975

next:                                             ; preds = %if.end31
  call void @llvm.dbg.label(metadata !9976), !dbg !9977
  br label %for.inc36, !dbg !9978

for.inc36:                                        ; preds = %next
  %33 = load i8*, i8** %dot, align 8, !dbg !9979
  store i8* %33, i8** %prev_dot, align 8, !dbg !9980
  br label %for.cond, !dbg !9981, !llvm.loop !9982

for.end37:                                        ; preds = %for.end35
  store i32 192, i32* %top, align 4, !dbg !9985
  store i32 0, i32* %bot, align 4, !dbg !9986
  br label %while.cond, !dbg !9987

while.cond:                                       ; preds = %if.end74, %for.end37
  %34 = load i32, i32* %top, align 4, !dbg !9988
  %35 = load i32, i32* %bot, align 4, !dbg !9989
  %cmp38 = icmp sge i32 %34, %35, !dbg !9990
  br i1 %cmp38, label %while.body, label %while.end, !dbg !9987

while.body:                                       ; preds = %while.cond
  %36 = load i32, i32* %top, align 4, !dbg !9991
  %37 = load i32, i32* %bot, align 4, !dbg !9993
  %add = add nsw i32 %36, %37, !dbg !9994
  %div = sdiv i32 %add, 2, !dbg !9995
  store i32 %div, i32* %mid, align 4, !dbg !9996
  %38 = load i8*, i8** %ext, align 8, !dbg !9997
  %39 = load i32, i32* %mid, align 4, !dbg !9998
  %idxprom40 = sext i32 %39 to i64, !dbg !9999
  %arrayidx41 = getelementptr inbounds [193 x %struct.mime_entry], [193 x %struct.mime_entry]* @typ_tab, i64 0, i64 %idxprom40, !dbg !9999
  %ext42 = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx41, i32 0, i32 0, !dbg !10000
  %40 = load i8*, i8** %ext42, align 16, !dbg !10000
  %41 = load i64, i64* %ext_len, align 8, !dbg !10001
  %call43 = call i32 @strncasecmp(i8* %38, i8* %40, i64 %41), !dbg !10002
  store i32 %call43, i32* %r, align 4, !dbg !10003
  %42 = load i32, i32* %r, align 4, !dbg !10004
  %cmp44 = icmp slt i32 %42, 0, !dbg !10006
  br i1 %cmp44, label %if.then46, label %if.else, !dbg !10007

if.then46:                                        ; preds = %while.body
  %43 = load i32, i32* %mid, align 4, !dbg !10008
  %sub = sub nsw i32 %43, 1, !dbg !10009
  store i32 %sub, i32* %top, align 4, !dbg !10010
  br label %if.end74, !dbg !10011

if.else:                                          ; preds = %while.body
  %44 = load i32, i32* %r, align 4, !dbg !10012
  %cmp47 = icmp sgt i32 %44, 0, !dbg !10014
  br i1 %cmp47, label %if.then49, label %if.else51, !dbg !10015

if.then49:                                        ; preds = %if.else
  %45 = load i32, i32* %mid, align 4, !dbg !10016
  %add50 = add nsw i32 %45, 1, !dbg !10017
  store i32 %add50, i32* %bot, align 4, !dbg !10018
  br label %if.end73, !dbg !10019

if.else51:                                        ; preds = %if.else
  %46 = load i64, i64* %ext_len, align 8, !dbg !10020
  %47 = load i32, i32* %mid, align 4, !dbg !10022
  %idxprom52 = sext i32 %47 to i64, !dbg !10023
  %arrayidx53 = getelementptr inbounds [193 x %struct.mime_entry], [193 x %struct.mime_entry]* @typ_tab, i64 0, i64 %idxprom52, !dbg !10023
  %ext_len54 = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx53, i32 0, i32 1, !dbg !10024
  %48 = load i64, i64* %ext_len54, align 8, !dbg !10024
  %cmp55 = icmp ult i64 %46, %48, !dbg !10025
  br i1 %cmp55, label %if.then57, label %if.else59, !dbg !10026

if.then57:                                        ; preds = %if.else51
  %49 = load i32, i32* %mid, align 4, !dbg !10027
  %sub58 = sub nsw i32 %49, 1, !dbg !10028
  store i32 %sub58, i32* %top, align 4, !dbg !10029
  br label %if.end72, !dbg !10030

if.else59:                                        ; preds = %if.else51
  %50 = load i64, i64* %ext_len, align 8, !dbg !10031
  %51 = load i32, i32* %mid, align 4, !dbg !10033
  %idxprom60 = sext i32 %51 to i64, !dbg !10034
  %arrayidx61 = getelementptr inbounds [193 x %struct.mime_entry], [193 x %struct.mime_entry]* @typ_tab, i64 0, i64 %idxprom60, !dbg !10034
  %ext_len62 = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx61, i32 0, i32 1, !dbg !10035
  %52 = load i64, i64* %ext_len62, align 8, !dbg !10035
  %cmp63 = icmp ugt i64 %50, %52, !dbg !10036
  br i1 %cmp63, label %if.then65, label %if.else67, !dbg !10037

if.then65:                                        ; preds = %if.else59
  %53 = load i32, i32* %mid, align 4, !dbg !10038
  %add66 = add nsw i32 %53, 1, !dbg !10039
  store i32 %add66, i32* %bot, align 4, !dbg !10040
  br label %if.end71, !dbg !10041

if.else67:                                        ; preds = %if.else59
  %54 = load i32, i32* %mid, align 4, !dbg !10042
  %idxprom68 = sext i32 %54 to i64, !dbg !10044
  %arrayidx69 = getelementptr inbounds [193 x %struct.mime_entry], [193 x %struct.mime_entry]* @typ_tab, i64 0, i64 %idxprom68, !dbg !10044
  %val = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx69, i32 0, i32 2, !dbg !10045
  %55 = load i8*, i8** %val, align 16, !dbg !10045
  %56 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10046
  %type70 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %56, i32 0, i32 49, !dbg !10047
  store i8* %55, i8** %type70, align 8, !dbg !10048
  br label %done, !dbg !10049

if.end71:                                         ; preds = %if.then65
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then57
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then49
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then46
  br label %while.cond, !dbg !9987, !llvm.loop !10050

while.end:                                        ; preds = %while.cond
  %57 = load i8*, i8** %default_type, align 8, !dbg !10052
  %58 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10053
  %type75 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %58, i32 0, i32 49, !dbg !10054
  store i8* %57, i8** %type75, align 8, !dbg !10055
  br label %done, !dbg !10053

done:                                             ; preds = %while.end, %if.else67, %if.then
  call void @llvm.dbg.label(metadata !10056), !dbg !10057
  %59 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10058
  %encodings = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %59, i32 0, i32 17, !dbg !10059
  %60 = load i8*, i8** %encodings, align 8, !dbg !10059
  %arrayidx76 = getelementptr inbounds i8, i8* %60, i64 0, !dbg !10058
  store i8 0, i8* %arrayidx76, align 1, !dbg !10060
  store i64 0, i64* %encodings_len, align 8, !dbg !10061
  %61 = load i32, i32* %n_me_indexes, align 4, !dbg !10062
  %sub77 = sub nsw i32 %61, 1, !dbg !10064
  store i32 %sub77, i32* %i, align 4, !dbg !10065
  br label %for.cond78, !dbg !10066

for.cond78:                                       ; preds = %for.inc118, %done
  %62 = load i32, i32* %i, align 4, !dbg !10067
  %cmp79 = icmp sge i32 %62, 0, !dbg !10069
  br i1 %cmp79, label %for.body81, label %for.end119, !dbg !10070

for.body81:                                       ; preds = %for.cond78
  %63 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10071
  %encodings82 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %63, i32 0, i32 17, !dbg !10073
  %64 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10074
  %maxencodings = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %64, i32 0, i32 36, !dbg !10075
  %65 = load i64, i64* %encodings_len, align 8, !dbg !10076
  %66 = load i32, i32* %i, align 4, !dbg !10077
  %idxprom83 = sext i32 %66 to i64, !dbg !10078
  %arrayidx84 = getelementptr inbounds [100 x i32], [100 x i32]* %me_indexes, i64 0, i64 %idxprom83, !dbg !10078
  %67 = load i32, i32* %arrayidx84, align 4, !dbg !10078
  %idxprom85 = sext i32 %67 to i64, !dbg !10079
  %arrayidx86 = getelementptr inbounds [3 x %struct.mime_entry], [3 x %struct.mime_entry]* @enc_tab, i64 0, i64 %idxprom85, !dbg !10079
  %val_len = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx86, i32 0, i32 3, !dbg !10080
  %68 = load i64, i64* %val_len, align 8, !dbg !10080
  %add87 = add i64 %65, %68, !dbg !10081
  %add88 = add i64 %add87, 1, !dbg !10082
  call void @httpd_realloc_str(i8** %encodings82, i64* %maxencodings, i64 %add88), !dbg !10083
  %69 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10084
  %encodings89 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %69, i32 0, i32 17, !dbg !10086
  %70 = load i8*, i8** %encodings89, align 8, !dbg !10086
  %arrayidx90 = getelementptr inbounds i8, i8* %70, i64 0, !dbg !10084
  %71 = load i8, i8* %arrayidx90, align 1, !dbg !10084
  %conv91 = sext i8 %71 to i32, !dbg !10084
  %cmp92 = icmp ne i32 %conv91, 0, !dbg !10087
  br i1 %cmp92, label %if.then94, label %if.end101, !dbg !10088

if.then94:                                        ; preds = %for.body81
  %72 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10089
  %encodings95 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %72, i32 0, i32 17, !dbg !10089
  %73 = load i8*, i8** %encodings95, align 8, !dbg !10089
  %74 = load i64, i64* %encodings_len, align 8, !dbg !10089
  %arrayidx96 = getelementptr inbounds i8, i8* %73, i64 %74, !dbg !10089
  %75 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10089
  %encodings97 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %75, i32 0, i32 17, !dbg !10089
  %76 = load i8*, i8** %encodings97, align 8, !dbg !10089
  %77 = load i64, i64* %encodings_len, align 8, !dbg !10089
  %arrayidx98 = getelementptr inbounds i8, i8* %76, i64 %77, !dbg !10089
  %78 = call i64 @llvm.objectsize.i64.p0i8(i8* %arrayidx98, i1 false, i1 true, i1 false), !dbg !10089
  %call99 = call i8* @__strcpy_chk(i8* %arrayidx96, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.538, i64 0, i64 0), i64 %78) #11, !dbg !10089
  %79 = load i64, i64* %encodings_len, align 8, !dbg !10091
  %inc100 = add i64 %79, 1, !dbg !10091
  store i64 %inc100, i64* %encodings_len, align 8, !dbg !10091
  br label %if.end101, !dbg !10092

if.end101:                                        ; preds = %if.then94, %for.body81
  %80 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10093
  %encodings102 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %80, i32 0, i32 17, !dbg !10093
  %81 = load i8*, i8** %encodings102, align 8, !dbg !10093
  %82 = load i64, i64* %encodings_len, align 8, !dbg !10093
  %arrayidx103 = getelementptr inbounds i8, i8* %81, i64 %82, !dbg !10093
  %83 = load i32, i32* %i, align 4, !dbg !10093
  %idxprom104 = sext i32 %83 to i64, !dbg !10093
  %arrayidx105 = getelementptr inbounds [100 x i32], [100 x i32]* %me_indexes, i64 0, i64 %idxprom104, !dbg !10093
  %84 = load i32, i32* %arrayidx105, align 4, !dbg !10093
  %idxprom106 = sext i32 %84 to i64, !dbg !10093
  %arrayidx107 = getelementptr inbounds [3 x %struct.mime_entry], [3 x %struct.mime_entry]* @enc_tab, i64 0, i64 %idxprom106, !dbg !10093
  %val108 = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx107, i32 0, i32 2, !dbg !10093
  %85 = load i8*, i8** %val108, align 16, !dbg !10093
  %86 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10093
  %encodings109 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %86, i32 0, i32 17, !dbg !10093
  %87 = load i8*, i8** %encodings109, align 8, !dbg !10093
  %88 = load i64, i64* %encodings_len, align 8, !dbg !10093
  %arrayidx110 = getelementptr inbounds i8, i8* %87, i64 %88, !dbg !10093
  %89 = call i64 @llvm.objectsize.i64.p0i8(i8* %arrayidx110, i1 false, i1 true, i1 false), !dbg !10093
  %call111 = call i8* @__strcpy_chk(i8* %arrayidx103, i8* %85, i64 %89) #11, !dbg !10093
  %90 = load i32, i32* %i, align 4, !dbg !10094
  %idxprom112 = sext i32 %90 to i64, !dbg !10095
  %arrayidx113 = getelementptr inbounds [100 x i32], [100 x i32]* %me_indexes, i64 0, i64 %idxprom112, !dbg !10095
  %91 = load i32, i32* %arrayidx113, align 4, !dbg !10095
  %idxprom114 = sext i32 %91 to i64, !dbg !10096
  %arrayidx115 = getelementptr inbounds [3 x %struct.mime_entry], [3 x %struct.mime_entry]* @enc_tab, i64 0, i64 %idxprom114, !dbg !10096
  %val_len116 = getelementptr inbounds %struct.mime_entry, %struct.mime_entry* %arrayidx115, i32 0, i32 3, !dbg !10097
  %92 = load i64, i64* %val_len116, align 8, !dbg !10097
  %93 = load i64, i64* %encodings_len, align 8, !dbg !10098
  %add117 = add i64 %93, %92, !dbg !10098
  store i64 %add117, i64* %encodings_len, align 8, !dbg !10098
  br label %for.inc118, !dbg !10099

for.inc118:                                       ; preds = %if.end101
  %94 = load i32, i32* %i, align 4, !dbg !10100
  %dec = add nsw i32 %94, -1, !dbg !10100
  store i32 %dec, i32* %i, align 4, !dbg !10100
  br label %for.cond78, !dbg !10101, !llvm.loop !10102

for.end119:                                       ; preds = %for.cond78
  ret void, !dbg !10104
}

declare i8* @mmc_map(i8*, %struct.stat*, %struct.timeval*) #3

declare i32 @fork() #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @cgi_child(%struct.httpd_conn* %hc) #0 !dbg !10105 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %r = alloca i32, align 4
  %argp = alloca i8**, align 8
  %envp = alloca i8**, align 8
  %binary = alloca i8*, align 8
  %directory = alloca i8*, align 8
  %newfd = alloca i32, align 4
  %p = alloca [2 x i32], align 4
  %p54 = alloca [2 x i32], align 4
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !10106, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.declare(metadata i32* %r, metadata !10108, metadata !DIExpression()), !dbg !10109
  call void @llvm.dbg.declare(metadata i8*** %argp, metadata !10110, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.declare(metadata i8*** %envp, metadata !10112, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.declare(metadata i8** %binary, metadata !10114, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.declare(metadata i8** %directory, metadata !10116, metadata !DIExpression()), !dbg !10117
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10118
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 60, !dbg !10119
  %1 = load i32, i32* %conn_fd, align 8, !dbg !10119
  %call = call i32 (i32, i32, ...) @"\01_fcntl"(i32 %1, i32 2, i32 0), !dbg !10120
  call void @closelog(), !dbg !10121
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10122
  %conn_fd1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 60, !dbg !10124
  %3 = load i32, i32* %conn_fd1, align 8, !dbg !10124
  %cmp = icmp eq i32 %3, 0, !dbg !10125
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10126

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10127
  %conn_fd2 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %4, i32 0, i32 60, !dbg !10128
  %5 = load i32, i32* %conn_fd2, align 8, !dbg !10128
  %cmp3 = icmp eq i32 %5, 1, !dbg !10129
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !10130

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10131
  %conn_fd5 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 60, !dbg !10132
  %7 = load i32, i32* %conn_fd5, align 8, !dbg !10132
  %cmp6 = icmp eq i32 %7, 2, !dbg !10133
  br i1 %cmp6, label %if.then, label %if.end12, !dbg !10134

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %newfd, metadata !10135, metadata !DIExpression()), !dbg !10137
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10138
  %conn_fd7 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 60, !dbg !10139
  %9 = load i32, i32* %conn_fd7, align 8, !dbg !10139
  %call8 = call i32 @dup2(i32 %9, i32 3), !dbg !10140
  store i32 %call8, i32* %newfd, align 4, !dbg !10137
  %10 = load i32, i32* %newfd, align 4, !dbg !10141
  %cmp9 = icmp sge i32 %10, 0, !dbg !10143
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !10144

if.then10:                                        ; preds = %if.then
  %11 = load i32, i32* %newfd, align 4, !dbg !10145
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10146
  %conn_fd11 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 60, !dbg !10147
  store i32 %11, i32* %conn_fd11, align 8, !dbg !10148
  br label %if.end, !dbg !10146

if.end:                                           ; preds = %if.then10, %if.then
  br label %if.end12, !dbg !10149

if.end12:                                         ; preds = %if.end, %lor.lhs.false4
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10150
  %call13 = call i8** @make_envp(%struct.httpd_conn* %13), !dbg !10151
  store i8** %call13, i8*** %envp, align 8, !dbg !10152
  %14 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10153
  %call14 = call i8** @make_argp(%struct.httpd_conn* %14), !dbg !10154
  store i8** %call14, i8*** %argp, align 8, !dbg !10155
  %15 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10156
  %method = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %15, i32 0, i32 8, !dbg !10158
  %16 = load i32, i32* %method, align 4, !dbg !10158
  %cmp15 = icmp eq i32 %16, 3, !dbg !10159
  br i1 %cmp15, label %land.lhs.true, label %if.else, !dbg !10160

land.lhs.true:                                    ; preds = %if.end12
  %17 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10161
  %read_idx = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %17, i32 0, i32 5, !dbg !10162
  %18 = load i64, i64* %read_idx, align 8, !dbg !10162
  %19 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10163
  %checked_idx = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %19, i32 0, i32 6, !dbg !10164
  %20 = load i64, i64* %checked_idx, align 8, !dbg !10164
  %cmp16 = icmp ugt i64 %18, %20, !dbg !10165
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !10166

if.then17:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [2 x i32]* %p, metadata !10167, metadata !DIExpression()), !dbg !10170
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %p, i64 0, i64 0, !dbg !10171
  %call18 = call i32 @pipe(i32* %arraydecay), !dbg !10173
  %cmp19 = icmp slt i32 %call18, 0, !dbg !10174
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !10175

if.then20:                                        ; preds = %if.then17
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.495, i64 0, i64 0)), !dbg !10176
  %21 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10178
  %22 = load i8*, i8** @err500title, align 8, !dbg !10179
  %23 = load i8*, i8** @err500form, align 8, !dbg !10180
  %24 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10181
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %24, i32 0, i32 12, !dbg !10182
  %25 = load i8*, i8** %encodedurl, align 8, !dbg !10182
  call void @httpd_send_err(%struct.httpd_conn* %21, i32 500, i8* %22, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %23, i8* %25), !dbg !10183
  %26 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10184
  call void @httpd_write_response(%struct.httpd_conn* %26), !dbg !10185
  call void @exit(i32 1) #13, !dbg !10186
  unreachable, !dbg !10186

if.end21:                                         ; preds = %if.then17
  %call22 = call i32 @fork(), !dbg !10187
  store i32 %call22, i32* %r, align 4, !dbg !10188
  %27 = load i32, i32* %r, align 4, !dbg !10189
  %cmp23 = icmp slt i32 %27, 0, !dbg !10191
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !10192

if.then24:                                        ; preds = %if.end21
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.474, i64 0, i64 0)), !dbg !10193
  %28 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10195
  %29 = load i8*, i8** @err500title, align 8, !dbg !10196
  %30 = load i8*, i8** @err500form, align 8, !dbg !10197
  %31 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10198
  %encodedurl25 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %31, i32 0, i32 12, !dbg !10199
  %32 = load i8*, i8** %encodedurl25, align 8, !dbg !10199
  call void @httpd_send_err(%struct.httpd_conn* %28, i32 500, i8* %29, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %30, i8* %32), !dbg !10200
  %33 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10201
  call void @httpd_write_response(%struct.httpd_conn* %33), !dbg !10202
  call void @exit(i32 1) #13, !dbg !10203
  unreachable, !dbg !10203

if.end26:                                         ; preds = %if.end21
  %34 = load i32, i32* %r, align 4, !dbg !10204
  %cmp27 = icmp eq i32 %34, 0, !dbg !10206
  br i1 %cmp27, label %if.then28, label %if.end31, !dbg !10207

if.then28:                                        ; preds = %if.end26
  store i32 1, i32* @sub_process, align 4, !dbg !10208
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %p, i64 0, i64 0, !dbg !10210
  %35 = load i32, i32* %arrayidx, align 4, !dbg !10210
  %call29 = call i32 @"\01_close"(i32 %35), !dbg !10211
  %36 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10212
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %p, i64 0, i64 1, !dbg !10213
  %37 = load i32, i32* %arrayidx30, align 4, !dbg !10213
  call void @cgi_interpose_input(%struct.httpd_conn* %36, i32 %37), !dbg !10214
  call void @exit(i32 0) #13, !dbg !10215
  unreachable, !dbg !10215

if.end31:                                         ; preds = %if.end26
  %arrayidx32 = getelementptr inbounds [2 x i32], [2 x i32]* %p, i64 0, i64 1, !dbg !10216
  %38 = load i32, i32* %arrayidx32, align 4, !dbg !10216
  %call33 = call i32 @"\01_close"(i32 %38), !dbg !10217
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %p, i64 0, i64 0, !dbg !10218
  %39 = load i32, i32* %arrayidx34, align 4, !dbg !10218
  %cmp35 = icmp ne i32 %39, 0, !dbg !10220
  br i1 %cmp35, label %if.then36, label %if.end41, !dbg !10221

if.then36:                                        ; preds = %if.end31
  %arrayidx37 = getelementptr inbounds [2 x i32], [2 x i32]* %p, i64 0, i64 0, !dbg !10222
  %40 = load i32, i32* %arrayidx37, align 4, !dbg !10222
  %call38 = call i32 @dup2(i32 %40, i32 0), !dbg !10224
  %arrayidx39 = getelementptr inbounds [2 x i32], [2 x i32]* %p, i64 0, i64 0, !dbg !10225
  %41 = load i32, i32* %arrayidx39, align 4, !dbg !10225
  %call40 = call i32 @"\01_close"(i32 %41), !dbg !10226
  br label %if.end41, !dbg !10227

if.end41:                                         ; preds = %if.then36, %if.end31
  br label %if.end48, !dbg !10228

if.else:                                          ; preds = %land.lhs.true, %if.end12
  %42 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10229
  %conn_fd42 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %42, i32 0, i32 60, !dbg !10232
  %43 = load i32, i32* %conn_fd42, align 8, !dbg !10232
  %cmp43 = icmp ne i32 %43, 0, !dbg !10233
  br i1 %cmp43, label %if.then44, label %if.end47, !dbg !10234

if.then44:                                        ; preds = %if.else
  %44 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10235
  %conn_fd45 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %44, i32 0, i32 60, !dbg !10236
  %45 = load i32, i32* %conn_fd45, align 8, !dbg !10236
  %call46 = call i32 @dup2(i32 %45, i32 0), !dbg !10237
  br label %if.end47, !dbg !10238

if.end47:                                         ; preds = %if.then44, %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end41
  %46 = load i8**, i8*** %argp, align 8, !dbg !10239
  %arrayidx49 = getelementptr inbounds i8*, i8** %46, i64 0, !dbg !10239
  %47 = load i8*, i8** %arrayidx49, align 8, !dbg !10239
  %call50 = call i32 @strncmp(i8* %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.496, i64 0, i64 0), i64 4), !dbg !10241
  %cmp51 = icmp ne i32 %call50, 0, !dbg !10242
  br i1 %cmp51, label %land.lhs.true52, label %if.else95, !dbg !10243

land.lhs.true52:                                  ; preds = %if.end48
  %48 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10244
  %mime_flag = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %48, i32 0, i32 51, !dbg !10245
  %49 = load i32, i32* %mime_flag, align 8, !dbg !10245
  %tobool = icmp ne i32 %49, 0, !dbg !10244
  br i1 %tobool, label %if.then53, label %if.else95, !dbg !10246

if.then53:                                        ; preds = %land.lhs.true52
  call void @llvm.dbg.declare(metadata [2 x i32]* %p54, metadata !10247, metadata !DIExpression()), !dbg !10249
  %arraydecay55 = getelementptr inbounds [2 x i32], [2 x i32]* %p54, i64 0, i64 0, !dbg !10250
  %call56 = call i32 @pipe(i32* %arraydecay55), !dbg !10252
  %cmp57 = icmp slt i32 %call56, 0, !dbg !10253
  br i1 %cmp57, label %if.then58, label %if.end60, !dbg !10254

if.then58:                                        ; preds = %if.then53
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.495, i64 0, i64 0)), !dbg !10255
  %50 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10257
  %51 = load i8*, i8** @err500title, align 8, !dbg !10258
  %52 = load i8*, i8** @err500form, align 8, !dbg !10259
  %53 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10260
  %encodedurl59 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %53, i32 0, i32 12, !dbg !10261
  %54 = load i8*, i8** %encodedurl59, align 8, !dbg !10261
  call void @httpd_send_err(%struct.httpd_conn* %50, i32 500, i8* %51, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %52, i8* %54), !dbg !10262
  %55 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10263
  call void @httpd_write_response(%struct.httpd_conn* %55), !dbg !10264
  call void @exit(i32 1) #13, !dbg !10265
  unreachable, !dbg !10265

if.end60:                                         ; preds = %if.then53
  %call61 = call i32 @fork(), !dbg !10266
  store i32 %call61, i32* %r, align 4, !dbg !10267
  %56 = load i32, i32* %r, align 4, !dbg !10268
  %cmp62 = icmp slt i32 %56, 0, !dbg !10270
  br i1 %cmp62, label %if.then63, label %if.end65, !dbg !10271

if.then63:                                        ; preds = %if.end60
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.474, i64 0, i64 0)), !dbg !10272
  %57 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10274
  %58 = load i8*, i8** @err500title, align 8, !dbg !10275
  %59 = load i8*, i8** @err500form, align 8, !dbg !10276
  %60 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10277
  %encodedurl64 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %60, i32 0, i32 12, !dbg !10278
  %61 = load i8*, i8** %encodedurl64, align 8, !dbg !10278
  call void @httpd_send_err(%struct.httpd_conn* %57, i32 500, i8* %58, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %59, i8* %61), !dbg !10279
  %62 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10280
  call void @httpd_write_response(%struct.httpd_conn* %62), !dbg !10281
  call void @exit(i32 1) #13, !dbg !10282
  unreachable, !dbg !10282

if.end65:                                         ; preds = %if.end60
  %63 = load i32, i32* %r, align 4, !dbg !10283
  %cmp66 = icmp eq i32 %63, 0, !dbg !10285
  br i1 %cmp66, label %if.then67, label %if.end71, !dbg !10286

if.then67:                                        ; preds = %if.end65
  store i32 1, i32* @sub_process, align 4, !dbg !10287
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* %p54, i64 0, i64 1, !dbg !10289
  %64 = load i32, i32* %arrayidx68, align 4, !dbg !10289
  %call69 = call i32 @"\01_close"(i32 %64), !dbg !10290
  %65 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10291
  %arrayidx70 = getelementptr inbounds [2 x i32], [2 x i32]* %p54, i64 0, i64 0, !dbg !10292
  %66 = load i32, i32* %arrayidx70, align 4, !dbg !10292
  call void @cgi_interpose_output(%struct.httpd_conn* %65, i32 %66), !dbg !10293
  call void @exit(i32 0) #13, !dbg !10294
  unreachable, !dbg !10294

if.end71:                                         ; preds = %if.end65
  %arrayidx72 = getelementptr inbounds [2 x i32], [2 x i32]* %p54, i64 0, i64 0, !dbg !10295
  %67 = load i32, i32* %arrayidx72, align 4, !dbg !10295
  %call73 = call i32 @"\01_close"(i32 %67), !dbg !10296
  %arrayidx74 = getelementptr inbounds [2 x i32], [2 x i32]* %p54, i64 0, i64 1, !dbg !10297
  %68 = load i32, i32* %arrayidx74, align 4, !dbg !10297
  %cmp75 = icmp ne i32 %68, 1, !dbg !10299
  br i1 %cmp75, label %if.then76, label %if.end79, !dbg !10300

if.then76:                                        ; preds = %if.end71
  %arrayidx77 = getelementptr inbounds [2 x i32], [2 x i32]* %p54, i64 0, i64 1, !dbg !10301
  %69 = load i32, i32* %arrayidx77, align 4, !dbg !10301
  %call78 = call i32 @dup2(i32 %69, i32 1), !dbg !10302
  br label %if.end79, !dbg !10303

if.end79:                                         ; preds = %if.then76, %if.end71
  %arrayidx80 = getelementptr inbounds [2 x i32], [2 x i32]* %p54, i64 0, i64 1, !dbg !10304
  %70 = load i32, i32* %arrayidx80, align 4, !dbg !10304
  %cmp81 = icmp ne i32 %70, 2, !dbg !10306
  br i1 %cmp81, label %if.then82, label %if.end85, !dbg !10307

if.then82:                                        ; preds = %if.end79
  %arrayidx83 = getelementptr inbounds [2 x i32], [2 x i32]* %p54, i64 0, i64 1, !dbg !10308
  %71 = load i32, i32* %arrayidx83, align 4, !dbg !10308
  %call84 = call i32 @dup2(i32 %71, i32 2), !dbg !10309
  br label %if.end85, !dbg !10310

if.end85:                                         ; preds = %if.then82, %if.end79
  %arrayidx86 = getelementptr inbounds [2 x i32], [2 x i32]* %p54, i64 0, i64 1, !dbg !10311
  %72 = load i32, i32* %arrayidx86, align 4, !dbg !10311
  %cmp87 = icmp ne i32 %72, 1, !dbg !10313
  br i1 %cmp87, label %land.lhs.true88, label %if.end94, !dbg !10314

land.lhs.true88:                                  ; preds = %if.end85
  %arrayidx89 = getelementptr inbounds [2 x i32], [2 x i32]* %p54, i64 0, i64 1, !dbg !10315
  %73 = load i32, i32* %arrayidx89, align 4, !dbg !10315
  %cmp90 = icmp ne i32 %73, 2, !dbg !10316
  br i1 %cmp90, label %if.then91, label %if.end94, !dbg !10317

if.then91:                                        ; preds = %land.lhs.true88
  %arrayidx92 = getelementptr inbounds [2 x i32], [2 x i32]* %p54, i64 0, i64 1, !dbg !10318
  %74 = load i32, i32* %arrayidx92, align 4, !dbg !10318
  %call93 = call i32 @"\01_close"(i32 %74), !dbg !10319
  br label %if.end94, !dbg !10320

if.end94:                                         ; preds = %if.then91, %land.lhs.true88, %if.end85
  br label %if.end108, !dbg !10321

if.else95:                                        ; preds = %land.lhs.true52, %if.end48
  %75 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10322
  %conn_fd96 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %75, i32 0, i32 60, !dbg !10325
  %76 = load i32, i32* %conn_fd96, align 8, !dbg !10325
  %cmp97 = icmp ne i32 %76, 1, !dbg !10326
  br i1 %cmp97, label %if.then98, label %if.end101, !dbg !10327

if.then98:                                        ; preds = %if.else95
  %77 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10328
  %conn_fd99 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %77, i32 0, i32 60, !dbg !10329
  %78 = load i32, i32* %conn_fd99, align 8, !dbg !10329
  %call100 = call i32 @dup2(i32 %78, i32 1), !dbg !10330
  br label %if.end101, !dbg !10331

if.end101:                                        ; preds = %if.then98, %if.else95
  %79 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10332
  %conn_fd102 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %79, i32 0, i32 60, !dbg !10334
  %80 = load i32, i32* %conn_fd102, align 8, !dbg !10334
  %cmp103 = icmp ne i32 %80, 2, !dbg !10335
  br i1 %cmp103, label %if.then104, label %if.end107, !dbg !10336

if.then104:                                       ; preds = %if.end101
  %81 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10337
  %conn_fd105 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %81, i32 0, i32 60, !dbg !10338
  %82 = load i32, i32* %conn_fd105, align 8, !dbg !10338
  %call106 = call i32 @dup2(i32 %82, i32 2), !dbg !10339
  br label %if.end107, !dbg !10340

if.end107:                                        ; preds = %if.then104, %if.end101
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.end94
  %call109 = call i32 @"\01_nice"(i32 10), !dbg !10341
  %83 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10342
  %expnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %83, i32 0, i32 16, !dbg !10343
  %84 = load i8*, i8** %expnfilename, align 8, !dbg !10343
  %call110 = call i8* @strdup(i8* %84), !dbg !10344
  store i8* %call110, i8** %directory, align 8, !dbg !10345
  %85 = load i8*, i8** %directory, align 8, !dbg !10346
  %cmp111 = icmp eq i8* %85, null, !dbg !10348
  br i1 %cmp111, label %if.then112, label %if.else114, !dbg !10349

if.then112:                                       ; preds = %if.end108
  %86 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10350
  %expnfilename113 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %86, i32 0, i32 16, !dbg !10351
  %87 = load i8*, i8** %expnfilename113, align 8, !dbg !10351
  store i8* %87, i8** %binary, align 8, !dbg !10352
  br label %if.end122, !dbg !10353

if.else114:                                       ; preds = %if.end108
  %88 = load i8*, i8** %directory, align 8, !dbg !10354
  %call115 = call i8* @strrchr(i8* %88, i32 47), !dbg !10356
  store i8* %call115, i8** %binary, align 8, !dbg !10357
  %89 = load i8*, i8** %binary, align 8, !dbg !10358
  %cmp116 = icmp eq i8* %89, null, !dbg !10360
  br i1 %cmp116, label %if.then117, label %if.else119, !dbg !10361

if.then117:                                       ; preds = %if.else114
  %90 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10362
  %expnfilename118 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %90, i32 0, i32 16, !dbg !10363
  %91 = load i8*, i8** %expnfilename118, align 8, !dbg !10363
  store i8* %91, i8** %binary, align 8, !dbg !10364
  br label %if.end121, !dbg !10365

if.else119:                                       ; preds = %if.else114
  %92 = load i8*, i8** %binary, align 8, !dbg !10366
  %incdec.ptr = getelementptr inbounds i8, i8* %92, i32 1, !dbg !10366
  store i8* %incdec.ptr, i8** %binary, align 8, !dbg !10366
  store i8 0, i8* %92, align 1, !dbg !10368
  %93 = load i8*, i8** %directory, align 8, !dbg !10369
  %call120 = call i32 @chdir(i8* %93), !dbg !10370
  br label %if.end121

if.end121:                                        ; preds = %if.else119, %if.then117
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.then112
  %call123 = call void (i32)* @sigset(i32 13, void (i32)* null), !dbg !10371
  %94 = load i8*, i8** %binary, align 8, !dbg !10372
  %95 = load i8**, i8*** %argp, align 8, !dbg !10373
  %96 = load i8**, i8*** %envp, align 8, !dbg !10374
  %call124 = call i32 @execve(i8* %94, i8** %95, i8** %96), !dbg !10375
  %97 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10376
  %expnfilename125 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %97, i32 0, i32 16, !dbg !10377
  %98 = load i8*, i8** %expnfilename125, align 8, !dbg !10377
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.497, i64 0, i64 0), i8* %98), !dbg !10378
  %99 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10379
  %100 = load i8*, i8** @err500title, align 8, !dbg !10380
  %101 = load i8*, i8** @err500form, align 8, !dbg !10381
  %102 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10382
  %encodedurl126 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %102, i32 0, i32 12, !dbg !10383
  %103 = load i8*, i8** %encodedurl126, align 8, !dbg !10383
  call void @httpd_send_err(%struct.httpd_conn* %99, i32 500, i8* %100, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* %101, i8* %103), !dbg !10384
  %104 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10385
  call void @httpd_write_response(%struct.httpd_conn* %104), !dbg !10386
  call void @_exit(i32 1) #13, !dbg !10387
  unreachable, !dbg !10387
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @cgi_kill(i8* %client_data.coerce, %struct.timeval* %nowP) #0 !dbg !10388 {
entry:
  %client_data = alloca %union.ClientData, align 8
  %nowP.addr = alloca %struct.timeval*, align 8
  %pid = alloca i32, align 4
  %coerce.dive = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0
  store i8* %client_data.coerce, i8** %coerce.dive, align 8
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !10389, metadata !DIExpression()), !dbg !10390
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !10391, metadata !DIExpression()), !dbg !10392
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !10393, metadata !DIExpression()), !dbg !10394
  %i = bitcast %union.ClientData* %client_data to i32*, !dbg !10395
  %0 = load i32, i32* %i, align 8, !dbg !10395
  store i32 %0, i32* %pid, align 4, !dbg !10396
  %1 = load i32, i32* %pid, align 4, !dbg !10397
  %call = call i32 @"\01_kill"(i32 %1, i32 2), !dbg !10399
  %cmp = icmp eq i32 %call, 0, !dbg !10400
  br i1 %cmp, label %if.then, label %if.end5, !dbg !10401

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %pid, align 4, !dbg !10402
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.490, i64 0, i64 0), i32 %2), !dbg !10404
  %3 = load %struct.timeval*, %struct.timeval** %nowP.addr, align 8, !dbg !10405
  %coerce.dive1 = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0, !dbg !10407
  %4 = load i8*, i8** %coerce.dive1, align 8, !dbg !10407
  %call2 = call %struct.TimerStruct* @tmr_create(%struct.timeval* %3, void (i8*, %struct.timeval*)* @cgi_kill2, i8* %4, i64 5000, i32 0), !dbg !10407
  %cmp3 = icmp eq %struct.TimerStruct* %call2, null, !dbg !10408
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !10409

if.then4:                                         ; preds = %if.then
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.491, i64 0, i64 0)), !dbg !10410
  call void @exit(i32 1) #13, !dbg !10412
  unreachable, !dbg !10412

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !10413

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !10414
}

declare i32 @"\01_kill"(i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @cgi_kill2(i8* %client_data.coerce, %struct.timeval* %nowP) #0 !dbg !10415 {
entry:
  %client_data = alloca %union.ClientData, align 8
  %nowP.addr = alloca %struct.timeval*, align 8
  %pid = alloca i32, align 4
  %coerce.dive = getelementptr inbounds %union.ClientData, %union.ClientData* %client_data, i32 0, i32 0
  store i8* %client_data.coerce, i8** %coerce.dive, align 8
  call void @llvm.dbg.declare(metadata %union.ClientData* %client_data, metadata !10416, metadata !DIExpression()), !dbg !10417
  store %struct.timeval* %nowP, %struct.timeval** %nowP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval** %nowP.addr, metadata !10418, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !10420, metadata !DIExpression()), !dbg !10421
  %i = bitcast %union.ClientData* %client_data to i32*, !dbg !10422
  %0 = load i32, i32* %i, align 8, !dbg !10422
  store i32 %0, i32* %pid, align 4, !dbg !10423
  %1 = load i32, i32* %pid, align 4, !dbg !10424
  %call = call i32 @"\01_kill"(i32 %1, i32 9), !dbg !10426
  %cmp = icmp eq i32 %call, 0, !dbg !10427
  br i1 %cmp, label %if.then, label %if.end, !dbg !10428

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %pid, align 4, !dbg !10429
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.492, i64 0, i64 0), i32 %2), !dbg !10430
  br label %if.end, !dbg !10430

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10431
}

declare i32 @dup2(i32, i32) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i8** @make_envp(%struct.httpd_conn* %hc) #0 !dbg !935 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %envn = alloca i32, align 4
  %cp = alloca i8*, align 8
  %buf = alloca [256 x i8], align 16
  %cp2 = alloca i8*, align 8
  %l = alloca i64, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !10432, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.declare(metadata i32* %envn, metadata !10434, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !10436, metadata !DIExpression()), !dbg !10437
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !10438, metadata !DIExpression()), !dbg !10439
  store i32 0, i32* %envn, align 4, !dbg !10440
  %call = call i8* @build_env(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.498, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.499, i64 0, i64 0)), !dbg !10441
  %0 = load i32, i32* %envn, align 4, !dbg !10442
  %inc = add nsw i32 %0, 1, !dbg !10442
  store i32 %inc, i32* %envn, align 4, !dbg !10442
  %idxprom = sext i32 %0 to i64, !dbg !10443
  %arrayidx = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom, !dbg !10443
  store i8* %call, i8** %arrayidx, align 8, !dbg !10444
  %call1 = call i8* @build_env(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.500, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.144, i64 0, i64 0)), !dbg !10445
  %1 = load i32, i32* %envn, align 4, !dbg !10446
  %inc2 = add nsw i32 %1, 1, !dbg !10446
  store i32 %inc2, i32* %envn, align 4, !dbg !10446
  %idxprom3 = sext i32 %1 to i64, !dbg !10447
  %arrayidx4 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom3, !dbg !10447
  store i8* %call1, i8** %arrayidx4, align 8, !dbg !10448
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10449
  %hs = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 1, !dbg !10451
  %3 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !10451
  %vhost = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %3, i32 0, i32 15, !dbg !10452
  %4 = load i32, i32* %vhost, align 4, !dbg !10452
  %tobool = icmp ne i32 %4, 0, !dbg !10449
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10453

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10454
  %hostname = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %5, i32 0, i32 50, !dbg !10455
  %6 = load i8*, i8** %hostname, align 8, !dbg !10455
  %cmp = icmp ne i8* %6, null, !dbg !10456
  br i1 %cmp, label %land.lhs.true5, label %if.else, !dbg !10457

land.lhs.true5:                                   ; preds = %land.lhs.true
  %7 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10458
  %hostname6 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %7, i32 0, i32 50, !dbg !10459
  %8 = load i8*, i8** %hostname6, align 8, !dbg !10459
  %arrayidx7 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !10458
  %9 = load i8, i8* %arrayidx7, align 1, !dbg !10458
  %conv = sext i8 %9 to i32, !dbg !10458
  %cmp8 = icmp ne i32 %conv, 0, !dbg !10460
  br i1 %cmp8, label %if.then, label %if.else, !dbg !10461

if.then:                                          ; preds = %land.lhs.true5
  %10 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10462
  %hostname10 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %10, i32 0, i32 50, !dbg !10463
  %11 = load i8*, i8** %hostname10, align 8, !dbg !10463
  store i8* %11, i8** %cp, align 8, !dbg !10464
  br label %if.end35, !dbg !10465

if.else:                                          ; preds = %land.lhs.true5, %land.lhs.true, %entry
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10466
  %hdrhost = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 28, !dbg !10468
  %13 = load i8*, i8** %hdrhost, align 8, !dbg !10468
  %cmp11 = icmp ne i8* %13, null, !dbg !10469
  br i1 %cmp11, label %land.lhs.true13, label %if.else21, !dbg !10470

land.lhs.true13:                                  ; preds = %if.else
  %14 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10471
  %hdrhost14 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %14, i32 0, i32 28, !dbg !10472
  %15 = load i8*, i8** %hdrhost14, align 8, !dbg !10472
  %arrayidx15 = getelementptr inbounds i8, i8* %15, i64 0, !dbg !10471
  %16 = load i8, i8* %arrayidx15, align 1, !dbg !10471
  %conv16 = sext i8 %16 to i32, !dbg !10471
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !10473
  br i1 %cmp17, label %if.then19, label %if.else21, !dbg !10474

if.then19:                                        ; preds = %land.lhs.true13
  %17 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10475
  %hdrhost20 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %17, i32 0, i32 28, !dbg !10476
  %18 = load i8*, i8** %hdrhost20, align 8, !dbg !10476
  store i8* %18, i8** %cp, align 8, !dbg !10477
  br label %if.end34, !dbg !10478

if.else21:                                        ; preds = %land.lhs.true13, %if.else
  %19 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10479
  %reqhost = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %19, i32 0, i32 27, !dbg !10481
  %20 = load i8*, i8** %reqhost, align 8, !dbg !10481
  %cmp22 = icmp ne i8* %20, null, !dbg !10482
  br i1 %cmp22, label %land.lhs.true24, label %if.else32, !dbg !10483

land.lhs.true24:                                  ; preds = %if.else21
  %21 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10484
  %reqhost25 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %21, i32 0, i32 27, !dbg !10485
  %22 = load i8*, i8** %reqhost25, align 8, !dbg !10485
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i64 0, !dbg !10484
  %23 = load i8, i8* %arrayidx26, align 1, !dbg !10484
  %conv27 = sext i8 %23 to i32, !dbg !10484
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !10486
  br i1 %cmp28, label %if.then30, label %if.else32, !dbg !10487

if.then30:                                        ; preds = %land.lhs.true24
  %24 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10488
  %reqhost31 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %24, i32 0, i32 27, !dbg !10489
  %25 = load i8*, i8** %reqhost31, align 8, !dbg !10489
  store i8* %25, i8** %cp, align 8, !dbg !10490
  br label %if.end, !dbg !10491

if.else32:                                        ; preds = %land.lhs.true24, %if.else21
  %26 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10492
  %hs33 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %26, i32 0, i32 1, !dbg !10493
  %27 = load %struct.httpd_server*, %struct.httpd_server** %hs33, align 8, !dbg !10493
  %server_hostname = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %27, i32 0, i32 1, !dbg !10494
  %28 = load i8*, i8** %server_hostname, align 8, !dbg !10494
  store i8* %28, i8** %cp, align 8, !dbg !10495
  br label %if.end

if.end:                                           ; preds = %if.else32, %if.then30
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then19
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then
  %29 = load i8*, i8** %cp, align 8, !dbg !10496
  %cmp36 = icmp ne i8* %29, null, !dbg !10498
  br i1 %cmp36, label %if.then38, label %if.end43, !dbg !10499

if.then38:                                        ; preds = %if.end35
  %30 = load i8*, i8** %cp, align 8, !dbg !10500
  %call39 = call i8* @build_env(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.501, i64 0, i64 0), i8* %30), !dbg !10501
  %31 = load i32, i32* %envn, align 4, !dbg !10502
  %inc40 = add nsw i32 %31, 1, !dbg !10502
  store i32 %inc40, i32* %envn, align 4, !dbg !10502
  %idxprom41 = sext i32 %31 to i64, !dbg !10503
  %arrayidx42 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom41, !dbg !10503
  store i8* %call39, i8** %arrayidx42, align 8, !dbg !10504
  br label %if.end43, !dbg !10503

if.end43:                                         ; preds = %if.then38, %if.end35
  %32 = load i32, i32* %envn, align 4, !dbg !10505
  %inc44 = add nsw i32 %32, 1, !dbg !10505
  store i32 %inc44, i32* %envn, align 4, !dbg !10505
  %idxprom45 = sext i32 %32 to i64, !dbg !10506
  %arrayidx46 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom45, !dbg !10506
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.502, i64 0, i64 0), i8** %arrayidx46, align 8, !dbg !10507
  %33 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10508
  %protocol = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %33, i32 0, i32 14, !dbg !10509
  %34 = load i8*, i8** %protocol, align 8, !dbg !10509
  %call47 = call i8* @build_env(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.503, i64 0, i64 0), i8* %34), !dbg !10510
  %35 = load i32, i32* %envn, align 4, !dbg !10511
  %inc48 = add nsw i32 %35, 1, !dbg !10511
  store i32 %inc48, i32* %envn, align 4, !dbg !10511
  %idxprom49 = sext i32 %35 to i64, !dbg !10512
  %arrayidx50 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom49, !dbg !10512
  store i8* %call47, i8** %arrayidx50, align 8, !dbg !10513
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !10514
  %36 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10515
  %hs51 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %36, i32 0, i32 1, !dbg !10516
  %37 = load %struct.httpd_server*, %struct.httpd_server** %hs51, align 8, !dbg !10516
  %port = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %37, i32 0, i32 2, !dbg !10517
  %38 = load i16, i16* %port, align 8, !dbg !10517
  %conv52 = zext i16 %38 to i32, !dbg !10518
  %call53 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay, i64 256, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.504, i64 0, i64 0), i32 %conv52), !dbg !10519
  %arraydecay54 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !10520
  %call55 = call i8* @build_env(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.505, i64 0, i64 0), i8* %arraydecay54), !dbg !10521
  %39 = load i32, i32* %envn, align 4, !dbg !10522
  %inc56 = add nsw i32 %39, 1, !dbg !10522
  store i32 %inc56, i32* %envn, align 4, !dbg !10522
  %idxprom57 = sext i32 %39 to i64, !dbg !10523
  %arrayidx58 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom57, !dbg !10523
  store i8* %call55, i8** %arrayidx58, align 8, !dbg !10524
  %40 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10525
  %method = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %40, i32 0, i32 8, !dbg !10526
  %41 = load i32, i32* %method, align 4, !dbg !10526
  %call59 = call i8* @httpd_method_str(i32 %41), !dbg !10527
  %call60 = call i8* @build_env(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.506, i64 0, i64 0), i8* %call59), !dbg !10528
  %42 = load i32, i32* %envn, align 4, !dbg !10529
  %inc61 = add nsw i32 %42, 1, !dbg !10529
  store i32 %inc61, i32* %envn, align 4, !dbg !10529
  %idxprom62 = sext i32 %42 to i64, !dbg !10530
  %arrayidx63 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom62, !dbg !10530
  store i8* %call60, i8** %arrayidx63, align 8, !dbg !10531
  %43 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10532
  %pathinfo = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %43, i32 0, i32 18, !dbg !10534
  %44 = load i8*, i8** %pathinfo, align 8, !dbg !10534
  %arrayidx64 = getelementptr inbounds i8, i8* %44, i64 0, !dbg !10532
  %45 = load i8, i8* %arrayidx64, align 1, !dbg !10532
  %conv65 = sext i8 %45 to i32, !dbg !10532
  %cmp66 = icmp ne i32 %conv65, 0, !dbg !10535
  br i1 %cmp66, label %if.then68, label %if.end92, !dbg !10536

if.then68:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !10537, metadata !DIExpression()), !dbg !10539
  call void @llvm.dbg.declare(metadata i64* %l, metadata !10540, metadata !DIExpression()), !dbg !10541
  %46 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10542
  %pathinfo69 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %46, i32 0, i32 18, !dbg !10543
  %47 = load i8*, i8** %pathinfo69, align 8, !dbg !10543
  %call70 = call i8* @build_env(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.507, i64 0, i64 0), i8* %47), !dbg !10544
  %48 = load i32, i32* %envn, align 4, !dbg !10545
  %inc71 = add nsw i32 %48, 1, !dbg !10545
  store i32 %inc71, i32* %envn, align 4, !dbg !10545
  %idxprom72 = sext i32 %48 to i64, !dbg !10546
  %arrayidx73 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom72, !dbg !10546
  store i8* %call70, i8** %arrayidx73, align 8, !dbg !10547
  %49 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10548
  %hs74 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %49, i32 0, i32 1, !dbg !10549
  %50 = load %struct.httpd_server*, %struct.httpd_server** %hs74, align 8, !dbg !10549
  %cwd = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %50, i32 0, i32 9, !dbg !10550
  %51 = load i8*, i8** %cwd, align 8, !dbg !10550
  %call75 = call i64 @strlen(i8* %51), !dbg !10551
  %52 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10552
  %pathinfo76 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %52, i32 0, i32 18, !dbg !10553
  %53 = load i8*, i8** %pathinfo76, align 8, !dbg !10553
  %call77 = call i64 @strlen(i8* %53), !dbg !10554
  %add = add i64 %call75, %call77, !dbg !10555
  %add78 = add i64 %add, 1, !dbg !10556
  store i64 %add78, i64* %l, align 8, !dbg !10557
  %54 = load i64, i64* %l, align 8, !dbg !10558
  %mul = mul i64 1, %54, !dbg !10558
  %call79 = call i8* @malloc(i64 %mul) #15, !dbg !10558
  store i8* %call79, i8** %cp2, align 8, !dbg !10559
  %55 = load i8*, i8** %cp2, align 8, !dbg !10560
  %cmp80 = icmp ne i8* %55, null, !dbg !10562
  br i1 %cmp80, label %if.then82, label %if.end91, !dbg !10563

if.then82:                                        ; preds = %if.then68
  %56 = load i8*, i8** %cp2, align 8, !dbg !10564
  %57 = load i64, i64* %l, align 8, !dbg !10566
  %58 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10567
  %hs83 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %58, i32 0, i32 1, !dbg !10568
  %59 = load %struct.httpd_server*, %struct.httpd_server** %hs83, align 8, !dbg !10568
  %cwd84 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %59, i32 0, i32 9, !dbg !10569
  %60 = load i8*, i8** %cwd84, align 8, !dbg !10569
  %61 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10570
  %pathinfo85 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %61, i32 0, i32 18, !dbg !10571
  %62 = load i8*, i8** %pathinfo85, align 8, !dbg !10571
  %call86 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %56, i64 %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.480, i64 0, i64 0), i8* %60, i8* %62), !dbg !10572
  %63 = load i8*, i8** %cp2, align 8, !dbg !10573
  %call87 = call i8* @build_env(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.508, i64 0, i64 0), i8* %63), !dbg !10574
  %64 = load i32, i32* %envn, align 4, !dbg !10575
  %inc88 = add nsw i32 %64, 1, !dbg !10575
  store i32 %inc88, i32* %envn, align 4, !dbg !10575
  %idxprom89 = sext i32 %64 to i64, !dbg !10576
  %arrayidx90 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom89, !dbg !10576
  store i8* %call87, i8** %arrayidx90, align 8, !dbg !10577
  br label %if.end91, !dbg !10578

if.end91:                                         ; preds = %if.then82, %if.then68
  br label %if.end92, !dbg !10579

if.end92:                                         ; preds = %if.end91, %if.end43
  %65 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10580
  %origfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %65, i32 0, i32 15, !dbg !10581
  %66 = load i8*, i8** %origfilename, align 8, !dbg !10581
  %call93 = call i32 @strcmp(i8* %66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34.242, i64 0, i64 0)), !dbg !10582
  %cmp94 = icmp eq i32 %call93, 0, !dbg !10583
  br i1 %cmp94, label %cond.true, label %cond.false, !dbg !10582

cond.true:                                        ; preds = %if.end92
  br label %cond.end, !dbg !10582

cond.false:                                       ; preds = %if.end92
  %67 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10584
  %origfilename96 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %67, i32 0, i32 15, !dbg !10585
  %68 = load i8*, i8** %origfilename96, align 8, !dbg !10585
  br label %cond.end, !dbg !10582

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), %cond.true ], [ %68, %cond.false ], !dbg !10582
  %call97 = call i8* @build_env(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.509, i64 0, i64 0), i8* %cond), !dbg !10586
  %69 = load i32, i32* %envn, align 4, !dbg !10587
  %inc98 = add nsw i32 %69, 1, !dbg !10587
  store i32 %inc98, i32* %envn, align 4, !dbg !10587
  %idxprom99 = sext i32 %69 to i64, !dbg !10588
  %arrayidx100 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom99, !dbg !10588
  store i8* %call97, i8** %arrayidx100, align 8, !dbg !10589
  %70 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10590
  %query = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %70, i32 0, i32 19, !dbg !10592
  %71 = load i8*, i8** %query, align 8, !dbg !10592
  %arrayidx101 = getelementptr inbounds i8, i8* %71, i64 0, !dbg !10590
  %72 = load i8, i8* %arrayidx101, align 1, !dbg !10590
  %conv102 = sext i8 %72 to i32, !dbg !10590
  %cmp103 = icmp ne i32 %conv102, 0, !dbg !10593
  br i1 %cmp103, label %if.then105, label %if.end111, !dbg !10594

if.then105:                                       ; preds = %cond.end
  %73 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10595
  %query106 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %73, i32 0, i32 19, !dbg !10596
  %74 = load i8*, i8** %query106, align 8, !dbg !10596
  %call107 = call i8* @build_env(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.510, i64 0, i64 0), i8* %74), !dbg !10597
  %75 = load i32, i32* %envn, align 4, !dbg !10598
  %inc108 = add nsw i32 %75, 1, !dbg !10598
  store i32 %inc108, i32* %envn, align 4, !dbg !10598
  %idxprom109 = sext i32 %75 to i64, !dbg !10599
  %arrayidx110 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom109, !dbg !10599
  store i8* %call107, i8** %arrayidx110, align 8, !dbg !10600
  br label %if.end111, !dbg !10599

if.end111:                                        ; preds = %if.then105, %cond.end
  %76 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10601
  %client_addr = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %76, i32 0, i32 2, !dbg !10602
  %call112 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr), !dbg !10603
  %call113 = call i8* @build_env(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.511, i64 0, i64 0), i8* %call112), !dbg !10604
  %77 = load i32, i32* %envn, align 4, !dbg !10605
  %inc114 = add nsw i32 %77, 1, !dbg !10605
  store i32 %inc114, i32* %envn, align 4, !dbg !10605
  %idxprom115 = sext i32 %77 to i64, !dbg !10606
  %arrayidx116 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom115, !dbg !10606
  store i8* %call113, i8** %arrayidx116, align 8, !dbg !10607
  %78 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10608
  %referrer = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %78, i32 0, i32 20, !dbg !10610
  %79 = load i8*, i8** %referrer, align 8, !dbg !10610
  %arrayidx117 = getelementptr inbounds i8, i8* %79, i64 0, !dbg !10608
  %80 = load i8, i8* %arrayidx117, align 1, !dbg !10608
  %conv118 = sext i8 %80 to i32, !dbg !10608
  %cmp119 = icmp ne i32 %conv118, 0, !dbg !10611
  br i1 %cmp119, label %if.then121, label %if.end132, !dbg !10612

if.then121:                                       ; preds = %if.end111
  %81 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10613
  %referrer122 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %81, i32 0, i32 20, !dbg !10615
  %82 = load i8*, i8** %referrer122, align 8, !dbg !10615
  %call123 = call i8* @build_env(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.512, i64 0, i64 0), i8* %82), !dbg !10616
  %83 = load i32, i32* %envn, align 4, !dbg !10617
  %inc124 = add nsw i32 %83, 1, !dbg !10617
  store i32 %inc124, i32* %envn, align 4, !dbg !10617
  %idxprom125 = sext i32 %83 to i64, !dbg !10618
  %arrayidx126 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom125, !dbg !10618
  store i8* %call123, i8** %arrayidx126, align 8, !dbg !10619
  %84 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10620
  %referrer127 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %84, i32 0, i32 20, !dbg !10621
  %85 = load i8*, i8** %referrer127, align 8, !dbg !10621
  %call128 = call i8* @build_env(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.513, i64 0, i64 0), i8* %85), !dbg !10622
  %86 = load i32, i32* %envn, align 4, !dbg !10623
  %inc129 = add nsw i32 %86, 1, !dbg !10623
  store i32 %inc129, i32* %envn, align 4, !dbg !10623
  %idxprom130 = sext i32 %86 to i64, !dbg !10624
  %arrayidx131 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom130, !dbg !10624
  store i8* %call128, i8** %arrayidx131, align 8, !dbg !10625
  br label %if.end132, !dbg !10626

if.end132:                                        ; preds = %if.then121, %if.end111
  %87 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10627
  %useragent = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %87, i32 0, i32 21, !dbg !10629
  %88 = load i8*, i8** %useragent, align 8, !dbg !10629
  %arrayidx133 = getelementptr inbounds i8, i8* %88, i64 0, !dbg !10627
  %89 = load i8, i8* %arrayidx133, align 1, !dbg !10627
  %conv134 = sext i8 %89 to i32, !dbg !10627
  %cmp135 = icmp ne i32 %conv134, 0, !dbg !10630
  br i1 %cmp135, label %if.then137, label %if.end143, !dbg !10631

if.then137:                                       ; preds = %if.end132
  %90 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10632
  %useragent138 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %90, i32 0, i32 21, !dbg !10633
  %91 = load i8*, i8** %useragent138, align 8, !dbg !10633
  %call139 = call i8* @build_env(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.514, i64 0, i64 0), i8* %91), !dbg !10634
  %92 = load i32, i32* %envn, align 4, !dbg !10635
  %inc140 = add nsw i32 %92, 1, !dbg !10635
  store i32 %inc140, i32* %envn, align 4, !dbg !10635
  %idxprom141 = sext i32 %92 to i64, !dbg !10636
  %arrayidx142 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom141, !dbg !10636
  store i8* %call139, i8** %arrayidx142, align 8, !dbg !10637
  br label %if.end143, !dbg !10636

if.end143:                                        ; preds = %if.then137, %if.end132
  %93 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10638
  %accept = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %93, i32 0, i32 22, !dbg !10640
  %94 = load i8*, i8** %accept, align 8, !dbg !10640
  %arrayidx144 = getelementptr inbounds i8, i8* %94, i64 0, !dbg !10638
  %95 = load i8, i8* %arrayidx144, align 1, !dbg !10638
  %conv145 = sext i8 %95 to i32, !dbg !10638
  %cmp146 = icmp ne i32 %conv145, 0, !dbg !10641
  br i1 %cmp146, label %if.then148, label %if.end154, !dbg !10642

if.then148:                                       ; preds = %if.end143
  %96 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10643
  %accept149 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %96, i32 0, i32 22, !dbg !10644
  %97 = load i8*, i8** %accept149, align 8, !dbg !10644
  %call150 = call i8* @build_env(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.515, i64 0, i64 0), i8* %97), !dbg !10645
  %98 = load i32, i32* %envn, align 4, !dbg !10646
  %inc151 = add nsw i32 %98, 1, !dbg !10646
  store i32 %inc151, i32* %envn, align 4, !dbg !10646
  %idxprom152 = sext i32 %98 to i64, !dbg !10647
  %arrayidx153 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom152, !dbg !10647
  store i8* %call150, i8** %arrayidx153, align 8, !dbg !10648
  br label %if.end154, !dbg !10647

if.end154:                                        ; preds = %if.then148, %if.end143
  %99 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10649
  %accepte = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %99, i32 0, i32 23, !dbg !10651
  %100 = load i8*, i8** %accepte, align 8, !dbg !10651
  %arrayidx155 = getelementptr inbounds i8, i8* %100, i64 0, !dbg !10649
  %101 = load i8, i8* %arrayidx155, align 1, !dbg !10649
  %conv156 = sext i8 %101 to i32, !dbg !10649
  %cmp157 = icmp ne i32 %conv156, 0, !dbg !10652
  br i1 %cmp157, label %if.then159, label %if.end165, !dbg !10653

if.then159:                                       ; preds = %if.end154
  %102 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10654
  %accepte160 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %102, i32 0, i32 23, !dbg !10655
  %103 = load i8*, i8** %accepte160, align 8, !dbg !10655
  %call161 = call i8* @build_env(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.516, i64 0, i64 0), i8* %103), !dbg !10656
  %104 = load i32, i32* %envn, align 4, !dbg !10657
  %inc162 = add nsw i32 %104, 1, !dbg !10657
  store i32 %inc162, i32* %envn, align 4, !dbg !10657
  %idxprom163 = sext i32 %104 to i64, !dbg !10658
  %arrayidx164 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom163, !dbg !10658
  store i8* %call161, i8** %arrayidx164, align 8, !dbg !10659
  br label %if.end165, !dbg !10658

if.end165:                                        ; preds = %if.then159, %if.end154
  %105 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10660
  %acceptl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %105, i32 0, i32 24, !dbg !10662
  %106 = load i8*, i8** %acceptl, align 8, !dbg !10662
  %arrayidx166 = getelementptr inbounds i8, i8* %106, i64 0, !dbg !10660
  %107 = load i8, i8* %arrayidx166, align 1, !dbg !10660
  %conv167 = sext i8 %107 to i32, !dbg !10660
  %cmp168 = icmp ne i32 %conv167, 0, !dbg !10663
  br i1 %cmp168, label %if.then170, label %if.end176, !dbg !10664

if.then170:                                       ; preds = %if.end165
  %108 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10665
  %acceptl171 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %108, i32 0, i32 24, !dbg !10666
  %109 = load i8*, i8** %acceptl171, align 8, !dbg !10666
  %call172 = call i8* @build_env(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.517, i64 0, i64 0), i8* %109), !dbg !10667
  %110 = load i32, i32* %envn, align 4, !dbg !10668
  %inc173 = add nsw i32 %110, 1, !dbg !10668
  store i32 %inc173, i32* %envn, align 4, !dbg !10668
  %idxprom174 = sext i32 %110 to i64, !dbg !10669
  %arrayidx175 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom174, !dbg !10669
  store i8* %call172, i8** %arrayidx175, align 8, !dbg !10670
  br label %if.end176, !dbg !10669

if.end176:                                        ; preds = %if.then170, %if.end165
  %111 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10671
  %cookie = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %111, i32 0, i32 25, !dbg !10673
  %112 = load i8*, i8** %cookie, align 8, !dbg !10673
  %arrayidx177 = getelementptr inbounds i8, i8* %112, i64 0, !dbg !10671
  %113 = load i8, i8* %arrayidx177, align 1, !dbg !10671
  %conv178 = sext i8 %113 to i32, !dbg !10671
  %cmp179 = icmp ne i32 %conv178, 0, !dbg !10674
  br i1 %cmp179, label %if.then181, label %if.end187, !dbg !10675

if.then181:                                       ; preds = %if.end176
  %114 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10676
  %cookie182 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %114, i32 0, i32 25, !dbg !10677
  %115 = load i8*, i8** %cookie182, align 8, !dbg !10677
  %call183 = call i8* @build_env(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.518, i64 0, i64 0), i8* %115), !dbg !10678
  %116 = load i32, i32* %envn, align 4, !dbg !10679
  %inc184 = add nsw i32 %116, 1, !dbg !10679
  store i32 %inc184, i32* %envn, align 4, !dbg !10679
  %idxprom185 = sext i32 %116 to i64, !dbg !10680
  %arrayidx186 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom185, !dbg !10680
  store i8* %call183, i8** %arrayidx186, align 8, !dbg !10681
  br label %if.end187, !dbg !10680

if.end187:                                        ; preds = %if.then181, %if.end176
  %117 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10682
  %contenttype = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %117, i32 0, i32 26, !dbg !10684
  %118 = load i8*, i8** %contenttype, align 8, !dbg !10684
  %arrayidx188 = getelementptr inbounds i8, i8* %118, i64 0, !dbg !10682
  %119 = load i8, i8* %arrayidx188, align 1, !dbg !10682
  %conv189 = sext i8 %119 to i32, !dbg !10682
  %cmp190 = icmp ne i32 %conv189, 0, !dbg !10685
  br i1 %cmp190, label %if.then192, label %if.end198, !dbg !10686

if.then192:                                       ; preds = %if.end187
  %120 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10687
  %contenttype193 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %120, i32 0, i32 26, !dbg !10688
  %121 = load i8*, i8** %contenttype193, align 8, !dbg !10688
  %call194 = call i8* @build_env(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.519, i64 0, i64 0), i8* %121), !dbg !10689
  %122 = load i32, i32* %envn, align 4, !dbg !10690
  %inc195 = add nsw i32 %122, 1, !dbg !10690
  store i32 %inc195, i32* %envn, align 4, !dbg !10690
  %idxprom196 = sext i32 %122 to i64, !dbg !10691
  %arrayidx197 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom196, !dbg !10691
  store i8* %call194, i8** %arrayidx197, align 8, !dbg !10692
  br label %if.end198, !dbg !10691

if.end198:                                        ; preds = %if.then192, %if.end187
  %123 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10693
  %hdrhost199 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %123, i32 0, i32 28, !dbg !10695
  %124 = load i8*, i8** %hdrhost199, align 8, !dbg !10695
  %arrayidx200 = getelementptr inbounds i8, i8* %124, i64 0, !dbg !10693
  %125 = load i8, i8* %arrayidx200, align 1, !dbg !10693
  %conv201 = sext i8 %125 to i32, !dbg !10693
  %cmp202 = icmp ne i32 %conv201, 0, !dbg !10696
  br i1 %cmp202, label %if.then204, label %if.end210, !dbg !10697

if.then204:                                       ; preds = %if.end198
  %126 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10698
  %hdrhost205 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %126, i32 0, i32 28, !dbg !10699
  %127 = load i8*, i8** %hdrhost205, align 8, !dbg !10699
  %call206 = call i8* @build_env(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.520, i64 0, i64 0), i8* %127), !dbg !10700
  %128 = load i32, i32* %envn, align 4, !dbg !10701
  %inc207 = add nsw i32 %128, 1, !dbg !10701
  store i32 %inc207, i32* %envn, align 4, !dbg !10701
  %idxprom208 = sext i32 %128 to i64, !dbg !10702
  %arrayidx209 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom208, !dbg !10702
  store i8* %call206, i8** %arrayidx209, align 8, !dbg !10703
  br label %if.end210, !dbg !10702

if.end210:                                        ; preds = %if.then204, %if.end198
  %129 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10704
  %contentlength = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %129, i32 0, i32 48, !dbg !10706
  %130 = load i64, i64* %contentlength, align 8, !dbg !10706
  %cmp211 = icmp ne i64 %130, -1, !dbg !10707
  br i1 %cmp211, label %if.then213, label %if.end222, !dbg !10708

if.then213:                                       ; preds = %if.end210
  %arraydecay214 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !10709
  %131 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10711
  %contentlength215 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %131, i32 0, i32 48, !dbg !10712
  %132 = load i64, i64* %contentlength215, align 8, !dbg !10712
  %call216 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay214, i64 256, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.521, i64 0, i64 0), i64 %132), !dbg !10713
  %arraydecay217 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !10714
  %call218 = call i8* @build_env(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.522, i64 0, i64 0), i8* %arraydecay217), !dbg !10715
  %133 = load i32, i32* %envn, align 4, !dbg !10716
  %inc219 = add nsw i32 %133, 1, !dbg !10716
  store i32 %inc219, i32* %envn, align 4, !dbg !10716
  %idxprom220 = sext i32 %133 to i64, !dbg !10717
  %arrayidx221 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom220, !dbg !10717
  store i8* %call218, i8** %arrayidx221, align 8, !dbg !10718
  br label %if.end222, !dbg !10719

if.end222:                                        ; preds = %if.then213, %if.end210
  %134 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10720
  %remoteuser = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %134, i32 0, i32 31, !dbg !10722
  %135 = load i8*, i8** %remoteuser, align 8, !dbg !10722
  %arrayidx223 = getelementptr inbounds i8, i8* %135, i64 0, !dbg !10720
  %136 = load i8, i8* %arrayidx223, align 1, !dbg !10720
  %conv224 = sext i8 %136 to i32, !dbg !10720
  %cmp225 = icmp ne i32 %conv224, 0, !dbg !10723
  br i1 %cmp225, label %if.then227, label %if.end233, !dbg !10724

if.then227:                                       ; preds = %if.end222
  %137 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10725
  %remoteuser228 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %137, i32 0, i32 31, !dbg !10726
  %138 = load i8*, i8** %remoteuser228, align 8, !dbg !10726
  %call229 = call i8* @build_env(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.523, i64 0, i64 0), i8* %138), !dbg !10727
  %139 = load i32, i32* %envn, align 4, !dbg !10728
  %inc230 = add nsw i32 %139, 1, !dbg !10728
  store i32 %inc230, i32* %envn, align 4, !dbg !10728
  %idxprom231 = sext i32 %139 to i64, !dbg !10729
  %arrayidx232 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom231, !dbg !10729
  store i8* %call229, i8** %arrayidx232, align 8, !dbg !10730
  br label %if.end233, !dbg !10729

if.end233:                                        ; preds = %if.then227, %if.end222
  %140 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10731
  %authorization = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %140, i32 0, i32 30, !dbg !10733
  %141 = load i8*, i8** %authorization, align 8, !dbg !10733
  %arrayidx234 = getelementptr inbounds i8, i8* %141, i64 0, !dbg !10731
  %142 = load i8, i8* %arrayidx234, align 1, !dbg !10731
  %conv235 = sext i8 %142 to i32, !dbg !10731
  %cmp236 = icmp ne i32 %conv235, 0, !dbg !10734
  br i1 %cmp236, label %if.then238, label %if.end243, !dbg !10735

if.then238:                                       ; preds = %if.end233
  %call239 = call i8* @build_env(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.524, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.525, i64 0, i64 0)), !dbg !10736
  %143 = load i32, i32* %envn, align 4, !dbg !10737
  %inc240 = add nsw i32 %143, 1, !dbg !10737
  store i32 %inc240, i32* %envn, align 4, !dbg !10737
  %idxprom241 = sext i32 %143 to i64, !dbg !10738
  %arrayidx242 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom241, !dbg !10738
  store i8* %call239, i8** %arrayidx242, align 8, !dbg !10739
  br label %if.end243, !dbg !10738

if.end243:                                        ; preds = %if.then238, %if.end233
  %call244 = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.526, i64 0, i64 0)), !dbg !10740
  %cmp245 = icmp ne i8* %call244, null, !dbg !10742
  br i1 %cmp245, label %if.then247, label %if.end253, !dbg !10743

if.then247:                                       ; preds = %if.end243
  %call248 = call i8* @getenv(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.526, i64 0, i64 0)), !dbg !10744
  %call249 = call i8* @build_env(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.527, i64 0, i64 0), i8* %call248), !dbg !10745
  %144 = load i32, i32* %envn, align 4, !dbg !10746
  %inc250 = add nsw i32 %144, 1, !dbg !10746
  store i32 %inc250, i32* %envn, align 4, !dbg !10746
  %idxprom251 = sext i32 %144 to i64, !dbg !10747
  %arrayidx252 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom251, !dbg !10747
  store i8* %call249, i8** %arrayidx252, align 8, !dbg !10748
  br label %if.end253, !dbg !10747

if.end253:                                        ; preds = %if.then247, %if.end243
  %145 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10749
  %hs254 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %145, i32 0, i32 1, !dbg !10750
  %146 = load %struct.httpd_server*, %struct.httpd_server** %hs254, align 8, !dbg !10750
  %cgi_pattern = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %146, i32 0, i32 3, !dbg !10751
  %147 = load i8*, i8** %cgi_pattern, align 8, !dbg !10751
  %call255 = call i8* @build_env(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.528, i64 0, i64 0), i8* %147), !dbg !10752
  %148 = load i32, i32* %envn, align 4, !dbg !10753
  %inc256 = add nsw i32 %148, 1, !dbg !10753
  store i32 %inc256, i32* %envn, align 4, !dbg !10753
  %idxprom257 = sext i32 %148 to i64, !dbg !10754
  %arrayidx258 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom257, !dbg !10754
  store i8* %call255, i8** %arrayidx258, align 8, !dbg !10755
  %149 = load i32, i32* %envn, align 4, !dbg !10756
  %idxprom259 = sext i32 %149 to i64, !dbg !10757
  %arrayidx260 = getelementptr inbounds [50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 %idxprom259, !dbg !10757
  store i8* null, i8** %arrayidx260, align 8, !dbg !10758
  ret i8** getelementptr inbounds ([50 x i8*], [50 x i8*]* @make_envp.envp, i64 0, i64 0), !dbg !10759
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i8** @make_argp(%struct.httpd_conn* %hc) #0 !dbg !10760 {
entry:
  %retval = alloca i8**, align 8
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %argp = alloca i8**, align 8
  %argn = alloca i32, align 4
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !10761, metadata !DIExpression()), !dbg !10762
  call void @llvm.dbg.declare(metadata i8*** %argp, metadata !10763, metadata !DIExpression()), !dbg !10764
  call void @llvm.dbg.declare(metadata i32* %argn, metadata !10765, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !10767, metadata !DIExpression()), !dbg !10768
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !10769, metadata !DIExpression()), !dbg !10770
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10771
  %query = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 19, !dbg !10771
  %1 = load i8*, i8** %query, align 8, !dbg !10771
  %call = call i64 @strlen(i8* %1), !dbg !10771
  %add = add i64 %call, 2, !dbg !10771
  %mul = mul i64 8, %add, !dbg !10771
  %call1 = call i8* @malloc(i64 %mul) #15, !dbg !10771
  %2 = bitcast i8* %call1 to i8**, !dbg !10771
  store i8** %2, i8*** %argp, align 8, !dbg !10772
  %3 = load i8**, i8*** %argp, align 8, !dbg !10773
  %cmp = icmp eq i8** %3, null, !dbg !10775
  br i1 %cmp, label %if.then, label %if.end, !dbg !10776

if.then:                                          ; preds = %entry
  store i8** null, i8*** %retval, align 8, !dbg !10777
  br label %return, !dbg !10777

if.end:                                           ; preds = %entry
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10778
  %expnfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %4, i32 0, i32 16, !dbg !10779
  %5 = load i8*, i8** %expnfilename, align 8, !dbg !10779
  %call2 = call i8* @strrchr(i8* %5, i32 47), !dbg !10780
  %6 = load i8**, i8*** %argp, align 8, !dbg !10781
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 0, !dbg !10781
  store i8* %call2, i8** %arrayidx, align 8, !dbg !10782
  %7 = load i8**, i8*** %argp, align 8, !dbg !10783
  %arrayidx3 = getelementptr inbounds i8*, i8** %7, i64 0, !dbg !10783
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !10783
  %cmp4 = icmp ne i8* %8, null, !dbg !10785
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !10786

if.then5:                                         ; preds = %if.end
  %9 = load i8**, i8*** %argp, align 8, !dbg !10787
  %arrayidx6 = getelementptr inbounds i8*, i8** %9, i64 0, !dbg !10787
  %10 = load i8*, i8** %arrayidx6, align 8, !dbg !10788
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !10788
  store i8* %incdec.ptr, i8** %arrayidx6, align 8, !dbg !10788
  br label %if.end9, !dbg !10788

if.else:                                          ; preds = %if.end
  %11 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10789
  %expnfilename7 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %11, i32 0, i32 16, !dbg !10790
  %12 = load i8*, i8** %expnfilename7, align 8, !dbg !10790
  %13 = load i8**, i8*** %argp, align 8, !dbg !10791
  %arrayidx8 = getelementptr inbounds i8*, i8** %13, i64 0, !dbg !10791
  store i8* %12, i8** %arrayidx8, align 8, !dbg !10792
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then5
  store i32 1, i32* %argn, align 4, !dbg !10793
  %14 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10794
  %query10 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %14, i32 0, i32 19, !dbg !10796
  %15 = load i8*, i8** %query10, align 8, !dbg !10796
  %call11 = call i8* @strchr(i8* %15, i32 61), !dbg !10797
  %cmp12 = icmp eq i8* %call11, null, !dbg !10798
  br i1 %cmp12, label %if.then13, label %if.end31, !dbg !10799

if.then13:                                        ; preds = %if.end9
  %16 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10800
  %query14 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %16, i32 0, i32 19, !dbg !10803
  %17 = load i8*, i8** %query14, align 8, !dbg !10803
  store i8* %17, i8** %cp2, align 8, !dbg !10804
  store i8* %17, i8** %cp1, align 8, !dbg !10805
  br label %for.cond, !dbg !10806

for.cond:                                         ; preds = %for.inc, %if.then13
  %18 = load i8*, i8** %cp2, align 8, !dbg !10807
  %19 = load i8, i8* %18, align 1, !dbg !10809
  %conv = sext i8 %19 to i32, !dbg !10809
  %cmp15 = icmp ne i32 %conv, 0, !dbg !10810
  br i1 %cmp15, label %for.body, label %for.end, !dbg !10811

for.body:                                         ; preds = %for.cond
  %20 = load i8*, i8** %cp2, align 8, !dbg !10812
  %21 = load i8, i8* %20, align 1, !dbg !10815
  %conv17 = sext i8 %21 to i32, !dbg !10815
  %cmp18 = icmp eq i32 %conv17, 43, !dbg !10816
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !10817

if.then20:                                        ; preds = %for.body
  %22 = load i8*, i8** %cp2, align 8, !dbg !10818
  store i8 0, i8* %22, align 1, !dbg !10820
  %23 = load i8*, i8** %cp1, align 8, !dbg !10821
  %24 = load i8*, i8** %cp1, align 8, !dbg !10822
  call void @strdecode(i8* %23, i8* %24), !dbg !10823
  %25 = load i8*, i8** %cp1, align 8, !dbg !10824
  %26 = load i8**, i8*** %argp, align 8, !dbg !10825
  %27 = load i32, i32* %argn, align 4, !dbg !10826
  %inc = add nsw i32 %27, 1, !dbg !10826
  store i32 %inc, i32* %argn, align 4, !dbg !10826
  %idxprom = sext i32 %27 to i64, !dbg !10825
  %arrayidx21 = getelementptr inbounds i8*, i8** %26, i64 %idxprom, !dbg !10825
  store i8* %25, i8** %arrayidx21, align 8, !dbg !10827
  %28 = load i8*, i8** %cp2, align 8, !dbg !10828
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 1, !dbg !10829
  store i8* %add.ptr, i8** %cp1, align 8, !dbg !10830
  br label %if.end22, !dbg !10831

if.end22:                                         ; preds = %if.then20, %for.body
  br label %for.inc, !dbg !10832

for.inc:                                          ; preds = %if.end22
  %29 = load i8*, i8** %cp2, align 8, !dbg !10833
  %incdec.ptr23 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !10833
  store i8* %incdec.ptr23, i8** %cp2, align 8, !dbg !10833
  br label %for.cond, !dbg !10834, !llvm.loop !10835

for.end:                                          ; preds = %for.cond
  %30 = load i8*, i8** %cp2, align 8, !dbg !10837
  %31 = load i8*, i8** %cp1, align 8, !dbg !10839
  %cmp24 = icmp ne i8* %30, %31, !dbg !10840
  br i1 %cmp24, label %if.then26, label %if.end30, !dbg !10841

if.then26:                                        ; preds = %for.end
  %32 = load i8*, i8** %cp1, align 8, !dbg !10842
  %33 = load i8*, i8** %cp1, align 8, !dbg !10844
  call void @strdecode(i8* %32, i8* %33), !dbg !10845
  %34 = load i8*, i8** %cp1, align 8, !dbg !10846
  %35 = load i8**, i8*** %argp, align 8, !dbg !10847
  %36 = load i32, i32* %argn, align 4, !dbg !10848
  %inc27 = add nsw i32 %36, 1, !dbg !10848
  store i32 %inc27, i32* %argn, align 4, !dbg !10848
  %idxprom28 = sext i32 %36 to i64, !dbg !10847
  %arrayidx29 = getelementptr inbounds i8*, i8** %35, i64 %idxprom28, !dbg !10847
  store i8* %34, i8** %arrayidx29, align 8, !dbg !10849
  br label %if.end30, !dbg !10850

if.end30:                                         ; preds = %if.then26, %for.end
  br label %if.end31, !dbg !10851

if.end31:                                         ; preds = %if.end30, %if.end9
  %37 = load i8**, i8*** %argp, align 8, !dbg !10852
  %38 = load i32, i32* %argn, align 4, !dbg !10853
  %idxprom32 = sext i32 %38 to i64, !dbg !10852
  %arrayidx33 = getelementptr inbounds i8*, i8** %37, i64 %idxprom32, !dbg !10852
  store i8* null, i8** %arrayidx33, align 8, !dbg !10854
  %39 = load i8**, i8*** %argp, align 8, !dbg !10855
  store i8** %39, i8*** %retval, align 8, !dbg !10856
  br label %return, !dbg !10856

return:                                           ; preds = %if.end31, %if.then
  %40 = load i8**, i8*** %retval, align 8, !dbg !10857
  ret i8** %40, !dbg !10857
}

declare i32 @pipe(i32*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @cgi_interpose_input(%struct.httpd_conn* %hc, i32 %wfd) #0 !dbg !10858 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %wfd.addr = alloca i32, align 4
  %c = alloca i64, align 8
  %r = alloca i64, align 8
  %buf = alloca [1024 x i8], align 16
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !10861, metadata !DIExpression()), !dbg !10862
  store i32 %wfd, i32* %wfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wfd.addr, metadata !10863, metadata !DIExpression()), !dbg !10864
  call void @llvm.dbg.declare(metadata i64* %c, metadata !10865, metadata !DIExpression()), !dbg !10866
  call void @llvm.dbg.declare(metadata i64* %r, metadata !10867, metadata !DIExpression()), !dbg !10871
  call void @llvm.dbg.declare(metadata [1024 x i8]* %buf, metadata !10872, metadata !DIExpression()), !dbg !10873
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10874
  %read_idx = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 5, !dbg !10875
  %1 = load i64, i64* %read_idx, align 8, !dbg !10875
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10876
  %checked_idx = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 6, !dbg !10877
  %3 = load i64, i64* %checked_idx, align 8, !dbg !10877
  %sub = sub i64 %1, %3, !dbg !10878
  store i64 %sub, i64* %c, align 8, !dbg !10879
  %4 = load i64, i64* %c, align 8, !dbg !10880
  %cmp = icmp ugt i64 %4, 0, !dbg !10882
  br i1 %cmp, label %if.then, label %if.end5, !dbg !10883

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %wfd.addr, align 4, !dbg !10884
  %6 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10887
  %read_buf = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %6, i32 0, i32 3, !dbg !10888
  %7 = load i8*, i8** %read_buf, align 8, !dbg !10888
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10889
  %checked_idx1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 6, !dbg !10890
  %9 = load i64, i64* %checked_idx1, align 8, !dbg !10890
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %9, !dbg !10887
  %10 = load i64, i64* %c, align 8, !dbg !10891
  %call = call i32 @httpd_write_fully(i32 %5, i8* %arrayidx, i64 %10), !dbg !10892
  %conv = sext i32 %call to i64, !dbg !10892
  %11 = load i64, i64* %c, align 8, !dbg !10893
  %cmp2 = icmp ne i64 %conv, %11, !dbg !10894
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !10895

if.then4:                                         ; preds = %if.then
  br label %return, !dbg !10896

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !10897

if.end5:                                          ; preds = %if.end, %entry
  br label %while.cond, !dbg !10898

while.cond:                                       ; preds = %if.end36, %if.then23, %if.end5
  %12 = load i64, i64* %c, align 8, !dbg !10899
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10900
  %contentlength = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 48, !dbg !10901
  %14 = load i64, i64* %contentlength, align 8, !dbg !10901
  %cmp6 = icmp ult i64 %12, %14, !dbg !10902
  br i1 %cmp6, label %while.body, label %while.end, !dbg !10898

while.body:                                       ; preds = %while.cond
  %15 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10903
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %15, i32 0, i32 60, !dbg !10905
  %16 = load i32, i32* %conn_fd, align 8, !dbg !10905
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !10906
  %17 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10907
  %contentlength8 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %17, i32 0, i32 48, !dbg !10907
  %18 = load i64, i64* %contentlength8, align 8, !dbg !10907
  %19 = load i64, i64* %c, align 8, !dbg !10907
  %sub9 = sub i64 %18, %19, !dbg !10907
  %cmp10 = icmp ult i64 1024, %sub9, !dbg !10907
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !10907

cond.true:                                        ; preds = %while.body
  br label %cond.end, !dbg !10907

cond.false:                                       ; preds = %while.body
  %20 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10907
  %contentlength12 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %20, i32 0, i32 48, !dbg !10907
  %21 = load i64, i64* %contentlength12, align 8, !dbg !10907
  %22 = load i64, i64* %c, align 8, !dbg !10907
  %sub13 = sub i64 %21, %22, !dbg !10907
  br label %cond.end, !dbg !10907

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 1024, %cond.true ], [ %sub13, %cond.false ], !dbg !10907
  %call14 = call i64 @"\01_read"(i32 %16, i8* %arraydecay, i64 %cond), !dbg !10908
  store i64 %call14, i64* %r, align 8, !dbg !10909
  %23 = load i64, i64* %r, align 8, !dbg !10910
  %cmp15 = icmp slt i64 %23, 0, !dbg !10912
  br i1 %cmp15, label %land.lhs.true, label %if.end25, !dbg !10913

land.lhs.true:                                    ; preds = %cond.end
  %call17 = call i32* @__error(), !dbg !10914
  %24 = load i32, i32* %call17, align 4, !dbg !10914
  %cmp18 = icmp eq i32 %24, 4, !dbg !10915
  br i1 %cmp18, label %if.then23, label %lor.lhs.false, !dbg !10916

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call20 = call i32* @__error(), !dbg !10917
  %25 = load i32, i32* %call20, align 4, !dbg !10917
  %cmp21 = icmp eq i32 %25, 35, !dbg !10918
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !10919

if.then23:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %call24 = call i32 @"\01_sleep"(i32 1), !dbg !10920
  br label %while.cond, !dbg !10922, !llvm.loop !10923

if.end25:                                         ; preds = %lor.lhs.false, %cond.end
  %26 = load i64, i64* %r, align 8, !dbg !10925
  %cmp26 = icmp sle i64 %26, 0, !dbg !10927
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !10928

if.then28:                                        ; preds = %if.end25
  br label %return, !dbg !10929

if.end29:                                         ; preds = %if.end25
  %27 = load i32, i32* %wfd.addr, align 4, !dbg !10930
  %arraydecay30 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !10932
  %28 = load i64, i64* %r, align 8, !dbg !10933
  %call31 = call i32 @httpd_write_fully(i32 %27, i8* %arraydecay30, i64 %28), !dbg !10934
  %conv32 = sext i32 %call31 to i64, !dbg !10934
  %29 = load i64, i64* %r, align 8, !dbg !10935
  %cmp33 = icmp ne i64 %conv32, %29, !dbg !10936
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !10937

if.then35:                                        ; preds = %if.end29
  br label %return, !dbg !10938

if.end36:                                         ; preds = %if.end29
  %30 = load i64, i64* %r, align 8, !dbg !10939
  %31 = load i64, i64* %c, align 8, !dbg !10940
  %add = add i64 %31, %30, !dbg !10940
  store i64 %add, i64* %c, align 8, !dbg !10940
  br label %while.cond, !dbg !10898, !llvm.loop !10923

while.end:                                        ; preds = %while.cond
  %32 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10941
  call void @post_post_garbage_hack(%struct.httpd_conn* %32), !dbg !10942
  br label %return, !dbg !10943

return:                                           ; preds = %while.end, %if.then35, %if.then28, %if.then4
  ret void, !dbg !10943
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @cgi_interpose_output(%struct.httpd_conn* %hc, i32 %rfd) #0 !dbg !10944 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %rfd.addr = alloca i32, align 4
  %r = alloca i32, align 4
  %buf = alloca [1024 x i8], align 16
  %headers_size = alloca i64, align 8
  %headers_len = alloca i64, align 8
  %headers = alloca i8*, align 8
  %br = alloca i8*, align 8
  %status = alloca i32, align 4
  %title = alloca i8*, align 8
  %cp = alloca i8*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !10945, metadata !DIExpression()), !dbg !10946
  store i32 %rfd, i32* %rfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rfd.addr, metadata !10947, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.declare(metadata i32* %r, metadata !10949, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.declare(metadata [1024 x i8]* %buf, metadata !10951, metadata !DIExpression()), !dbg !10952
  call void @llvm.dbg.declare(metadata i64* %headers_size, metadata !10953, metadata !DIExpression()), !dbg !10954
  call void @llvm.dbg.declare(metadata i64* %headers_len, metadata !10955, metadata !DIExpression()), !dbg !10956
  call void @llvm.dbg.declare(metadata i8** %headers, metadata !10957, metadata !DIExpression()), !dbg !10958
  call void @llvm.dbg.declare(metadata i8** %br, metadata !10959, metadata !DIExpression()), !dbg !10960
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10961, metadata !DIExpression()), !dbg !10962
  call void @llvm.dbg.declare(metadata i8** %title, metadata !10963, metadata !DIExpression()), !dbg !10964
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !10965, metadata !DIExpression()), !dbg !10966
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !10967
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 60, !dbg !10968
  %1 = load i32, i32* %conn_fd, align 8, !dbg !10968
  call void @httpd_clear_ndelay(i32 %1), !dbg !10969
  store i64 0, i64* %headers_size, align 8, !dbg !10970
  call void @httpd_realloc_str(i8** %headers, i64* %headers_size, i64 500), !dbg !10971
  store i64 0, i64* %headers_len, align 8, !dbg !10972
  br label %for.cond, !dbg !10973

for.cond:                                         ; preds = %if.end30, %if.then, %entry
  %2 = load i32, i32* %rfd.addr, align 4, !dbg !10974
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !10978
  %call = call i64 @"\01_read"(i32 %2, i8* %arraydecay, i64 1024), !dbg !10979
  %conv = trunc i64 %call to i32, !dbg !10979
  store i32 %conv, i32* %r, align 4, !dbg !10980
  %3 = load i32, i32* %r, align 4, !dbg !10981
  %cmp = icmp slt i32 %3, 0, !dbg !10983
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10984

land.lhs.true:                                    ; preds = %for.cond
  %call2 = call i32* @__error(), !dbg !10985
  %4 = load i32, i32* %call2, align 4, !dbg !10985
  %cmp3 = icmp eq i32 %4, 4, !dbg !10986
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !10987

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call5 = call i32* @__error(), !dbg !10988
  %5 = load i32, i32* %call5, align 4, !dbg !10988
  %cmp6 = icmp eq i32 %5, 35, !dbg !10989
  br i1 %cmp6, label %if.then, label %if.end, !dbg !10990

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %call8 = call i32 @"\01_sleep"(i32 1), !dbg !10991
  br label %for.cond, !dbg !10993, !llvm.loop !10994

if.end:                                           ; preds = %lor.lhs.false, %for.cond
  %6 = load i32, i32* %r, align 4, !dbg !10997
  %cmp9 = icmp sle i32 %6, 0, !dbg !10999
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !11000

if.then11:                                        ; preds = %if.end
  %7 = load i8*, i8** %headers, align 8, !dbg !11001
  %8 = load i64, i64* %headers_len, align 8, !dbg !11003
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !11001
  store i8* %arrayidx, i8** %br, align 8, !dbg !11004
  br label %for.end, !dbg !11005

if.end12:                                         ; preds = %if.end
  %9 = load i64, i64* %headers_len, align 8, !dbg !11006
  %10 = load i32, i32* %r, align 4, !dbg !11007
  %conv13 = sext i32 %10 to i64, !dbg !11007
  %add = add i64 %9, %conv13, !dbg !11008
  call void @httpd_realloc_str(i8** %headers, i64* %headers_size, i64 %add), !dbg !11009
  %11 = load i8*, i8** %headers, align 8, !dbg !11010
  %12 = load i64, i64* %headers_len, align 8, !dbg !11010
  %arrayidx14 = getelementptr inbounds i8, i8* %11, i64 %12, !dbg !11010
  %arraydecay15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !11010
  %13 = load i32, i32* %r, align 4, !dbg !11010
  %conv16 = sext i32 %13 to i64, !dbg !11010
  %14 = load i8*, i8** %headers, align 8, !dbg !11010
  %15 = load i64, i64* %headers_len, align 8, !dbg !11010
  %arrayidx17 = getelementptr inbounds i8, i8* %14, i64 %15, !dbg !11010
  %16 = call i64 @llvm.objectsize.i64.p0i8(i8* %arrayidx17, i1 false, i1 true, i1 false), !dbg !11010
  %call18 = call i8* @__memmove_chk(i8* %arrayidx14, i8* %arraydecay15, i64 %conv16, i64 %16) #11, !dbg !11010
  %17 = load i32, i32* %r, align 4, !dbg !11011
  %conv19 = sext i32 %17 to i64, !dbg !11011
  %18 = load i64, i64* %headers_len, align 8, !dbg !11012
  %add20 = add i64 %18, %conv19, !dbg !11012
  store i64 %add20, i64* %headers_len, align 8, !dbg !11012
  %19 = load i8*, i8** %headers, align 8, !dbg !11013
  %20 = load i64, i64* %headers_len, align 8, !dbg !11014
  %arrayidx21 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !11013
  store i8 0, i8* %arrayidx21, align 1, !dbg !11015
  %21 = load i8*, i8** %headers, align 8, !dbg !11016
  %call22 = call i8* @strstr(i8* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.530, i64 0, i64 0)), !dbg !11018
  store i8* %call22, i8** %br, align 8, !dbg !11019
  %cmp23 = icmp ne i8* %call22, null, !dbg !11020
  br i1 %cmp23, label %if.then29, label %lor.lhs.false25, !dbg !11021

lor.lhs.false25:                                  ; preds = %if.end12
  %22 = load i8*, i8** %headers, align 8, !dbg !11022
  %call26 = call i8* @strstr(i8* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.531, i64 0, i64 0)), !dbg !11023
  store i8* %call26, i8** %br, align 8, !dbg !11024
  %cmp27 = icmp ne i8* %call26, null, !dbg !11025
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !11026

if.then29:                                        ; preds = %lor.lhs.false25, %if.end12
  br label %for.end, !dbg !11027

if.end30:                                         ; preds = %lor.lhs.false25
  br label %for.cond, !dbg !11028, !llvm.loop !10994

for.end:                                          ; preds = %if.then29, %if.then11
  %23 = load i8*, i8** %headers, align 8, !dbg !11029
  %arrayidx31 = getelementptr inbounds i8, i8* %23, i64 0, !dbg !11029
  %24 = load i8, i8* %arrayidx31, align 1, !dbg !11029
  %conv32 = sext i8 %24 to i32, !dbg !11029
  %cmp33 = icmp eq i32 %conv32, 0, !dbg !11031
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !11032

if.then35:                                        ; preds = %for.end
  br label %return, !dbg !11033

if.end36:                                         ; preds = %for.end
  store i32 200, i32* %status, align 4, !dbg !11034
  %25 = load i8*, i8** %headers, align 8, !dbg !11035
  %call37 = call i32 @strncmp(i8* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.532, i64 0, i64 0), i64 5), !dbg !11037
  %cmp38 = icmp eq i32 %call37, 0, !dbg !11038
  br i1 %cmp38, label %if.then40, label %if.end43, !dbg !11039

if.then40:                                        ; preds = %if.end36
  %26 = load i8*, i8** %headers, align 8, !dbg !11040
  store i8* %26, i8** %cp, align 8, !dbg !11042
  %27 = load i8*, i8** %cp, align 8, !dbg !11043
  %call41 = call i64 @strcspn(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !11044
  %28 = load i8*, i8** %cp, align 8, !dbg !11045
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 %call41, !dbg !11045
  store i8* %add.ptr, i8** %cp, align 8, !dbg !11045
  %29 = load i8*, i8** %cp, align 8, !dbg !11046
  %call42 = call i32 @atoi(i8* %29), !dbg !11047
  store i32 %call42, i32* %status, align 4, !dbg !11048
  br label %if.end43, !dbg !11049

if.end43:                                         ; preds = %if.then40, %if.end36
  %30 = load i8*, i8** %headers, align 8, !dbg !11050
  %call44 = call i8* @strstr(i8* %30, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.533, i64 0, i64 0)), !dbg !11052
  store i8* %call44, i8** %cp, align 8, !dbg !11053
  %cmp45 = icmp ne i8* %call44, null, !dbg !11054
  br i1 %cmp45, label %land.lhs.true47, label %if.end59, !dbg !11055

land.lhs.true47:                                  ; preds = %if.end43
  %31 = load i8*, i8** %cp, align 8, !dbg !11056
  %32 = load i8*, i8** %br, align 8, !dbg !11057
  %cmp48 = icmp ult i8* %31, %32, !dbg !11058
  br i1 %cmp48, label %land.lhs.true50, label %if.end59, !dbg !11059

land.lhs.true50:                                  ; preds = %land.lhs.true47
  %33 = load i8*, i8** %cp, align 8, !dbg !11060
  %34 = load i8*, i8** %headers, align 8, !dbg !11061
  %cmp51 = icmp eq i8* %33, %34, !dbg !11062
  br i1 %cmp51, label %if.then58, label %lor.lhs.false53, !dbg !11063

lor.lhs.false53:                                  ; preds = %land.lhs.true50
  %35 = load i8*, i8** %cp, align 8, !dbg !11064
  %add.ptr54 = getelementptr inbounds i8, i8* %35, i64 -1, !dbg !11065
  %36 = load i8, i8* %add.ptr54, align 1, !dbg !11066
  %conv55 = sext i8 %36 to i32, !dbg !11066
  %cmp56 = icmp eq i32 %conv55, 10, !dbg !11067
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !11068

if.then58:                                        ; preds = %lor.lhs.false53, %land.lhs.true50
  store i32 302, i32* %status, align 4, !dbg !11069
  br label %if.end59, !dbg !11070

if.end59:                                         ; preds = %if.then58, %lor.lhs.false53, %land.lhs.true47, %if.end43
  %37 = load i8*, i8** %headers, align 8, !dbg !11071
  %call60 = call i8* @strstr(i8* %37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.534, i64 0, i64 0)), !dbg !11073
  store i8* %call60, i8** %cp, align 8, !dbg !11074
  %cmp61 = icmp ne i8* %call60, null, !dbg !11075
  br i1 %cmp61, label %land.lhs.true63, label %if.end79, !dbg !11076

land.lhs.true63:                                  ; preds = %if.end59
  %38 = load i8*, i8** %cp, align 8, !dbg !11077
  %39 = load i8*, i8** %br, align 8, !dbg !11078
  %cmp64 = icmp ult i8* %38, %39, !dbg !11079
  br i1 %cmp64, label %land.lhs.true66, label %if.end79, !dbg !11080

land.lhs.true66:                                  ; preds = %land.lhs.true63
  %40 = load i8*, i8** %cp, align 8, !dbg !11081
  %41 = load i8*, i8** %headers, align 8, !dbg !11082
  %cmp67 = icmp eq i8* %40, %41, !dbg !11083
  br i1 %cmp67, label %if.then74, label %lor.lhs.false69, !dbg !11084

lor.lhs.false69:                                  ; preds = %land.lhs.true66
  %42 = load i8*, i8** %cp, align 8, !dbg !11085
  %add.ptr70 = getelementptr inbounds i8, i8* %42, i64 -1, !dbg !11086
  %43 = load i8, i8* %add.ptr70, align 1, !dbg !11087
  %conv71 = sext i8 %43 to i32, !dbg !11087
  %cmp72 = icmp eq i32 %conv71, 10, !dbg !11088
  br i1 %cmp72, label %if.then74, label %if.end79, !dbg !11089

if.then74:                                        ; preds = %lor.lhs.false69, %land.lhs.true66
  %44 = load i8*, i8** %cp, align 8, !dbg !11090
  %add.ptr75 = getelementptr inbounds i8, i8* %44, i64 7, !dbg !11090
  store i8* %add.ptr75, i8** %cp, align 8, !dbg !11090
  %45 = load i8*, i8** %cp, align 8, !dbg !11092
  %call76 = call i64 @strspn(i8* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36.244, i64 0, i64 0)), !dbg !11093
  %46 = load i8*, i8** %cp, align 8, !dbg !11094
  %add.ptr77 = getelementptr inbounds i8, i8* %46, i64 %call76, !dbg !11094
  store i8* %add.ptr77, i8** %cp, align 8, !dbg !11094
  %47 = load i8*, i8** %cp, align 8, !dbg !11095
  %call78 = call i32 @atoi(i8* %47), !dbg !11096
  store i32 %call78, i32* %status, align 4, !dbg !11097
  br label %if.end79, !dbg !11098

if.end79:                                         ; preds = %if.then74, %lor.lhs.false69, %land.lhs.true63, %if.end59
  %48 = load i32, i32* %status, align 4, !dbg !11099
  switch i32 %48, label %sw.default [
    i32 200, label %sw.bb
    i32 302, label %sw.bb80
    i32 304, label %sw.bb81
    i32 400, label %sw.bb82
    i32 401, label %sw.bb83
    i32 403, label %sw.bb84
    i32 404, label %sw.bb85
    i32 408, label %sw.bb86
    i32 451, label %sw.bb87
    i32 500, label %sw.bb88
    i32 501, label %sw.bb89
    i32 503, label %sw.bb90
  ], !dbg !11100

sw.bb:                                            ; preds = %if.end79
  %49 = load i8*, i8** @ok200title, align 8, !dbg !11101
  store i8* %49, i8** %title, align 8, !dbg !11103
  br label %sw.epilog, !dbg !11104

sw.bb80:                                          ; preds = %if.end79
  %50 = load i8*, i8** @err302title, align 8, !dbg !11105
  store i8* %50, i8** %title, align 8, !dbg !11106
  br label %sw.epilog, !dbg !11107

sw.bb81:                                          ; preds = %if.end79
  %51 = load i8*, i8** @err304title, align 8, !dbg !11108
  store i8* %51, i8** %title, align 8, !dbg !11109
  br label %sw.epilog, !dbg !11110

sw.bb82:                                          ; preds = %if.end79
  %52 = load i8*, i8** @httpd_err400title, align 8, !dbg !11111
  store i8* %52, i8** %title, align 8, !dbg !11112
  br label %sw.epilog, !dbg !11113

sw.bb83:                                          ; preds = %if.end79
  %53 = load i8*, i8** @err401title, align 8, !dbg !11114
  store i8* %53, i8** %title, align 8, !dbg !11115
  br label %sw.epilog, !dbg !11116

sw.bb84:                                          ; preds = %if.end79
  %54 = load i8*, i8** @err403title, align 8, !dbg !11117
  store i8* %54, i8** %title, align 8, !dbg !11118
  br label %sw.epilog, !dbg !11119

sw.bb85:                                          ; preds = %if.end79
  %55 = load i8*, i8** @err404title, align 8, !dbg !11120
  store i8* %55, i8** %title, align 8, !dbg !11121
  br label %sw.epilog, !dbg !11122

sw.bb86:                                          ; preds = %if.end79
  %56 = load i8*, i8** @httpd_err408title, align 8, !dbg !11123
  store i8* %56, i8** %title, align 8, !dbg !11124
  br label %sw.epilog, !dbg !11125

sw.bb87:                                          ; preds = %if.end79
  %57 = load i8*, i8** @err451title, align 8, !dbg !11126
  store i8* %57, i8** %title, align 8, !dbg !11127
  br label %sw.epilog, !dbg !11128

sw.bb88:                                          ; preds = %if.end79
  %58 = load i8*, i8** @err500title, align 8, !dbg !11129
  store i8* %58, i8** %title, align 8, !dbg !11130
  br label %sw.epilog, !dbg !11131

sw.bb89:                                          ; preds = %if.end79
  %59 = load i8*, i8** @err501title, align 8, !dbg !11132
  store i8* %59, i8** %title, align 8, !dbg !11133
  br label %sw.epilog, !dbg !11134

sw.bb90:                                          ; preds = %if.end79
  %60 = load i8*, i8** @httpd_err503title, align 8, !dbg !11135
  store i8* %60, i8** %title, align 8, !dbg !11136
  br label %sw.epilog, !dbg !11137

sw.default:                                       ; preds = %if.end79
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.535, i64 0, i64 0), i8** %title, align 8, !dbg !11138
  br label %sw.epilog, !dbg !11139

sw.epilog:                                        ; preds = %sw.default, %sw.bb90, %sw.bb89, %sw.bb88, %sw.bb87, %sw.bb86, %sw.bb85, %sw.bb84, %sw.bb83, %sw.bb82, %sw.bb81, %sw.bb80, %sw.bb
  %arraydecay91 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !11140
  %61 = load i32, i32* %status, align 4, !dbg !11141
  %62 = load i8*, i8** %title, align 8, !dbg !11142
  %call92 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %arraydecay91, i64 1024, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.536, i64 0, i64 0), i32 %61, i8* %62), !dbg !11143
  %63 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11144
  %conn_fd93 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %63, i32 0, i32 60, !dbg !11145
  %64 = load i32, i32* %conn_fd93, align 8, !dbg !11145
  %arraydecay94 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !11146
  %arraydecay95 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !11147
  %call96 = call i64 @strlen(i8* %arraydecay95), !dbg !11148
  %call97 = call i32 @httpd_write_fully(i32 %64, i8* %arraydecay94, i64 %call96), !dbg !11149
  %65 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11150
  %conn_fd98 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %65, i32 0, i32 60, !dbg !11151
  %66 = load i32, i32* %conn_fd98, align 8, !dbg !11151
  %67 = load i8*, i8** %headers, align 8, !dbg !11152
  %68 = load i64, i64* %headers_len, align 8, !dbg !11153
  %call99 = call i32 @httpd_write_fully(i32 %66, i8* %67, i64 %68), !dbg !11154
  br label %for.cond100, !dbg !11155

for.cond100:                                      ; preds = %if.end128, %if.then114, %sw.epilog
  %69 = load i32, i32* %rfd.addr, align 4, !dbg !11156
  %arraydecay101 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !11160
  %call102 = call i64 @"\01_read"(i32 %69, i8* %arraydecay101, i64 1024), !dbg !11161
  %conv103 = trunc i64 %call102 to i32, !dbg !11161
  store i32 %conv103, i32* %r, align 4, !dbg !11162
  %70 = load i32, i32* %r, align 4, !dbg !11163
  %cmp104 = icmp slt i32 %70, 0, !dbg !11165
  br i1 %cmp104, label %land.lhs.true106, label %if.end116, !dbg !11166

land.lhs.true106:                                 ; preds = %for.cond100
  %call107 = call i32* @__error(), !dbg !11167
  %71 = load i32, i32* %call107, align 4, !dbg !11167
  %cmp108 = icmp eq i32 %71, 4, !dbg !11168
  br i1 %cmp108, label %if.then114, label %lor.lhs.false110, !dbg !11169

lor.lhs.false110:                                 ; preds = %land.lhs.true106
  %call111 = call i32* @__error(), !dbg !11170
  %72 = load i32, i32* %call111, align 4, !dbg !11170
  %cmp112 = icmp eq i32 %72, 35, !dbg !11171
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !11172

if.then114:                                       ; preds = %lor.lhs.false110, %land.lhs.true106
  %call115 = call i32 @"\01_sleep"(i32 1), !dbg !11173
  br label %for.cond100, !dbg !11175, !llvm.loop !11176

if.end116:                                        ; preds = %lor.lhs.false110, %for.cond100
  %73 = load i32, i32* %r, align 4, !dbg !11179
  %cmp117 = icmp sle i32 %73, 0, !dbg !11181
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !11182

if.then119:                                       ; preds = %if.end116
  br label %for.end129, !dbg !11183

if.end120:                                        ; preds = %if.end116
  %74 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11184
  %conn_fd121 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %74, i32 0, i32 60, !dbg !11186
  %75 = load i32, i32* %conn_fd121, align 8, !dbg !11186
  %arraydecay122 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0, !dbg !11187
  %76 = load i32, i32* %r, align 4, !dbg !11188
  %conv123 = sext i32 %76 to i64, !dbg !11188
  %call124 = call i32 @httpd_write_fully(i32 %75, i8* %arraydecay122, i64 %conv123), !dbg !11189
  %77 = load i32, i32* %r, align 4, !dbg !11190
  %cmp125 = icmp ne i32 %call124, %77, !dbg !11191
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !11192

if.then127:                                       ; preds = %if.end120
  br label %for.end129, !dbg !11193

if.end128:                                        ; preds = %if.end120
  br label %for.cond100, !dbg !11194, !llvm.loop !11176

for.end129:                                       ; preds = %if.then127, %if.then119
  %78 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11195
  %conn_fd130 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %78, i32 0, i32 60, !dbg !11196
  %79 = load i32, i32* %conn_fd130, align 8, !dbg !11196
  %call131 = call i32 @shutdown(i32 %79, i32 1), !dbg !11197
  br label %return, !dbg !11198

return:                                           ; preds = %for.end129, %if.then35
  ret void, !dbg !11198
}

declare i32 @"\01_nice"(i32) #3

declare i32 @execve(i8*, i8**, i8**) #3

; Function Attrs: noreturn
declare void @_exit(i32) #4

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @post_post_garbage_hack(%struct.httpd_conn* %hc) #0 !dbg !11199 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %buf = alloca [2 x i8], align 1
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !11200, metadata !DIExpression()), !dbg !11201
  call void @llvm.dbg.declare(metadata [2 x i8]* %buf, metadata !11202, metadata !DIExpression()), !dbg !11204
  %0 = load i32, i32* @sub_process, align 4, !dbg !11205
  %tobool = icmp ne i32 %0, 0, !dbg !11205
  br i1 %tobool, label %if.then, label %if.end, !dbg !11207

if.then:                                          ; preds = %entry
  %1 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11208
  %conn_fd = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %1, i32 0, i32 60, !dbg !11209
  %2 = load i32, i32* %conn_fd, align 8, !dbg !11209
  call void @httpd_set_ndelay(i32 %2), !dbg !11210
  br label %if.end, !dbg !11210

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11211
  %conn_fd1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %3, i32 0, i32 60, !dbg !11212
  %4 = load i32, i32* %conn_fd1, align 8, !dbg !11212
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !11213
  %call = call i64 @"\01_read"(i32 %4, i8* %arraydecay, i64 2), !dbg !11214
  ret void, !dbg !11215
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i8* @build_env(i8* %fmt, i8* %arg) #0 !dbg !943 {
entry:
  %fmt.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %size = alloca i64, align 8
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !11216, metadata !DIExpression()), !dbg !11217
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !11218, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !11220, metadata !DIExpression()), !dbg !11221
  call void @llvm.dbg.declare(metadata i64* %size, metadata !11222, metadata !DIExpression()), !dbg !11223
  %0 = load i8*, i8** %fmt.addr, align 8, !dbg !11224
  %call = call i64 @strlen(i8* %0), !dbg !11225
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !11226
  %call1 = call i64 @strlen(i8* %1), !dbg !11227
  %add = add i64 %call, %call1, !dbg !11228
  store i64 %add, i64* %size, align 8, !dbg !11229
  %2 = load i64, i64* %size, align 8, !dbg !11230
  %3 = load i64, i64* @build_env.maxbuf, align 8, !dbg !11232
  %cmp = icmp ugt i64 %2, %3, !dbg !11233
  br i1 %cmp, label %if.then, label %if.end, !dbg !11234

if.then:                                          ; preds = %entry
  %4 = load i64, i64* %size, align 8, !dbg !11235
  call void @httpd_realloc_str(i8** @build_env.buf, i64* @build_env.maxbuf, i64 %4), !dbg !11236
  br label %if.end, !dbg !11236

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** @build_env.buf, align 8, !dbg !11237
  %6 = load i64, i64* @build_env.maxbuf, align 8, !dbg !11238
  %7 = load i8*, i8** %fmt.addr, align 8, !dbg !11239
  %8 = load i8*, i8** %arg.addr, align 8, !dbg !11240
  %call2 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %5, i64 %6, i8* %7, i8* %8), !dbg !11241
  %9 = load i8*, i8** @build_env.buf, align 8, !dbg !11242
  %call3 = call i8* @strdup(i8* %9), !dbg !11243
  store i8* %call3, i8** %cp, align 8, !dbg !11244
  %10 = load i8*, i8** %cp, align 8, !dbg !11245
  %cmp4 = icmp eq i8* %10, null, !dbg !11247
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11248

if.then5:                                         ; preds = %if.end
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.529, i64 0, i64 0)), !dbg !11249
  call void @exit(i32 1) #13, !dbg !11251
  unreachable, !dbg !11251

if.end6:                                          ; preds = %if.end
  %11 = load i8*, i8** %cp, align 8, !dbg !11252
  ret i8* %11, !dbg !11253
}

declare i8* @getenv(i8*) #3

declare %struct.DIR* @"\01_opendir$INODE64"(i8*) #3

declare i32 @"\01_closedir"(%struct.DIR*) #3

declare %struct.__sFILE* @"\01_fdopen"(i32, i8*) #3

declare %struct.dirent* @"\01_readdir$INODE64"(%struct.DIR*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @name_compare(i8* %v1, i8* %v2) #0 !dbg !11254 {
entry:
  %v1.addr = alloca i8*, align 8
  %v2.addr = alloca i8*, align 8
  %c1 = alloca i8**, align 8
  %c2 = alloca i8**, align 8
  store i8* %v1, i8** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v1.addr, metadata !11255, metadata !DIExpression()), !dbg !11256
  store i8* %v2, i8** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v2.addr, metadata !11257, metadata !DIExpression()), !dbg !11258
  call void @llvm.dbg.declare(metadata i8*** %c1, metadata !11259, metadata !DIExpression()), !dbg !11260
  %0 = load i8*, i8** %v1.addr, align 8, !dbg !11261
  %1 = bitcast i8* %0 to i8**, !dbg !11262
  store i8** %1, i8*** %c1, align 8, !dbg !11260
  call void @llvm.dbg.declare(metadata i8*** %c2, metadata !11263, metadata !DIExpression()), !dbg !11264
  %2 = load i8*, i8** %v2.addr, align 8, !dbg !11265
  %3 = bitcast i8* %2 to i8**, !dbg !11266
  store i8** %3, i8*** %c2, align 8, !dbg !11264
  %4 = load i8**, i8*** %c1, align 8, !dbg !11267
  %5 = load i8*, i8** %4, align 8, !dbg !11268
  %6 = load i8**, i8*** %c2, align 8, !dbg !11269
  %7 = load i8*, i8** %6, align 8, !dbg !11270
  %call = call i32 @strcmp(i8* %5, i8* %7), !dbg !11271
  ret i32 %call, !dbg !11272
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @strencode(i8* %to, i32 %tosize, i8* %from) #0 !dbg !11273 {
entry:
  %to.addr = alloca i8*, align 8
  %tosize.addr = alloca i32, align 4
  %from.addr = alloca i8*, align 8
  %tolen = alloca i32, align 4
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !11276, metadata !DIExpression()), !dbg !11277
  store i32 %tosize, i32* %tosize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tosize.addr, metadata !11278, metadata !DIExpression()), !dbg !11279
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !11280, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.declare(metadata i32* %tolen, metadata !11282, metadata !DIExpression()), !dbg !11283
  store i32 0, i32* %tolen, align 4, !dbg !11284
  br label %for.cond, !dbg !11286

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %from.addr, align 8, !dbg !11287
  %1 = load i8, i8* %0, align 1, !dbg !11289
  %conv = sext i8 %1 to i32, !dbg !11289
  %cmp = icmp ne i32 %conv, 0, !dbg !11290
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11291

land.rhs:                                         ; preds = %for.cond
  %2 = load i32, i32* %tolen, align 4, !dbg !11292
  %add = add nsw i32 %2, 4, !dbg !11293
  %3 = load i32, i32* %tosize.addr, align 4, !dbg !11294
  %cmp2 = icmp slt i32 %add, %3, !dbg !11295
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %cmp2, %land.rhs ], !dbg !11296
  br i1 %4, label %for.body, label %for.end, !dbg !11297

for.body:                                         ; preds = %land.end
  %5 = load i8*, i8** %from.addr, align 8, !dbg !11298
  %6 = load i8, i8* %5, align 1, !dbg !11301
  %conv4 = sext i8 %6 to i32, !dbg !11301
  %call = call i32 @isalnum(i32 %conv4) #18, !dbg !11302
  %tobool = icmp ne i32 %call, 0, !dbg !11302
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11303

lor.lhs.false:                                    ; preds = %for.body
  %7 = load i8*, i8** %from.addr, align 8, !dbg !11304
  %8 = load i8, i8* %7, align 1, !dbg !11305
  %conv5 = sext i8 %8 to i32, !dbg !11305
  %call6 = call i8* @strchr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.488, i64 0, i64 0), i32 %conv5), !dbg !11306
  %cmp7 = icmp ne i8* %call6, null, !dbg !11307
  br i1 %cmp7, label %if.then, label %if.else, !dbg !11308

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %9 = load i8*, i8** %from.addr, align 8, !dbg !11309
  %10 = load i8, i8* %9, align 1, !dbg !11311
  %11 = load i8*, i8** %to.addr, align 8, !dbg !11312
  store i8 %10, i8* %11, align 1, !dbg !11313
  %12 = load i8*, i8** %to.addr, align 8, !dbg !11314
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !11314
  store i8* %incdec.ptr, i8** %to.addr, align 8, !dbg !11314
  %13 = load i32, i32* %tolen, align 4, !dbg !11315
  %inc = add nsw i32 %13, 1, !dbg !11315
  store i32 %inc, i32* %tolen, align 4, !dbg !11315
  br label %if.end, !dbg !11316

if.else:                                          ; preds = %lor.lhs.false
  %14 = load i8*, i8** %to.addr, align 8, !dbg !11317
  %15 = load i8*, i8** %to.addr, align 8, !dbg !11317
  %16 = call i64 @llvm.objectsize.i64.p0i8(i8* %15, i1 false, i1 true, i1 false), !dbg !11317
  %17 = load i8*, i8** %from.addr, align 8, !dbg !11317
  %18 = load i8, i8* %17, align 1, !dbg !11317
  %conv9 = sext i8 %18 to i32, !dbg !11317
  %and = and i32 %conv9, 255, !dbg !11317
  %call10 = call i32 (i8*, i32, i64, i8*, ...) @__sprintf_chk(i8* %14, i32 0, i64 %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.489, i64 0, i64 0), i32 %and), !dbg !11317
  %19 = load i8*, i8** %to.addr, align 8, !dbg !11319
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 3, !dbg !11319
  store i8* %add.ptr, i8** %to.addr, align 8, !dbg !11319
  %20 = load i32, i32* %tolen, align 4, !dbg !11320
  %add11 = add nsw i32 %20, 3, !dbg !11320
  store i32 %add11, i32* %tolen, align 4, !dbg !11320
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !11321

for.inc:                                          ; preds = %if.end
  %21 = load i8*, i8** %from.addr, align 8, !dbg !11322
  %incdec.ptr12 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !11322
  store i8* %incdec.ptr12, i8** %from.addr, align 8, !dbg !11322
  br label %for.cond, !dbg !11323, !llvm.loop !11324

for.end:                                          ; preds = %land.end
  %22 = load i8*, i8** %to.addr, align 8, !dbg !11326
  store i8 0, i8* %22, align 1, !dbg !11327
  ret void, !dbg !11328
}

declare i32 @"\01_lstat$INODE64"(i8*, %struct.stat*) #3

declare i8* @ctime(i64*) #3

; Function Attrs: nobuiltin nounwind readonly
declare i32 @isalnum(i32) #12

declare i32 @__sprintf_chk(i8*, i32, i64, i8*, ...) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @really_check_referrer(%struct.httpd_conn* %hc) #0 !dbg !911 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %hs = alloca %struct.httpd_server*, align 8
  %cp1 = alloca i8*, align 8
  %cp2 = alloca i8*, align 8
  %cp3 = alloca i8*, align 8
  %lp = alloca i8*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !11329, metadata !DIExpression()), !dbg !11330
  call void @llvm.dbg.declare(metadata %struct.httpd_server** %hs, metadata !11331, metadata !DIExpression()), !dbg !11332
  call void @llvm.dbg.declare(metadata i8** %cp1, metadata !11333, metadata !DIExpression()), !dbg !11334
  call void @llvm.dbg.declare(metadata i8** %cp2, metadata !11335, metadata !DIExpression()), !dbg !11336
  call void @llvm.dbg.declare(metadata i8** %cp3, metadata !11337, metadata !DIExpression()), !dbg !11338
  call void @llvm.dbg.declare(metadata i8** %lp, metadata !11339, metadata !DIExpression()), !dbg !11340
  %0 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11341
  %hs1 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %0, i32 0, i32 1, !dbg !11342
  %1 = load %struct.httpd_server*, %struct.httpd_server** %hs1, align 8, !dbg !11342
  store %struct.httpd_server* %1, %struct.httpd_server** %hs, align 8, !dbg !11343
  %2 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11344
  %referrer = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %2, i32 0, i32 20, !dbg !11346
  %3 = load i8*, i8** %referrer, align 8, !dbg !11346
  %cmp = icmp eq i8* %3, null, !dbg !11347
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11348

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11349
  %referrer2 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %4, i32 0, i32 20, !dbg !11350
  %5 = load i8*, i8** %referrer2, align 8, !dbg !11350
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !11349
  %6 = load i8, i8* %arrayidx, align 1, !dbg !11349
  %conv = sext i8 %6 to i32, !dbg !11349
  %cmp3 = icmp eq i32 %conv, 0, !dbg !11351
  br i1 %cmp3, label %if.then, label %lor.lhs.false5, !dbg !11352

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %7 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11353
  %referrer6 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %7, i32 0, i32 20, !dbg !11354
  %8 = load i8*, i8** %referrer6, align 8, !dbg !11354
  %call = call i8* @strstr(i8* %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98.276, i64 0, i64 0)), !dbg !11355
  store i8* %call, i8** %cp1, align 8, !dbg !11356
  %cmp7 = icmp eq i8* %call, null, !dbg !11357
  br i1 %cmp7, label %if.then, label %if.end12, !dbg !11358

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %entry
  %9 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !11359
  %no_empty_referrers = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %9, i32 0, i32 19, !dbg !11362
  %10 = load i32, i32* %no_empty_referrers, align 8, !dbg !11362
  %tobool = icmp ne i32 %10, 0, !dbg !11359
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11363

land.lhs.true:                                    ; preds = %if.then
  %11 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !11364
  %url_pattern = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %11, i32 0, i32 17, !dbg !11365
  %12 = load i8*, i8** %url_pattern, align 8, !dbg !11365
  %13 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11366
  %origfilename = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %13, i32 0, i32 15, !dbg !11367
  %14 = load i8*, i8** %origfilename, align 8, !dbg !11367
  %call9 = call i32 @match(i8* %12, i8* %14), !dbg !11368
  %tobool10 = icmp ne i32 %call9, 0, !dbg !11368
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !11369

if.then11:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !11370
  br label %return, !dbg !11370

if.end:                                           ; preds = %land.lhs.true, %if.then
  store i32 1, i32* %retval, align 4, !dbg !11371
  br label %return, !dbg !11371

if.end12:                                         ; preds = %lor.lhs.false5
  %15 = load i8*, i8** %cp1, align 8, !dbg !11372
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 2, !dbg !11372
  store i8* %add.ptr, i8** %cp1, align 8, !dbg !11372
  %16 = load i8*, i8** %cp1, align 8, !dbg !11373
  store i8* %16, i8** %cp2, align 8, !dbg !11375
  br label %for.cond, !dbg !11376

for.cond:                                         ; preds = %for.inc, %if.end12
  %17 = load i8*, i8** %cp2, align 8, !dbg !11377
  %18 = load i8, i8* %17, align 1, !dbg !11379
  %conv13 = sext i8 %18 to i32, !dbg !11379
  %cmp14 = icmp ne i32 %conv13, 47, !dbg !11380
  br i1 %cmp14, label %land.lhs.true16, label %land.end, !dbg !11381

land.lhs.true16:                                  ; preds = %for.cond
  %19 = load i8*, i8** %cp2, align 8, !dbg !11382
  %20 = load i8, i8* %19, align 1, !dbg !11383
  %conv17 = sext i8 %20 to i32, !dbg !11383
  %cmp18 = icmp ne i32 %conv17, 58, !dbg !11384
  br i1 %cmp18, label %land.rhs, label %land.end, !dbg !11385

land.rhs:                                         ; preds = %land.lhs.true16
  %21 = load i8*, i8** %cp2, align 8, !dbg !11386
  %22 = load i8, i8* %21, align 1, !dbg !11387
  %conv20 = sext i8 %22 to i32, !dbg !11387
  %cmp21 = icmp ne i32 %conv20, 0, !dbg !11388
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true16, %for.cond
  %23 = phi i1 [ false, %land.lhs.true16 ], [ false, %for.cond ], [ %cmp21, %land.rhs ], !dbg !11389
  br i1 %23, label %for.body, label %for.end, !dbg !11390

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !11391

for.inc:                                          ; preds = %for.body
  %24 = load i8*, i8** %cp2, align 8, !dbg !11392
  %incdec.ptr = getelementptr inbounds i8, i8* %24, i32 1, !dbg !11392
  store i8* %incdec.ptr, i8** %cp2, align 8, !dbg !11392
  br label %for.cond, !dbg !11393, !llvm.loop !11394

for.end:                                          ; preds = %land.end
  %25 = load i8*, i8** %cp2, align 8, !dbg !11396
  %26 = load i8*, i8** %cp1, align 8, !dbg !11397
  %sub.ptr.lhs.cast = ptrtoint i8* %25 to i64, !dbg !11398
  %sub.ptr.rhs.cast = ptrtoint i8* %26 to i64, !dbg !11398
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11398
  call void @httpd_realloc_str(i8** @really_check_referrer.refhost, i64* @really_check_referrer.refhost_size, i64 %sub.ptr.sub), !dbg !11399
  %27 = load i8*, i8** @really_check_referrer.refhost, align 8, !dbg !11400
  store i8* %27, i8** %cp3, align 8, !dbg !11402
  br label %for.cond23, !dbg !11403

for.cond23:                                       ; preds = %for.inc35, %for.end
  %28 = load i8*, i8** %cp1, align 8, !dbg !11404
  %29 = load i8*, i8** %cp2, align 8, !dbg !11406
  %cmp24 = icmp ult i8* %28, %29, !dbg !11407
  br i1 %cmp24, label %for.body26, label %for.end38, !dbg !11408

for.body26:                                       ; preds = %for.cond23
  %30 = load i8*, i8** %cp1, align 8, !dbg !11409
  %31 = load i8, i8* %30, align 1, !dbg !11411
  %conv27 = sext i8 %31 to i32, !dbg !11411
  %call28 = call i32 @isupper(i32 %conv27) #18, !dbg !11412
  %tobool29 = icmp ne i32 %call28, 0, !dbg !11412
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !11413

if.then30:                                        ; preds = %for.body26
  %32 = load i8*, i8** %cp1, align 8, !dbg !11414
  %33 = load i8, i8* %32, align 1, !dbg !11415
  %conv31 = sext i8 %33 to i32, !dbg !11415
  %call32 = call i32 @tolower(i32 %conv31) #18, !dbg !11416
  %conv33 = trunc i32 %call32 to i8, !dbg !11416
  %34 = load i8*, i8** %cp3, align 8, !dbg !11417
  store i8 %conv33, i8* %34, align 1, !dbg !11418
  br label %if.end34, !dbg !11419

if.else:                                          ; preds = %for.body26
  %35 = load i8*, i8** %cp1, align 8, !dbg !11420
  %36 = load i8, i8* %35, align 1, !dbg !11421
  %37 = load i8*, i8** %cp3, align 8, !dbg !11422
  store i8 %36, i8* %37, align 1, !dbg !11423
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then30
  br label %for.inc35, !dbg !11424

for.inc35:                                        ; preds = %if.end34
  %38 = load i8*, i8** %cp1, align 8, !dbg !11425
  %incdec.ptr36 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !11425
  store i8* %incdec.ptr36, i8** %cp1, align 8, !dbg !11425
  %39 = load i8*, i8** %cp3, align 8, !dbg !11426
  %incdec.ptr37 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !11426
  store i8* %incdec.ptr37, i8** %cp3, align 8, !dbg !11426
  br label %for.cond23, !dbg !11427, !llvm.loop !11428

for.end38:                                        ; preds = %for.cond23
  %40 = load i8*, i8** %cp3, align 8, !dbg !11430
  store i8 0, i8* %40, align 1, !dbg !11431
  %41 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !11432
  %local_pattern = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %41, i32 0, i32 18, !dbg !11434
  %42 = load i8*, i8** %local_pattern, align 8, !dbg !11434
  %cmp39 = icmp ne i8* %42, null, !dbg !11435
  br i1 %cmp39, label %if.then41, label %if.else43, !dbg !11436

if.then41:                                        ; preds = %for.end38
  %43 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !11437
  %local_pattern42 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %43, i32 0, i32 18, !dbg !11438
  %44 = load i8*, i8** %local_pattern42, align 8, !dbg !11438
  store i8* %44, i8** %lp, align 8, !dbg !11439
  br label %if.end56, !dbg !11440

if.else43:                                        ; preds = %for.end38
  %45 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !11441
  %vhost = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %45, i32 0, i32 15, !dbg !11444
  %46 = load i32, i32* %vhost, align 4, !dbg !11444
  %tobool44 = icmp ne i32 %46, 0, !dbg !11441
  br i1 %tobool44, label %if.else50, label %if.then45, !dbg !11445

if.then45:                                        ; preds = %if.else43
  %47 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !11446
  %server_hostname = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %47, i32 0, i32 1, !dbg !11448
  %48 = load i8*, i8** %server_hostname, align 8, !dbg !11448
  store i8* %48, i8** %lp, align 8, !dbg !11449
  %49 = load i8*, i8** %lp, align 8, !dbg !11450
  %cmp46 = icmp eq i8* %49, null, !dbg !11452
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !11453

if.then48:                                        ; preds = %if.then45
  store i32 1, i32* %retval, align 4, !dbg !11454
  br label %return, !dbg !11454

if.end49:                                         ; preds = %if.then45
  br label %if.end55, !dbg !11455

if.else50:                                        ; preds = %if.else43
  %50 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11456
  %hostname = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %50, i32 0, i32 50, !dbg !11458
  %51 = load i8*, i8** %hostname, align 8, !dbg !11458
  store i8* %51, i8** %lp, align 8, !dbg !11459
  %52 = load i8*, i8** %lp, align 8, !dbg !11460
  %cmp51 = icmp eq i8* %52, null, !dbg !11462
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !11463

if.then53:                                        ; preds = %if.else50
  store i32 1, i32* %retval, align 4, !dbg !11464
  br label %return, !dbg !11464

if.end54:                                         ; preds = %if.else50
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end49
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then41
  %53 = load i8*, i8** %lp, align 8, !dbg !11465
  %54 = load i8*, i8** @really_check_referrer.refhost, align 8, !dbg !11467
  %call57 = call i32 @match(i8* %53, i8* %54), !dbg !11468
  %tobool58 = icmp ne i32 %call57, 0, !dbg !11468
  br i1 %tobool58, label %if.end65, label %land.lhs.true59, !dbg !11469

land.lhs.true59:                                  ; preds = %if.end56
  %55 = load %struct.httpd_server*, %struct.httpd_server** %hs, align 8, !dbg !11470
  %url_pattern60 = getelementptr inbounds %struct.httpd_server, %struct.httpd_server* %55, i32 0, i32 17, !dbg !11471
  %56 = load i8*, i8** %url_pattern60, align 8, !dbg !11471
  %57 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11472
  %origfilename61 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %57, i32 0, i32 15, !dbg !11473
  %58 = load i8*, i8** %origfilename61, align 8, !dbg !11473
  %call62 = call i32 @match(i8* %56, i8* %58), !dbg !11474
  %tobool63 = icmp ne i32 %call62, 0, !dbg !11474
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !11475

if.then64:                                        ; preds = %land.lhs.true59
  store i32 0, i32* %retval, align 4, !dbg !11476
  br label %return, !dbg !11476

if.end65:                                         ; preds = %land.lhs.true59, %if.end56
  store i32 1, i32* %retval, align 4, !dbg !11477
  br label %return, !dbg !11477

return:                                           ; preds = %if.end65, %if.then64, %if.then53, %if.then48, %if.end, %if.then11
  %59 = load i32, i32* %retval, align 4, !dbg !11478
  ret i32 %59, !dbg !11478
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @auth_check2(%struct.httpd_conn* %hc, i8* %dirname) #0 !dbg !871 {
entry:
  %retval = alloca i32, align 4
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %dirname.addr = alloca i8*, align 8
  %sb = alloca %struct.stat, align 8
  %authinfo = alloca [500 x i8], align 16
  %authpass = alloca i8*, align 8
  %colon = alloca i8*, align 8
  %l = alloca i32, align 4
  %fp = alloca %struct.__sFILE*, align 8
  %line = alloca [500 x i8], align 16
  %cryp = alloca i8*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !11479, metadata !DIExpression()), !dbg !11480
  store i8* %dirname, i8** %dirname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dirname.addr, metadata !11481, metadata !DIExpression()), !dbg !11482
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !11483, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.declare(metadata [500 x i8]* %authinfo, metadata !11485, metadata !DIExpression()), !dbg !11486
  call void @llvm.dbg.declare(metadata i8** %authpass, metadata !11487, metadata !DIExpression()), !dbg !11488
  call void @llvm.dbg.declare(metadata i8** %colon, metadata !11489, metadata !DIExpression()), !dbg !11490
  call void @llvm.dbg.declare(metadata i32* %l, metadata !11491, metadata !DIExpression()), !dbg !11492
  call void @llvm.dbg.declare(metadata %struct.__sFILE** %fp, metadata !11493, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.declare(metadata [500 x i8]* %line, metadata !11495, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.declare(metadata i8** %cryp, metadata !11497, metadata !DIExpression()), !dbg !11498
  %0 = load i8*, i8** %dirname.addr, align 8, !dbg !11499
  %call = call i64 @strlen(i8* %0), !dbg !11500
  %add = add i64 %call, 1, !dbg !11501
  %add1 = add i64 %add, 10, !dbg !11502
  call void @httpd_realloc_str(i8** @auth_check2.authpath, i64* @auth_check2.maxauthpath, i64 %add1), !dbg !11503
  %1 = load i8*, i8** @auth_check2.authpath, align 8, !dbg !11504
  %2 = load i64, i64* @auth_check2.maxauthpath, align 8, !dbg !11505
  %3 = load i8*, i8** %dirname.addr, align 8, !dbg !11506
  %call2 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %1, i64 %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.464, i64 0, i64 0), i8* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.450, i64 0, i64 0)), !dbg !11507
  %4 = load i8*, i8** @auth_check2.authpath, align 8, !dbg !11508
  %call3 = call i32 @"\01_stat$INODE64"(i8* %4, %struct.stat* %sb), !dbg !11510
  %cmp = icmp slt i32 %call3, 0, !dbg !11511
  br i1 %cmp, label %if.then, label %if.end, !dbg !11512

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11513
  br label %return, !dbg !11513

if.end:                                           ; preds = %entry
  %5 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11514
  %authorization = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %5, i32 0, i32 30, !dbg !11516
  %6 = load i8*, i8** %authorization, align 8, !dbg !11516
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0, !dbg !11514
  %7 = load i8, i8* %arrayidx, align 1, !dbg !11514
  %conv = sext i8 %7 to i32, !dbg !11514
  %cmp4 = icmp eq i32 %conv, 0, !dbg !11517
  br i1 %cmp4, label %if.then10, label %lor.lhs.false, !dbg !11518

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11519
  %authorization6 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 30, !dbg !11520
  %9 = load i8*, i8** %authorization6, align 8, !dbg !11520
  %call7 = call i32 @strncmp(i8* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.465, i64 0, i64 0), i64 6), !dbg !11521
  %cmp8 = icmp ne i32 %call7, 0, !dbg !11522
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !11523

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  %10 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11524
  %11 = load i8*, i8** %dirname.addr, align 8, !dbg !11526
  call void @send_authenticate(%struct.httpd_conn* %10, i8* %11), !dbg !11527
  store i32 -1, i32* %retval, align 4, !dbg !11528
  br label %return, !dbg !11528

if.end11:                                         ; preds = %lor.lhs.false
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11529
  %authorization12 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 30, !dbg !11530
  %13 = load i8*, i8** %authorization12, align 8, !dbg !11530
  %arrayidx13 = getelementptr inbounds i8, i8* %13, i64 6, !dbg !11529
  %arraydecay = getelementptr inbounds [500 x i8], [500 x i8]* %authinfo, i64 0, i64 0, !dbg !11531
  %call14 = call i32 @b64_decode(i8* %arrayidx13, i8* %arraydecay, i32 499), !dbg !11532
  store i32 %call14, i32* %l, align 4, !dbg !11533
  %14 = load i32, i32* %l, align 4, !dbg !11534
  %idxprom = sext i32 %14 to i64, !dbg !11535
  %arrayidx15 = getelementptr inbounds [500 x i8], [500 x i8]* %authinfo, i64 0, i64 %idxprom, !dbg !11535
  store i8 0, i8* %arrayidx15, align 1, !dbg !11536
  %arraydecay16 = getelementptr inbounds [500 x i8], [500 x i8]* %authinfo, i64 0, i64 0, !dbg !11537
  %call17 = call i8* @strchr(i8* %arraydecay16, i32 58), !dbg !11538
  store i8* %call17, i8** %authpass, align 8, !dbg !11539
  %15 = load i8*, i8** %authpass, align 8, !dbg !11540
  %cmp18 = icmp eq i8* %15, null, !dbg !11542
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !11543

if.then20:                                        ; preds = %if.end11
  %16 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11544
  %17 = load i8*, i8** %dirname.addr, align 8, !dbg !11546
  call void @send_authenticate(%struct.httpd_conn* %16, i8* %17), !dbg !11547
  store i32 -1, i32* %retval, align 4, !dbg !11548
  br label %return, !dbg !11548

if.end21:                                         ; preds = %if.end11
  %18 = load i8*, i8** %authpass, align 8, !dbg !11549
  %incdec.ptr = getelementptr inbounds i8, i8* %18, i32 1, !dbg !11549
  store i8* %incdec.ptr, i8** %authpass, align 8, !dbg !11549
  store i8 0, i8* %18, align 1, !dbg !11550
  %19 = load i8*, i8** %authpass, align 8, !dbg !11551
  %call22 = call i8* @strchr(i8* %19, i32 58), !dbg !11552
  store i8* %call22, i8** %colon, align 8, !dbg !11553
  %20 = load i8*, i8** %colon, align 8, !dbg !11554
  %cmp23 = icmp ne i8* %20, null, !dbg !11556
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !11557

if.then25:                                        ; preds = %if.end21
  %21 = load i8*, i8** %colon, align 8, !dbg !11558
  store i8 0, i8* %21, align 1, !dbg !11559
  br label %if.end26, !dbg !11560

if.end26:                                         ; preds = %if.then25, %if.end21
  %22 = load i64, i64* @auth_check2.maxprevauthpath, align 8, !dbg !11561
  %cmp27 = icmp ne i64 %22, 0, !dbg !11563
  br i1 %cmp27, label %land.lhs.true, label %if.end52, !dbg !11564

land.lhs.true:                                    ; preds = %if.end26
  %23 = load i8*, i8** @auth_check2.authpath, align 8, !dbg !11565
  %24 = load i8*, i8** @auth_check2.prevauthpath, align 8, !dbg !11566
  %call29 = call i32 @strcmp(i8* %23, i8* %24), !dbg !11567
  %cmp30 = icmp eq i32 %call29, 0, !dbg !11568
  br i1 %cmp30, label %land.lhs.true32, label %if.end52, !dbg !11569

land.lhs.true32:                                  ; preds = %land.lhs.true
  %st_mtimespec = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 8, !dbg !11570
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtimespec, i32 0, i32 0, !dbg !11570
  %25 = load i64, i64* %tv_sec, align 8, !dbg !11570
  %26 = load i64, i64* @auth_check2.prevmtime, align 8, !dbg !11571
  %cmp33 = icmp eq i64 %25, %26, !dbg !11572
  br i1 %cmp33, label %land.lhs.true35, label %if.end52, !dbg !11573

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %arraydecay36 = getelementptr inbounds [500 x i8], [500 x i8]* %authinfo, i64 0, i64 0, !dbg !11574
  %27 = load i8*, i8** @auth_check2.prevuser, align 8, !dbg !11575
  %call37 = call i32 @strcmp(i8* %arraydecay36, i8* %27), !dbg !11576
  %cmp38 = icmp eq i32 %call37, 0, !dbg !11577
  br i1 %cmp38, label %if.then40, label %if.end52, !dbg !11578

if.then40:                                        ; preds = %land.lhs.true35
  %28 = load i8*, i8** %authpass, align 8, !dbg !11579
  %29 = load i8*, i8** @auth_check2.prevcryp, align 8, !dbg !11582
  %call41 = call i8* @crypt(i8* %28, i8* %29), !dbg !11583
  %30 = load i8*, i8** @auth_check2.prevcryp, align 8, !dbg !11584
  %call42 = call i32 @strcmp(i8* %call41, i8* %30), !dbg !11585
  %cmp43 = icmp eq i32 %call42, 0, !dbg !11586
  br i1 %cmp43, label %if.then45, label %if.else, !dbg !11587

if.then45:                                        ; preds = %if.then40
  %31 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11588
  %remoteuser = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %31, i32 0, i32 31, !dbg !11590
  %32 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11591
  %maxremoteuser = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %32, i32 0, i32 43, !dbg !11592
  %arraydecay46 = getelementptr inbounds [500 x i8], [500 x i8]* %authinfo, i64 0, i64 0, !dbg !11593
  %call47 = call i64 @strlen(i8* %arraydecay46), !dbg !11594
  call void @httpd_realloc_str(i8** %remoteuser, i64* %maxremoteuser, i64 %call47), !dbg !11595
  %33 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11596
  %remoteuser48 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %33, i32 0, i32 31, !dbg !11596
  %34 = load i8*, i8** %remoteuser48, align 8, !dbg !11596
  %arraydecay49 = getelementptr inbounds [500 x i8], [500 x i8]* %authinfo, i64 0, i64 0, !dbg !11596
  %35 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11596
  %remoteuser50 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %35, i32 0, i32 31, !dbg !11596
  %36 = load i8*, i8** %remoteuser50, align 8, !dbg !11596
  %37 = call i64 @llvm.objectsize.i64.p0i8(i8* %36, i1 false, i1 true, i1 false), !dbg !11596
  %call51 = call i8* @__strcpy_chk(i8* %34, i8* %arraydecay49, i64 %37) #11, !dbg !11596
  store i32 1, i32* %retval, align 4, !dbg !11597
  br label %return, !dbg !11597

if.else:                                          ; preds = %if.then40
  %38 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11598
  %39 = load i8*, i8** %dirname.addr, align 8, !dbg !11600
  call void @send_authenticate(%struct.httpd_conn* %38, i8* %39), !dbg !11601
  store i32 -1, i32* %retval, align 4, !dbg !11602
  br label %return, !dbg !11602

if.end52:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %land.lhs.true, %if.end26
  %40 = load i8*, i8** @auth_check2.authpath, align 8, !dbg !11603
  %call53 = call %struct.__sFILE* @"\01_fopen"(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.87.222, i64 0, i64 0)), !dbg !11604
  store %struct.__sFILE* %call53, %struct.__sFILE** %fp, align 8, !dbg !11605
  %41 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !11606
  %cmp54 = icmp eq %struct.__sFILE* %41, null, !dbg !11608
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !11609

if.then56:                                        ; preds = %if.end52
  %42 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11610
  %client_addr = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %42, i32 0, i32 2, !dbg !11612
  %call57 = call i8* @httpd_ntoa(%union.httpd_sockaddr* %client_addr), !dbg !11613
  %43 = load i8*, i8** @auth_check2.authpath, align 8, !dbg !11614
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 3, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.466, i64 0, i64 0), i8* %call57, i8* %43), !dbg !11615
  %44 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11616
  %45 = load i8*, i8** @err403title, align 8, !dbg !11617
  %46 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11618
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %46, i32 0, i32 12, !dbg !11619
  %47 = load i8*, i8** %encodedurl, align 8, !dbg !11619
  call void @httpd_send_err(%struct.httpd_conn* %44, i32 403, i8* %45, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29.204, i64 0, i64 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.467, i64 0, i64 0), i8* %47), !dbg !11620
  store i32 -1, i32* %retval, align 4, !dbg !11621
  br label %return, !dbg !11621

if.end58:                                         ; preds = %if.end52
  br label %while.cond, !dbg !11622

while.cond:                                       ; preds = %if.end114, %if.then80, %if.end58
  %arraydecay59 = getelementptr inbounds [500 x i8], [500 x i8]* %line, i64 0, i64 0, !dbg !11623
  %48 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !11624
  %call60 = call i8* @fgets(i8* %arraydecay59, i32 500, %struct.__sFILE* %48), !dbg !11625
  %cmp61 = icmp ne i8* %call60, null, !dbg !11626
  br i1 %cmp61, label %while.body, label %while.end, !dbg !11622

while.body:                                       ; preds = %while.cond
  %arraydecay63 = getelementptr inbounds [500 x i8], [500 x i8]* %line, i64 0, i64 0, !dbg !11627
  %call64 = call i64 @strlen(i8* %arraydecay63), !dbg !11629
  %conv65 = trunc i64 %call64 to i32, !dbg !11629
  store i32 %conv65, i32* %l, align 4, !dbg !11630
  %49 = load i32, i32* %l, align 4, !dbg !11631
  %sub = sub nsw i32 %49, 1, !dbg !11633
  %idxprom66 = sext i32 %sub to i64, !dbg !11634
  %arrayidx67 = getelementptr inbounds [500 x i8], [500 x i8]* %line, i64 0, i64 %idxprom66, !dbg !11634
  %50 = load i8, i8* %arrayidx67, align 1, !dbg !11634
  %conv68 = sext i8 %50 to i32, !dbg !11634
  %cmp69 = icmp eq i32 %conv68, 10, !dbg !11635
  br i1 %cmp69, label %if.then71, label %if.end75, !dbg !11636

if.then71:                                        ; preds = %while.body
  %51 = load i32, i32* %l, align 4, !dbg !11637
  %sub72 = sub nsw i32 %51, 1, !dbg !11638
  %idxprom73 = sext i32 %sub72 to i64, !dbg !11639
  %arrayidx74 = getelementptr inbounds [500 x i8], [500 x i8]* %line, i64 0, i64 %idxprom73, !dbg !11639
  store i8 0, i8* %arrayidx74, align 1, !dbg !11640
  br label %if.end75, !dbg !11639

if.end75:                                         ; preds = %if.then71, %while.body
  %arraydecay76 = getelementptr inbounds [500 x i8], [500 x i8]* %line, i64 0, i64 0, !dbg !11641
  %call77 = call i8* @strchr(i8* %arraydecay76, i32 58), !dbg !11642
  store i8* %call77, i8** %cryp, align 8, !dbg !11643
  %52 = load i8*, i8** %cryp, align 8, !dbg !11644
  %cmp78 = icmp eq i8* %52, null, !dbg !11646
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !11647

if.then80:                                        ; preds = %if.end75
  br label %while.cond, !dbg !11648, !llvm.loop !11649

if.end81:                                         ; preds = %if.end75
  %53 = load i8*, i8** %cryp, align 8, !dbg !11651
  %incdec.ptr82 = getelementptr inbounds i8, i8* %53, i32 1, !dbg !11651
  store i8* %incdec.ptr82, i8** %cryp, align 8, !dbg !11651
  store i8 0, i8* %53, align 1, !dbg !11652
  %arraydecay83 = getelementptr inbounds [500 x i8], [500 x i8]* %line, i64 0, i64 0, !dbg !11653
  %arraydecay84 = getelementptr inbounds [500 x i8], [500 x i8]* %authinfo, i64 0, i64 0, !dbg !11655
  %call85 = call i32 @strcmp(i8* %arraydecay83, i8* %arraydecay84), !dbg !11656
  %cmp86 = icmp eq i32 %call85, 0, !dbg !11657
  br i1 %cmp86, label %if.then88, label %if.end114, !dbg !11658

if.then88:                                        ; preds = %if.end81
  %54 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !11659
  %call89 = call i32 @fclose(%struct.__sFILE* %54), !dbg !11661
  %55 = load i8*, i8** %authpass, align 8, !dbg !11662
  %56 = load i8*, i8** %cryp, align 8, !dbg !11664
  %call90 = call i8* @crypt(i8* %55, i8* %56), !dbg !11665
  %57 = load i8*, i8** %cryp, align 8, !dbg !11666
  %call91 = call i32 @strcmp(i8* %call90, i8* %57), !dbg !11667
  %cmp92 = icmp eq i32 %call91, 0, !dbg !11668
  br i1 %cmp92, label %if.then94, label %if.else113, !dbg !11669

if.then94:                                        ; preds = %if.then88
  %58 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11670
  %remoteuser95 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %58, i32 0, i32 31, !dbg !11672
  %59 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11673
  %maxremoteuser96 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %59, i32 0, i32 43, !dbg !11674
  %arraydecay97 = getelementptr inbounds [500 x i8], [500 x i8]* %line, i64 0, i64 0, !dbg !11675
  %call98 = call i64 @strlen(i8* %arraydecay97), !dbg !11676
  call void @httpd_realloc_str(i8** %remoteuser95, i64* %maxremoteuser96, i64 %call98), !dbg !11677
  %60 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11678
  %remoteuser99 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %60, i32 0, i32 31, !dbg !11678
  %61 = load i8*, i8** %remoteuser99, align 8, !dbg !11678
  %arraydecay100 = getelementptr inbounds [500 x i8], [500 x i8]* %line, i64 0, i64 0, !dbg !11678
  %62 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11678
  %remoteuser101 = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %62, i32 0, i32 31, !dbg !11678
  %63 = load i8*, i8** %remoteuser101, align 8, !dbg !11678
  %64 = call i64 @llvm.objectsize.i64.p0i8(i8* %63, i1 false, i1 true, i1 false), !dbg !11678
  %call102 = call i8* @__strcpy_chk(i8* %61, i8* %arraydecay100, i64 %64) #11, !dbg !11678
  %65 = load i8*, i8** @auth_check2.authpath, align 8, !dbg !11679
  %call103 = call i64 @strlen(i8* %65), !dbg !11680
  call void @httpd_realloc_str(i8** @auth_check2.prevauthpath, i64* @auth_check2.maxprevauthpath, i64 %call103), !dbg !11681
  %66 = load i8*, i8** @auth_check2.prevauthpath, align 8, !dbg !11682
  %67 = load i8*, i8** @auth_check2.authpath, align 8, !dbg !11682
  %68 = load i8*, i8** @auth_check2.prevauthpath, align 8, !dbg !11682
  %69 = call i64 @llvm.objectsize.i64.p0i8(i8* %68, i1 false, i1 true, i1 false), !dbg !11682
  %call104 = call i8* @__strcpy_chk(i8* %66, i8* %67, i64 %69) #11, !dbg !11682
  %st_mtimespec105 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 8, !dbg !11683
  %tv_sec106 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtimespec105, i32 0, i32 0, !dbg !11683
  %70 = load i64, i64* %tv_sec106, align 8, !dbg !11683
  store i64 %70, i64* @auth_check2.prevmtime, align 8, !dbg !11684
  %arraydecay107 = getelementptr inbounds [500 x i8], [500 x i8]* %authinfo, i64 0, i64 0, !dbg !11685
  %call108 = call i64 @strlen(i8* %arraydecay107), !dbg !11686
  call void @httpd_realloc_str(i8** @auth_check2.prevuser, i64* @auth_check2.maxprevuser, i64 %call108), !dbg !11687
  %71 = load i8*, i8** @auth_check2.prevuser, align 8, !dbg !11688
  %arraydecay109 = getelementptr inbounds [500 x i8], [500 x i8]* %authinfo, i64 0, i64 0, !dbg !11688
  %72 = load i8*, i8** @auth_check2.prevuser, align 8, !dbg !11688
  %73 = call i64 @llvm.objectsize.i64.p0i8(i8* %72, i1 false, i1 true, i1 false), !dbg !11688
  %call110 = call i8* @__strcpy_chk(i8* %71, i8* %arraydecay109, i64 %73) #11, !dbg !11688
  %74 = load i8*, i8** %cryp, align 8, !dbg !11689
  %call111 = call i64 @strlen(i8* %74), !dbg !11690
  call void @httpd_realloc_str(i8** @auth_check2.prevcryp, i64* @auth_check2.maxprevcryp, i64 %call111), !dbg !11691
  %75 = load i8*, i8** @auth_check2.prevcryp, align 8, !dbg !11692
  %76 = load i8*, i8** %cryp, align 8, !dbg !11692
  %77 = load i8*, i8** @auth_check2.prevcryp, align 8, !dbg !11692
  %78 = call i64 @llvm.objectsize.i64.p0i8(i8* %77, i1 false, i1 true, i1 false), !dbg !11692
  %call112 = call i8* @__strcpy_chk(i8* %75, i8* %76, i64 %78) #11, !dbg !11692
  store i32 1, i32* %retval, align 4, !dbg !11693
  br label %return, !dbg !11693

if.else113:                                       ; preds = %if.then88
  %79 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11694
  %80 = load i8*, i8** %dirname.addr, align 8, !dbg !11696
  call void @send_authenticate(%struct.httpd_conn* %79, i8* %80), !dbg !11697
  store i32 -1, i32* %retval, align 4, !dbg !11698
  br label %return, !dbg !11698

if.end114:                                        ; preds = %if.end81
  br label %while.cond, !dbg !11622, !llvm.loop !11649

while.end:                                        ; preds = %while.cond
  %81 = load %struct.__sFILE*, %struct.__sFILE** %fp, align 8, !dbg !11699
  %call115 = call i32 @fclose(%struct.__sFILE* %81), !dbg !11700
  %82 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11701
  %83 = load i8*, i8** %dirname.addr, align 8, !dbg !11702
  call void @send_authenticate(%struct.httpd_conn* %82, i8* %83), !dbg !11703
  store i32 -1, i32* %retval, align 4, !dbg !11704
  br label %return, !dbg !11704

return:                                           ; preds = %while.end, %if.else113, %if.then94, %if.then56, %if.else, %if.then45, %if.then20, %if.then10, %if.then
  %84 = load i32, i32* %retval, align 4, !dbg !11705
  ret i32 %84, !dbg !11705
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @send_authenticate(%struct.httpd_conn* %hc, i8* %realm) #0 !dbg !892 {
entry:
  %hc.addr = alloca %struct.httpd_conn*, align 8
  %realm.addr = alloca i8*, align 8
  store %struct.httpd_conn* %hc, %struct.httpd_conn** %hc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.httpd_conn** %hc.addr, metadata !11706, metadata !DIExpression()), !dbg !11707
  store i8* %realm, i8** %realm.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %realm.addr, metadata !11708, metadata !DIExpression()), !dbg !11709
  %0 = load i8*, i8** %realm.addr, align 8, !dbg !11710
  %call = call i64 @strlen(i8* %0), !dbg !11711
  %add = add i64 32, %call, !dbg !11712
  %add1 = add i64 %add, 3, !dbg !11713
  call void @httpd_realloc_str(i8** @send_authenticate.header, i64* @send_authenticate.maxheader, i64 %add1), !dbg !11714
  %1 = load i8*, i8** @send_authenticate.header, align 8, !dbg !11715
  %2 = load i64, i64* @send_authenticate.maxheader, align 8, !dbg !11716
  %3 = load i8*, i8** %realm.addr, align 8, !dbg !11717
  %call2 = call i32 (i8*, i64, i8*, ...) @my_snprintf(i8* %1, i64 %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.468, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @send_authenticate.headstr, i64 0, i64 0), i8* %3), !dbg !11718
  %4 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11719
  %5 = load i8*, i8** @err401title, align 8, !dbg !11720
  %6 = load i8*, i8** @send_authenticate.header, align 8, !dbg !11721
  %7 = load i8*, i8** @err401form, align 8, !dbg !11722
  %8 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11723
  %encodedurl = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %8, i32 0, i32 12, !dbg !11724
  %9 = load i8*, i8** %encodedurl, align 8, !dbg !11724
  call void @httpd_send_err(%struct.httpd_conn* %4, i32 401, i8* %5, i8* %6, i8* %7, i8* %9), !dbg !11725
  %10 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11726
  %method = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %10, i32 0, i32 8, !dbg !11728
  %11 = load i32, i32* %method, align 4, !dbg !11728
  %cmp = icmp eq i32 %11, 3, !dbg !11729
  br i1 %cmp, label %if.then, label %if.end, !dbg !11730

if.then:                                          ; preds = %entry
  %12 = load %struct.httpd_conn*, %struct.httpd_conn** %hc.addr, align 8, !dbg !11731
  %should_linger = getelementptr inbounds %struct.httpd_conn, %struct.httpd_conn* %12, i32 0, i32 58, !dbg !11732
  store i32 1, i32* %should_linger, align 4, !dbg !11733
  br label %if.end, !dbg !11731

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11734
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal i32 @b64_decode(i8* %str, i8* %space, i32 %size) #0 !dbg !11735 {
entry:
  %str.addr = alloca i8*, align 8
  %space.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %cp = alloca i8*, align 8
  %space_idx = alloca i32, align 4
  %phase = alloca i32, align 4
  %d = alloca i32, align 4
  %prev_d = alloca i32, align 4
  %c = alloca i8, align 1
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11738, metadata !DIExpression()), !dbg !11739
  store i8* %space, i8** %space.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %space.addr, metadata !11740, metadata !DIExpression()), !dbg !11741
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11742, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !11744, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.declare(metadata i32* %space_idx, metadata !11746, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.declare(metadata i32* %phase, metadata !11748, metadata !DIExpression()), !dbg !11749
  call void @llvm.dbg.declare(metadata i32* %d, metadata !11750, metadata !DIExpression()), !dbg !11751
  call void @llvm.dbg.declare(metadata i32* %prev_d, metadata !11752, metadata !DIExpression()), !dbg !11753
  store i32 0, i32* %prev_d, align 4, !dbg !11753
  call void @llvm.dbg.declare(metadata i8* %c, metadata !11754, metadata !DIExpression()), !dbg !11755
  store i32 0, i32* %space_idx, align 4, !dbg !11756
  store i32 0, i32* %phase, align 4, !dbg !11757
  %0 = load i8*, i8** %str.addr, align 8, !dbg !11758
  store i8* %0, i8** %cp, align 8, !dbg !11760
  br label %for.cond, !dbg !11761

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %cp, align 8, !dbg !11762
  %2 = load i8, i8* %1, align 1, !dbg !11764
  %conv = sext i8 %2 to i32, !dbg !11764
  %cmp = icmp ne i32 %conv, 0, !dbg !11765
  br i1 %cmp, label %for.body, label %for.end, !dbg !11766

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %cp, align 8, !dbg !11767
  %4 = load i8, i8* %3, align 1, !dbg !11769
  %conv2 = zext i8 %4 to i32, !dbg !11770
  %idxprom = sext i32 %conv2 to i64, !dbg !11771
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @b64_decode_table, i64 0, i64 %idxprom, !dbg !11771
  %5 = load i32, i32* %arrayidx, align 4, !dbg !11771
  store i32 %5, i32* %d, align 4, !dbg !11772
  %6 = load i32, i32* %d, align 4, !dbg !11773
  %cmp3 = icmp ne i32 %6, -1, !dbg !11775
  br i1 %cmp3, label %if.then, label %if.end41, !dbg !11776

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %phase, align 4, !dbg !11777
  switch i32 %7, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb5
    i32 2, label %sw.bb14
    i32 3, label %sw.bb29
  ], !dbg !11779

sw.bb:                                            ; preds = %if.then
  %8 = load i32, i32* %phase, align 4, !dbg !11780
  %inc = add nsw i32 %8, 1, !dbg !11780
  store i32 %inc, i32* %phase, align 4, !dbg !11780
  br label %sw.epilog, !dbg !11782

sw.bb5:                                           ; preds = %if.then
  %9 = load i32, i32* %prev_d, align 4, !dbg !11783
  %shl = shl i32 %9, 2, !dbg !11784
  %10 = load i32, i32* %d, align 4, !dbg !11785
  %and = and i32 %10, 48, !dbg !11786
  %shr = ashr i32 %and, 4, !dbg !11787
  %or = or i32 %shl, %shr, !dbg !11788
  %conv6 = trunc i32 %or to i8, !dbg !11789
  store i8 %conv6, i8* %c, align 1, !dbg !11790
  %11 = load i32, i32* %space_idx, align 4, !dbg !11791
  %12 = load i32, i32* %size.addr, align 4, !dbg !11793
  %cmp7 = icmp slt i32 %11, %12, !dbg !11794
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !11795

if.then9:                                         ; preds = %sw.bb5
  %13 = load i8, i8* %c, align 1, !dbg !11796
  %14 = load i8*, i8** %space.addr, align 8, !dbg !11797
  %15 = load i32, i32* %space_idx, align 4, !dbg !11798
  %inc10 = add nsw i32 %15, 1, !dbg !11798
  store i32 %inc10, i32* %space_idx, align 4, !dbg !11798
  %idxprom11 = sext i32 %15 to i64, !dbg !11797
  %arrayidx12 = getelementptr inbounds i8, i8* %14, i64 %idxprom11, !dbg !11797
  store i8 %13, i8* %arrayidx12, align 1, !dbg !11799
  br label %if.end, !dbg !11797

if.end:                                           ; preds = %if.then9, %sw.bb5
  %16 = load i32, i32* %phase, align 4, !dbg !11800
  %inc13 = add nsw i32 %16, 1, !dbg !11800
  store i32 %inc13, i32* %phase, align 4, !dbg !11800
  br label %sw.epilog, !dbg !11801

sw.bb14:                                          ; preds = %if.then
  %17 = load i32, i32* %prev_d, align 4, !dbg !11802
  %and15 = and i32 %17, 15, !dbg !11803
  %shl16 = shl i32 %and15, 4, !dbg !11804
  %18 = load i32, i32* %d, align 4, !dbg !11805
  %and17 = and i32 %18, 60, !dbg !11806
  %shr18 = ashr i32 %and17, 2, !dbg !11807
  %or19 = or i32 %shl16, %shr18, !dbg !11808
  %conv20 = trunc i32 %or19 to i8, !dbg !11809
  store i8 %conv20, i8* %c, align 1, !dbg !11810
  %19 = load i32, i32* %space_idx, align 4, !dbg !11811
  %20 = load i32, i32* %size.addr, align 4, !dbg !11813
  %cmp21 = icmp slt i32 %19, %20, !dbg !11814
  br i1 %cmp21, label %if.then23, label %if.end27, !dbg !11815

if.then23:                                        ; preds = %sw.bb14
  %21 = load i8, i8* %c, align 1, !dbg !11816
  %22 = load i8*, i8** %space.addr, align 8, !dbg !11817
  %23 = load i32, i32* %space_idx, align 4, !dbg !11818
  %inc24 = add nsw i32 %23, 1, !dbg !11818
  store i32 %inc24, i32* %space_idx, align 4, !dbg !11818
  %idxprom25 = sext i32 %23 to i64, !dbg !11817
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i64 %idxprom25, !dbg !11817
  store i8 %21, i8* %arrayidx26, align 1, !dbg !11819
  br label %if.end27, !dbg !11817

if.end27:                                         ; preds = %if.then23, %sw.bb14
  %24 = load i32, i32* %phase, align 4, !dbg !11820
  %inc28 = add nsw i32 %24, 1, !dbg !11820
  store i32 %inc28, i32* %phase, align 4, !dbg !11820
  br label %sw.epilog, !dbg !11821

sw.bb29:                                          ; preds = %if.then
  %25 = load i32, i32* %prev_d, align 4, !dbg !11822
  %and30 = and i32 %25, 3, !dbg !11823
  %shl31 = shl i32 %and30, 6, !dbg !11824
  %26 = load i32, i32* %d, align 4, !dbg !11825
  %or32 = or i32 %shl31, %26, !dbg !11826
  %conv33 = trunc i32 %or32 to i8, !dbg !11827
  store i8 %conv33, i8* %c, align 1, !dbg !11828
  %27 = load i32, i32* %space_idx, align 4, !dbg !11829
  %28 = load i32, i32* %size.addr, align 4, !dbg !11831
  %cmp34 = icmp slt i32 %27, %28, !dbg !11832
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !11833

if.then36:                                        ; preds = %sw.bb29
  %29 = load i8, i8* %c, align 1, !dbg !11834
  %30 = load i8*, i8** %space.addr, align 8, !dbg !11835
  %31 = load i32, i32* %space_idx, align 4, !dbg !11836
  %inc37 = add nsw i32 %31, 1, !dbg !11836
  store i32 %inc37, i32* %space_idx, align 4, !dbg !11836
  %idxprom38 = sext i32 %31 to i64, !dbg !11835
  %arrayidx39 = getelementptr inbounds i8, i8* %30, i64 %idxprom38, !dbg !11835
  store i8 %29, i8* %arrayidx39, align 1, !dbg !11837
  br label %if.end40, !dbg !11835

if.end40:                                         ; preds = %if.then36, %sw.bb29
  store i32 0, i32* %phase, align 4, !dbg !11838
  br label %sw.epilog, !dbg !11839

sw.epilog:                                        ; preds = %if.then, %if.end40, %if.end27, %if.end, %sw.bb
  %32 = load i32, i32* %d, align 4, !dbg !11840
  store i32 %32, i32* %prev_d, align 4, !dbg !11841
  br label %if.end41, !dbg !11842

if.end41:                                         ; preds = %sw.epilog, %for.body
  br label %for.inc, !dbg !11843

for.inc:                                          ; preds = %if.end41
  %33 = load i8*, i8** %cp, align 8, !dbg !11844
  %incdec.ptr = getelementptr inbounds i8, i8* %33, i32 1, !dbg !11844
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !11844
  br label %for.cond, !dbg !11845, !llvm.loop !11846

for.end:                                          ; preds = %for.cond
  %34 = load i32, i32* %space_idx, align 4, !dbg !11848
  ret i32 %34, !dbg !11849
}

declare i8* @crypt(i8*, i8*) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @httpd_read_fully(i32 %fd, i8* %buf, i64 %nbytes) #0 !dbg !11850 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %nread = alloca i32, align 4
  %r = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11853, metadata !DIExpression()), !dbg !11854
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11855, metadata !DIExpression()), !dbg !11856
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !11857, metadata !DIExpression()), !dbg !11858
  call void @llvm.dbg.declare(metadata i32* %nread, metadata !11859, metadata !DIExpression()), !dbg !11860
  store i32 0, i32* %nread, align 4, !dbg !11861
  br label %while.cond, !dbg !11862

while.cond:                                       ; preds = %if.end20, %if.then, %entry
  %0 = load i32, i32* %nread, align 4, !dbg !11863
  %conv = sext i32 %0 to i64, !dbg !11863
  %1 = load i64, i64* %nbytes.addr, align 8, !dbg !11864
  %cmp = icmp ult i64 %conv, %1, !dbg !11865
  br i1 %cmp, label %while.body, label %while.end, !dbg !11862

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %r, metadata !11866, metadata !DIExpression()), !dbg !11868
  %2 = load i32, i32* %fd.addr, align 4, !dbg !11869
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !11870
  %4 = load i32, i32* %nread, align 4, !dbg !11871
  %idx.ext = sext i32 %4 to i64, !dbg !11872
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !11872
  %5 = load i64, i64* %nbytes.addr, align 8, !dbg !11873
  %6 = load i32, i32* %nread, align 4, !dbg !11874
  %conv2 = sext i32 %6 to i64, !dbg !11874
  %sub = sub i64 %5, %conv2, !dbg !11875
  %call = call i64 @"\01_read"(i32 %2, i8* %add.ptr, i64 %sub), !dbg !11876
  %conv3 = trunc i64 %call to i32, !dbg !11876
  store i32 %conv3, i32* %r, align 4, !dbg !11877
  %7 = load i32, i32* %r, align 4, !dbg !11878
  %cmp4 = icmp slt i32 %7, 0, !dbg !11880
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !11881

land.lhs.true:                                    ; preds = %while.body
  %call6 = call i32* @__error(), !dbg !11882
  %8 = load i32, i32* %call6, align 4, !dbg !11882
  %cmp7 = icmp eq i32 %8, 4, !dbg !11883
  br i1 %cmp7, label %if.then, label %lor.lhs.false, !dbg !11884

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call9 = call i32* @__error(), !dbg !11885
  %9 = load i32, i32* %call9, align 4, !dbg !11885
  %cmp10 = icmp eq i32 %9, 35, !dbg !11886
  br i1 %cmp10, label %if.then, label %if.end, !dbg !11887

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %call12 = call i32 @"\01_sleep"(i32 1), !dbg !11888
  br label %while.cond, !dbg !11890, !llvm.loop !11891

if.end:                                           ; preds = %lor.lhs.false, %while.body
  %10 = load i32, i32* %r, align 4, !dbg !11893
  %cmp13 = icmp slt i32 %10, 0, !dbg !11895
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !11896

if.then15:                                        ; preds = %if.end
  %11 = load i32, i32* %r, align 4, !dbg !11897
  store i32 %11, i32* %retval, align 4, !dbg !11898
  br label %return, !dbg !11898

if.end16:                                         ; preds = %if.end
  %12 = load i32, i32* %r, align 4, !dbg !11899
  %cmp17 = icmp eq i32 %12, 0, !dbg !11901
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !11902

if.then19:                                        ; preds = %if.end16
  br label %while.end, !dbg !11903

if.end20:                                         ; preds = %if.end16
  %13 = load i32, i32* %r, align 4, !dbg !11904
  %14 = load i32, i32* %nread, align 4, !dbg !11905
  %add = add nsw i32 %14, %13, !dbg !11905
  store i32 %add, i32* %nread, align 4, !dbg !11905
  br label %while.cond, !dbg !11862, !llvm.loop !11891

while.end:                                        ; preds = %if.then19, %while.cond
  %15 = load i32, i32* %nread, align 4, !dbg !11906
  store i32 %15, i32* %retval, align 4, !dbg !11907
  br label %return, !dbg !11907

return:                                           ; preds = %while.end, %if.then15
  %16 = load i32, i32* %retval, align 4, !dbg !11908
  ret i32 %16, !dbg !11908
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @httpd_logstats(i64 %secs) #0 !dbg !11909 {
entry:
  %secs.addr = alloca i64, align 8
  store i64 %secs, i64* %secs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %secs.addr, metadata !11910, metadata !DIExpression()), !dbg !11911
  %0 = load i32, i32* @str_alloc_count, align 4, !dbg !11912
  %cmp = icmp sgt i32 %0, 0, !dbg !11914
  br i1 %cmp, label %if.then, label %if.end, !dbg !11915

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @str_alloc_count, align 4, !dbg !11916
  %2 = load i64, i64* @str_alloc_size, align 8, !dbg !11917
  %3 = load i64, i64* @str_alloc_size, align 8, !dbg !11918
  %conv = uitofp i64 %3 to float, !dbg !11919
  %4 = load i32, i32* @str_alloc_count, align 4, !dbg !11920
  %conv1 = sitofp i32 %4 to float, !dbg !11920
  %div = fdiv float %conv, %conv1, !dbg !11921
  %conv2 = fpext float %div to double, !dbg !11919
  notail call void (i32, i8*, ...) @"\01_syslog$DARWIN_EXTSN"(i32 5, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.61.292, i64 0, i64 0), i32 %1, i64 %2, double %conv2), !dbg !11922
  br label %if.end, !dbg !11922

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11923
}

attributes #0 = { noinline nounwind optnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind willreturn }
attributes #11 = { nounwind }
attributes #12 = { nobuiltin nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn }
attributes #14 = { cold }
attributes #15 = { allocsize(0) }
attributes #16 = { allocsize(1) }
attributes #17 = { cold noreturn }
attributes #18 = { nounwind readonly }

!llvm.dbg.cu = !{!2, !496}
!llvm.ident = !{!954, !954}
!llvm.module.flags = !{!955, !956, !957, !958}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "terminate", scope: !2, file: !3, line: 134, type: !26, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.0 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !412, nameTableKind: None)
!3 = !DIFile(filename: "thttpd.c", directory: "/Users/yongzhehuang/Library/Mobile Documents/com~apple~CloudDocs/Documents/llvm_versions/program-dependence-graph/benchmarks/thttpd-2.29")
!4 = !{}
!5 = !{!6, !8, !27, !50, !26, !106, !109, !187, !211, !219, !243, !246, !248, !255, !70, !386, !392, !395, !24, !137, !396, !267}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "throttletab", file: !3, line: 99, baseType: !10)
!10 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 93, size: 384, elements: !11)
!11 = !{!12, !13, !15, !16, !17, !25}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !10, file: !3, line: 94, baseType: !6, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !10, file: !3, line: 95, baseType: !14, size: 64, offset: 64)
!14 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !10, file: !3, line: 95, baseType: !14, size: 64, offset: 128)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !10, file: !3, line: 96, baseType: !14, size: 64, offset: 192)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_since_avg", scope: !10, file: !3, line: 97, baseType: !18, size: 64, offset: 256)
!18 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !19, line: 31, baseType: !20)
!19 = !DIFile(filename: "/usr/include/sys/_types/_off_t.h", directory: "")
!20 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_off_t", file: !21, line: 71, baseType: !22)
!21 = !DIFile(filename: "/usr/include/sys/_types.h", directory: "")
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !23, line: 46, baseType: !24)
!23 = !DIFile(filename: "/usr/include/i386/_types.h", directory: "")
!24 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "num_sending", scope: !10, file: !3, line: 98, baseType: !26, size: 32, offset: 320)
!26 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!28 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !29, line: 84, size: 576, elements: !30)
!29 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!30 = !{!31, !32, !33, !39, !43, !45, !46, !47, !48, !49}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !28, file: !29, line: 85, baseType: !6, size: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !28, file: !29, line: 86, baseType: !6, size: 64, offset: 64)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !28, file: !29, line: 87, baseType: !34, size: 32, offset: 128)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !35, line: 31, baseType: !36)
!35 = !DIFile(filename: "/usr/include/sys/_types/_uid_t.h", directory: "")
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_uid_t", file: !21, line: 75, baseType: !37)
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !23, line: 45, baseType: !38)
!38 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !28, file: !29, line: 88, baseType: !40, size: 32, offset: 160)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !41, line: 31, baseType: !42)
!41 = !DIFile(filename: "/usr/include/sys/_types/_gid_t.h", directory: "")
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_gid_t", file: !21, line: 60, baseType: !37)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "pw_change", scope: !28, file: !29, line: 89, baseType: !44, size: 64, offset: 192)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_time_t", file: !23, line: 120, baseType: !14)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "pw_class", scope: !28, file: !29, line: 90, baseType: !6, size: 64, offset: 256)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !28, file: !29, line: 91, baseType: !6, size: 64, offset: 320)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !28, file: !29, line: 92, baseType: !6, size: 64, offset: 384)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !28, file: !29, line: 93, baseType: !6, size: 64, offset: 448)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "pw_expire", scope: !28, file: !29, line: 94, baseType: !44, size: 64, offset: 512)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 64)
!51 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !52, line: 157, baseType: !53)
!52 = !DIFile(filename: "/usr/include/_stdio.h", directory: "")
!53 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !52, line: 126, size: 1216, elements: !54)
!54 = !{!55, !58, !59, !60, !62, !63, !68, !69, !71, !75, !79, !84, !90, !91, !94, !95, !99, !103, !104, !105}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !53, file: !52, line: 127, baseType: !56, size: 64)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!57 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !53, file: !52, line: 128, baseType: !26, size: 32, offset: 64)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !53, file: !52, line: 129, baseType: !26, size: 32, offset: 96)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !53, file: !52, line: 130, baseType: !61, size: 16, offset: 128)
!61 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !53, file: !52, line: 131, baseType: !61, size: 16, offset: 144)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !53, file: !52, line: 132, baseType: !64, size: 128, offset: 192)
!64 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !52, line: 92, size: 128, elements: !65)
!65 = !{!66, !67}
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !64, file: !52, line: 93, baseType: !56, size: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !64, file: !52, line: 94, baseType: !26, size: 32, offset: 64)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !53, file: !52, line: 133, baseType: !26, size: 32, offset: 320)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !53, file: !52, line: 136, baseType: !70, size: 64, offset: 384)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !53, file: !52, line: 137, baseType: !72, size: 64, offset: 448)
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!73 = !DISubroutineType(types: !74)
!74 = !{!26, !70}
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !53, file: !52, line: 138, baseType: !76, size: 64, offset: 512)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!77 = !DISubroutineType(types: !78)
!78 = !{!26, !70, !6, !26}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !53, file: !52, line: 139, baseType: !80, size: 64, offset: 576)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!81 = !DISubroutineType(types: !82)
!82 = !{!83, !70, !83, !26}
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !52, line: 81, baseType: !20)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !53, file: !52, line: 140, baseType: !85, size: 64, offset: 640)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = !DISubroutineType(types: !87)
!87 = !{!26, !70, !88, !26}
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!89 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !53, file: !52, line: 143, baseType: !64, size: 128, offset: 704)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "_extra", scope: !53, file: !52, line: 144, baseType: !92, size: 64, offset: 832)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!93 = !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILEX", file: !52, line: 98, flags: DIFlagFwdDecl)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !53, file: !52, line: 145, baseType: !26, size: 32, offset: 896)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !53, file: !52, line: 148, baseType: !96, size: 24, offset: 928)
!96 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 24, elements: !97)
!97 = !{!98}
!98 = !DISubrange(count: 3)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !53, file: !52, line: 149, baseType: !100, size: 8, offset: 952)
!100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 8, elements: !101)
!101 = !{!102}
!102 = !DISubrange(count: 1)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !53, file: !52, line: 152, baseType: !64, size: 128, offset: 960)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !53, file: !52, line: 155, baseType: !26, size: 32, offset: 1088)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !53, file: !52, line: 156, baseType: !83, size: 64, offset: 1152)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64)
!107 = !DISubroutineType(types: !108)
!108 = !{null, !26}
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "httpd_sockaddr", file: !111, line: 69, baseType: !112)
!111 = !DIFile(filename: "./libhttpd.h", directory: "/Users/yongzhehuang/Library/Mobile Documents/com~apple~CloudDocs/Documents/llvm_versions/program-dependence-graph/benchmarks/thttpd-2.29")
!112 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !111, line: 62, size: 1024, elements: !113)
!113 = !{!114, !127, !148, !173}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !112, file: !111, line: 63, baseType: !115, size: 128)
!115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !116, line: 407, size: 128, elements: !117)
!116 = !DIFile(filename: "/usr/include/sys/socket.h", directory: "")
!117 = !{!118, !120, !123}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "sa_len", scope: !115, file: !116, line: 408, baseType: !119, size: 8)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !23, line: 41, baseType: !57)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !115, file: !116, line: 409, baseType: !121, size: 8, offset: 8)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !122, line: 31, baseType: !119)
!122 = !DIFile(filename: "/usr/include/sys/_types/_sa_family_t.h", directory: "")
!123 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !115, file: !116, line: 410, baseType: !124, size: 112, offset: 16)
!124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 112, elements: !125)
!125 = !{!126}
!126 = !DISubrange(count: 14)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "sa_in", scope: !112, file: !111, line: 64, baseType: !128, size: 128)
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !129, line: 375, size: 128, elements: !130)
!129 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "")
!130 = !{!131, !132, !133, !138, !144}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "sin_len", scope: !128, file: !129, line: 376, baseType: !119, size: 8)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !128, file: !129, line: 377, baseType: !121, size: 8, offset: 8)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !128, file: !129, line: 378, baseType: !134, size: 16, offset: 16)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !135, line: 31, baseType: !136)
!135 = !DIFile(filename: "/usr/include/sys/_types/_in_port_t.h", directory: "")
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !23, line: 43, baseType: !137)
!137 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !128, file: !129, line: 379, baseType: !139, size: 32, offset: 32)
!139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !129, line: 301, size: 32, elements: !140)
!140 = !{!141}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !139, file: !129, line: 302, baseType: !142, size: 32)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !143, line: 31, baseType: !37)
!143 = !DIFile(filename: "/usr/include/sys/_types/_in_addr_t.h", directory: "")
!144 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !128, file: !129, line: 380, baseType: !145, size: 64, offset: 64)
!145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !146)
!146 = !{!147}
!147 = !DISubrange(count: 8)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "sa_in6", scope: !112, file: !111, line: 66, baseType: !149, size: 224)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !150, line: 169, size: 224, elements: !151)
!150 = !DIFile(filename: "/usr/include/netinet6/in6.h", directory: "")
!151 = !{!152, !153, !154, !155, !156, !172}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_len", scope: !149, file: !150, line: 170, baseType: !119, size: 8)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !149, file: !150, line: 171, baseType: !121, size: 8, offset: 8)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !149, file: !150, line: 172, baseType: !134, size: 16, offset: 16)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !149, file: !150, line: 173, baseType: !37, size: 32, offset: 32)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !149, file: !150, line: 174, baseType: !157, size: 128, offset: 64)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !150, line: 151, size: 128, elements: !158)
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr", scope: !157, file: !150, line: 156, baseType: !160, size: 128)
!160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !157, file: !150, line: 152, size: 128, elements: !161)
!161 = !{!162, !166, !168}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !160, file: !150, line: 153, baseType: !163, size: 128)
!163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 128, elements: !164)
!164 = !{!165}
!165 = !DISubrange(count: 16)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !160, file: !150, line: 154, baseType: !167, size: 128)
!167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 128, elements: !146)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !160, file: !150, line: 155, baseType: !169, size: 128)
!169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 128, elements: !170)
!170 = !{!171}
!171 = !DISubrange(count: 4)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !149, file: !150, line: 175, baseType: !37, size: 32, offset: 192)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "sa_stor", scope: !112, file: !111, line: 67, baseType: !174, size: 1024)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !116, line: 440, size: 1024, elements: !175)
!175 = !{!176, !177, !178, !182, !183}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "ss_len", scope: !174, file: !116, line: 441, baseType: !119, size: 8)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !174, file: !116, line: 442, baseType: !121, size: 8, offset: 8)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_pad1", scope: !174, file: !116, line: 443, baseType: !179, size: 48, offset: 16)
!179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 48, elements: !180)
!180 = !{!181}
!181 = !DISubrange(count: 6)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !174, file: !116, line: 444, baseType: !22, size: 64, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_pad2", scope: !174, file: !116, line: 445, baseType: !184, size: 896, offset: 128)
!184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 896, elements: !185)
!185 = !{!186}
!186 = !DISubrange(count: 112)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "httpd_server", file: !111, line: 91, baseType: !189)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !111, line: 72, size: 1088, elements: !190)
!190 = !{!191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "binding_hostname", scope: !189, file: !111, line: 73, baseType: !6, size: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "server_hostname", scope: !189, file: !111, line: 74, baseType: !6, size: 64, offset: 64)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !189, file: !111, line: 75, baseType: !137, size: 16, offset: 128)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "cgi_pattern", scope: !189, file: !111, line: 76, baseType: !6, size: 64, offset: 192)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "cgi_limit", scope: !189, file: !111, line: 77, baseType: !26, size: 32, offset: 256)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "cgi_count", scope: !189, file: !111, line: 77, baseType: !26, size: 32, offset: 288)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "charset", scope: !189, file: !111, line: 78, baseType: !6, size: 64, offset: 320)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "p3p", scope: !189, file: !111, line: 79, baseType: !6, size: 64, offset: 384)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "max_age", scope: !189, file: !111, line: 80, baseType: !26, size: 32, offset: 448)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !189, file: !111, line: 81, baseType: !6, size: 64, offset: 512)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "listen4_fd", scope: !189, file: !111, line: 82, baseType: !26, size: 32, offset: 576)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "listen6_fd", scope: !189, file: !111, line: 82, baseType: !26, size: 32, offset: 608)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "no_log", scope: !189, file: !111, line: 83, baseType: !26, size: 32, offset: 640)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "logfp", scope: !189, file: !111, line: 84, baseType: !50, size: 64, offset: 704)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "no_symlink_check", scope: !189, file: !111, line: 85, baseType: !26, size: 32, offset: 768)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "vhost", scope: !189, file: !111, line: 86, baseType: !26, size: 32, offset: 800)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "global_passwd", scope: !189, file: !111, line: 87, baseType: !26, size: 32, offset: 832)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "url_pattern", scope: !189, file: !111, line: 88, baseType: !6, size: 64, offset: 896)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "local_pattern", scope: !189, file: !111, line: 89, baseType: !6, size: 64, offset: 960)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "no_empty_referrers", scope: !189, file: !111, line: 90, baseType: !26, size: 32, offset: 1024)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !213, line: 34, size: 128, elements: !214)
!213 = !DIFile(filename: "/usr/include/sys/_types/_timeval.h", directory: "")
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !212, file: !213, line: 36, baseType: !44, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !212, file: !213, line: 37, baseType: !217, size: 32, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_suseconds_t", file: !21, line: 74, baseType: !218)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !23, line: 44, baseType: !26)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !221, line: 65, baseType: !222)
!221 = !DIFile(filename: "./timers.h", directory: "/Users/yongzhehuang/Library/Mobile Documents/com~apple~CloudDocs/Documents/llvm_versions/program-dependence-graph/benchmarks/thttpd-2.29")
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TimerStruct", file: !221, line: 56, size: 576, elements: !223)
!223 = !{!224, !235, !236, !237, !238, !239, !241, !242}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "timer_proc", scope: !222, file: !221, line: 57, baseType: !225, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerProc", file: !221, line: 53, baseType: !227)
!227 = !DISubroutineType(types: !228)
!228 = !{null, !229, !211}
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClientData", file: !221, line: 45, baseType: !230)
!230 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !221, line: 41, size: 64, elements: !231)
!231 = !{!232, !233, !234}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !230, file: !221, line: 42, baseType: !70, size: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !230, file: !221, line: 43, baseType: !26, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !230, file: !221, line: 44, baseType: !14, size: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !222, file: !221, line: 58, baseType: !229, size: 64, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "msecs", scope: !222, file: !221, line: 59, baseType: !14, size: 64, offset: 128)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "periodic", scope: !222, file: !221, line: 60, baseType: !26, size: 32, offset: 192)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !222, file: !221, line: 61, baseType: !212, size: 128, offset: 256)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !222, file: !221, line: 62, baseType: !240, size: 64, offset: 384)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !222, file: !221, line: 63, baseType: !240, size: 64, offset: 448)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !222, file: !221, line: 64, baseType: !26, size: 32, offset: 512)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !245, line: 31, baseType: !44)
!245 = !DIFile(filename: "/usr/include/sys/_types/_time_t.h", directory: "")
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !40)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "connecttab", file: !3, line: 120, baseType: !250)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 106, size: 1152, elements: !251)
!251 = !{!252, !253, !254, !371, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "conn_state", scope: !250, file: !3, line: 107, baseType: !26, size: 32)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "next_free_connect", scope: !250, file: !3, line: 108, baseType: !26, size: 32, offset: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "hc", scope: !250, file: !3, line: 109, baseType: !255, size: 64, offset: 64)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "httpd_conn", file: !111, line: 148, baseType: !257)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !111, line: 94, size: 5760, elements: !258)
!258 = !{!259, !260, !261, !262, !263, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !369, !370}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !257, file: !111, line: 95, baseType: !26, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "hs", scope: !257, file: !111, line: 96, baseType: !187, size: 64, offset: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "client_addr", scope: !257, file: !111, line: 97, baseType: !110, size: 1024, offset: 128)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "read_buf", scope: !257, file: !111, line: 98, baseType: !6, size: 64, offset: 1152)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "read_size", scope: !257, file: !111, line: 99, baseType: !264, size: 64, offset: 1216)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !265, line: 31, baseType: !266)
!265 = !DIFile(filename: "/usr/include/sys/_types/_size_t.h", directory: "")
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_size_t", file: !23, line: 92, baseType: !267)
!267 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "read_idx", scope: !257, file: !111, line: 99, baseType: !264, size: 64, offset: 1280)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "checked_idx", scope: !257, file: !111, line: 99, baseType: !264, size: 64, offset: 1344)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "checked_state", scope: !257, file: !111, line: 100, baseType: !26, size: 32, offset: 1408)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !257, file: !111, line: 101, baseType: !26, size: 32, offset: 1440)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !257, file: !111, line: 102, baseType: !26, size: 32, offset: 1472)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_to_send", scope: !257, file: !111, line: 103, baseType: !18, size: 64, offset: 1536)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_sent", scope: !257, file: !111, line: 104, baseType: !18, size: 64, offset: 1600)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "encodedurl", scope: !257, file: !111, line: 105, baseType: !6, size: 64, offset: 1664)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "decodedurl", scope: !257, file: !111, line: 106, baseType: !6, size: 64, offset: 1728)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !257, file: !111, line: 107, baseType: !6, size: 64, offset: 1792)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "origfilename", scope: !257, file: !111, line: 108, baseType: !6, size: 64, offset: 1856)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "expnfilename", scope: !257, file: !111, line: 109, baseType: !6, size: 64, offset: 1920)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "encodings", scope: !257, file: !111, line: 110, baseType: !6, size: 64, offset: 1984)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pathinfo", scope: !257, file: !111, line: 111, baseType: !6, size: 64, offset: 2048)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !257, file: !111, line: 112, baseType: !6, size: 64, offset: 2112)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "referrer", scope: !257, file: !111, line: 113, baseType: !6, size: 64, offset: 2176)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "useragent", scope: !257, file: !111, line: 114, baseType: !6, size: 64, offset: 2240)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !257, file: !111, line: 115, baseType: !6, size: 64, offset: 2304)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "accepte", scope: !257, file: !111, line: 116, baseType: !6, size: 64, offset: 2368)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "acceptl", scope: !257, file: !111, line: 117, baseType: !6, size: 64, offset: 2432)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !257, file: !111, line: 118, baseType: !6, size: 64, offset: 2496)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "contenttype", scope: !257, file: !111, line: 119, baseType: !6, size: 64, offset: 2560)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "reqhost", scope: !257, file: !111, line: 120, baseType: !6, size: 64, offset: 2624)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "hdrhost", scope: !257, file: !111, line: 121, baseType: !6, size: 64, offset: 2688)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "hostdir", scope: !257, file: !111, line: 122, baseType: !6, size: 64, offset: 2752)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "authorization", scope: !257, file: !111, line: 123, baseType: !6, size: 64, offset: 2816)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "remoteuser", scope: !257, file: !111, line: 124, baseType: !6, size: 64, offset: 2880)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !257, file: !111, line: 125, baseType: !6, size: 64, offset: 2944)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "maxdecodedurl", scope: !257, file: !111, line: 126, baseType: !264, size: 64, offset: 3008)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "maxorigfilename", scope: !257, file: !111, line: 126, baseType: !264, size: 64, offset: 3072)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "maxexpnfilename", scope: !257, file: !111, line: 126, baseType: !264, size: 64, offset: 3136)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "maxencodings", scope: !257, file: !111, line: 126, baseType: !264, size: 64, offset: 3200)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "maxpathinfo", scope: !257, file: !111, line: 127, baseType: !264, size: 64, offset: 3264)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "maxquery", scope: !257, file: !111, line: 127, baseType: !264, size: 64, offset: 3328)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "maxaccept", scope: !257, file: !111, line: 127, baseType: !264, size: 64, offset: 3392)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "maxaccepte", scope: !257, file: !111, line: 127, baseType: !264, size: 64, offset: 3456)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "maxreqhost", scope: !257, file: !111, line: 127, baseType: !264, size: 64, offset: 3520)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "maxhostdir", scope: !257, file: !111, line: 127, baseType: !264, size: 64, offset: 3584)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "maxremoteuser", scope: !257, file: !111, line: 128, baseType: !264, size: 64, offset: 3648)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "maxresponse", scope: !257, file: !111, line: 128, baseType: !264, size: 64, offset: 3712)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "responselen", scope: !257, file: !111, line: 133, baseType: !264, size: 64, offset: 3776)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !257, file: !111, line: 134, baseType: !244, size: 64, offset: 3840)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "range_if", scope: !257, file: !111, line: 134, baseType: !244, size: 64, offset: 3904)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "contentlength", scope: !257, file: !111, line: 135, baseType: !264, size: 64, offset: 3968)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !257, file: !111, line: 136, baseType: !6, size: 64, offset: 4032)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "hostname", scope: !257, file: !111, line: 137, baseType: !6, size: 64, offset: 4096)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "mime_flag", scope: !257, file: !111, line: 138, baseType: !26, size: 32, offset: 4160)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "one_one", scope: !257, file: !111, line: 139, baseType: !26, size: 32, offset: 4192)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "got_range", scope: !257, file: !111, line: 140, baseType: !26, size: 32, offset: 4224)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "tildemapped", scope: !257, file: !111, line: 141, baseType: !26, size: 32, offset: 4256)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "first_byte_index", scope: !257, file: !111, line: 142, baseType: !18, size: 64, offset: 4288)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "last_byte_index", scope: !257, file: !111, line: 142, baseType: !18, size: 64, offset: 4352)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive", scope: !257, file: !111, line: 143, baseType: !26, size: 32, offset: 4416)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "should_linger", scope: !257, file: !111, line: 144, baseType: !26, size: 32, offset: 4448)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !257, file: !111, line: 145, baseType: !323, size: 1152, offset: 4480)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !324, line: 182, size: 1152, elements: !325)
!324 = !DIFile(filename: "/usr/include/sys/stat.h", directory: "")
!325 = !{!326, !330, !334, !337, !341, !342, !343, !344, !350, !351, !352, !353, !354, !358, !362, !363, !364, !365}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !323, file: !324, line: 182, baseType: !327, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !328, line: 31, baseType: !329)
!328 = !DIFile(filename: "/usr/include/sys/_types/_dev_t.h", directory: "")
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_dev_t", file: !21, line: 57, baseType: !218)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !323, file: !324, line: 182, baseType: !331, size: 16, offset: 32)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !332, line: 31, baseType: !333)
!332 = !DIFile(filename: "/usr/include/sys/_types/_mode_t.h", directory: "")
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_mode_t", file: !21, line: 70, baseType: !136)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !323, file: !324, line: 182, baseType: !335, size: 16, offset: 48)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !336, line: 31, baseType: !136)
!336 = !DIFile(filename: "/usr/include/sys/_types/_nlink_t.h", directory: "")
!337 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !323, file: !324, line: 182, baseType: !338, size: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_ino64_t", file: !21, line: 62, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !23, line: 47, baseType: !340)
!340 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !323, file: !324, line: 182, baseType: !34, size: 32, offset: 128)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !323, file: !324, line: 182, baseType: !40, size: 32, offset: 160)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !323, file: !324, line: 182, baseType: !327, size: 32, offset: 192)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "st_atimespec", scope: !323, file: !324, line: 182, baseType: !345, size: 128, offset: 256)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !346, line: 33, size: 128, elements: !347)
!346 = !DIFile(filename: "/usr/include/sys/_types/_timespec.h", directory: "")
!347 = !{!348, !349}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !345, file: !346, line: 35, baseType: !44, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !345, file: !346, line: 36, baseType: !14, size: 64, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtimespec", scope: !323, file: !324, line: 182, baseType: !345, size: 128, offset: 384)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctimespec", scope: !323, file: !324, line: 182, baseType: !345, size: 128, offset: 512)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "st_birthtimespec", scope: !323, file: !324, line: 182, baseType: !345, size: 128, offset: 640)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !323, file: !324, line: 182, baseType: !18, size: 64, offset: 768)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !323, file: !324, line: 182, baseType: !355, size: 64, offset: 832)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !356, line: 31, baseType: !357)
!356 = !DIFile(filename: "/usr/include/sys/_types/_blkcnt_t.h", directory: "")
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_blkcnt_t", file: !21, line: 55, baseType: !22)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !323, file: !324, line: 182, baseType: !359, size: 32, offset: 896)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !360, line: 31, baseType: !361)
!360 = !DIFile(filename: "/usr/include/sys/_types/_blksize_t.h", directory: "")
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_blksize_t", file: !21, line: 56, baseType: !218)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "st_flags", scope: !323, file: !324, line: 182, baseType: !37, size: 32, offset: 928)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "st_gen", scope: !323, file: !324, line: 182, baseType: !37, size: 32, offset: 960)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "st_lspare", scope: !323, file: !324, line: 182, baseType: !218, size: 32, offset: 992)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "st_qspare", scope: !323, file: !324, line: 182, baseType: !366, size: 128, offset: 1024)
!366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 128, elements: !367)
!367 = !{!368}
!368 = !DISubrange(count: 2)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "conn_fd", scope: !257, file: !111, line: 146, baseType: !26, size: 32, offset: 5632)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "file_address", scope: !257, file: !111, line: 147, baseType: !6, size: 64, offset: 5696)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "tnums", scope: !250, file: !3, line: 110, baseType: !372, size: 320, offset: 128)
!372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 320, elements: !373)
!373 = !{!374}
!374 = !DISubrange(count: 10)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "numtnums", scope: !250, file: !3, line: 111, baseType: !26, size: 32, offset: 448)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !250, file: !3, line: 112, baseType: !14, size: 64, offset: 512)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !250, file: !3, line: 112, baseType: !14, size: 64, offset: 576)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "started_at", scope: !250, file: !3, line: 113, baseType: !244, size: 64, offset: 640)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "active_at", scope: !250, file: !3, line: 113, baseType: !244, size: 64, offset: 704)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_timer", scope: !250, file: !3, line: 114, baseType: !219, size: 64, offset: 768)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "linger_timer", scope: !250, file: !3, line: 115, baseType: !219, size: 64, offset: 832)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "wouldblock_delay", scope: !250, file: !3, line: 116, baseType: !14, size: 64, offset: 896)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !250, file: !3, line: 117, baseType: !18, size: 64, offset: 960)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "end_byte_index", scope: !250, file: !3, line: 118, baseType: !18, size: 64, offset: 1024)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "next_byte_index", scope: !250, file: !3, line: 119, baseType: !18, size: 64, offset: 1088)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timezone", file: !388, line: 129, size: 64, elements: !389)
!388 = !DIFile(filename: "/usr/include/sys/time.h", directory: "")
!389 = !{!390, !391}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "tz_minuteswest", scope: !387, file: !388, line: 130, baseType: !26, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "tz_dsttime", scope: !387, file: !388, line: 131, baseType: !26, size: 32, offset: 32)
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !393, line: 31, baseType: !394)
!393 = !DIFile(filename: "/usr/include/sys/_types/_pid_t.h", directory: "")
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_pid_t", file: !21, line: 72, baseType: !218)
!395 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "addrinfo", file: !398, line: 147, size: 384, elements: !399)
!398 = !DIFile(filename: "/usr/include/netdb.h", directory: "")
!399 = !{!400, !401, !402, !403, !404, !408, !409, !411}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ai_flags", scope: !397, file: !398, line: 148, baseType: !26, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ai_family", scope: !397, file: !398, line: 149, baseType: !26, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "ai_socktype", scope: !397, file: !398, line: 150, baseType: !26, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "ai_protocol", scope: !397, file: !398, line: 151, baseType: !26, size: 32, offset: 96)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addrlen", scope: !397, file: !398, line: 152, baseType: !405, size: 32, offset: 128)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !406, line: 31, baseType: !407)
!406 = !DIFile(filename: "/usr/include/sys/_types/_socklen_t.h", directory: "")
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_socklen_t", file: !23, line: 118, baseType: !37)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ai_canonname", scope: !397, file: !398, line: 153, baseType: !6, size: 64, offset: 192)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ai_addr", scope: !397, file: !398, line: 154, baseType: !410, size: 64, offset: 256)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "ai_next", scope: !397, file: !398, line: 155, baseType: !396, size: 64, offset: 320)
!412 = !{!0, !413, !415, !417, !419, !421, !423, !425, !427, !429, !431, !433, !435, !437, !439, !441, !443, !445, !447, !449, !451, !453, !455, !457, !459, !461, !463, !465, !467, !469, !471, !473, !475, !477, !479, !481, !483, !485, !488, !490, !492}
!413 = !DIGlobalVariableExpression(var: !414, expr: !DIExpression())
!414 = distinct !DIGlobalVariable(name: "argv0", scope: !2, file: !3, line: 72, type: !6, isLocal: true, isDefinition: true)
!415 = !DIGlobalVariableExpression(var: !416, expr: !DIExpression())
!416 = distinct !DIGlobalVariable(name: "debug", scope: !2, file: !3, line: 73, type: !26, isLocal: true, isDefinition: true)
!417 = !DIGlobalVariableExpression(var: !418, expr: !DIExpression())
!418 = distinct !DIGlobalVariable(name: "port", scope: !2, file: !3, line: 74, type: !137, isLocal: true, isDefinition: true)
!419 = !DIGlobalVariableExpression(var: !420, expr: !DIExpression())
!420 = distinct !DIGlobalVariable(name: "dir", scope: !2, file: !3, line: 75, type: !6, isLocal: true, isDefinition: true)
!421 = !DIGlobalVariableExpression(var: !422, expr: !DIExpression())
!422 = distinct !DIGlobalVariable(name: "data_dir", scope: !2, file: !3, line: 76, type: !6, isLocal: true, isDefinition: true)
!423 = !DIGlobalVariableExpression(var: !424, expr: !DIExpression())
!424 = distinct !DIGlobalVariable(name: "do_chroot", scope: !2, file: !3, line: 77, type: !26, isLocal: true, isDefinition: true)
!425 = !DIGlobalVariableExpression(var: !426, expr: !DIExpression())
!426 = distinct !DIGlobalVariable(name: "no_log", scope: !2, file: !3, line: 77, type: !26, isLocal: true, isDefinition: true)
!427 = !DIGlobalVariableExpression(var: !428, expr: !DIExpression())
!428 = distinct !DIGlobalVariable(name: "no_symlink_check", scope: !2, file: !3, line: 77, type: !26, isLocal: true, isDefinition: true)
!429 = !DIGlobalVariableExpression(var: !430, expr: !DIExpression())
!430 = distinct !DIGlobalVariable(name: "do_vhost", scope: !2, file: !3, line: 77, type: !26, isLocal: true, isDefinition: true)
!431 = !DIGlobalVariableExpression(var: !432, expr: !DIExpression())
!432 = distinct !DIGlobalVariable(name: "do_global_passwd", scope: !2, file: !3, line: 77, type: !26, isLocal: true, isDefinition: true)
!433 = !DIGlobalVariableExpression(var: !434, expr: !DIExpression())
!434 = distinct !DIGlobalVariable(name: "cgi_pattern", scope: !2, file: !3, line: 78, type: !6, isLocal: true, isDefinition: true)
!435 = !DIGlobalVariableExpression(var: !436, expr: !DIExpression())
!436 = distinct !DIGlobalVariable(name: "cgi_limit", scope: !2, file: !3, line: 79, type: !26, isLocal: true, isDefinition: true)
!437 = !DIGlobalVariableExpression(var: !438, expr: !DIExpression())
!438 = distinct !DIGlobalVariable(name: "url_pattern", scope: !2, file: !3, line: 80, type: !6, isLocal: true, isDefinition: true)
!439 = !DIGlobalVariableExpression(var: !440, expr: !DIExpression())
!440 = distinct !DIGlobalVariable(name: "no_empty_referrers", scope: !2, file: !3, line: 81, type: !26, isLocal: true, isDefinition: true)
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "local_pattern", scope: !2, file: !3, line: 82, type: !6, isLocal: true, isDefinition: true)
!443 = !DIGlobalVariableExpression(var: !444, expr: !DIExpression())
!444 = distinct !DIGlobalVariable(name: "logfile", scope: !2, file: !3, line: 83, type: !6, isLocal: true, isDefinition: true)
!445 = !DIGlobalVariableExpression(var: !446, expr: !DIExpression())
!446 = distinct !DIGlobalVariable(name: "throttlefile", scope: !2, file: !3, line: 84, type: !6, isLocal: true, isDefinition: true)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "hostname", scope: !2, file: !3, line: 85, type: !6, isLocal: true, isDefinition: true)
!449 = !DIGlobalVariableExpression(var: !450, expr: !DIExpression())
!450 = distinct !DIGlobalVariable(name: "pidfile", scope: !2, file: !3, line: 86, type: !6, isLocal: true, isDefinition: true)
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "user", scope: !2, file: !3, line: 87, type: !6, isLocal: true, isDefinition: true)
!453 = !DIGlobalVariableExpression(var: !454, expr: !DIExpression())
!454 = distinct !DIGlobalVariable(name: "charset", scope: !2, file: !3, line: 88, type: !6, isLocal: true, isDefinition: true)
!455 = !DIGlobalVariableExpression(var: !456, expr: !DIExpression())
!456 = distinct !DIGlobalVariable(name: "p3p", scope: !2, file: !3, line: 89, type: !6, isLocal: true, isDefinition: true)
!457 = !DIGlobalVariableExpression(var: !458, expr: !DIExpression())
!458 = distinct !DIGlobalVariable(name: "max_age", scope: !2, file: !3, line: 90, type: !26, isLocal: true, isDefinition: true)
!459 = !DIGlobalVariableExpression(var: !460, expr: !DIExpression())
!460 = distinct !DIGlobalVariable(name: "throttles", scope: !2, file: !3, line: 100, type: !8, isLocal: true, isDefinition: true)
!461 = !DIGlobalVariableExpression(var: !462, expr: !DIExpression())
!462 = distinct !DIGlobalVariable(name: "numthrottles", scope: !2, file: !3, line: 101, type: !26, isLocal: true, isDefinition: true)
!463 = !DIGlobalVariableExpression(var: !464, expr: !DIExpression())
!464 = distinct !DIGlobalVariable(name: "maxthrottles", scope: !2, file: !3, line: 101, type: !26, isLocal: true, isDefinition: true)
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "connects", scope: !2, file: !3, line: 121, type: !248, isLocal: true, isDefinition: true)
!467 = !DIGlobalVariableExpression(var: !468, expr: !DIExpression())
!468 = distinct !DIGlobalVariable(name: "num_connects", scope: !2, file: !3, line: 122, type: !26, isLocal: true, isDefinition: true)
!469 = !DIGlobalVariableExpression(var: !470, expr: !DIExpression())
!470 = distinct !DIGlobalVariable(name: "max_connects", scope: !2, file: !3, line: 122, type: !26, isLocal: true, isDefinition: true)
!471 = !DIGlobalVariableExpression(var: !472, expr: !DIExpression())
!472 = distinct !DIGlobalVariable(name: "first_free_connect", scope: !2, file: !3, line: 122, type: !26, isLocal: true, isDefinition: true)
!473 = !DIGlobalVariableExpression(var: !474, expr: !DIExpression())
!474 = distinct !DIGlobalVariable(name: "httpd_conn_count", scope: !2, file: !3, line: 123, type: !26, isLocal: true, isDefinition: true)
!475 = !DIGlobalVariableExpression(var: !476, expr: !DIExpression())
!476 = distinct !DIGlobalVariable(name: "start_time", scope: !2, file: !3, line: 135, type: !244, isLocal: false, isDefinition: true)
!477 = !DIGlobalVariableExpression(var: !478, expr: !DIExpression())
!478 = distinct !DIGlobalVariable(name: "stats_time", scope: !2, file: !3, line: 135, type: !244, isLocal: false, isDefinition: true)
!479 = !DIGlobalVariableExpression(var: !480, expr: !DIExpression())
!480 = distinct !DIGlobalVariable(name: "stats_connections", scope: !2, file: !3, line: 136, type: !14, isLocal: false, isDefinition: true)
!481 = !DIGlobalVariableExpression(var: !482, expr: !DIExpression())
!482 = distinct !DIGlobalVariable(name: "stats_bytes", scope: !2, file: !3, line: 137, type: !18, isLocal: false, isDefinition: true)
!483 = !DIGlobalVariableExpression(var: !484, expr: !DIExpression())
!484 = distinct !DIGlobalVariable(name: "stats_simultaneous", scope: !2, file: !3, line: 138, type: !26, isLocal: false, isDefinition: true)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "got_hup", scope: !2, file: !3, line: 140, type: !487, isLocal: true, isDefinition: true)
!487 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !26)
!488 = !DIGlobalVariableExpression(var: !489, expr: !DIExpression())
!489 = distinct !DIGlobalVariable(name: "got_usr1", scope: !2, file: !3, line: 140, type: !487, isLocal: true, isDefinition: true)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "watchdog_flag", scope: !2, file: !3, line: 140, type: !487, isLocal: true, isDefinition: true)
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "hs", scope: !2, file: !3, line: 133, type: !187, isLocal: true, isDefinition: true)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "httpd_err400title", scope: !496, file: !497, line: 509, type: !6, isLocal: false, isDefinition: true)
!496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !497, producer: "clang version 10.0.0 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !498, globals: !665, nameTableKind: None)
!497 = !DIFile(filename: "libhttpd.c", directory: "/Users/yongzhehuang/Library/Mobile Documents/com~apple~CloudDocs/Documents/llvm_versions/program-dependence-graph/benchmarks/thttpd-2.29")
!498 = !{!499, !6, !517, !551, !26, !70, !14, !244, !597, !599, !37, !267, !395, !18, !243, !24, !601, !56, !57, !609, !635, !636, !641, !664, !392, !106}
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "httpd_server", file: !111, line: 91, baseType: !501)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !111, line: 72, size: 1088, elements: !502)
!502 = !{!503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !545, !546, !547, !548, !549, !550}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "binding_hostname", scope: !501, file: !111, line: 73, baseType: !6, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "server_hostname", scope: !501, file: !111, line: 74, baseType: !6, size: 64, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !501, file: !111, line: 75, baseType: !137, size: 16, offset: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "cgi_pattern", scope: !501, file: !111, line: 76, baseType: !6, size: 64, offset: 192)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "cgi_limit", scope: !501, file: !111, line: 77, baseType: !26, size: 32, offset: 256)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "cgi_count", scope: !501, file: !111, line: 77, baseType: !26, size: 32, offset: 288)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "charset", scope: !501, file: !111, line: 78, baseType: !6, size: 64, offset: 320)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "p3p", scope: !501, file: !111, line: 79, baseType: !6, size: 64, offset: 384)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "max_age", scope: !501, file: !111, line: 80, baseType: !26, size: 32, offset: 448)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !501, file: !111, line: 81, baseType: !6, size: 64, offset: 512)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "listen4_fd", scope: !501, file: !111, line: 82, baseType: !26, size: 32, offset: 576)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "listen6_fd", scope: !501, file: !111, line: 82, baseType: !26, size: 32, offset: 608)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "no_log", scope: !501, file: !111, line: 83, baseType: !26, size: 32, offset: 640)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "logfp", scope: !501, file: !111, line: 84, baseType: !517, size: 64, offset: 704)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !52, line: 157, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !52, line: 126, size: 1216, elements: !520)
!520 = !{!521, !522, !523, !524, !525, !526, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !519, file: !52, line: 127, baseType: !56, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !519, file: !52, line: 128, baseType: !26, size: 32, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !519, file: !52, line: 129, baseType: !26, size: 32, offset: 96)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !519, file: !52, line: 130, baseType: !61, size: 16, offset: 128)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !519, file: !52, line: 131, baseType: !61, size: 16, offset: 144)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !519, file: !52, line: 132, baseType: !527, size: 128, offset: 192)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !52, line: 92, size: 128, elements: !528)
!528 = !{!529, !530}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !527, file: !52, line: 93, baseType: !56, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !527, file: !52, line: 94, baseType: !26, size: 32, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !519, file: !52, line: 133, baseType: !26, size: 32, offset: 320)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !519, file: !52, line: 136, baseType: !70, size: 64, offset: 384)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !519, file: !52, line: 137, baseType: !72, size: 64, offset: 448)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !519, file: !52, line: 138, baseType: !76, size: 64, offset: 512)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !519, file: !52, line: 139, baseType: !80, size: 64, offset: 576)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !519, file: !52, line: 140, baseType: !85, size: 64, offset: 640)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !519, file: !52, line: 143, baseType: !527, size: 128, offset: 704)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "_extra", scope: !519, file: !52, line: 144, baseType: !92, size: 64, offset: 832)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !519, file: !52, line: 145, baseType: !26, size: 32, offset: 896)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !519, file: !52, line: 148, baseType: !96, size: 24, offset: 928)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !519, file: !52, line: 149, baseType: !100, size: 8, offset: 952)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !519, file: !52, line: 152, baseType: !527, size: 128, offset: 960)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !519, file: !52, line: 155, baseType: !26, size: 32, offset: 1088)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !519, file: !52, line: 156, baseType: !83, size: 64, offset: 1152)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "no_symlink_check", scope: !501, file: !111, line: 85, baseType: !26, size: 32, offset: 768)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "vhost", scope: !501, file: !111, line: 86, baseType: !26, size: 32, offset: 800)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "global_passwd", scope: !501, file: !111, line: 87, baseType: !26, size: 32, offset: 832)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "url_pattern", scope: !501, file: !111, line: 88, baseType: !6, size: 64, offset: 896)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "local_pattern", scope: !501, file: !111, line: 89, baseType: !6, size: 64, offset: 960)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "no_empty_referrers", scope: !501, file: !111, line: 90, baseType: !26, size: 32, offset: 1024)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "httpd_sockaddr", file: !111, line: 69, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !111, line: 62, size: 1024, elements: !554)
!554 = !{!555, !561, !572, !589}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !553, file: !111, line: 63, baseType: !556, size: 128)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !116, line: 407, size: 128, elements: !557)
!557 = !{!558, !559, !560}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "sa_len", scope: !556, file: !116, line: 408, baseType: !119, size: 8)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !556, file: !116, line: 409, baseType: !121, size: 8, offset: 8)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !556, file: !116, line: 410, baseType: !124, size: 112, offset: 16)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "sa_in", scope: !553, file: !111, line: 64, baseType: !562, size: 128)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !129, line: 375, size: 128, elements: !563)
!563 = !{!564, !565, !566, !567, !571}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "sin_len", scope: !562, file: !129, line: 376, baseType: !119, size: 8)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !562, file: !129, line: 377, baseType: !121, size: 8, offset: 8)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !562, file: !129, line: 378, baseType: !134, size: 16, offset: 16)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !562, file: !129, line: 379, baseType: !568, size: 32, offset: 32)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !129, line: 301, size: 32, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !568, file: !129, line: 302, baseType: !142, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !562, file: !129, line: 380, baseType: !145, size: 64, offset: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "sa_in6", scope: !553, file: !111, line: 66, baseType: !573, size: 224)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !150, line: 169, size: 224, elements: !574)
!574 = !{!575, !576, !577, !578, !579, !588}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_len", scope: !573, file: !150, line: 170, baseType: !119, size: 8)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !573, file: !150, line: 171, baseType: !121, size: 8, offset: 8)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !573, file: !150, line: 172, baseType: !134, size: 16, offset: 16)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !573, file: !150, line: 173, baseType: !37, size: 32, offset: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !573, file: !150, line: 174, baseType: !580, size: 128, offset: 64)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !150, line: 151, size: 128, elements: !581)
!581 = !{!582}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr", scope: !580, file: !150, line: 156, baseType: !583, size: 128)
!583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !580, file: !150, line: 152, size: 128, elements: !584)
!584 = !{!585, !586, !587}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr8", scope: !583, file: !150, line: 153, baseType: !163, size: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr16", scope: !583, file: !150, line: 154, baseType: !167, size: 128)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "__u6_addr32", scope: !583, file: !150, line: 155, baseType: !169, size: 128)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !573, file: !150, line: 175, baseType: !37, size: 32, offset: 192)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "sa_stor", scope: !553, file: !111, line: 67, baseType: !590, size: 1024)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !116, line: 440, size: 1024, elements: !591)
!591 = !{!592, !593, !594, !595, !596}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ss_len", scope: !590, file: !116, line: 441, baseType: !119, size: 8)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !590, file: !116, line: 442, baseType: !121, size: 8, offset: 8)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_pad1", scope: !590, file: !116, line: 443, baseType: !179, size: 48, offset: 16)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_align", scope: !590, file: !116, line: 444, baseType: !22, size: 64, offset: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "__ss_pad2", scope: !590, file: !116, line: 445, baseType: !184, size: 896, offset: 128)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !603)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mime_entry", file: !497, line: 2512, size: 256, elements: !604)
!604 = !{!605, !606, !607, !608}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !603, file: !497, line: 2513, baseType: !6, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "ext_len", scope: !603, file: !497, line: 2514, baseType: !264, size: 64, offset: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !603, file: !497, line: 2515, baseType: !6, size: 64, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "val_len", scope: !603, file: !497, line: 2516, baseType: !264, size: 64, offset: 192)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !611, line: 84, baseType: !612)
!611 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !611, line: 73, size: 1088, elements: !613)
!613 = !{!614, !615, !616, !617, !618, !619, !620, !621, !622, !632}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "__dd_fd", scope: !612, file: !611, line: 74, baseType: !26, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "__dd_loc", scope: !612, file: !611, line: 75, baseType: !14, size: 64, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "__dd_size", scope: !612, file: !611, line: 76, baseType: !14, size: 64, offset: 128)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "__dd_buf", scope: !612, file: !611, line: 77, baseType: !6, size: 64, offset: 192)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "__dd_len", scope: !612, file: !611, line: 78, baseType: !26, size: 32, offset: 256)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "__dd_seek", scope: !612, file: !611, line: 79, baseType: !14, size: 64, offset: 320)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !612, file: !611, line: 80, baseType: !14, size: 64, offset: 384)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "__dd_flags", scope: !612, file: !611, line: 81, baseType: !26, size: 32, offset: 448)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "__dd_lock", scope: !612, file: !611, line: 82, baseType: !623, size: 512, offset: 512)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_pthread_mutex_t", file: !624, line: 113, baseType: !625)
!624 = !DIFile(filename: "/usr/include/sys/_pthread/_pthread_types.h", directory: "")
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_opaque_pthread_mutex_t", file: !624, line: 78, size: 512, elements: !626)
!626 = !{!627, !628}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "__sig", scope: !625, file: !624, line: 79, baseType: !14, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "__opaque", scope: !625, file: !624, line: 80, baseType: !629, size: 448, offset: 64)
!629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 448, elements: !630)
!630 = !{!631}
!631 = !DISubrange(count: 56)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "__dd_td", scope: !612, file: !611, line: 83, baseType: !633, size: 64, offset: 1024)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DICompositeType(tag: DW_TAG_structure_type, name: "_telldir", file: !611, line: 70, flags: DIFlagFwdDecl)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !213, line: 34, size: 128, elements: !638)
!638 = !{!639, !640}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !637, file: !213, line: 36, baseType: !44, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !637, file: !213, line: 37, baseType: !217, size: 32, offset: 64)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !221, line: 65, baseType: !643)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TimerStruct", file: !221, line: 56, size: 576, elements: !644)
!644 = !{!645, !656, !657, !658, !659, !660, !662, !663}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "timer_proc", scope: !643, file: !221, line: 57, baseType: !646, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerProc", file: !221, line: 53, baseType: !648)
!648 = !DISubroutineType(types: !649)
!649 = !{null, !650, !636}
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClientData", file: !221, line: 45, baseType: !651)
!651 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !221, line: 41, size: 64, elements: !652)
!652 = !{!653, !654, !655}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !651, file: !221, line: 42, baseType: !70, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !651, file: !221, line: 43, baseType: !26, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !651, file: !221, line: 44, baseType: !14, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !643, file: !221, line: 58, baseType: !650, size: 64, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "msecs", scope: !643, file: !221, line: 59, baseType: !14, size: 64, offset: 128)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "periodic", scope: !643, file: !221, line: 60, baseType: !26, size: 32, offset: 192)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !643, file: !221, line: 61, baseType: !637, size: 128, offset: 256)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !643, file: !221, line: 62, baseType: !661, size: 64, offset: 384)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !643, file: !221, line: 63, baseType: !661, size: 64, offset: 448)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !643, file: !221, line: 64, baseType: !26, size: 32, offset: 512)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !88, size: 64)
!665 = !{!666, !494, !674, !676, !678, !680, !682, !684, !692, !694, !696, !698, !700, !702, !704, !799, !801, !803, !805, !810, !812, !814, !816, !818, !821, !823, !826, !831, !836, !838, !841, !843, !845, !847, !849, !854, !856, !858, !860, !865, !867, !869, !874, !876, !878, !880, !882, !884, !886, !888, !890, !895, !897, !902, !904, !906, !909, !912, !914, !917, !919, !921, !923, !925, !927, !929, !931, !933, !941, !946, !948, !950, !952}
!666 = !DIGlobalVariableExpression(var: !667, expr: !DIExpression())
!667 = distinct !DIGlobalVariable(name: "ghnbuf", scope: !668, file: !497, line: 236, type: !671, isLocal: true, isDefinition: true)
!668 = distinct !DISubprogram(name: "httpd_initialize", scope: !497, file: !497, line: 228, type: !669, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!669 = !DISubroutineType(types: !670)
!670 = !{!499, !6, !551, !551, !137, !6, !26, !6, !6, !26, !6, !26, !517, !26, !26, !26, !6, !6, !26}
!671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !672)
!672 = !{!673}
!673 = !DISubrange(count: 256)
!674 = !DIGlobalVariableExpression(var: !675, expr: !DIExpression())
!675 = distinct !DIGlobalVariable(name: "httpd_err400form", scope: !496, file: !497, line: 510, type: !6, isLocal: false, isDefinition: true)
!676 = !DIGlobalVariableExpression(var: !677, expr: !DIExpression())
!677 = distinct !DIGlobalVariable(name: "httpd_err408title", scope: !496, file: !497, line: 529, type: !6, isLocal: false, isDefinition: true)
!678 = !DIGlobalVariableExpression(var: !679, expr: !DIExpression())
!679 = distinct !DIGlobalVariable(name: "httpd_err408form", scope: !496, file: !497, line: 530, type: !6, isLocal: false, isDefinition: true)
!680 = !DIGlobalVariableExpression(var: !681, expr: !DIExpression())
!681 = distinct !DIGlobalVariable(name: "httpd_err503title", scope: !496, file: !497, line: 545, type: !6, isLocal: false, isDefinition: true)
!682 = !DIGlobalVariableExpression(var: !683, expr: !DIExpression())
!683 = distinct !DIGlobalVariable(name: "httpd_err503form", scope: !496, file: !497, line: 546, type: !6, isLocal: false, isDefinition: true)
!684 = !DIGlobalVariableExpression(var: !685, expr: !DIExpression())
!685 = distinct !DIGlobalVariable(name: "str", scope: !686, file: !497, line: 4115, type: !689, isLocal: true, isDefinition: true)
!686 = distinct !DISubprogram(name: "httpd_ntoa", scope: !497, file: !497, line: 4112, type: !687, scopeLine: 4113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!687 = !DISubroutineType(types: !688)
!688 = !{!6, !551}
!689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 1600, elements: !690)
!690 = !{!691}
!691 = !DISubrange(count: 200)
!692 = !DIGlobalVariableExpression(var: !693, expr: !DIExpression())
!693 = distinct !DIGlobalVariable(name: "sub_process", scope: !496, file: !497, line: 193, type: !26, isLocal: true, isDefinition: true)
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "str_alloc_count", scope: !496, file: !497, line: 707, type: !26, isLocal: true, isDefinition: true)
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(name: "str_alloc_size", scope: !496, file: !497, line: 708, type: !264, isLocal: true, isDefinition: true)
!698 = !DIGlobalVariableExpression(var: !699, expr: !DIExpression())
!699 = distinct !DIGlobalVariable(name: "ok206title", scope: !496, file: !497, line: 502, type: !6, isLocal: true, isDefinition: true)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "err501title", scope: !496, file: !497, line: 541, type: !6, isLocal: true, isDefinition: true)
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "err501form", scope: !496, file: !497, line: 542, type: !6, isLocal: true, isDefinition: true)
!704 = !DIGlobalVariableExpression(var: !705, expr: !DIExpression())
!705 = distinct !DIGlobalVariable(name: "tempfilename", scope: !706, file: !497, line: 1368, type: !6, isLocal: true, isDefinition: true)
!706 = distinct !DISubprogram(name: "vhost_map", scope: !497, file: !497, line: 1364, type: !707, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!707 = !DISubroutineType(types: !708)
!708 = !{!26, !709}
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "httpd_conn", file: !111, line: 148, baseType: !711)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !111, line: 94, size: 5760, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !797, !798}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !711, file: !111, line: 95, baseType: !26, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "hs", scope: !711, file: !111, line: 96, baseType: !499, size: 64, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "client_addr", scope: !711, file: !111, line: 97, baseType: !552, size: 1024, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "read_buf", scope: !711, file: !111, line: 98, baseType: !6, size: 64, offset: 1152)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "read_size", scope: !711, file: !111, line: 99, baseType: !264, size: 64, offset: 1216)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "read_idx", scope: !711, file: !111, line: 99, baseType: !264, size: 64, offset: 1280)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "checked_idx", scope: !711, file: !111, line: 99, baseType: !264, size: 64, offset: 1344)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "checked_state", scope: !711, file: !111, line: 100, baseType: !26, size: 32, offset: 1408)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !711, file: !111, line: 101, baseType: !26, size: 32, offset: 1440)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !711, file: !111, line: 102, baseType: !26, size: 32, offset: 1472)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_to_send", scope: !711, file: !111, line: 103, baseType: !18, size: 64, offset: 1536)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_sent", scope: !711, file: !111, line: 104, baseType: !18, size: 64, offset: 1600)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "encodedurl", scope: !711, file: !111, line: 105, baseType: !6, size: 64, offset: 1664)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "decodedurl", scope: !711, file: !111, line: 106, baseType: !6, size: 64, offset: 1728)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !711, file: !111, line: 107, baseType: !6, size: 64, offset: 1792)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "origfilename", scope: !711, file: !111, line: 108, baseType: !6, size: 64, offset: 1856)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "expnfilename", scope: !711, file: !111, line: 109, baseType: !6, size: 64, offset: 1920)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "encodings", scope: !711, file: !111, line: 110, baseType: !6, size: 64, offset: 1984)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "pathinfo", scope: !711, file: !111, line: 111, baseType: !6, size: 64, offset: 2048)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !711, file: !111, line: 112, baseType: !6, size: 64, offset: 2112)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "referrer", scope: !711, file: !111, line: 113, baseType: !6, size: 64, offset: 2176)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "useragent", scope: !711, file: !111, line: 114, baseType: !6, size: 64, offset: 2240)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !711, file: !111, line: 115, baseType: !6, size: 64, offset: 2304)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "accepte", scope: !711, file: !111, line: 116, baseType: !6, size: 64, offset: 2368)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "acceptl", scope: !711, file: !111, line: 117, baseType: !6, size: 64, offset: 2432)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !711, file: !111, line: 118, baseType: !6, size: 64, offset: 2496)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "contenttype", scope: !711, file: !111, line: 119, baseType: !6, size: 64, offset: 2560)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "reqhost", scope: !711, file: !111, line: 120, baseType: !6, size: 64, offset: 2624)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "hdrhost", scope: !711, file: !111, line: 121, baseType: !6, size: 64, offset: 2688)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "hostdir", scope: !711, file: !111, line: 122, baseType: !6, size: 64, offset: 2752)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "authorization", scope: !711, file: !111, line: 123, baseType: !6, size: 64, offset: 2816)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "remoteuser", scope: !711, file: !111, line: 124, baseType: !6, size: 64, offset: 2880)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !711, file: !111, line: 125, baseType: !6, size: 64, offset: 2944)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "maxdecodedurl", scope: !711, file: !111, line: 126, baseType: !264, size: 64, offset: 3008)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "maxorigfilename", scope: !711, file: !111, line: 126, baseType: !264, size: 64, offset: 3072)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "maxexpnfilename", scope: !711, file: !111, line: 126, baseType: !264, size: 64, offset: 3136)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "maxencodings", scope: !711, file: !111, line: 126, baseType: !264, size: 64, offset: 3200)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "maxpathinfo", scope: !711, file: !111, line: 127, baseType: !264, size: 64, offset: 3264)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "maxquery", scope: !711, file: !111, line: 127, baseType: !264, size: 64, offset: 3328)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "maxaccept", scope: !711, file: !111, line: 127, baseType: !264, size: 64, offset: 3392)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "maxaccepte", scope: !711, file: !111, line: 127, baseType: !264, size: 64, offset: 3456)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "maxreqhost", scope: !711, file: !111, line: 127, baseType: !264, size: 64, offset: 3520)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "maxhostdir", scope: !711, file: !111, line: 127, baseType: !264, size: 64, offset: 3584)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "maxremoteuser", scope: !711, file: !111, line: 128, baseType: !264, size: 64, offset: 3648)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "maxresponse", scope: !711, file: !111, line: 128, baseType: !264, size: 64, offset: 3712)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "responselen", scope: !711, file: !111, line: 133, baseType: !264, size: 64, offset: 3776)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "if_modified_since", scope: !711, file: !111, line: 134, baseType: !244, size: 64, offset: 3840)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "range_if", scope: !711, file: !111, line: 134, baseType: !244, size: 64, offset: 3904)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "contentlength", scope: !711, file: !111, line: 135, baseType: !264, size: 64, offset: 3968)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !711, file: !111, line: 136, baseType: !6, size: 64, offset: 4032)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "hostname", scope: !711, file: !111, line: 137, baseType: !6, size: 64, offset: 4096)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "mime_flag", scope: !711, file: !111, line: 138, baseType: !26, size: 32, offset: 4160)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "one_one", scope: !711, file: !111, line: 139, baseType: !26, size: 32, offset: 4192)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "got_range", scope: !711, file: !111, line: 140, baseType: !26, size: 32, offset: 4224)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "tildemapped", scope: !711, file: !111, line: 141, baseType: !26, size: 32, offset: 4256)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "first_byte_index", scope: !711, file: !111, line: 142, baseType: !18, size: 64, offset: 4288)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "last_byte_index", scope: !711, file: !111, line: 142, baseType: !18, size: 64, offset: 4352)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "keep_alive", scope: !711, file: !111, line: 143, baseType: !26, size: 32, offset: 4416)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "should_linger", scope: !711, file: !111, line: 144, baseType: !26, size: 32, offset: 4448)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !711, file: !111, line: 145, baseType: !773, size: 1152, offset: 4480)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !324, line: 182, size: 1152, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !773, file: !324, line: 182, baseType: !327, size: 32)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !773, file: !324, line: 182, baseType: !331, size: 16, offset: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !773, file: !324, line: 182, baseType: !335, size: 16, offset: 48)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !773, file: !324, line: 182, baseType: !338, size: 64, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !773, file: !324, line: 182, baseType: !34, size: 32, offset: 128)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !773, file: !324, line: 182, baseType: !40, size: 32, offset: 160)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !773, file: !324, line: 182, baseType: !327, size: 32, offset: 192)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "st_atimespec", scope: !773, file: !324, line: 182, baseType: !783, size: 128, offset: 256)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !346, line: 33, size: 128, elements: !784)
!784 = !{!785, !786}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !783, file: !346, line: 35, baseType: !44, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !783, file: !346, line: 36, baseType: !14, size: 64, offset: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtimespec", scope: !773, file: !324, line: 182, baseType: !783, size: 128, offset: 384)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctimespec", scope: !773, file: !324, line: 182, baseType: !783, size: 128, offset: 512)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "st_birthtimespec", scope: !773, file: !324, line: 182, baseType: !783, size: 128, offset: 640)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !773, file: !324, line: 182, baseType: !18, size: 64, offset: 768)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !773, file: !324, line: 182, baseType: !355, size: 64, offset: 832)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !773, file: !324, line: 182, baseType: !359, size: 32, offset: 896)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "st_flags", scope: !773, file: !324, line: 182, baseType: !37, size: 32, offset: 928)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "st_gen", scope: !773, file: !324, line: 182, baseType: !37, size: 32, offset: 960)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "st_lspare", scope: !773, file: !324, line: 182, baseType: !218, size: 32, offset: 992)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "st_qspare", scope: !773, file: !324, line: 182, baseType: !366, size: 128, offset: 1024)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "conn_fd", scope: !711, file: !111, line: 146, baseType: !26, size: 32, offset: 5632)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "file_address", scope: !711, file: !111, line: 147, baseType: !6, size: 64, offset: 5696)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "maxtempfilename", scope: !706, file: !497, line: 1369, type: !264, isLocal: true, isDefinition: true)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "err500title", scope: !496, file: !497, line: 537, type: !6, isLocal: true, isDefinition: true)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "err500form", scope: !496, file: !497, line: 538, type: !6, isLocal: true, isDefinition: true)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "checked", scope: !807, file: !497, line: 1458, type: !6, isLocal: true, isDefinition: true)
!807 = distinct !DISubprogram(name: "expand_symlinks", scope: !497, file: !497, line: 1456, type: !808, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!808 = !DISubroutineType(types: !809)
!809 = !{!6, !6, !635, !26, !26}
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "rest", scope: !807, file: !497, line: 1459, type: !6, isLocal: true, isDefinition: true)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "maxchecked", scope: !807, file: !497, line: 1461, type: !264, isLocal: true, isDefinition: true)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "maxrest", scope: !807, file: !497, line: 1461, type: !264, isLocal: true, isDefinition: true)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "err403title", scope: !496, file: !497, line: 519, type: !6, isLocal: true, isDefinition: true)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression(DW_OP_constu, 3, DW_OP_stack_value))
!819 = distinct !DIGlobalVariable(name: "n_enc_tab", scope: !496, file: !497, line: 2521, type: !820, isLocal: true, isDefinition: true)
!820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression(DW_OP_constu, 193, DW_OP_stack_value))
!822 = distinct !DIGlobalVariable(name: "n_typ_tab", scope: !496, file: !497, line: 2525, type: !820, isLocal: true, isDefinition: true)
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(name: "enc_tab", scope: !496, file: !497, line: 2518, type: !825, isLocal: true, isDefinition: true)
!825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !603, size: 768, elements: !97)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "typ_tab", scope: !496, file: !497, line: 2522, type: !828, isLocal: true, isDefinition: true)
!828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !603, size: 49408, elements: !829)
!829 = !{!830}
!830 = !DISubrange(count: 193)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "indexname", scope: !833, file: !497, line: 3626, type: !6, isLocal: true, isDefinition: true)
!833 = distinct !DISubprogram(name: "really_start_request", scope: !497, file: !497, line: 3624, type: !834, scopeLine: 3625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!834 = !DISubroutineType(types: !835)
!835 = !{!26, !709, !636}
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "maxindexname", scope: !833, file: !497, line: 3627, type: !264, isLocal: true, isDefinition: true)
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "index_names", scope: !833, file: !497, line: 3628, type: !840, isLocal: true, isDefinition: true)
!840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 384, elements: !180)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "dirname", scope: !833, file: !497, line: 3631, type: !6, isLocal: true, isDefinition: true)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "maxdirname", scope: !833, file: !497, line: 3632, type: !264, isLocal: true, isDefinition: true)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "err404title", scope: !496, file: !497, line: 525, type: !6, isLocal: true, isDefinition: true)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "err404form", scope: !496, file: !497, line: 526, type: !6, isLocal: true, isDefinition: true)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "location", scope: !851, file: !497, line: 1174, type: !6, isLocal: true, isDefinition: true)
!851 = distinct !DISubprogram(name: "send_dirredirect", scope: !497, file: !497, line: 1172, type: !852, scopeLine: 1173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!852 = !DISubroutineType(types: !853)
!853 = !{null, !709}
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "header", scope: !851, file: !497, line: 1175, type: !6, isLocal: true, isDefinition: true)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "maxlocation", scope: !851, file: !497, line: 1176, type: !264, isLocal: true, isDefinition: true)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "maxheader", scope: !851, file: !497, line: 1176, type: !264, isLocal: true, isDefinition: true)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "headstr", scope: !851, file: !497, line: 1177, type: !862, isLocal: true, isDefinition: true)
!862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 88, elements: !863)
!863 = !{!864}
!864 = !DISubrange(count: 11)
!865 = !DIGlobalVariableExpression(var: !866, expr: !DIExpression())
!866 = distinct !DIGlobalVariable(name: "err302title", scope: !496, file: !497, line: 504, type: !6, isLocal: true, isDefinition: true)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "err302form", scope: !496, file: !497, line: 505, type: !6, isLocal: true, isDefinition: true)
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "authpath", scope: !871, file: !497, line: 1023, type: !6, isLocal: true, isDefinition: true)
!871 = distinct !DISubprogram(name: "auth_check2", scope: !497, file: !497, line: 1021, type: !872, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!872 = !DISubroutineType(types: !873)
!873 = !{!26, !709, !6}
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "maxauthpath", scope: !871, file: !497, line: 1024, type: !264, isLocal: true, isDefinition: true)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "prevauthpath", scope: !871, file: !497, line: 1033, type: !6, isLocal: true, isDefinition: true)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "maxprevauthpath", scope: !871, file: !497, line: 1034, type: !264, isLocal: true, isDefinition: true)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "prevmtime", scope: !871, file: !497, line: 1035, type: !244, isLocal: true, isDefinition: true)
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "prevuser", scope: !871, file: !497, line: 1036, type: !6, isLocal: true, isDefinition: true)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "maxprevuser", scope: !871, file: !497, line: 1037, type: !264, isLocal: true, isDefinition: true)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "prevcryp", scope: !871, file: !497, line: 1038, type: !6, isLocal: true, isDefinition: true)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "maxprevcryp", scope: !871, file: !497, line: 1039, type: !264, isLocal: true, isDefinition: true)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "header", scope: !892, file: !497, line: 899, type: !6, isLocal: true, isDefinition: true)
!892 = distinct !DISubprogram(name: "send_authenticate", scope: !497, file: !497, line: 897, type: !893, scopeLine: 898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!893 = !DISubroutineType(types: !894)
!894 = !{null, !709, !6}
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "maxheader", scope: !892, file: !497, line: 900, type: !264, isLocal: true, isDefinition: true)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "headstr", scope: !892, file: !497, line: 901, type: !899, isLocal: true, isDefinition: true)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !900)
!900 = !{!901}
!901 = !DISubrange(count: 32)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "err401title", scope: !496, file: !497, line: 514, type: !6, isLocal: true, isDefinition: true)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "err401form", scope: !496, file: !497, line: 515, type: !6, isLocal: true, isDefinition: true)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "b64_decode_table", scope: !496, file: !497, line: 926, type: !908, isLocal: true, isDefinition: true)
!908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 8192, elements: !672)
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "refhost", scope: !911, file: !497, line: 4044, type: !6, isLocal: true, isDefinition: true)
!911 = distinct !DISubprogram(name: "really_check_referrer", scope: !497, file: !497, line: 4038, type: !707, scopeLine: 4039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "refhost_size", scope: !911, file: !497, line: 4045, type: !264, isLocal: true, isDefinition: true)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "maxnames", scope: !916, file: !497, line: 2711, type: !26, isLocal: true, isDefinition: true)
!916 = distinct !DISubprogram(name: "ls", scope: !497, file: !497, line: 2706, type: !707, scopeLine: 2707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "names", scope: !916, file: !497, line: 2713, type: !6, isLocal: true, isDefinition: true)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "nameptrs", scope: !916, file: !497, line: 2714, type: !635, isLocal: true, isDefinition: true)
!921 = !DIGlobalVariableExpression(var: !922, expr: !DIExpression())
!922 = distinct !DIGlobalVariable(name: "name", scope: !916, file: !497, line: 2715, type: !6, isLocal: true, isDefinition: true)
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "maxname", scope: !916, file: !497, line: 2716, type: !264, isLocal: true, isDefinition: true)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "rname", scope: !916, file: !497, line: 2717, type: !6, isLocal: true, isDefinition: true)
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "maxrname", scope: !916, file: !497, line: 2718, type: !264, isLocal: true, isDefinition: true)
!929 = !DIGlobalVariableExpression(var: !930, expr: !DIExpression())
!930 = distinct !DIGlobalVariable(name: "encrname", scope: !916, file: !497, line: 2719, type: !6, isLocal: true, isDefinition: true)
!931 = !DIGlobalVariableExpression(var: !932, expr: !DIExpression())
!932 = distinct !DIGlobalVariable(name: "maxencrname", scope: !916, file: !497, line: 2720, type: !264, isLocal: true, isDefinition: true)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "envp", scope: !935, file: !497, line: 3051, type: !938, isLocal: true, isDefinition: true)
!935 = distinct !DISubprogram(name: "make_envp", scope: !497, file: !497, line: 3049, type: !936, scopeLine: 3050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!936 = !DISubroutineType(types: !937)
!937 = !{!635, !709}
!938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 3200, elements: !939)
!939 = !{!940}
!940 = !DISubrange(count: 50)
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "buf", scope: !943, file: !497, line: 3010, type: !6, isLocal: true, isDefinition: true)
!943 = distinct !DISubprogram(name: "build_env", scope: !497, file: !497, line: 3006, type: !944, scopeLine: 3007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!944 = !DISubroutineType(types: !945)
!945 = !{!6, !6, !6}
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "maxbuf", scope: !943, file: !497, line: 3011, type: !264, isLocal: true, isDefinition: true)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "err451title", scope: !496, file: !497, line: 533, type: !6, isLocal: true, isDefinition: true)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "ok200title", scope: !496, file: !497, line: 501, type: !6, isLocal: true, isDefinition: true)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "err304title", scope: !496, file: !497, line: 507, type: !6, isLocal: true, isDefinition: true)
!954 = !{!"clang version 10.0.0 "}
!955 = !{i32 7, !"Dwarf Version", i32 4}
!956 = !{i32 2, !"Debug Info Version", i32 3}
!957 = !{i32 1, !"wchar_size", i32 4}
!958 = !{i32 7, !"PIC Level", i32 2}
!959 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 355, type: !960, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!960 = !DISubroutineType(types: !961)
!961 = !{!26, !26, !635}
!962 = !DILocalVariable(name: "argc", arg: 1, scope: !959, file: !3, line: 355, type: !26)
!963 = !DILocation(line: 355, column: 11, scope: !959)
!964 = !DILocalVariable(name: "argv", arg: 2, scope: !959, file: !3, line: 355, type: !635)
!965 = !DILocation(line: 355, column: 24, scope: !959)
!966 = !DILocalVariable(name: "cp", scope: !959, file: !3, line: 357, type: !6)
!967 = !DILocation(line: 357, column: 11, scope: !959)
!968 = !DILocalVariable(name: "pwd", scope: !959, file: !3, line: 358, type: !27)
!969 = !DILocation(line: 358, column: 60, scope: !959)
!970 = !DILocation(line: 358, column: 5, scope: !959)
!971 = !DILocalVariable(name: "uid", scope: !959, file: !3, line: 359, type: !34)
!972 = !DILocation(line: 359, column: 11, scope: !959)
!973 = !DILocalVariable(name: "gid", scope: !959, file: !3, line: 360, type: !40)
!974 = !DILocation(line: 360, column: 11, scope: !959)
!975 = !DILocalVariable(name: "cwd", scope: !959, file: !3, line: 361, type: !976)
!976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8200, elements: !977)
!977 = !{!978}
!978 = !DISubrange(count: 1025)
!979 = !DILocation(line: 361, column: 10, scope: !959)
!980 = !DILocalVariable(name: "logfp", scope: !959, file: !3, line: 362, type: !50)
!981 = !DILocation(line: 362, column: 11, scope: !959)
!982 = !DILocalVariable(name: "num_ready", scope: !959, file: !3, line: 363, type: !26)
!983 = !DILocation(line: 363, column: 9, scope: !959)
!984 = !DILocalVariable(name: "cnum", scope: !959, file: !3, line: 364, type: !26)
!985 = !DILocation(line: 364, column: 9, scope: !959)
!986 = !DILocalVariable(name: "c", scope: !959, file: !3, line: 365, type: !248)
!987 = !DILocation(line: 365, column: 17, scope: !959)
!988 = !DILocalVariable(name: "hc", scope: !959, file: !3, line: 366, type: !255)
!989 = !DILocation(line: 366, column: 17, scope: !959)
!990 = !DILocalVariable(name: "sa4", scope: !959, file: !3, line: 367, type: !110)
!991 = !DILocation(line: 367, column: 20, scope: !959)
!992 = !DILocalVariable(name: "sa6", scope: !959, file: !3, line: 368, type: !110)
!993 = !DILocation(line: 368, column: 20, scope: !959)
!994 = !DILocalVariable(name: "gotv4", scope: !959, file: !3, line: 369, type: !26)
!995 = !DILocation(line: 369, column: 9, scope: !959)
!996 = !DILocalVariable(name: "gotv6", scope: !959, file: !3, line: 369, type: !26)
!997 = !DILocation(line: 369, column: 16, scope: !959)
!998 = !DILocalVariable(name: "tv", scope: !959, file: !3, line: 370, type: !212)
!999 = !DILocation(line: 370, column: 20, scope: !959)
!1000 = !DILocation(line: 372, column: 13, scope: !959)
!1001 = !DILocation(line: 372, column: 11, scope: !959)
!1002 = !DILocation(line: 374, column: 19, scope: !959)
!1003 = !DILocation(line: 374, column: 10, scope: !959)
!1004 = !DILocation(line: 374, column: 8, scope: !959)
!1005 = !DILocation(line: 375, column: 10, scope: !1006)
!1006 = distinct !DILexicalBlock(scope: !959, file: !3, line: 375, column: 10)
!1007 = !DILocation(line: 375, column: 13, scope: !1006)
!1008 = !DILocation(line: 375, column: 10, scope: !959)
!1009 = !DILocation(line: 376, column: 2, scope: !1006)
!1010 = !DILocation(line: 378, column: 7, scope: !1006)
!1011 = !DILocation(line: 378, column: 5, scope: !1006)
!1012 = !DILocation(line: 379, column: 14, scope: !959)
!1013 = !DILocation(line: 379, column: 5, scope: !959)
!1014 = !DILocation(line: 382, column: 17, scope: !959)
!1015 = !DILocation(line: 382, column: 23, scope: !959)
!1016 = !DILocation(line: 382, column: 5, scope: !959)
!1017 = !DILocation(line: 385, column: 5, scope: !959)
!1018 = !DILocation(line: 388, column: 5, scope: !959)
!1019 = !DILocation(line: 389, column: 14, scope: !1020)
!1020 = distinct !DILexicalBlock(scope: !959, file: !3, line: 389, column: 10)
!1021 = !DILocation(line: 389, column: 20, scope: !1020)
!1022 = !DILocation(line: 389, column: 23, scope: !1020)
!1023 = !DILocation(line: 389, column: 10, scope: !959)
!1024 = !DILocation(line: 391, column: 2, scope: !1025)
!1025 = distinct !DILexicalBlock(scope: !1020, file: !3, line: 390, column: 2)
!1026 = !DILocation(line: 392, column: 18, scope: !1025)
!1027 = !DILocation(line: 392, column: 64, scope: !1025)
!1028 = !DILocation(line: 392, column: 9, scope: !1025)
!1029 = !DILocation(line: 393, column: 2, scope: !1025)
!1030 = !DILocation(line: 397, column: 18, scope: !959)
!1031 = !DILocation(line: 398, column: 18, scope: !959)
!1032 = !DILocation(line: 399, column: 15, scope: !959)
!1033 = !DILocation(line: 400, column: 10, scope: !1034)
!1034 = distinct !DILexicalBlock(scope: !959, file: !3, line: 400, column: 10)
!1035 = !DILocation(line: 400, column: 23, scope: !1034)
!1036 = !DILocation(line: 400, column: 10, scope: !959)
!1037 = !DILocation(line: 401, column: 21, scope: !1034)
!1038 = !DILocation(line: 401, column: 2, scope: !1034)
!1039 = !DILocation(line: 406, column: 10, scope: !1040)
!1040 = distinct !DILexicalBlock(scope: !959, file: !3, line: 406, column: 10)
!1041 = !DILocation(line: 406, column: 19, scope: !1040)
!1042 = !DILocation(line: 406, column: 10, scope: !959)
!1043 = !DILocation(line: 408, column: 18, scope: !1044)
!1044 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 407, column: 2)
!1045 = !DILocation(line: 408, column: 8, scope: !1044)
!1046 = !DILocation(line: 408, column: 6, scope: !1044)
!1047 = !DILocation(line: 409, column: 7, scope: !1048)
!1048 = distinct !DILexicalBlock(scope: !1044, file: !3, line: 409, column: 7)
!1049 = !DILocation(line: 409, column: 11, scope: !1048)
!1050 = !DILocation(line: 409, column: 7, scope: !1044)
!1051 = !DILocation(line: 411, column: 50, scope: !1052)
!1052 = distinct !DILexicalBlock(scope: !1048, file: !3, line: 410, column: 6)
!1053 = !DILocation(line: 411, column: 6, scope: !1052)
!1054 = !DILocation(line: 412, column: 22, scope: !1052)
!1055 = !DILocation(line: 412, column: 59, scope: !1052)
!1056 = !DILocation(line: 412, column: 66, scope: !1052)
!1057 = !DILocation(line: 412, column: 13, scope: !1052)
!1058 = !DILocation(line: 413, column: 6, scope: !1052)
!1059 = !DILocation(line: 415, column: 8, scope: !1044)
!1060 = !DILocation(line: 415, column: 13, scope: !1044)
!1061 = !DILocation(line: 415, column: 6, scope: !1044)
!1062 = !DILocation(line: 416, column: 8, scope: !1044)
!1063 = !DILocation(line: 416, column: 13, scope: !1044)
!1064 = !DILocation(line: 416, column: 6, scope: !1044)
!1065 = !DILocation(line: 417, column: 2, scope: !1044)
!1066 = !DILocation(line: 420, column: 10, scope: !1067)
!1067 = distinct !DILexicalBlock(scope: !959, file: !3, line: 420, column: 10)
!1068 = !DILocation(line: 420, column: 18, scope: !1067)
!1069 = !DILocation(line: 420, column: 10, scope: !959)
!1070 = !DILocation(line: 422, column: 15, scope: !1071)
!1071 = distinct !DILexicalBlock(scope: !1072, file: !3, line: 422, column: 7)
!1072 = distinct !DILexicalBlock(scope: !1067, file: !3, line: 421, column: 2)
!1073 = !DILocation(line: 422, column: 7, scope: !1071)
!1074 = !DILocation(line: 422, column: 38, scope: !1071)
!1075 = !DILocation(line: 422, column: 7, scope: !1072)
!1076 = !DILocation(line: 424, column: 13, scope: !1077)
!1077 = distinct !DILexicalBlock(scope: !1071, file: !3, line: 423, column: 6)
!1078 = !DILocation(line: 425, column: 12, scope: !1077)
!1079 = !DILocation(line: 426, column: 6, scope: !1077)
!1080 = !DILocation(line: 427, column: 20, scope: !1081)
!1081 = distinct !DILexicalBlock(scope: !1071, file: !3, line: 427, column: 12)
!1082 = !DILocation(line: 427, column: 12, scope: !1081)
!1083 = !DILocation(line: 427, column: 35, scope: !1081)
!1084 = !DILocation(line: 427, column: 12, scope: !1071)
!1085 = !DILocation(line: 428, column: 14, scope: !1081)
!1086 = !DILocation(line: 428, column: 12, scope: !1081)
!1087 = !DILocation(line: 428, column: 6, scope: !1081)
!1088 = !DILocation(line: 431, column: 21, scope: !1089)
!1089 = distinct !DILexicalBlock(scope: !1081, file: !3, line: 430, column: 6)
!1090 = !DILocation(line: 431, column: 14, scope: !1089)
!1091 = !DILocation(line: 431, column: 12, scope: !1089)
!1092 = !DILocation(line: 432, column: 11, scope: !1093)
!1093 = distinct !DILexicalBlock(scope: !1089, file: !3, line: 432, column: 11)
!1094 = !DILocation(line: 432, column: 17, scope: !1093)
!1095 = !DILocation(line: 432, column: 11, scope: !1089)
!1096 = !DILocation(line: 434, column: 35, scope: !1097)
!1097 = distinct !DILexicalBlock(scope: !1093, file: !3, line: 433, column: 3)
!1098 = !DILocation(line: 434, column: 3, scope: !1097)
!1099 = !DILocation(line: 435, column: 11, scope: !1097)
!1100 = !DILocation(line: 435, column: 3, scope: !1097)
!1101 = !DILocation(line: 436, column: 3, scope: !1097)
!1102 = !DILocation(line: 438, column: 11, scope: !1103)
!1103 = distinct !DILexicalBlock(scope: !1089, file: !3, line: 438, column: 11)
!1104 = !DILocation(line: 438, column: 22, scope: !1103)
!1105 = !DILocation(line: 438, column: 11, scope: !1089)
!1106 = !DILocation(line: 440, column: 3, scope: !1107)
!1107 = distinct !DILexicalBlock(scope: !1103, file: !3, line: 439, column: 3)
!1108 = !DILocation(line: 441, column: 19, scope: !1107)
!1109 = !DILocation(line: 441, column: 103, scope: !1107)
!1110 = !DILocation(line: 441, column: 10, scope: !1107)
!1111 = !DILocation(line: 442, column: 3, scope: !1107)
!1112 = !DILocation(line: 443, column: 28, scope: !1089)
!1113 = !DILocation(line: 443, column: 20, scope: !1089)
!1114 = !DILocation(line: 443, column: 13, scope: !1089)
!1115 = !DILocation(line: 444, column: 11, scope: !1116)
!1116 = distinct !DILexicalBlock(scope: !1089, file: !3, line: 444, column: 11)
!1117 = !DILocation(line: 444, column: 20, scope: !1116)
!1118 = !DILocation(line: 444, column: 11, scope: !1089)
!1119 = !DILocation(line: 449, column: 24, scope: !1120)
!1120 = distinct !DILexicalBlock(scope: !1121, file: !3, line: 449, column: 8)
!1121 = distinct !DILexicalBlock(scope: !1116, file: !3, line: 445, column: 3)
!1122 = !DILocation(line: 449, column: 16, scope: !1120)
!1123 = !DILocation(line: 449, column: 33, scope: !1120)
!1124 = !DILocation(line: 449, column: 38, scope: !1120)
!1125 = !DILocation(line: 449, column: 8, scope: !1120)
!1126 = !DILocation(line: 449, column: 44, scope: !1120)
!1127 = !DILocation(line: 449, column: 8, scope: !1121)
!1128 = !DILocation(line: 451, column: 7, scope: !1129)
!1129 = distinct !DILexicalBlock(scope: !1120, file: !3, line: 450, column: 7)
!1130 = !DILocation(line: 452, column: 7, scope: !1129)
!1131 = !DILocation(line: 453, column: 7, scope: !1129)
!1132 = !DILocation(line: 454, column: 3, scope: !1121)
!1133 = !DILocation(line: 456, column: 2, scope: !1072)
!1134 = !DILocation(line: 458, column: 8, scope: !1067)
!1135 = !DILocation(line: 461, column: 10, scope: !1136)
!1136 = distinct !DILexicalBlock(scope: !959, file: !3, line: 461, column: 10)
!1137 = !DILocation(line: 461, column: 14, scope: !1136)
!1138 = !DILocation(line: 461, column: 10, scope: !959)
!1139 = !DILocation(line: 463, column: 14, scope: !1140)
!1140 = distinct !DILexicalBlock(scope: !1141, file: !3, line: 463, column: 7)
!1141 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 462, column: 2)
!1142 = !DILocation(line: 463, column: 7, scope: !1140)
!1143 = !DILocation(line: 463, column: 20, scope: !1140)
!1144 = !DILocation(line: 463, column: 7, scope: !1141)
!1145 = !DILocation(line: 465, column: 6, scope: !1146)
!1146 = distinct !DILexicalBlock(scope: !1140, file: !3, line: 464, column: 6)
!1147 = !DILocation(line: 466, column: 6, scope: !1146)
!1148 = !DILocation(line: 467, column: 6, scope: !1146)
!1149 = !DILocation(line: 469, column: 2, scope: !1141)
!1150 = !DILocation(line: 487, column: 20, scope: !959)
!1151 = !DILocation(line: 487, column: 12, scope: !959)
!1152 = !DILocation(line: 488, column: 22, scope: !1153)
!1153 = distinct !DILexicalBlock(scope: !959, file: !3, line: 488, column: 10)
!1154 = !DILocation(line: 488, column: 14, scope: !1153)
!1155 = !DILocation(line: 488, column: 28, scope: !1153)
!1156 = !DILocation(line: 488, column: 10, scope: !1153)
!1157 = !DILocation(line: 488, column: 33, scope: !1153)
!1158 = !DILocation(line: 488, column: 10, scope: !959)
!1159 = !DILocation(line: 489, column: 9, scope: !1153)
!1160 = !DILocation(line: 489, column: 2, scope: !1153)
!1161 = !DILocation(line: 491, column: 12, scope: !1162)
!1162 = distinct !DILexicalBlock(scope: !959, file: !3, line: 491, column: 10)
!1163 = !DILocation(line: 491, column: 10, scope: !959)
!1164 = !DILocation(line: 496, column: 17, scope: !1165)
!1165 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 492, column: 2)
!1166 = !DILocation(line: 496, column: 9, scope: !1165)
!1167 = !DILocation(line: 497, column: 7, scope: !1168)
!1168 = distinct !DILexicalBlock(scope: !1165, file: !3, line: 497, column: 7)
!1169 = !DILocation(line: 497, column: 16, scope: !1168)
!1170 = !DILocation(line: 497, column: 13, scope: !1168)
!1171 = !DILocation(line: 497, column: 7, scope: !1165)
!1172 = !DILocation(line: 498, column: 21, scope: !1168)
!1173 = !DILocation(line: 498, column: 13, scope: !1168)
!1174 = !DILocation(line: 498, column: 6, scope: !1168)
!1175 = !DILocation(line: 499, column: 17, scope: !1165)
!1176 = !DILocation(line: 499, column: 9, scope: !1165)
!1177 = !DILocation(line: 503, column: 7, scope: !1178)
!1178 = distinct !DILexicalBlock(scope: !1165, file: !3, line: 503, column: 7)
!1179 = !DILocation(line: 503, column: 22, scope: !1178)
!1180 = !DILocation(line: 503, column: 7, scope: !1165)
!1181 = !DILocation(line: 505, column: 6, scope: !1182)
!1182 = distinct !DILexicalBlock(scope: !1178, file: !3, line: 504, column: 6)
!1183 = !DILocation(line: 506, column: 6, scope: !1182)
!1184 = !DILocation(line: 523, column: 2, scope: !1165)
!1185 = !DILocation(line: 530, column: 16, scope: !1186)
!1186 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 525, column: 2)
!1187 = !DILocation(line: 534, column: 10, scope: !1188)
!1188 = distinct !DILexicalBlock(scope: !959, file: !3, line: 534, column: 10)
!1189 = !DILocation(line: 534, column: 18, scope: !1188)
!1190 = !DILocation(line: 534, column: 10, scope: !959)
!1191 = !DILocalVariable(name: "pidfp", scope: !1192, file: !3, line: 537, type: !50)
!1192 = distinct !DILexicalBlock(scope: !1188, file: !3, line: 535, column: 2)
!1193 = !DILocation(line: 537, column: 8, scope: !1192)
!1194 = !DILocation(line: 537, column: 23, scope: !1192)
!1195 = !DILocation(line: 537, column: 16, scope: !1192)
!1196 = !DILocation(line: 538, column: 7, scope: !1197)
!1197 = distinct !DILexicalBlock(scope: !1192, file: !3, line: 538, column: 7)
!1198 = !DILocation(line: 538, column: 13, scope: !1197)
!1199 = !DILocation(line: 538, column: 7, scope: !1192)
!1200 = !DILocation(line: 540, column: 38, scope: !1201)
!1201 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 539, column: 6)
!1202 = !DILocation(line: 540, column: 6, scope: !1201)
!1203 = !DILocation(line: 541, column: 6, scope: !1201)
!1204 = !DILocation(line: 543, column: 18, scope: !1192)
!1205 = !DILocation(line: 543, column: 39, scope: !1192)
!1206 = !DILocation(line: 543, column: 9, scope: !1192)
!1207 = !DILocation(line: 544, column: 17, scope: !1192)
!1208 = !DILocation(line: 544, column: 9, scope: !1192)
!1209 = !DILocation(line: 545, column: 2, scope: !1192)
!1210 = !DILocation(line: 550, column: 20, scope: !959)
!1211 = !DILocation(line: 550, column: 18, scope: !959)
!1212 = !DILocation(line: 551, column: 10, scope: !1213)
!1213 = distinct !DILexicalBlock(scope: !959, file: !3, line: 551, column: 10)
!1214 = !DILocation(line: 551, column: 23, scope: !1213)
!1215 = !DILocation(line: 551, column: 10, scope: !959)
!1216 = !DILocation(line: 553, column: 2, scope: !1217)
!1217 = distinct !DILexicalBlock(scope: !1213, file: !3, line: 552, column: 2)
!1218 = !DILocation(line: 554, column: 2, scope: !1217)
!1219 = !DILocation(line: 556, column: 18, scope: !959)
!1220 = !DILocation(line: 559, column: 10, scope: !1221)
!1221 = distinct !DILexicalBlock(scope: !959, file: !3, line: 559, column: 10)
!1222 = !DILocation(line: 559, column: 10, scope: !959)
!1223 = !DILocation(line: 561, column: 15, scope: !1224)
!1224 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 561, column: 7)
!1225 = distinct !DILexicalBlock(scope: !1221, file: !3, line: 560, column: 2)
!1226 = !DILocation(line: 561, column: 7, scope: !1224)
!1227 = !DILocation(line: 561, column: 21, scope: !1224)
!1228 = !DILocation(line: 561, column: 7, scope: !1225)
!1229 = !DILocation(line: 563, column: 6, scope: !1230)
!1230 = distinct !DILexicalBlock(scope: !1224, file: !3, line: 562, column: 6)
!1231 = !DILocation(line: 564, column: 6, scope: !1230)
!1232 = !DILocation(line: 565, column: 6, scope: !1230)
!1233 = !DILocation(line: 572, column: 7, scope: !1234)
!1234 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 572, column: 7)
!1235 = !DILocation(line: 572, column: 15, scope: !1234)
!1236 = !DILocation(line: 572, column: 28, scope: !1234)
!1237 = !DILocation(line: 572, column: 39, scope: !1234)
!1238 = !DILocation(line: 572, column: 31, scope: !1234)
!1239 = !DILocation(line: 572, column: 54, scope: !1234)
!1240 = !DILocation(line: 572, column: 7, scope: !1225)
!1241 = !DILocation(line: 574, column: 20, scope: !1242)
!1242 = distinct !DILexicalBlock(scope: !1243, file: !3, line: 574, column: 11)
!1243 = distinct !DILexicalBlock(scope: !1234, file: !3, line: 573, column: 6)
!1244 = !DILocation(line: 574, column: 29, scope: !1242)
!1245 = !DILocation(line: 574, column: 42, scope: !1242)
!1246 = !DILocation(line: 574, column: 34, scope: !1242)
!1247 = !DILocation(line: 574, column: 11, scope: !1242)
!1248 = !DILocation(line: 574, column: 50, scope: !1242)
!1249 = !DILocation(line: 574, column: 11, scope: !1243)
!1250 = !DILocation(line: 576, column: 10, scope: !1251)
!1251 = distinct !DILexicalBlock(scope: !1242, file: !3, line: 575, column: 3)
!1252 = !DILocation(line: 581, column: 3, scope: !1251)
!1253 = !DILocation(line: 584, column: 3, scope: !1254)
!1254 = distinct !DILexicalBlock(scope: !1242, file: !3, line: 583, column: 3)
!1255 = !DILocation(line: 585, column: 19, scope: !1254)
!1256 = !DILocation(line: 585, column: 110, scope: !1254)
!1257 = !DILocation(line: 585, column: 10, scope: !1254)
!1258 = !DILocation(line: 587, column: 6, scope: !1243)
!1259 = !DILocation(line: 588, column: 9, scope: !1225)
!1260 = !DILocation(line: 590, column: 14, scope: !1261)
!1261 = distinct !DILexicalBlock(scope: !1225, file: !3, line: 590, column: 7)
!1262 = !DILocation(line: 590, column: 7, scope: !1261)
!1263 = !DILocation(line: 590, column: 20, scope: !1261)
!1264 = !DILocation(line: 590, column: 7, scope: !1225)
!1265 = !DILocation(line: 592, column: 6, scope: !1266)
!1266 = distinct !DILexicalBlock(scope: !1261, file: !3, line: 591, column: 6)
!1267 = !DILocation(line: 593, column: 6, scope: !1266)
!1268 = !DILocation(line: 594, column: 6, scope: !1266)
!1269 = !DILocation(line: 596, column: 2, scope: !1225)
!1270 = !DILocation(line: 599, column: 10, scope: !1271)
!1271 = distinct !DILexicalBlock(scope: !959, file: !3, line: 599, column: 10)
!1272 = !DILocation(line: 599, column: 19, scope: !1271)
!1273 = !DILocation(line: 599, column: 10, scope: !959)
!1274 = !DILocation(line: 601, column: 14, scope: !1275)
!1275 = distinct !DILexicalBlock(scope: !1276, file: !3, line: 601, column: 7)
!1276 = distinct !DILexicalBlock(scope: !1271, file: !3, line: 600, column: 2)
!1277 = !DILocation(line: 601, column: 7, scope: !1275)
!1278 = !DILocation(line: 601, column: 25, scope: !1275)
!1279 = !DILocation(line: 601, column: 7, scope: !1276)
!1280 = !DILocation(line: 603, column: 6, scope: !1281)
!1281 = distinct !DILexicalBlock(scope: !1275, file: !3, line: 602, column: 6)
!1282 = !DILocation(line: 604, column: 6, scope: !1281)
!1283 = !DILocation(line: 605, column: 6, scope: !1281)
!1284 = !DILocation(line: 607, column: 2, scope: !1276)
!1285 = !DILocation(line: 611, column: 12, scope: !959)
!1286 = !DILocation(line: 612, column: 12, scope: !959)
!1287 = !DILocation(line: 613, column: 12, scope: !959)
!1288 = !DILocation(line: 614, column: 12, scope: !959)
!1289 = !DILocation(line: 615, column: 12, scope: !959)
!1290 = !DILocation(line: 616, column: 12, scope: !959)
!1291 = !DILocation(line: 617, column: 12, scope: !959)
!1292 = !DILocation(line: 618, column: 12, scope: !959)
!1293 = !DILocation(line: 629, column: 13, scope: !959)
!1294 = !DILocation(line: 630, column: 14, scope: !959)
!1295 = !DILocation(line: 631, column: 19, scope: !959)
!1296 = !DILocation(line: 632, column: 12, scope: !959)
!1297 = !DILocation(line: 635, column: 5, scope: !959)
!1298 = !DILocation(line: 641, column: 2, scope: !959)
!1299 = !DILocation(line: 642, column: 2, scope: !959)
!1300 = !DILocation(line: 642, column: 38, scope: !959)
!1301 = !DILocation(line: 643, column: 2, scope: !959)
!1302 = !DILocation(line: 643, column: 8, scope: !959)
!1303 = !DILocation(line: 643, column: 21, scope: !959)
!1304 = !DILocation(line: 643, column: 32, scope: !959)
!1305 = !DILocation(line: 643, column: 41, scope: !959)
!1306 = !DILocation(line: 643, column: 46, scope: !959)
!1307 = !DILocation(line: 643, column: 55, scope: !959)
!1308 = !DILocation(line: 643, column: 60, scope: !959)
!1309 = !DILocation(line: 643, column: 68, scope: !959)
!1310 = !DILocation(line: 644, column: 2, scope: !959)
!1311 = !DILocation(line: 644, column: 20, scope: !959)
!1312 = !DILocation(line: 644, column: 30, scope: !959)
!1313 = !DILocation(line: 644, column: 48, scope: !959)
!1314 = !DILocation(line: 645, column: 2, scope: !959)
!1315 = !DILocation(line: 645, column: 17, scope: !959)
!1316 = !DILocation(line: 640, column: 10, scope: !959)
!1317 = !DILocation(line: 640, column: 8, scope: !959)
!1318 = !DILocation(line: 646, column: 10, scope: !1319)
!1319 = distinct !DILexicalBlock(scope: !959, file: !3, line: 646, column: 10)
!1320 = !DILocation(line: 646, column: 13, scope: !1319)
!1321 = !DILocation(line: 646, column: 10, scope: !959)
!1322 = !DILocation(line: 647, column: 2, scope: !1319)
!1323 = !DILocation(line: 650, column: 10, scope: !1324)
!1324 = distinct !DILexicalBlock(scope: !959, file: !3, line: 650, column: 10)
!1325 = !DILocation(line: 650, column: 100, scope: !1324)
!1326 = !DILocation(line: 650, column: 10, scope: !959)
!1327 = !DILocation(line: 652, column: 2, scope: !1328)
!1328 = distinct !DILexicalBlock(scope: !1324, file: !3, line: 651, column: 2)
!1329 = !DILocation(line: 653, column: 2, scope: !1328)
!1330 = !DILocation(line: 656, column: 10, scope: !1331)
!1331 = distinct !DILexicalBlock(scope: !959, file: !3, line: 656, column: 10)
!1332 = !DILocation(line: 656, column: 80, scope: !1331)
!1333 = !DILocation(line: 656, column: 10, scope: !959)
!1334 = !DILocation(line: 658, column: 2, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1331, file: !3, line: 657, column: 2)
!1336 = !DILocation(line: 659, column: 2, scope: !1335)
!1337 = !DILocation(line: 661, column: 10, scope: !1338)
!1338 = distinct !DILexicalBlock(scope: !959, file: !3, line: 661, column: 10)
!1339 = !DILocation(line: 661, column: 23, scope: !1338)
!1340 = !DILocation(line: 661, column: 10, scope: !959)
!1341 = !DILocation(line: 664, column: 7, scope: !1342)
!1342 = distinct !DILexicalBlock(scope: !1343, file: !3, line: 664, column: 7)
!1343 = distinct !DILexicalBlock(scope: !1338, file: !3, line: 662, column: 2)
!1344 = !DILocation(line: 664, column: 101, scope: !1342)
!1345 = !DILocation(line: 664, column: 7, scope: !1343)
!1346 = !DILocation(line: 666, column: 6, scope: !1347)
!1347 = distinct !DILexicalBlock(scope: !1342, file: !3, line: 665, column: 6)
!1348 = !DILocation(line: 667, column: 6, scope: !1347)
!1349 = !DILocation(line: 669, column: 2, scope: !1343)
!1350 = !DILocation(line: 672, column: 10, scope: !1351)
!1351 = distinct !DILexicalBlock(scope: !959, file: !3, line: 672, column: 10)
!1352 = !DILocation(line: 672, column: 95, scope: !1351)
!1353 = !DILocation(line: 672, column: 10, scope: !959)
!1354 = !DILocation(line: 674, column: 2, scope: !1355)
!1355 = distinct !DILexicalBlock(scope: !1351, file: !3, line: 673, column: 2)
!1356 = !DILocation(line: 675, column: 2, scope: !1355)
!1357 = !DILocation(line: 678, column: 31, scope: !959)
!1358 = !DILocation(line: 678, column: 29, scope: !959)
!1359 = !DILocation(line: 678, column: 16, scope: !959)
!1360 = !DILocation(line: 679, column: 23, scope: !959)
!1361 = !DILocation(line: 680, column: 17, scope: !959)
!1362 = !DILocation(line: 681, column: 24, scope: !959)
!1363 = !DILocation(line: 684, column: 10, scope: !1364)
!1364 = distinct !DILexicalBlock(scope: !959, file: !3, line: 684, column: 10)
!1365 = !DILocation(line: 684, column: 19, scope: !1364)
!1366 = !DILocation(line: 684, column: 10, scope: !959)
!1367 = !DILocation(line: 687, column: 7, scope: !1368)
!1368 = distinct !DILexicalBlock(scope: !1369, file: !3, line: 687, column: 7)
!1369 = distinct !DILexicalBlock(scope: !1364, file: !3, line: 685, column: 2)
!1370 = !DILocation(line: 687, column: 40, scope: !1368)
!1371 = !DILocation(line: 687, column: 7, scope: !1369)
!1372 = !DILocation(line: 689, column: 6, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1368, file: !3, line: 688, column: 6)
!1374 = !DILocation(line: 690, column: 6, scope: !1373)
!1375 = !DILocation(line: 693, column: 15, scope: !1376)
!1376 = distinct !DILexicalBlock(scope: !1369, file: !3, line: 693, column: 7)
!1377 = !DILocation(line: 693, column: 7, scope: !1376)
!1378 = !DILocation(line: 693, column: 21, scope: !1376)
!1379 = !DILocation(line: 693, column: 7, scope: !1369)
!1380 = !DILocation(line: 695, column: 6, scope: !1381)
!1381 = distinct !DILexicalBlock(scope: !1376, file: !3, line: 694, column: 6)
!1382 = !DILocation(line: 696, column: 6, scope: !1381)
!1383 = !DILocation(line: 699, column: 19, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1369, file: !3, line: 699, column: 7)
!1385 = !DILocation(line: 699, column: 25, scope: !1384)
!1386 = !DILocation(line: 699, column: 7, scope: !1384)
!1387 = !DILocation(line: 699, column: 31, scope: !1384)
!1388 = !DILocation(line: 699, column: 7, scope: !1369)
!1389 = !DILocation(line: 700, column: 6, scope: !1384)
!1390 = !DILocation(line: 703, column: 26, scope: !1369)
!1391 = !DILocation(line: 703, column: 16, scope: !1369)
!1392 = !DILocation(line: 706, column: 15, scope: !1393)
!1393 = distinct !DILexicalBlock(scope: !1369, file: !3, line: 706, column: 7)
!1394 = !DILocation(line: 706, column: 7, scope: !1393)
!1395 = !DILocation(line: 706, column: 21, scope: !1393)
!1396 = !DILocation(line: 706, column: 7, scope: !1369)
!1397 = !DILocation(line: 708, column: 6, scope: !1398)
!1398 = distinct !DILexicalBlock(scope: !1393, file: !3, line: 707, column: 6)
!1399 = !DILocation(line: 709, column: 6, scope: !1398)
!1400 = !DILocation(line: 712, column: 9, scope: !1401)
!1401 = distinct !DILexicalBlock(scope: !1369, file: !3, line: 712, column: 7)
!1402 = !DILocation(line: 712, column: 7, scope: !1369)
!1403 = !DILocation(line: 713, column: 6, scope: !1401)
!1404 = !DILocation(line: 716, column: 2, scope: !1369)
!1405 = !DILocation(line: 719, column: 16, scope: !959)
!1406 = !DILocation(line: 719, column: 14, scope: !959)
!1407 = !DILocation(line: 720, column: 10, scope: !1408)
!1408 = distinct !DILexicalBlock(scope: !959, file: !3, line: 720, column: 10)
!1409 = !DILocation(line: 720, column: 19, scope: !1408)
!1410 = !DILocation(line: 720, column: 10, scope: !959)
!1411 = !DILocation(line: 722, column: 2, scope: !1412)
!1412 = distinct !DILexicalBlock(scope: !1408, file: !3, line: 721, column: 2)
!1413 = !DILocation(line: 723, column: 2, scope: !1412)
!1414 = !DILocation(line: 725, column: 16, scope: !1415)
!1415 = distinct !DILexicalBlock(scope: !959, file: !3, line: 725, column: 5)
!1416 = !DILocation(line: 725, column: 11, scope: !1415)
!1417 = !DILocation(line: 725, column: 21, scope: !1418)
!1418 = distinct !DILexicalBlock(scope: !1415, file: !3, line: 725, column: 5)
!1419 = !DILocation(line: 725, column: 28, scope: !1418)
!1420 = !DILocation(line: 725, column: 26, scope: !1418)
!1421 = !DILocation(line: 725, column: 5, scope: !1415)
!1422 = !DILocation(line: 727, column: 2, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1418, file: !3, line: 726, column: 2)
!1424 = !DILocation(line: 727, column: 11, scope: !1423)
!1425 = !DILocation(line: 727, column: 17, scope: !1423)
!1426 = !DILocation(line: 727, column: 28, scope: !1423)
!1427 = !DILocation(line: 728, column: 37, scope: !1423)
!1428 = !DILocation(line: 728, column: 42, scope: !1423)
!1429 = !DILocation(line: 728, column: 2, scope: !1423)
!1430 = !DILocation(line: 728, column: 11, scope: !1423)
!1431 = !DILocation(line: 728, column: 17, scope: !1423)
!1432 = !DILocation(line: 728, column: 35, scope: !1423)
!1433 = !DILocation(line: 729, column: 2, scope: !1423)
!1434 = !DILocation(line: 729, column: 11, scope: !1423)
!1435 = !DILocation(line: 729, column: 17, scope: !1423)
!1436 = !DILocation(line: 729, column: 20, scope: !1423)
!1437 = !DILocation(line: 730, column: 2, scope: !1423)
!1438 = !DILocation(line: 725, column: 42, scope: !1418)
!1439 = !DILocation(line: 725, column: 5, scope: !1418)
!1440 = distinct !{!1440, !1421, !1441}
!1441 = !DILocation(line: 730, column: 2, scope: !1415)
!1442 = !DILocation(line: 731, column: 5, scope: !959)
!1443 = !DILocation(line: 731, column: 14, scope: !959)
!1444 = !DILocation(line: 731, column: 27, scope: !959)
!1445 = !DILocation(line: 731, column: 32, scope: !959)
!1446 = !DILocation(line: 731, column: 50, scope: !959)
!1447 = !DILocation(line: 732, column: 24, scope: !959)
!1448 = !DILocation(line: 733, column: 18, scope: !959)
!1449 = !DILocation(line: 734, column: 22, scope: !959)
!1450 = !DILocation(line: 736, column: 10, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !959, file: !3, line: 736, column: 10)
!1452 = !DILocation(line: 736, column: 13, scope: !1451)
!1453 = !DILocation(line: 736, column: 10, scope: !959)
!1454 = !DILocation(line: 738, column: 7, scope: !1455)
!1455 = distinct !DILexicalBlock(scope: !1456, file: !3, line: 738, column: 7)
!1456 = distinct !DILexicalBlock(scope: !1451, file: !3, line: 737, column: 2)
!1457 = !DILocation(line: 738, column: 11, scope: !1455)
!1458 = !DILocation(line: 738, column: 22, scope: !1455)
!1459 = !DILocation(line: 738, column: 7, scope: !1456)
!1460 = !DILocation(line: 739, column: 22, scope: !1455)
!1461 = !DILocation(line: 739, column: 26, scope: !1455)
!1462 = !DILocation(line: 739, column: 6, scope: !1455)
!1463 = !DILocation(line: 740, column: 7, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !1456, file: !3, line: 740, column: 7)
!1465 = !DILocation(line: 740, column: 11, scope: !1464)
!1466 = !DILocation(line: 740, column: 22, scope: !1464)
!1467 = !DILocation(line: 740, column: 7, scope: !1456)
!1468 = !DILocation(line: 741, column: 22, scope: !1464)
!1469 = !DILocation(line: 741, column: 26, scope: !1464)
!1470 = !DILocation(line: 741, column: 6, scope: !1464)
!1471 = !DILocation(line: 742, column: 2, scope: !1456)
!1472 = !DILocation(line: 745, column: 12, scope: !959)
!1473 = !DILocation(line: 746, column: 5, scope: !959)
!1474 = !DILocation(line: 746, column: 17, scope: !959)
!1475 = !DILocation(line: 746, column: 29, scope: !959)
!1476 = !DILocation(line: 746, column: 32, scope: !959)
!1477 = !DILocation(line: 746, column: 45, scope: !959)
!1478 = !DILocation(line: 749, column: 7, scope: !1479)
!1479 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 749, column: 7)
!1480 = distinct !DILexicalBlock(scope: !959, file: !3, line: 747, column: 2)
!1481 = !DILocation(line: 749, column: 7, scope: !1480)
!1482 = !DILocation(line: 751, column: 6, scope: !1483)
!1483 = distinct !DILexicalBlock(scope: !1479, file: !3, line: 750, column: 6)
!1484 = !DILocation(line: 752, column: 14, scope: !1483)
!1485 = !DILocation(line: 753, column: 6, scope: !1483)
!1486 = !DILocation(line: 756, column: 23, scope: !1480)
!1487 = !DILocation(line: 756, column: 14, scope: !1480)
!1488 = !DILocation(line: 756, column: 12, scope: !1480)
!1489 = !DILocation(line: 757, column: 7, scope: !1490)
!1490 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 757, column: 7)
!1491 = !DILocation(line: 757, column: 17, scope: !1490)
!1492 = !DILocation(line: 757, column: 7, scope: !1480)
!1493 = !DILocation(line: 759, column: 11, scope: !1494)
!1494 = distinct !DILexicalBlock(scope: !1495, file: !3, line: 759, column: 11)
!1495 = distinct !DILexicalBlock(scope: !1490, file: !3, line: 758, column: 6)
!1496 = !DILocation(line: 759, column: 17, scope: !1494)
!1497 = !DILocation(line: 759, column: 26, scope: !1494)
!1498 = !DILocation(line: 759, column: 29, scope: !1494)
!1499 = !DILocation(line: 759, column: 35, scope: !1494)
!1500 = !DILocation(line: 759, column: 11, scope: !1495)
!1501 = !DILocation(line: 760, column: 3, scope: !1494)
!1502 = distinct !{!1502, !1473, !1503}
!1503 = !DILocation(line: 826, column: 2, scope: !959)
!1504 = !DILocation(line: 761, column: 6, scope: !1495)
!1505 = !DILocation(line: 762, column: 6, scope: !1495)
!1506 = !DILocation(line: 764, column: 9, scope: !1480)
!1507 = !DILocation(line: 766, column: 7, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 766, column: 7)
!1509 = !DILocation(line: 766, column: 17, scope: !1508)
!1510 = !DILocation(line: 766, column: 7, scope: !1480)
!1511 = !DILocation(line: 769, column: 6, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !1508, file: !3, line: 767, column: 6)
!1513 = !DILocation(line: 770, column: 6, scope: !1512)
!1514 = !DILocation(line: 774, column: 7, scope: !1515)
!1515 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 774, column: 7)
!1516 = !DILocation(line: 774, column: 10, scope: !1515)
!1517 = !DILocation(line: 774, column: 31, scope: !1515)
!1518 = !DILocation(line: 774, column: 34, scope: !1515)
!1519 = !DILocation(line: 774, column: 38, scope: !1515)
!1520 = !DILocation(line: 774, column: 49, scope: !1515)
!1521 = !DILocation(line: 774, column: 55, scope: !1515)
!1522 = !DILocation(line: 775, column: 25, scope: !1515)
!1523 = !DILocation(line: 775, column: 29, scope: !1515)
!1524 = !DILocation(line: 775, column: 7, scope: !1515)
!1525 = !DILocation(line: 774, column: 7, scope: !1480)
!1526 = !DILocation(line: 777, column: 35, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1528, file: !3, line: 777, column: 11)
!1528 = distinct !DILexicalBlock(scope: !1515, file: !3, line: 776, column: 6)
!1529 = !DILocation(line: 777, column: 39, scope: !1527)
!1530 = !DILocation(line: 777, column: 11, scope: !1527)
!1531 = !DILocation(line: 777, column: 11, scope: !1528)
!1532 = !DILocation(line: 782, column: 3, scope: !1527)
!1533 = !DILocation(line: 783, column: 6, scope: !1528)
!1534 = !DILocation(line: 784, column: 7, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 784, column: 7)
!1536 = !DILocation(line: 784, column: 10, scope: !1535)
!1537 = !DILocation(line: 784, column: 31, scope: !1535)
!1538 = !DILocation(line: 784, column: 34, scope: !1535)
!1539 = !DILocation(line: 784, column: 38, scope: !1535)
!1540 = !DILocation(line: 784, column: 49, scope: !1535)
!1541 = !DILocation(line: 784, column: 55, scope: !1535)
!1542 = !DILocation(line: 785, column: 25, scope: !1535)
!1543 = !DILocation(line: 785, column: 29, scope: !1535)
!1544 = !DILocation(line: 785, column: 7, scope: !1535)
!1545 = !DILocation(line: 784, column: 7, scope: !1480)
!1546 = !DILocation(line: 787, column: 35, scope: !1547)
!1547 = distinct !DILexicalBlock(scope: !1548, file: !3, line: 787, column: 11)
!1548 = distinct !DILexicalBlock(scope: !1535, file: !3, line: 786, column: 6)
!1549 = !DILocation(line: 787, column: 39, scope: !1547)
!1550 = !DILocation(line: 787, column: 11, scope: !1547)
!1551 = !DILocation(line: 787, column: 11, scope: !1548)
!1552 = !DILocation(line: 792, column: 3, scope: !1547)
!1553 = !DILocation(line: 793, column: 6, scope: !1548)
!1554 = !DILocation(line: 796, column: 2, scope: !1480)
!1555 = !DILocation(line: 796, column: 30, scope: !1480)
!1556 = !DILocation(line: 796, column: 16, scope: !1480)
!1557 = !DILocation(line: 796, column: 14, scope: !1480)
!1558 = !DILocation(line: 796, column: 63, scope: !1480)
!1559 = !DILocation(line: 798, column: 11, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !1561, file: !3, line: 798, column: 11)
!1561 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 797, column: 6)
!1562 = !DILocation(line: 798, column: 13, scope: !1560)
!1563 = !DILocation(line: 798, column: 11, scope: !1561)
!1564 = !DILocation(line: 799, column: 3, scope: !1560)
!1565 = distinct !{!1565, !1554, !1566}
!1566 = !DILocation(line: 811, column: 6, scope: !1480)
!1567 = !DILocation(line: 800, column: 11, scope: !1561)
!1568 = !DILocation(line: 800, column: 14, scope: !1561)
!1569 = !DILocation(line: 800, column: 9, scope: !1561)
!1570 = !DILocation(line: 801, column: 31, scope: !1571)
!1571 = distinct !DILexicalBlock(scope: !1561, file: !3, line: 801, column: 11)
!1572 = !DILocation(line: 801, column: 35, scope: !1571)
!1573 = !DILocation(line: 801, column: 13, scope: !1571)
!1574 = !DILocation(line: 801, column: 11, scope: !1561)
!1575 = !DILocation(line: 803, column: 21, scope: !1571)
!1576 = !DILocation(line: 803, column: 3, scope: !1571)
!1577 = !DILocation(line: 805, column: 12, scope: !1571)
!1578 = !DILocation(line: 805, column: 15, scope: !1571)
!1579 = !DILocation(line: 805, column: 3, scope: !1571)
!1580 = !DILocation(line: 807, column: 39, scope: !1581)
!1581 = distinct !DILexicalBlock(scope: !1571, file: !3, line: 806, column: 7)
!1582 = !DILocation(line: 807, column: 26, scope: !1581)
!1583 = !DILocation(line: 807, column: 49, scope: !1581)
!1584 = !DILocation(line: 808, column: 39, scope: !1581)
!1585 = !DILocation(line: 808, column: 26, scope: !1581)
!1586 = !DILocation(line: 808, column: 49, scope: !1581)
!1587 = !DILocation(line: 809, column: 43, scope: !1581)
!1588 = !DILocation(line: 809, column: 28, scope: !1581)
!1589 = !DILocation(line: 809, column: 53, scope: !1581)
!1590 = !DILocation(line: 812, column: 2, scope: !1480)
!1591 = !DILocation(line: 814, column: 7, scope: !1592)
!1592 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 814, column: 7)
!1593 = !DILocation(line: 814, column: 16, scope: !1592)
!1594 = !DILocation(line: 814, column: 21, scope: !1592)
!1595 = !DILocation(line: 814, column: 7, scope: !1480)
!1596 = !DILocation(line: 816, column: 16, scope: !1597)
!1597 = distinct !DILexicalBlock(scope: !1592, file: !3, line: 815, column: 6)
!1598 = !DILocation(line: 817, column: 11, scope: !1599)
!1599 = distinct !DILexicalBlock(scope: !1597, file: !3, line: 817, column: 11)
!1600 = !DILocation(line: 817, column: 14, scope: !1599)
!1601 = !DILocation(line: 817, column: 11, scope: !1597)
!1602 = !DILocation(line: 819, column: 8, scope: !1603)
!1603 = distinct !DILexicalBlock(scope: !1604, file: !3, line: 819, column: 8)
!1604 = distinct !DILexicalBlock(scope: !1599, file: !3, line: 818, column: 3)
!1605 = !DILocation(line: 819, column: 12, scope: !1603)
!1606 = !DILocation(line: 819, column: 23, scope: !1603)
!1607 = !DILocation(line: 819, column: 8, scope: !1604)
!1608 = !DILocation(line: 820, column: 23, scope: !1603)
!1609 = !DILocation(line: 820, column: 27, scope: !1603)
!1610 = !DILocation(line: 820, column: 7, scope: !1603)
!1611 = !DILocation(line: 821, column: 8, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1604, file: !3, line: 821, column: 8)
!1613 = !DILocation(line: 821, column: 12, scope: !1612)
!1614 = !DILocation(line: 821, column: 23, scope: !1612)
!1615 = !DILocation(line: 821, column: 8, scope: !1604)
!1616 = !DILocation(line: 822, column: 23, scope: !1612)
!1617 = !DILocation(line: 822, column: 27, scope: !1612)
!1618 = !DILocation(line: 822, column: 7, scope: !1612)
!1619 = !DILocation(line: 823, column: 19, scope: !1604)
!1620 = !DILocation(line: 823, column: 3, scope: !1604)
!1621 = !DILocation(line: 824, column: 3, scope: !1604)
!1622 = !DILocation(line: 825, column: 6, scope: !1597)
!1623 = !DILocation(line: 829, column: 5, scope: !959)
!1624 = !DILocation(line: 830, column: 5, scope: !959)
!1625 = !DILocation(line: 831, column: 5, scope: !959)
!1626 = !DILocation(line: 832, column: 5, scope: !959)
!1627 = distinct !DISubprogram(name: "parse_args", scope: !3, file: !3, line: 837, type: !1628, scopeLine: 838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{null, !26, !635}
!1630 = !DILocalVariable(name: "argc", arg: 1, scope: !1627, file: !3, line: 837, type: !26)
!1631 = !DILocation(line: 837, column: 17, scope: !1627)
!1632 = !DILocalVariable(name: "argv", arg: 2, scope: !1627, file: !3, line: 837, type: !635)
!1633 = !DILocation(line: 837, column: 30, scope: !1627)
!1634 = !DILocalVariable(name: "argn", scope: !1627, file: !3, line: 839, type: !26)
!1635 = !DILocation(line: 839, column: 9, scope: !1627)
!1636 = !DILocation(line: 841, column: 11, scope: !1627)
!1637 = !DILocation(line: 842, column: 10, scope: !1627)
!1638 = !DILocation(line: 843, column: 9, scope: !1627)
!1639 = !DILocation(line: 844, column: 14, scope: !1627)
!1640 = !DILocation(line: 848, column: 15, scope: !1627)
!1641 = !DILocation(line: 850, column: 12, scope: !1627)
!1642 = !DILocation(line: 851, column: 24, scope: !1627)
!1643 = !DILocation(line: 851, column: 22, scope: !1627)
!1644 = !DILocation(line: 855, column: 14, scope: !1627)
!1645 = !DILocation(line: 860, column: 22, scope: !1627)
!1646 = !DILocation(line: 865, column: 17, scope: !1627)
!1647 = !DILocation(line: 870, column: 15, scope: !1627)
!1648 = !DILocation(line: 872, column: 17, scope: !1627)
!1649 = !DILocation(line: 873, column: 24, scope: !1627)
!1650 = !DILocation(line: 874, column: 19, scope: !1627)
!1651 = !DILocation(line: 875, column: 18, scope: !1627)
!1652 = !DILocation(line: 876, column: 14, scope: !1627)
!1653 = !DILocation(line: 877, column: 13, scope: !1627)
!1654 = !DILocation(line: 878, column: 13, scope: !1627)
!1655 = !DILocation(line: 879, column: 10, scope: !1627)
!1656 = !DILocation(line: 880, column: 13, scope: !1627)
!1657 = !DILocation(line: 881, column: 9, scope: !1627)
!1658 = !DILocation(line: 882, column: 13, scope: !1627)
!1659 = !DILocation(line: 883, column: 10, scope: !1627)
!1660 = !DILocation(line: 884, column: 5, scope: !1627)
!1661 = !DILocation(line: 884, column: 13, scope: !1627)
!1662 = !DILocation(line: 884, column: 20, scope: !1627)
!1663 = !DILocation(line: 884, column: 18, scope: !1627)
!1664 = !DILocation(line: 884, column: 25, scope: !1627)
!1665 = !DILocation(line: 884, column: 28, scope: !1627)
!1666 = !DILocation(line: 884, column: 33, scope: !1627)
!1667 = !DILocation(line: 884, column: 42, scope: !1627)
!1668 = !DILocation(line: 0, scope: !1627)
!1669 = !DILocation(line: 886, column: 15, scope: !1670)
!1670 = distinct !DILexicalBlock(scope: !1671, file: !3, line: 886, column: 7)
!1671 = distinct !DILexicalBlock(scope: !1627, file: !3, line: 885, column: 2)
!1672 = !DILocation(line: 886, column: 20, scope: !1670)
!1673 = !DILocation(line: 886, column: 7, scope: !1670)
!1674 = !DILocation(line: 886, column: 34, scope: !1670)
!1675 = !DILocation(line: 886, column: 7, scope: !1671)
!1676 = !DILocation(line: 888, column: 13, scope: !1677)
!1677 = distinct !DILexicalBlock(scope: !1670, file: !3, line: 887, column: 6)
!1678 = !DILocation(line: 889, column: 6, scope: !1677)
!1679 = !DILocation(line: 891, column: 20, scope: !1680)
!1680 = distinct !DILexicalBlock(scope: !1670, file: !3, line: 891, column: 12)
!1681 = !DILocation(line: 891, column: 25, scope: !1680)
!1682 = !DILocation(line: 891, column: 12, scope: !1680)
!1683 = !DILocation(line: 891, column: 39, scope: !1680)
!1684 = !DILocation(line: 891, column: 44, scope: !1680)
!1685 = !DILocation(line: 891, column: 47, scope: !1680)
!1686 = !DILocation(line: 891, column: 52, scope: !1680)
!1687 = !DILocation(line: 891, column: 58, scope: !1680)
!1688 = !DILocation(line: 891, column: 56, scope: !1680)
!1689 = !DILocation(line: 891, column: 12, scope: !1670)
!1690 = !DILocation(line: 893, column: 6, scope: !1691)
!1691 = distinct !DILexicalBlock(scope: !1680, file: !3, line: 892, column: 6)
!1692 = !DILocation(line: 894, column: 19, scope: !1691)
!1693 = !DILocation(line: 894, column: 24, scope: !1691)
!1694 = !DILocation(line: 894, column: 6, scope: !1691)
!1695 = !DILocation(line: 895, column: 6, scope: !1691)
!1696 = !DILocation(line: 896, column: 20, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1680, file: !3, line: 896, column: 12)
!1698 = !DILocation(line: 896, column: 25, scope: !1697)
!1699 = !DILocation(line: 896, column: 12, scope: !1697)
!1700 = !DILocation(line: 896, column: 39, scope: !1697)
!1701 = !DILocation(line: 896, column: 44, scope: !1697)
!1702 = !DILocation(line: 896, column: 47, scope: !1697)
!1703 = !DILocation(line: 896, column: 52, scope: !1697)
!1704 = !DILocation(line: 896, column: 58, scope: !1697)
!1705 = !DILocation(line: 896, column: 56, scope: !1697)
!1706 = !DILocation(line: 896, column: 12, scope: !1680)
!1707 = !DILocation(line: 898, column: 6, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1697, file: !3, line: 897, column: 6)
!1709 = !DILocation(line: 899, column: 36, scope: !1708)
!1710 = !DILocation(line: 899, column: 41, scope: !1708)
!1711 = !DILocation(line: 899, column: 30, scope: !1708)
!1712 = !DILocation(line: 899, column: 13, scope: !1708)
!1713 = !DILocation(line: 899, column: 11, scope: !1708)
!1714 = !DILocation(line: 900, column: 6, scope: !1708)
!1715 = !DILocation(line: 901, column: 20, scope: !1716)
!1716 = distinct !DILexicalBlock(scope: !1697, file: !3, line: 901, column: 12)
!1717 = !DILocation(line: 901, column: 25, scope: !1716)
!1718 = !DILocation(line: 901, column: 12, scope: !1716)
!1719 = !DILocation(line: 901, column: 39, scope: !1716)
!1720 = !DILocation(line: 901, column: 44, scope: !1716)
!1721 = !DILocation(line: 901, column: 47, scope: !1716)
!1722 = !DILocation(line: 901, column: 52, scope: !1716)
!1723 = !DILocation(line: 901, column: 58, scope: !1716)
!1724 = !DILocation(line: 901, column: 56, scope: !1716)
!1725 = !DILocation(line: 901, column: 12, scope: !1697)
!1726 = !DILocation(line: 903, column: 6, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !1716, file: !3, line: 902, column: 6)
!1728 = !DILocation(line: 904, column: 12, scope: !1727)
!1729 = !DILocation(line: 904, column: 17, scope: !1727)
!1730 = !DILocation(line: 904, column: 10, scope: !1727)
!1731 = !DILocation(line: 905, column: 6, scope: !1727)
!1732 = !DILocation(line: 906, column: 20, scope: !1733)
!1733 = distinct !DILexicalBlock(scope: !1716, file: !3, line: 906, column: 12)
!1734 = !DILocation(line: 906, column: 25, scope: !1733)
!1735 = !DILocation(line: 906, column: 12, scope: !1733)
!1736 = !DILocation(line: 906, column: 39, scope: !1733)
!1737 = !DILocation(line: 906, column: 12, scope: !1716)
!1738 = !DILocation(line: 908, column: 16, scope: !1739)
!1739 = distinct !DILexicalBlock(scope: !1733, file: !3, line: 907, column: 6)
!1740 = !DILocation(line: 909, column: 23, scope: !1739)
!1741 = !DILocation(line: 910, column: 6, scope: !1739)
!1742 = !DILocation(line: 911, column: 20, scope: !1743)
!1743 = distinct !DILexicalBlock(scope: !1733, file: !3, line: 911, column: 12)
!1744 = !DILocation(line: 911, column: 25, scope: !1743)
!1745 = !DILocation(line: 911, column: 12, scope: !1743)
!1746 = !DILocation(line: 911, column: 41, scope: !1743)
!1747 = !DILocation(line: 911, column: 12, scope: !1733)
!1748 = !DILocation(line: 913, column: 16, scope: !1749)
!1749 = distinct !DILexicalBlock(scope: !1743, file: !3, line: 912, column: 6)
!1750 = !DILocation(line: 914, column: 23, scope: !1749)
!1751 = !DILocation(line: 915, column: 6, scope: !1749)
!1752 = !DILocation(line: 916, column: 20, scope: !1753)
!1753 = distinct !DILexicalBlock(scope: !1743, file: !3, line: 916, column: 12)
!1754 = !DILocation(line: 916, column: 25, scope: !1753)
!1755 = !DILocation(line: 916, column: 12, scope: !1753)
!1756 = !DILocation(line: 916, column: 40, scope: !1753)
!1757 = !DILocation(line: 916, column: 45, scope: !1753)
!1758 = !DILocation(line: 916, column: 48, scope: !1753)
!1759 = !DILocation(line: 916, column: 53, scope: !1753)
!1760 = !DILocation(line: 916, column: 59, scope: !1753)
!1761 = !DILocation(line: 916, column: 57, scope: !1753)
!1762 = !DILocation(line: 916, column: 12, scope: !1743)
!1763 = !DILocation(line: 918, column: 6, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1753, file: !3, line: 917, column: 6)
!1765 = !DILocation(line: 919, column: 17, scope: !1764)
!1766 = !DILocation(line: 919, column: 22, scope: !1764)
!1767 = !DILocation(line: 919, column: 15, scope: !1764)
!1768 = !DILocation(line: 920, column: 6, scope: !1764)
!1769 = !DILocation(line: 921, column: 20, scope: !1770)
!1770 = distinct !DILexicalBlock(scope: !1753, file: !3, line: 921, column: 12)
!1771 = !DILocation(line: 921, column: 25, scope: !1770)
!1772 = !DILocation(line: 921, column: 12, scope: !1770)
!1773 = !DILocation(line: 921, column: 39, scope: !1770)
!1774 = !DILocation(line: 921, column: 12, scope: !1753)
!1775 = !DILocation(line: 922, column: 23, scope: !1770)
!1776 = !DILocation(line: 922, column: 6, scope: !1770)
!1777 = !DILocation(line: 923, column: 20, scope: !1778)
!1778 = distinct !DILexicalBlock(scope: !1770, file: !3, line: 923, column: 12)
!1779 = !DILocation(line: 923, column: 25, scope: !1778)
!1780 = !DILocation(line: 923, column: 12, scope: !1778)
!1781 = !DILocation(line: 923, column: 41, scope: !1778)
!1782 = !DILocation(line: 923, column: 12, scope: !1770)
!1783 = !DILocation(line: 924, column: 23, scope: !1778)
!1784 = !DILocation(line: 924, column: 6, scope: !1778)
!1785 = !DILocation(line: 925, column: 20, scope: !1786)
!1786 = distinct !DILexicalBlock(scope: !1778, file: !3, line: 925, column: 12)
!1787 = !DILocation(line: 925, column: 25, scope: !1786)
!1788 = !DILocation(line: 925, column: 12, scope: !1786)
!1789 = !DILocation(line: 925, column: 39, scope: !1786)
!1790 = !DILocation(line: 925, column: 44, scope: !1786)
!1791 = !DILocation(line: 925, column: 47, scope: !1786)
!1792 = !DILocation(line: 925, column: 52, scope: !1786)
!1793 = !DILocation(line: 925, column: 58, scope: !1786)
!1794 = !DILocation(line: 925, column: 56, scope: !1786)
!1795 = !DILocation(line: 925, column: 12, scope: !1778)
!1796 = !DILocation(line: 927, column: 6, scope: !1797)
!1797 = distinct !DILexicalBlock(scope: !1786, file: !3, line: 926, column: 6)
!1798 = !DILocation(line: 928, column: 13, scope: !1797)
!1799 = !DILocation(line: 928, column: 18, scope: !1797)
!1800 = !DILocation(line: 928, column: 11, scope: !1797)
!1801 = !DILocation(line: 929, column: 6, scope: !1797)
!1802 = !DILocation(line: 930, column: 20, scope: !1803)
!1803 = distinct !DILexicalBlock(scope: !1786, file: !3, line: 930, column: 12)
!1804 = !DILocation(line: 930, column: 25, scope: !1803)
!1805 = !DILocation(line: 930, column: 12, scope: !1803)
!1806 = !DILocation(line: 930, column: 39, scope: !1803)
!1807 = !DILocation(line: 930, column: 44, scope: !1803)
!1808 = !DILocation(line: 930, column: 47, scope: !1803)
!1809 = !DILocation(line: 930, column: 52, scope: !1803)
!1810 = !DILocation(line: 930, column: 58, scope: !1803)
!1811 = !DILocation(line: 930, column: 56, scope: !1803)
!1812 = !DILocation(line: 930, column: 12, scope: !1786)
!1813 = !DILocation(line: 932, column: 6, scope: !1814)
!1814 = distinct !DILexicalBlock(scope: !1803, file: !3, line: 931, column: 6)
!1815 = !DILocation(line: 933, column: 20, scope: !1814)
!1816 = !DILocation(line: 933, column: 25, scope: !1814)
!1817 = !DILocation(line: 933, column: 18, scope: !1814)
!1818 = !DILocation(line: 934, column: 6, scope: !1814)
!1819 = !DILocation(line: 935, column: 20, scope: !1820)
!1820 = distinct !DILexicalBlock(scope: !1803, file: !3, line: 935, column: 12)
!1821 = !DILocation(line: 935, column: 25, scope: !1820)
!1822 = !DILocation(line: 935, column: 12, scope: !1820)
!1823 = !DILocation(line: 935, column: 39, scope: !1820)
!1824 = !DILocation(line: 935, column: 44, scope: !1820)
!1825 = !DILocation(line: 935, column: 47, scope: !1820)
!1826 = !DILocation(line: 935, column: 52, scope: !1820)
!1827 = !DILocation(line: 935, column: 58, scope: !1820)
!1828 = !DILocation(line: 935, column: 56, scope: !1820)
!1829 = !DILocation(line: 935, column: 12, scope: !1803)
!1830 = !DILocation(line: 937, column: 6, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1820, file: !3, line: 936, column: 6)
!1832 = !DILocation(line: 938, column: 21, scope: !1831)
!1833 = !DILocation(line: 938, column: 26, scope: !1831)
!1834 = !DILocation(line: 938, column: 19, scope: !1831)
!1835 = !DILocation(line: 939, column: 6, scope: !1831)
!1836 = !DILocation(line: 940, column: 20, scope: !1837)
!1837 = distinct !DILexicalBlock(scope: !1820, file: !3, line: 940, column: 12)
!1838 = !DILocation(line: 940, column: 25, scope: !1837)
!1839 = !DILocation(line: 940, column: 12, scope: !1837)
!1840 = !DILocation(line: 940, column: 39, scope: !1837)
!1841 = !DILocation(line: 940, column: 44, scope: !1837)
!1842 = !DILocation(line: 940, column: 47, scope: !1837)
!1843 = !DILocation(line: 940, column: 52, scope: !1837)
!1844 = !DILocation(line: 940, column: 58, scope: !1837)
!1845 = !DILocation(line: 940, column: 56, scope: !1837)
!1846 = !DILocation(line: 940, column: 12, scope: !1820)
!1847 = !DILocation(line: 942, column: 6, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1837, file: !3, line: 941, column: 6)
!1849 = !DILocation(line: 943, column: 17, scope: !1848)
!1850 = !DILocation(line: 943, column: 22, scope: !1848)
!1851 = !DILocation(line: 943, column: 15, scope: !1848)
!1852 = !DILocation(line: 944, column: 6, scope: !1848)
!1853 = !DILocation(line: 945, column: 20, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1837, file: !3, line: 945, column: 12)
!1855 = !DILocation(line: 945, column: 25, scope: !1854)
!1856 = !DILocation(line: 945, column: 12, scope: !1854)
!1857 = !DILocation(line: 945, column: 39, scope: !1854)
!1858 = !DILocation(line: 945, column: 44, scope: !1854)
!1859 = !DILocation(line: 945, column: 47, scope: !1854)
!1860 = !DILocation(line: 945, column: 52, scope: !1854)
!1861 = !DILocation(line: 945, column: 58, scope: !1854)
!1862 = !DILocation(line: 945, column: 56, scope: !1854)
!1863 = !DILocation(line: 945, column: 12, scope: !1837)
!1864 = !DILocation(line: 947, column: 6, scope: !1865)
!1865 = distinct !DILexicalBlock(scope: !1854, file: !3, line: 946, column: 6)
!1866 = !DILocation(line: 948, column: 16, scope: !1865)
!1867 = !DILocation(line: 948, column: 21, scope: !1865)
!1868 = !DILocation(line: 948, column: 14, scope: !1865)
!1869 = !DILocation(line: 949, column: 6, scope: !1865)
!1870 = !DILocation(line: 950, column: 20, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !1854, file: !3, line: 950, column: 12)
!1872 = !DILocation(line: 950, column: 25, scope: !1871)
!1873 = !DILocation(line: 950, column: 12, scope: !1871)
!1874 = !DILocation(line: 950, column: 39, scope: !1871)
!1875 = !DILocation(line: 950, column: 12, scope: !1854)
!1876 = !DILocation(line: 951, column: 15, scope: !1871)
!1877 = !DILocation(line: 951, column: 6, scope: !1871)
!1878 = !DILocation(line: 952, column: 20, scope: !1879)
!1879 = distinct !DILexicalBlock(scope: !1871, file: !3, line: 952, column: 12)
!1880 = !DILocation(line: 952, column: 25, scope: !1879)
!1881 = !DILocation(line: 952, column: 12, scope: !1879)
!1882 = !DILocation(line: 952, column: 41, scope: !1879)
!1883 = !DILocation(line: 952, column: 12, scope: !1871)
!1884 = !DILocation(line: 953, column: 15, scope: !1879)
!1885 = !DILocation(line: 953, column: 6, scope: !1879)
!1886 = !DILocation(line: 954, column: 20, scope: !1887)
!1887 = distinct !DILexicalBlock(scope: !1879, file: !3, line: 954, column: 12)
!1888 = !DILocation(line: 954, column: 25, scope: !1887)
!1889 = !DILocation(line: 954, column: 12, scope: !1887)
!1890 = !DILocation(line: 954, column: 39, scope: !1887)
!1891 = !DILocation(line: 954, column: 12, scope: !1879)
!1892 = !DILocation(line: 955, column: 23, scope: !1887)
!1893 = !DILocation(line: 955, column: 6, scope: !1887)
!1894 = !DILocation(line: 956, column: 20, scope: !1895)
!1895 = distinct !DILexicalBlock(scope: !1887, file: !3, line: 956, column: 12)
!1896 = !DILocation(line: 956, column: 25, scope: !1895)
!1897 = !DILocation(line: 956, column: 12, scope: !1895)
!1898 = !DILocation(line: 956, column: 41, scope: !1895)
!1899 = !DILocation(line: 956, column: 12, scope: !1887)
!1900 = !DILocation(line: 957, column: 23, scope: !1895)
!1901 = !DILocation(line: 957, column: 6, scope: !1895)
!1902 = !DILocation(line: 958, column: 20, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1895, file: !3, line: 958, column: 12)
!1904 = !DILocation(line: 958, column: 25, scope: !1903)
!1905 = !DILocation(line: 958, column: 12, scope: !1903)
!1906 = !DILocation(line: 958, column: 39, scope: !1903)
!1907 = !DILocation(line: 958, column: 44, scope: !1903)
!1908 = !DILocation(line: 958, column: 47, scope: !1903)
!1909 = !DILocation(line: 958, column: 52, scope: !1903)
!1910 = !DILocation(line: 958, column: 58, scope: !1903)
!1911 = !DILocation(line: 958, column: 56, scope: !1903)
!1912 = !DILocation(line: 958, column: 12, scope: !1895)
!1913 = !DILocation(line: 960, column: 6, scope: !1914)
!1914 = distinct !DILexicalBlock(scope: !1903, file: !3, line: 959, column: 6)
!1915 = !DILocation(line: 961, column: 16, scope: !1914)
!1916 = !DILocation(line: 961, column: 21, scope: !1914)
!1917 = !DILocation(line: 961, column: 14, scope: !1914)
!1918 = !DILocation(line: 962, column: 6, scope: !1914)
!1919 = !DILocation(line: 963, column: 20, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1903, file: !3, line: 963, column: 12)
!1921 = !DILocation(line: 963, column: 25, scope: !1920)
!1922 = !DILocation(line: 963, column: 12, scope: !1920)
!1923 = !DILocation(line: 963, column: 39, scope: !1920)
!1924 = !DILocation(line: 963, column: 44, scope: !1920)
!1925 = !DILocation(line: 963, column: 47, scope: !1920)
!1926 = !DILocation(line: 963, column: 52, scope: !1920)
!1927 = !DILocation(line: 963, column: 58, scope: !1920)
!1928 = !DILocation(line: 963, column: 56, scope: !1920)
!1929 = !DILocation(line: 963, column: 12, scope: !1903)
!1930 = !DILocation(line: 965, column: 6, scope: !1931)
!1931 = distinct !DILexicalBlock(scope: !1920, file: !3, line: 964, column: 6)
!1932 = !DILocation(line: 966, column: 16, scope: !1931)
!1933 = !DILocation(line: 966, column: 21, scope: !1931)
!1934 = !DILocation(line: 966, column: 14, scope: !1931)
!1935 = !DILocation(line: 967, column: 6, scope: !1931)
!1936 = !DILocation(line: 968, column: 20, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1920, file: !3, line: 968, column: 12)
!1938 = !DILocation(line: 968, column: 25, scope: !1937)
!1939 = !DILocation(line: 968, column: 12, scope: !1937)
!1940 = !DILocation(line: 968, column: 39, scope: !1937)
!1941 = !DILocation(line: 968, column: 44, scope: !1937)
!1942 = !DILocation(line: 968, column: 47, scope: !1937)
!1943 = !DILocation(line: 968, column: 52, scope: !1937)
!1944 = !DILocation(line: 968, column: 58, scope: !1937)
!1945 = !DILocation(line: 968, column: 56, scope: !1937)
!1946 = !DILocation(line: 968, column: 12, scope: !1920)
!1947 = !DILocation(line: 970, column: 6, scope: !1948)
!1948 = distinct !DILexicalBlock(scope: !1937, file: !3, line: 969, column: 6)
!1949 = !DILocation(line: 971, column: 12, scope: !1948)
!1950 = !DILocation(line: 971, column: 17, scope: !1948)
!1951 = !DILocation(line: 971, column: 10, scope: !1948)
!1952 = !DILocation(line: 972, column: 6, scope: !1948)
!1953 = !DILocation(line: 973, column: 20, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1937, file: !3, line: 973, column: 12)
!1955 = !DILocation(line: 973, column: 25, scope: !1954)
!1956 = !DILocation(line: 973, column: 12, scope: !1954)
!1957 = !DILocation(line: 973, column: 39, scope: !1954)
!1958 = !DILocation(line: 973, column: 44, scope: !1954)
!1959 = !DILocation(line: 973, column: 47, scope: !1954)
!1960 = !DILocation(line: 973, column: 52, scope: !1954)
!1961 = !DILocation(line: 973, column: 58, scope: !1954)
!1962 = !DILocation(line: 973, column: 56, scope: !1954)
!1963 = !DILocation(line: 973, column: 12, scope: !1937)
!1964 = !DILocation(line: 975, column: 6, scope: !1965)
!1965 = distinct !DILexicalBlock(scope: !1954, file: !3, line: 974, column: 6)
!1966 = !DILocation(line: 976, column: 22, scope: !1965)
!1967 = !DILocation(line: 976, column: 27, scope: !1965)
!1968 = !DILocation(line: 976, column: 16, scope: !1965)
!1969 = !DILocation(line: 976, column: 14, scope: !1965)
!1970 = !DILocation(line: 977, column: 6, scope: !1965)
!1971 = !DILocation(line: 978, column: 20, scope: !1972)
!1972 = distinct !DILexicalBlock(scope: !1954, file: !3, line: 978, column: 12)
!1973 = !DILocation(line: 978, column: 25, scope: !1972)
!1974 = !DILocation(line: 978, column: 12, scope: !1972)
!1975 = !DILocation(line: 978, column: 39, scope: !1972)
!1976 = !DILocation(line: 978, column: 12, scope: !1954)
!1977 = !DILocation(line: 979, column: 12, scope: !1972)
!1978 = !DILocation(line: 979, column: 6, scope: !1972)
!1979 = !DILocation(line: 981, column: 6, scope: !1972)
!1980 = !DILocation(line: 982, column: 2, scope: !1671)
!1981 = distinct !{!1981, !1660, !1982}
!1982 = !DILocation(line: 983, column: 2, scope: !1627)
!1983 = !DILocation(line: 984, column: 10, scope: !1984)
!1984 = distinct !DILexicalBlock(scope: !1627, file: !3, line: 984, column: 10)
!1985 = !DILocation(line: 984, column: 18, scope: !1984)
!1986 = !DILocation(line: 984, column: 15, scope: !1984)
!1987 = !DILocation(line: 984, column: 10, scope: !1627)
!1988 = !DILocation(line: 985, column: 2, scope: !1984)
!1989 = !DILocation(line: 986, column: 5, scope: !1627)
!1990 = distinct !DISubprogram(name: "lookup_hostname", scope: !3, file: !3, line: 1227, type: !1991, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{null, !109, !264, !1993, !109, !264, !1993}
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!1994 = !DILocalVariable(name: "sa4P", arg: 1, scope: !1990, file: !3, line: 1227, type: !109)
!1995 = !DILocation(line: 1227, column: 34, scope: !1990)
!1996 = !DILocalVariable(name: "sa4_len", arg: 2, scope: !1990, file: !3, line: 1227, type: !264)
!1997 = !DILocation(line: 1227, column: 47, scope: !1990)
!1998 = !DILocalVariable(name: "gotv4P", arg: 3, scope: !1990, file: !3, line: 1227, type: !1993)
!1999 = !DILocation(line: 1227, column: 61, scope: !1990)
!2000 = !DILocalVariable(name: "sa6P", arg: 4, scope: !1990, file: !3, line: 1227, type: !109)
!2001 = !DILocation(line: 1227, column: 85, scope: !1990)
!2002 = !DILocalVariable(name: "sa6_len", arg: 5, scope: !1990, file: !3, line: 1227, type: !264)
!2003 = !DILocation(line: 1227, column: 98, scope: !1990)
!2004 = !DILocalVariable(name: "gotv6P", arg: 6, scope: !1990, file: !3, line: 1227, type: !1993)
!2005 = !DILocation(line: 1227, column: 112, scope: !1990)
!2006 = !DILocalVariable(name: "hints", scope: !1990, file: !3, line: 1231, type: !397)
!2007 = !DILocation(line: 1231, column: 21, scope: !1990)
!2008 = !DILocalVariable(name: "portstr", scope: !1990, file: !3, line: 1232, type: !2009)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 80, elements: !373)
!2010 = !DILocation(line: 1232, column: 10, scope: !1990)
!2011 = !DILocalVariable(name: "gaierr", scope: !1990, file: !3, line: 1233, type: !26)
!2012 = !DILocation(line: 1233, column: 9, scope: !1990)
!2013 = !DILocalVariable(name: "ai", scope: !1990, file: !3, line: 1234, type: !396)
!2014 = !DILocation(line: 1234, column: 22, scope: !1990)
!2015 = !DILocalVariable(name: "ai2", scope: !1990, file: !3, line: 1235, type: !396)
!2016 = !DILocation(line: 1235, column: 22, scope: !1990)
!2017 = !DILocalVariable(name: "aiv6", scope: !1990, file: !3, line: 1236, type: !396)
!2018 = !DILocation(line: 1236, column: 22, scope: !1990)
!2019 = !DILocalVariable(name: "aiv4", scope: !1990, file: !3, line: 1237, type: !396)
!2020 = !DILocation(line: 1237, column: 22, scope: !1990)
!2021 = !DILocation(line: 1239, column: 12, scope: !1990)
!2022 = !DILocation(line: 1240, column: 11, scope: !1990)
!2023 = !DILocation(line: 1240, column: 21, scope: !1990)
!2024 = !DILocation(line: 1241, column: 11, scope: !1990)
!2025 = !DILocation(line: 1241, column: 20, scope: !1990)
!2026 = !DILocation(line: 1242, column: 11, scope: !1990)
!2027 = !DILocation(line: 1242, column: 23, scope: !1990)
!2028 = !DILocation(line: 1243, column: 12, scope: !1990)
!2029 = !DILocation(line: 1244, column: 33, scope: !2030)
!2030 = distinct !DILexicalBlock(scope: !1990, file: !3, line: 1244, column: 10)
!2031 = !DILocation(line: 1244, column: 43, scope: !2030)
!2032 = !DILocation(line: 1244, column: 20, scope: !2030)
!2033 = !DILocation(line: 1244, column: 18, scope: !2030)
!2034 = !DILocation(line: 1244, column: 67, scope: !2030)
!2035 = !DILocation(line: 1244, column: 10, scope: !1990)
!2036 = !DILocation(line: 1248, column: 6, scope: !2037)
!2037 = distinct !DILexicalBlock(scope: !2030, file: !3, line: 1245, column: 2)
!2038 = !DILocation(line: 1248, column: 30, scope: !2037)
!2039 = !DILocation(line: 1248, column: 16, scope: !2037)
!2040 = !DILocation(line: 1246, column: 2, scope: !2037)
!2041 = !DILocation(line: 1250, column: 6, scope: !2037)
!2042 = !DILocation(line: 1251, column: 6, scope: !2037)
!2043 = !DILocation(line: 1251, column: 13, scope: !2037)
!2044 = !DILocation(line: 1251, column: 37, scope: !2037)
!2045 = !DILocation(line: 1251, column: 23, scope: !2037)
!2046 = !DILocation(line: 1249, column: 9, scope: !2037)
!2047 = !DILocation(line: 1252, column: 2, scope: !2037)
!2048 = !DILocation(line: 1256, column: 10, scope: !1990)
!2049 = !DILocation(line: 1257, column: 10, scope: !1990)
!2050 = !DILocation(line: 1258, column: 17, scope: !2051)
!2051 = distinct !DILexicalBlock(scope: !1990, file: !3, line: 1258, column: 5)
!2052 = !DILocation(line: 1258, column: 15, scope: !2051)
!2053 = !DILocation(line: 1258, column: 11, scope: !2051)
!2054 = !DILocation(line: 1258, column: 21, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !2051, file: !3, line: 1258, column: 5)
!2056 = !DILocation(line: 1258, column: 25, scope: !2055)
!2057 = !DILocation(line: 1258, column: 5, scope: !2051)
!2058 = !DILocation(line: 1260, column: 11, scope: !2059)
!2059 = distinct !DILexicalBlock(scope: !2055, file: !3, line: 1259, column: 2)
!2060 = !DILocation(line: 1260, column: 16, scope: !2059)
!2061 = !DILocation(line: 1260, column: 2, scope: !2059)
!2062 = !DILocation(line: 1263, column: 11, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2064, file: !3, line: 1263, column: 11)
!2064 = distinct !DILexicalBlock(scope: !2059, file: !3, line: 1261, column: 6)
!2065 = !DILocation(line: 1263, column: 16, scope: !2063)
!2066 = !DILocation(line: 1263, column: 11, scope: !2064)
!2067 = !DILocation(line: 1264, column: 10, scope: !2063)
!2068 = !DILocation(line: 1264, column: 8, scope: !2063)
!2069 = !DILocation(line: 1264, column: 3, scope: !2063)
!2070 = !DILocation(line: 1265, column: 6, scope: !2064)
!2071 = !DILocation(line: 1267, column: 11, scope: !2072)
!2072 = distinct !DILexicalBlock(scope: !2064, file: !3, line: 1267, column: 11)
!2073 = !DILocation(line: 1267, column: 16, scope: !2072)
!2074 = !DILocation(line: 1267, column: 11, scope: !2064)
!2075 = !DILocation(line: 1268, column: 10, scope: !2072)
!2076 = !DILocation(line: 1268, column: 8, scope: !2072)
!2077 = !DILocation(line: 1268, column: 3, scope: !2072)
!2078 = !DILocation(line: 1269, column: 6, scope: !2064)
!2079 = !DILocation(line: 1271, column: 2, scope: !2059)
!2080 = !DILocation(line: 1258, column: 56, scope: !2055)
!2081 = !DILocation(line: 1258, column: 61, scope: !2055)
!2082 = !DILocation(line: 1258, column: 54, scope: !2055)
!2083 = !DILocation(line: 1258, column: 5, scope: !2055)
!2084 = distinct !{!2084, !2057, !2085}
!2085 = !DILocation(line: 1271, column: 2, scope: !2051)
!2086 = !DILocation(line: 1273, column: 10, scope: !2087)
!2087 = distinct !DILexicalBlock(scope: !1990, file: !3, line: 1273, column: 10)
!2088 = !DILocation(line: 1273, column: 15, scope: !2087)
!2089 = !DILocation(line: 1273, column: 10, scope: !1990)
!2090 = !DILocation(line: 1274, column: 3, scope: !2087)
!2091 = !DILocation(line: 1274, column: 10, scope: !2087)
!2092 = !DILocation(line: 1274, column: 2, scope: !2087)
!2093 = !DILocation(line: 1277, column: 7, scope: !2094)
!2094 = distinct !DILexicalBlock(scope: !2095, file: !3, line: 1277, column: 7)
!2095 = distinct !DILexicalBlock(scope: !2087, file: !3, line: 1276, column: 2)
!2096 = !DILocation(line: 1277, column: 17, scope: !2094)
!2097 = !DILocation(line: 1277, column: 23, scope: !2094)
!2098 = !DILocation(line: 1277, column: 15, scope: !2094)
!2099 = !DILocation(line: 1277, column: 7, scope: !2095)
!2100 = !DILocation(line: 1281, column: 3, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !2094, file: !3, line: 1278, column: 6)
!2102 = !DILocation(line: 1281, column: 29, scope: !2101)
!2103 = !DILocation(line: 1282, column: 19, scope: !2101)
!2104 = !DILocation(line: 1282, column: 25, scope: !2101)
!2105 = !DILocation(line: 1282, column: 3, scope: !2101)
!2106 = !DILocation(line: 1279, column: 6, scope: !2101)
!2107 = !DILocation(line: 1283, column: 6, scope: !2101)
!2108 = !DILocation(line: 1285, column: 9, scope: !2095)
!2109 = !DILocation(line: 1286, column: 9, scope: !2095)
!2110 = !DILocation(line: 1287, column: 3, scope: !2095)
!2111 = !DILocation(line: 1287, column: 10, scope: !2095)
!2112 = !DILocation(line: 1290, column: 10, scope: !2113)
!2113 = distinct !DILexicalBlock(scope: !1990, file: !3, line: 1290, column: 10)
!2114 = !DILocation(line: 1290, column: 15, scope: !2113)
!2115 = !DILocation(line: 1290, column: 10, scope: !1990)
!2116 = !DILocation(line: 1291, column: 3, scope: !2113)
!2117 = !DILocation(line: 1291, column: 10, scope: !2113)
!2118 = !DILocation(line: 1291, column: 2, scope: !2113)
!2119 = !DILocation(line: 1294, column: 7, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2121, file: !3, line: 1294, column: 7)
!2121 = distinct !DILexicalBlock(scope: !2113, file: !3, line: 1293, column: 2)
!2122 = !DILocation(line: 1294, column: 17, scope: !2120)
!2123 = !DILocation(line: 1294, column: 23, scope: !2120)
!2124 = !DILocation(line: 1294, column: 15, scope: !2120)
!2125 = !DILocation(line: 1294, column: 7, scope: !2121)
!2126 = !DILocation(line: 1298, column: 3, scope: !2127)
!2127 = distinct !DILexicalBlock(scope: !2120, file: !3, line: 1295, column: 6)
!2128 = !DILocation(line: 1298, column: 29, scope: !2127)
!2129 = !DILocation(line: 1299, column: 19, scope: !2127)
!2130 = !DILocation(line: 1299, column: 25, scope: !2127)
!2131 = !DILocation(line: 1299, column: 3, scope: !2127)
!2132 = !DILocation(line: 1296, column: 6, scope: !2127)
!2133 = !DILocation(line: 1300, column: 6, scope: !2127)
!2134 = !DILocation(line: 1302, column: 9, scope: !2121)
!2135 = !DILocation(line: 1303, column: 9, scope: !2121)
!2136 = !DILocation(line: 1304, column: 3, scope: !2121)
!2137 = !DILocation(line: 1304, column: 10, scope: !2121)
!2138 = !DILocation(line: 1307, column: 19, scope: !1990)
!2139 = !DILocation(line: 1307, column: 5, scope: !1990)
!2140 = !DILocation(line: 1357, column: 5, scope: !1990)
!2141 = distinct !DISubprogram(name: "read_throttlefile", scope: !3, file: !3, line: 1361, type: !2142, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{null, !6}
!2144 = !DILocalVariable(name: "tf", arg: 1, scope: !2141, file: !3, line: 1361, type: !6)
!2145 = !DILocation(line: 1361, column: 26, scope: !2141)
!2146 = !DILocalVariable(name: "fp", scope: !2141, file: !3, line: 1363, type: !50)
!2147 = !DILocation(line: 1363, column: 11, scope: !2141)
!2148 = !DILocalVariable(name: "buf", scope: !2141, file: !3, line: 1364, type: !2149)
!2149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 40000, elements: !2150)
!2150 = !{!2151}
!2151 = !DISubrange(count: 5000)
!2152 = !DILocation(line: 1364, column: 10, scope: !2141)
!2153 = !DILocalVariable(name: "cp", scope: !2141, file: !3, line: 1365, type: !6)
!2154 = !DILocation(line: 1365, column: 11, scope: !2141)
!2155 = !DILocalVariable(name: "len", scope: !2141, file: !3, line: 1366, type: !26)
!2156 = !DILocation(line: 1366, column: 9, scope: !2141)
!2157 = !DILocalVariable(name: "pattern", scope: !2141, file: !3, line: 1367, type: !2149)
!2158 = !DILocation(line: 1367, column: 10, scope: !2141)
!2159 = !DILocalVariable(name: "max_limit", scope: !2141, file: !3, line: 1368, type: !14)
!2160 = !DILocation(line: 1368, column: 10, scope: !2141)
!2161 = !DILocalVariable(name: "min_limit", scope: !2141, file: !3, line: 1368, type: !14)
!2162 = !DILocation(line: 1368, column: 21, scope: !2141)
!2163 = !DILocalVariable(name: "tv", scope: !2141, file: !3, line: 1369, type: !212)
!2164 = !DILocation(line: 1369, column: 20, scope: !2141)
!2165 = !DILocation(line: 1371, column: 17, scope: !2141)
!2166 = !DILocation(line: 1371, column: 10, scope: !2141)
!2167 = !DILocation(line: 1371, column: 8, scope: !2141)
!2168 = !DILocation(line: 1372, column: 10, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !2141, file: !3, line: 1372, column: 10)
!2170 = !DILocation(line: 1372, column: 13, scope: !2169)
!2171 = !DILocation(line: 1372, column: 10, scope: !2141)
!2172 = !DILocation(line: 1374, column: 34, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2169, file: !3, line: 1373, column: 2)
!2174 = !DILocation(line: 1374, column: 2, scope: !2173)
!2175 = !DILocation(line: 1375, column: 10, scope: !2173)
!2176 = !DILocation(line: 1375, column: 2, scope: !2173)
!2177 = !DILocation(line: 1376, column: 2, scope: !2173)
!2178 = !DILocation(line: 1379, column: 12, scope: !2141)
!2179 = !DILocation(line: 1381, column: 5, scope: !2141)
!2180 = !DILocation(line: 1381, column: 20, scope: !2141)
!2181 = !DILocation(line: 1381, column: 38, scope: !2141)
!2182 = !DILocation(line: 1381, column: 13, scope: !2141)
!2183 = !DILocation(line: 1381, column: 43, scope: !2141)
!2184 = !DILocation(line: 1384, column: 15, scope: !2185)
!2185 = distinct !DILexicalBlock(scope: !2141, file: !3, line: 1382, column: 2)
!2186 = !DILocation(line: 1384, column: 7, scope: !2185)
!2187 = !DILocation(line: 1384, column: 5, scope: !2185)
!2188 = !DILocation(line: 1385, column: 7, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 1385, column: 7)
!2190 = !DILocation(line: 1385, column: 10, scope: !2189)
!2191 = !DILocation(line: 1385, column: 7, scope: !2185)
!2192 = !DILocation(line: 1386, column: 7, scope: !2189)
!2193 = !DILocation(line: 1386, column: 10, scope: !2189)
!2194 = !DILocation(line: 1386, column: 6, scope: !2189)
!2195 = !DILocation(line: 1389, column: 16, scope: !2185)
!2196 = !DILocation(line: 1389, column: 8, scope: !2185)
!2197 = !DILocation(line: 1389, column: 6, scope: !2185)
!2198 = !DILocation(line: 1390, column: 2, scope: !2185)
!2199 = !DILocation(line: 1390, column: 10, scope: !2185)
!2200 = !DILocation(line: 1390, column: 14, scope: !2185)
!2201 = !DILocation(line: 1390, column: 18, scope: !2185)
!2202 = !DILocation(line: 1391, column: 9, scope: !2185)
!2203 = !DILocation(line: 1391, column: 12, scope: !2185)
!2204 = !DILocation(line: 1391, column: 5, scope: !2185)
!2205 = !DILocation(line: 1391, column: 16, scope: !2185)
!2206 = !DILocation(line: 1391, column: 23, scope: !2185)
!2207 = !DILocation(line: 1391, column: 30, scope: !2185)
!2208 = !DILocation(line: 1391, column: 33, scope: !2185)
!2209 = !DILocation(line: 1391, column: 26, scope: !2185)
!2210 = !DILocation(line: 1391, column: 37, scope: !2185)
!2211 = !DILocation(line: 1391, column: 45, scope: !2185)
!2212 = !DILocation(line: 1392, column: 9, scope: !2185)
!2213 = !DILocation(line: 1392, column: 12, scope: !2185)
!2214 = !DILocation(line: 1392, column: 5, scope: !2185)
!2215 = !DILocation(line: 1392, column: 16, scope: !2185)
!2216 = !DILocation(line: 1392, column: 24, scope: !2185)
!2217 = !DILocation(line: 1392, column: 31, scope: !2185)
!2218 = !DILocation(line: 1392, column: 34, scope: !2185)
!2219 = !DILocation(line: 1392, column: 27, scope: !2185)
!2220 = !DILocation(line: 1392, column: 38, scope: !2185)
!2221 = !DILocation(line: 0, scope: !2185)
!2222 = !DILocation(line: 1393, column: 10, scope: !2185)
!2223 = !DILocation(line: 1393, column: 6, scope: !2185)
!2224 = !DILocation(line: 1393, column: 17, scope: !2185)
!2225 = distinct !{!2225, !2198, !2226}
!2226 = !DILocation(line: 1393, column: 19, scope: !2185)
!2227 = !DILocation(line: 1396, column: 7, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 1396, column: 7)
!2229 = !DILocation(line: 1396, column: 11, scope: !2228)
!2230 = !DILocation(line: 1396, column: 7, scope: !2185)
!2231 = !DILocation(line: 1397, column: 6, scope: !2228)
!2232 = distinct !{!2232, !2179, !2233}
!2233 = !DILocation(line: 1452, column: 2, scope: !2141)
!2234 = !DILocation(line: 1400, column: 15, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 1400, column: 7)
!2236 = !DILocation(line: 1400, column: 44, scope: !2235)
!2237 = !DILocation(line: 1400, column: 7, scope: !2235)
!2238 = !DILocation(line: 1400, column: 78, scope: !2235)
!2239 = !DILocation(line: 1400, column: 7, scope: !2185)
!2240 = !DILocation(line: 1401, column: 7, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2235, file: !3, line: 1401, column: 6)
!2242 = !DILocation(line: 1402, column: 20, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2235, file: !3, line: 1402, column: 12)
!2244 = !DILocation(line: 1402, column: 45, scope: !2243)
!2245 = !DILocation(line: 1402, column: 12, scope: !2243)
!2246 = !DILocation(line: 1402, column: 67, scope: !2243)
!2247 = !DILocation(line: 1402, column: 12, scope: !2235)
!2248 = !DILocation(line: 1403, column: 16, scope: !2243)
!2249 = !DILocation(line: 1403, column: 6, scope: !2243)
!2250 = !DILocation(line: 1407, column: 39, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2243, file: !3, line: 1405, column: 6)
!2252 = !DILocation(line: 1407, column: 43, scope: !2251)
!2253 = !DILocation(line: 1406, column: 6, scope: !2251)
!2254 = !DILocation(line: 1408, column: 22, scope: !2251)
!2255 = !DILocation(line: 1410, column: 3, scope: !2251)
!2256 = !DILocation(line: 1410, column: 10, scope: !2251)
!2257 = !DILocation(line: 1410, column: 14, scope: !2251)
!2258 = !DILocation(line: 1408, column: 13, scope: !2251)
!2259 = !DILocation(line: 1411, column: 6, scope: !2251)
!2260 = !DILocation(line: 1415, column: 7, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 1415, column: 7)
!2262 = !DILocation(line: 1415, column: 18, scope: !2261)
!2263 = !DILocation(line: 1415, column: 7, scope: !2185)
!2264 = !DILocation(line: 1416, column: 13, scope: !2261)
!2265 = !DILocation(line: 1416, column: 6, scope: !2261)
!2266 = !DILocation(line: 1417, column: 2, scope: !2185)
!2267 = !DILocation(line: 1417, column: 25, scope: !2185)
!2268 = !DILocation(line: 1417, column: 17, scope: !2185)
!2269 = !DILocation(line: 1417, column: 15, scope: !2185)
!2270 = !DILocation(line: 1417, column: 43, scope: !2185)
!2271 = !DILocation(line: 1418, column: 13, scope: !2185)
!2272 = distinct !{!2272, !2266, !2271}
!2273 = !DILocation(line: 1421, column: 7, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 1421, column: 7)
!2275 = !DILocation(line: 1421, column: 23, scope: !2274)
!2276 = !DILocation(line: 1421, column: 20, scope: !2274)
!2277 = !DILocation(line: 1421, column: 7, scope: !2185)
!2278 = !DILocation(line: 1423, column: 11, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !2280, file: !3, line: 1423, column: 11)
!2280 = distinct !DILexicalBlock(scope: !2274, file: !3, line: 1422, column: 6)
!2281 = !DILocation(line: 1423, column: 24, scope: !2279)
!2282 = !DILocation(line: 1423, column: 11, scope: !2280)
!2283 = !DILocation(line: 1425, column: 16, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2279, file: !3, line: 1424, column: 3)
!2285 = !DILocation(line: 1426, column: 15, scope: !2284)
!2286 = !DILocation(line: 1426, column: 13, scope: !2284)
!2287 = !DILocation(line: 1427, column: 3, scope: !2284)
!2288 = !DILocation(line: 1430, column: 16, scope: !2289)
!2289 = distinct !DILexicalBlock(scope: !2279, file: !3, line: 1429, column: 3)
!2290 = !DILocation(line: 1431, column: 15, scope: !2289)
!2291 = !DILocation(line: 1431, column: 13, scope: !2289)
!2292 = !DILocation(line: 1433, column: 11, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2280, file: !3, line: 1433, column: 11)
!2294 = !DILocation(line: 1433, column: 21, scope: !2293)
!2295 = !DILocation(line: 1433, column: 11, scope: !2280)
!2296 = !DILocation(line: 1435, column: 3, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2293, file: !3, line: 1434, column: 3)
!2298 = !DILocation(line: 1437, column: 7, scope: !2297)
!2299 = !DILocation(line: 1438, column: 7, scope: !2297)
!2300 = !DILocation(line: 1436, column: 10, scope: !2297)
!2301 = !DILocation(line: 1439, column: 3, scope: !2297)
!2302 = !DILocation(line: 1441, column: 6, scope: !2280)
!2303 = !DILocation(line: 1444, column: 46, scope: !2185)
!2304 = !DILocation(line: 1444, column: 36, scope: !2185)
!2305 = !DILocation(line: 1444, column: 2, scope: !2185)
!2306 = !DILocation(line: 1444, column: 12, scope: !2185)
!2307 = !DILocation(line: 1444, column: 26, scope: !2185)
!2308 = !DILocation(line: 1444, column: 34, scope: !2185)
!2309 = !DILocation(line: 1445, column: 38, scope: !2185)
!2310 = !DILocation(line: 1445, column: 2, scope: !2185)
!2311 = !DILocation(line: 1445, column: 12, scope: !2185)
!2312 = !DILocation(line: 1445, column: 26, scope: !2185)
!2313 = !DILocation(line: 1445, column: 36, scope: !2185)
!2314 = !DILocation(line: 1446, column: 38, scope: !2185)
!2315 = !DILocation(line: 1446, column: 2, scope: !2185)
!2316 = !DILocation(line: 1446, column: 12, scope: !2185)
!2317 = !DILocation(line: 1446, column: 26, scope: !2185)
!2318 = !DILocation(line: 1446, column: 36, scope: !2185)
!2319 = !DILocation(line: 1447, column: 2, scope: !2185)
!2320 = !DILocation(line: 1447, column: 12, scope: !2185)
!2321 = !DILocation(line: 1447, column: 26, scope: !2185)
!2322 = !DILocation(line: 1447, column: 31, scope: !2185)
!2323 = !DILocation(line: 1448, column: 2, scope: !2185)
!2324 = !DILocation(line: 1448, column: 12, scope: !2185)
!2325 = !DILocation(line: 1448, column: 26, scope: !2185)
!2326 = !DILocation(line: 1448, column: 42, scope: !2185)
!2327 = !DILocation(line: 1449, column: 2, scope: !2185)
!2328 = !DILocation(line: 1449, column: 12, scope: !2185)
!2329 = !DILocation(line: 1449, column: 26, scope: !2185)
!2330 = !DILocation(line: 1449, column: 38, scope: !2185)
!2331 = !DILocation(line: 1451, column: 2, scope: !2185)
!2332 = !DILocation(line: 1453, column: 20, scope: !2141)
!2333 = !DILocation(line: 1453, column: 12, scope: !2141)
!2334 = !DILocation(line: 1454, column: 5, scope: !2141)
!2335 = distinct !DISubprogram(name: "handle_term", scope: !3, file: !3, line: 176, type: !107, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2336 = !DILocalVariable(name: "sig", arg: 1, scope: !2335, file: !3, line: 176, type: !26)
!2337 = !DILocation(line: 176, column: 18, scope: !2335)
!2338 = !DILocation(line: 180, column: 5, scope: !2335)
!2339 = !DILocation(line: 181, column: 53, scope: !2335)
!2340 = !DILocation(line: 181, column: 5, scope: !2335)
!2341 = !DILocation(line: 182, column: 5, scope: !2335)
!2342 = !DILocation(line: 183, column: 5, scope: !2335)
!2343 = distinct !DISubprogram(name: "handle_chld", scope: !3, file: !3, line: 189, type: !107, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2344 = !DILocalVariable(name: "sig", arg: 1, scope: !2343, file: !3, line: 189, type: !26)
!2345 = !DILocation(line: 189, column: 18, scope: !2343)
!2346 = !DILocalVariable(name: "oerrno", scope: !2343, file: !3, line: 191, type: !820)
!2347 = !DILocation(line: 191, column: 15, scope: !2343)
!2348 = !DILocation(line: 191, column: 24, scope: !2343)
!2349 = !DILocalVariable(name: "pid", scope: !2343, file: !3, line: 192, type: !392)
!2350 = !DILocation(line: 192, column: 11, scope: !2343)
!2351 = !DILocalVariable(name: "status", scope: !2343, file: !3, line: 193, type: !26)
!2352 = !DILocation(line: 193, column: 9, scope: !2343)
!2353 = !DILocation(line: 201, column: 5, scope: !2343)
!2354 = !DILocation(line: 204, column: 8, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2356, file: !3, line: 202, column: 2)
!2356 = distinct !DILexicalBlock(scope: !2357, file: !3, line: 201, column: 5)
!2357 = distinct !DILexicalBlock(scope: !2343, file: !3, line: 201, column: 5)
!2358 = !DILocation(line: 204, column: 6, scope: !2355)
!2359 = !DILocation(line: 208, column: 13, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 208, column: 7)
!2361 = !DILocation(line: 208, column: 17, scope: !2360)
!2362 = !DILocation(line: 208, column: 7, scope: !2355)
!2363 = !DILocation(line: 209, column: 6, scope: !2360)
!2364 = !DILocation(line: 210, column: 13, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 210, column: 7)
!2366 = !DILocation(line: 210, column: 17, scope: !2365)
!2367 = !DILocation(line: 210, column: 7, scope: !2355)
!2368 = !DILocation(line: 212, column: 11, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !2370, file: !3, line: 212, column: 11)
!2370 = distinct !DILexicalBlock(scope: !2365, file: !3, line: 211, column: 6)
!2371 = !DILocation(line: 212, column: 17, scope: !2369)
!2372 = !DILocation(line: 212, column: 26, scope: !2369)
!2373 = !DILocation(line: 212, column: 29, scope: !2369)
!2374 = !DILocation(line: 212, column: 35, scope: !2369)
!2375 = !DILocation(line: 212, column: 11, scope: !2370)
!2376 = !DILocation(line: 213, column: 3, scope: !2369)
!2377 = distinct !{!2377, !2378, !2379}
!2378 = !DILocation(line: 201, column: 5, scope: !2357)
!2379 = !DILocation(line: 233, column: 2, scope: !2357)
!2380 = !DILocation(line: 217, column: 11, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2370, file: !3, line: 217, column: 11)
!2382 = !DILocation(line: 217, column: 17, scope: !2381)
!2383 = !DILocation(line: 217, column: 11, scope: !2370)
!2384 = !DILocation(line: 218, column: 3, scope: !2381)
!2385 = !DILocation(line: 219, column: 6, scope: !2370)
!2386 = !DILocation(line: 227, column: 7, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 227, column: 7)
!2388 = !DILocation(line: 227, column: 10, scope: !2387)
!2389 = !DILocation(line: 227, column: 7, scope: !2355)
!2390 = !DILocation(line: 229, column: 8, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2387, file: !3, line: 228, column: 6)
!2392 = !DILocation(line: 229, column: 12, scope: !2391)
!2393 = !DILocation(line: 229, column: 6, scope: !2391)
!2394 = !DILocation(line: 230, column: 11, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2391, file: !3, line: 230, column: 11)
!2396 = !DILocation(line: 230, column: 15, scope: !2395)
!2397 = !DILocation(line: 230, column: 25, scope: !2395)
!2398 = !DILocation(line: 230, column: 11, scope: !2391)
!2399 = !DILocation(line: 231, column: 3, scope: !2395)
!2400 = !DILocation(line: 231, column: 7, scope: !2395)
!2401 = !DILocation(line: 231, column: 17, scope: !2395)
!2402 = !DILocation(line: 232, column: 6, scope: !2391)
!2403 = !DILocation(line: 201, column: 5, scope: !2356)
!2404 = !DILocation(line: 236, column: 13, scope: !2343)
!2405 = !DILocation(line: 236, column: 5, scope: !2343)
!2406 = !DILocation(line: 236, column: 11, scope: !2343)
!2407 = !DILocation(line: 237, column: 5, scope: !2343)
!2408 = distinct !DISubprogram(name: "handle_hup", scope: !3, file: !3, line: 242, type: !107, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2409 = !DILocalVariable(name: "sig", arg: 1, scope: !2408, file: !3, line: 242, type: !26)
!2410 = !DILocation(line: 242, column: 17, scope: !2408)
!2411 = !DILocalVariable(name: "oerrno", scope: !2408, file: !3, line: 244, type: !820)
!2412 = !DILocation(line: 244, column: 15, scope: !2408)
!2413 = !DILocation(line: 244, column: 24, scope: !2408)
!2414 = !DILocation(line: 252, column: 13, scope: !2408)
!2415 = !DILocation(line: 255, column: 13, scope: !2408)
!2416 = !DILocation(line: 255, column: 5, scope: !2408)
!2417 = !DILocation(line: 255, column: 11, scope: !2408)
!2418 = !DILocation(line: 256, column: 5, scope: !2408)
!2419 = distinct !DISubprogram(name: "handle_usr1", scope: !3, file: !3, line: 261, type: !107, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2420 = !DILocalVariable(name: "sig", arg: 1, scope: !2419, file: !3, line: 261, type: !26)
!2421 = !DILocation(line: 261, column: 18, scope: !2419)
!2422 = !DILocation(line: 265, column: 10, scope: !2423)
!2423 = distinct !DILexicalBlock(scope: !2419, file: !3, line: 265, column: 10)
!2424 = !DILocation(line: 265, column: 23, scope: !2423)
!2425 = !DILocation(line: 265, column: 10, scope: !2419)
!2426 = !DILocation(line: 271, column: 2, scope: !2427)
!2427 = distinct !DILexicalBlock(scope: !2423, file: !3, line: 266, column: 2)
!2428 = !DILocation(line: 272, column: 2, scope: !2427)
!2429 = !DILocation(line: 273, column: 2, scope: !2427)
!2430 = !DILocation(line: 274, column: 2, scope: !2427)
!2431 = !DILocation(line: 278, column: 14, scope: !2419)
!2432 = !DILocation(line: 281, column: 5, scope: !2419)
!2433 = distinct !DISubprogram(name: "handle_usr2", scope: !3, file: !3, line: 286, type: !107, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2434 = !DILocalVariable(name: "sig", arg: 1, scope: !2433, file: !3, line: 286, type: !26)
!2435 = !DILocation(line: 286, column: 18, scope: !2433)
!2436 = !DILocalVariable(name: "oerrno", scope: !2433, file: !3, line: 288, type: !820)
!2437 = !DILocation(line: 288, column: 15, scope: !2433)
!2438 = !DILocation(line: 288, column: 24, scope: !2433)
!2439 = !DILocation(line: 295, column: 5, scope: !2433)
!2440 = !DILocation(line: 298, column: 13, scope: !2433)
!2441 = !DILocation(line: 298, column: 5, scope: !2433)
!2442 = !DILocation(line: 298, column: 11, scope: !2433)
!2443 = !DILocation(line: 299, column: 5, scope: !2433)
!2444 = distinct !DISubprogram(name: "handle_alrm", scope: !3, file: !3, line: 304, type: !107, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2445 = !DILocalVariable(name: "sig", arg: 1, scope: !2444, file: !3, line: 304, type: !26)
!2446 = !DILocation(line: 304, column: 18, scope: !2444)
!2447 = !DILocalVariable(name: "oerrno", scope: !2444, file: !3, line: 306, type: !820)
!2448 = !DILocation(line: 306, column: 15, scope: !2444)
!2449 = !DILocation(line: 306, column: 24, scope: !2444)
!2450 = !DILocation(line: 309, column: 12, scope: !2451)
!2451 = distinct !DILexicalBlock(scope: !2444, file: !3, line: 309, column: 10)
!2452 = !DILocation(line: 309, column: 10, scope: !2444)
!2453 = !DILocation(line: 312, column: 9, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2451, file: !3, line: 310, column: 2)
!2455 = !DILocation(line: 314, column: 2, scope: !2454)
!2456 = !DILocation(line: 316, column: 19, scope: !2444)
!2457 = !DILocation(line: 323, column: 12, scope: !2444)
!2458 = !DILocation(line: 326, column: 13, scope: !2444)
!2459 = !DILocation(line: 326, column: 5, scope: !2444)
!2460 = !DILocation(line: 326, column: 11, scope: !2444)
!2461 = !DILocation(line: 327, column: 5, scope: !2444)
!2462 = distinct !DISubprogram(name: "occasional", scope: !3, file: !3, line: 2121, type: !227, scopeLine: 2122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2463 = !DILocalVariable(name: "client_data", arg: 1, scope: !2462, file: !3, line: 2121, type: !229)
!2464 = !DILocation(line: 2121, column: 24, scope: !2462)
!2465 = !DILocalVariable(name: "nowP", arg: 2, scope: !2462, file: !3, line: 2121, type: !211)
!2466 = !DILocation(line: 2121, column: 53, scope: !2462)
!2467 = !DILocation(line: 2123, column: 18, scope: !2462)
!2468 = !DILocation(line: 2123, column: 5, scope: !2462)
!2469 = !DILocation(line: 2124, column: 5, scope: !2462)
!2470 = !DILocation(line: 2125, column: 19, scope: !2462)
!2471 = !DILocation(line: 2126, column: 5, scope: !2462)
!2472 = distinct !DISubprogram(name: "idle", scope: !3, file: !3, line: 2059, type: !227, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2473 = !DILocalVariable(name: "client_data", arg: 1, scope: !2472, file: !3, line: 2059, type: !229)
!2474 = !DILocation(line: 2059, column: 18, scope: !2472)
!2475 = !DILocalVariable(name: "nowP", arg: 2, scope: !2472, file: !3, line: 2059, type: !211)
!2476 = !DILocation(line: 2059, column: 47, scope: !2472)
!2477 = !DILocalVariable(name: "cnum", scope: !2472, file: !3, line: 2061, type: !26)
!2478 = !DILocation(line: 2061, column: 9, scope: !2472)
!2479 = !DILocalVariable(name: "c", scope: !2472, file: !3, line: 2062, type: !248)
!2480 = !DILocation(line: 2062, column: 17, scope: !2472)
!2481 = !DILocation(line: 2064, column: 16, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2472, file: !3, line: 2064, column: 5)
!2483 = !DILocation(line: 2064, column: 11, scope: !2482)
!2484 = !DILocation(line: 2064, column: 21, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2482, file: !3, line: 2064, column: 5)
!2486 = !DILocation(line: 2064, column: 28, scope: !2485)
!2487 = !DILocation(line: 2064, column: 26, scope: !2485)
!2488 = !DILocation(line: 2064, column: 5, scope: !2482)
!2489 = !DILocation(line: 2066, column: 7, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2485, file: !3, line: 2065, column: 2)
!2491 = !DILocation(line: 2066, column: 16, scope: !2490)
!2492 = !DILocation(line: 2066, column: 4, scope: !2490)
!2493 = !DILocation(line: 2067, column: 11, scope: !2490)
!2494 = !DILocation(line: 2067, column: 14, scope: !2490)
!2495 = !DILocation(line: 2067, column: 2, scope: !2490)
!2496 = !DILocation(line: 2070, column: 11, scope: !2497)
!2497 = distinct !DILexicalBlock(scope: !2498, file: !3, line: 2070, column: 11)
!2498 = distinct !DILexicalBlock(scope: !2490, file: !3, line: 2068, column: 6)
!2499 = !DILocation(line: 2070, column: 17, scope: !2497)
!2500 = !DILocation(line: 2070, column: 26, scope: !2497)
!2501 = !DILocation(line: 2070, column: 29, scope: !2497)
!2502 = !DILocation(line: 2070, column: 24, scope: !2497)
!2503 = !DILocation(line: 2070, column: 39, scope: !2497)
!2504 = !DILocation(line: 2070, column: 11, scope: !2498)
!2505 = !DILocation(line: 2074, column: 20, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2497, file: !3, line: 2071, column: 3)
!2507 = !DILocation(line: 2074, column: 23, scope: !2506)
!2508 = !DILocation(line: 2074, column: 27, scope: !2506)
!2509 = !DILocation(line: 2074, column: 7, scope: !2506)
!2510 = !DILocation(line: 2072, column: 3, scope: !2506)
!2511 = !DILocation(line: 2076, column: 7, scope: !2506)
!2512 = !DILocation(line: 2076, column: 10, scope: !2506)
!2513 = !DILocation(line: 2076, column: 19, scope: !2506)
!2514 = !DILocation(line: 2076, column: 42, scope: !2506)
!2515 = !DILocation(line: 2075, column: 3, scope: !2506)
!2516 = !DILocation(line: 2077, column: 22, scope: !2506)
!2517 = !DILocation(line: 2077, column: 25, scope: !2506)
!2518 = !DILocation(line: 2077, column: 3, scope: !2506)
!2519 = !DILocation(line: 2078, column: 3, scope: !2506)
!2520 = !DILocation(line: 2079, column: 6, scope: !2498)
!2521 = !DILocation(line: 2082, column: 11, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2498, file: !3, line: 2082, column: 11)
!2523 = !DILocation(line: 2082, column: 17, scope: !2522)
!2524 = !DILocation(line: 2082, column: 26, scope: !2522)
!2525 = !DILocation(line: 2082, column: 29, scope: !2522)
!2526 = !DILocation(line: 2082, column: 24, scope: !2522)
!2527 = !DILocation(line: 2082, column: 39, scope: !2522)
!2528 = !DILocation(line: 2082, column: 11, scope: !2498)
!2529 = !DILocation(line: 2086, column: 20, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2522, file: !3, line: 2083, column: 3)
!2531 = !DILocation(line: 2086, column: 23, scope: !2530)
!2532 = !DILocation(line: 2086, column: 27, scope: !2530)
!2533 = !DILocation(line: 2086, column: 7, scope: !2530)
!2534 = !DILocation(line: 2084, column: 3, scope: !2530)
!2535 = !DILocation(line: 2087, column: 21, scope: !2530)
!2536 = !DILocation(line: 2087, column: 24, scope: !2530)
!2537 = !DILocation(line: 2087, column: 3, scope: !2530)
!2538 = !DILocation(line: 2088, column: 3, scope: !2530)
!2539 = !DILocation(line: 2089, column: 6, scope: !2498)
!2540 = !DILocation(line: 2091, column: 2, scope: !2490)
!2541 = !DILocation(line: 2064, column: 42, scope: !2485)
!2542 = !DILocation(line: 2064, column: 5, scope: !2485)
!2543 = distinct !{!2543, !2488, !2544}
!2544 = !DILocation(line: 2091, column: 2, scope: !2482)
!2545 = !DILocation(line: 2092, column: 5, scope: !2472)
!2546 = distinct !DISubprogram(name: "update_throttles", scope: !3, file: !3, line: 1924, type: !227, scopeLine: 1925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2547 = !DILocalVariable(name: "client_data", arg: 1, scope: !2546, file: !3, line: 1924, type: !229)
!2548 = !DILocation(line: 1924, column: 30, scope: !2546)
!2549 = !DILocalVariable(name: "nowP", arg: 2, scope: !2546, file: !3, line: 1924, type: !211)
!2550 = !DILocation(line: 1924, column: 59, scope: !2546)
!2551 = !DILocalVariable(name: "tnum", scope: !2546, file: !3, line: 1926, type: !26)
!2552 = !DILocation(line: 1926, column: 9, scope: !2546)
!2553 = !DILocalVariable(name: "tind", scope: !2546, file: !3, line: 1926, type: !26)
!2554 = !DILocation(line: 1926, column: 15, scope: !2546)
!2555 = !DILocalVariable(name: "cnum", scope: !2546, file: !3, line: 1927, type: !26)
!2556 = !DILocation(line: 1927, column: 9, scope: !2546)
!2557 = !DILocalVariable(name: "c", scope: !2546, file: !3, line: 1928, type: !248)
!2558 = !DILocation(line: 1928, column: 17, scope: !2546)
!2559 = !DILocalVariable(name: "l", scope: !2546, file: !3, line: 1929, type: !14)
!2560 = !DILocation(line: 1929, column: 10, scope: !2546)
!2561 = !DILocation(line: 1934, column: 16, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 1934, column: 5)
!2563 = !DILocation(line: 1934, column: 11, scope: !2562)
!2564 = !DILocation(line: 1934, column: 21, scope: !2565)
!2565 = distinct !DILexicalBlock(scope: !2562, file: !3, line: 1934, column: 5)
!2566 = !DILocation(line: 1934, column: 28, scope: !2565)
!2567 = !DILocation(line: 1934, column: 26, scope: !2565)
!2568 = !DILocation(line: 1934, column: 5, scope: !2562)
!2569 = !DILocation(line: 1936, column: 31, scope: !2570)
!2570 = distinct !DILexicalBlock(scope: !2565, file: !3, line: 1935, column: 2)
!2571 = !DILocation(line: 1936, column: 41, scope: !2570)
!2572 = !DILocation(line: 1936, column: 47, scope: !2570)
!2573 = !DILocation(line: 1936, column: 29, scope: !2570)
!2574 = !DILocation(line: 1936, column: 54, scope: !2570)
!2575 = !DILocation(line: 1936, column: 64, scope: !2570)
!2576 = !DILocation(line: 1936, column: 70, scope: !2570)
!2577 = !DILocation(line: 1936, column: 86, scope: !2570)
!2578 = !DILocation(line: 1936, column: 52, scope: !2570)
!2579 = !DILocation(line: 1936, column: 104, scope: !2570)
!2580 = !DILocation(line: 1936, column: 2, scope: !2570)
!2581 = !DILocation(line: 1936, column: 12, scope: !2570)
!2582 = !DILocation(line: 1936, column: 18, scope: !2570)
!2583 = !DILocation(line: 1936, column: 23, scope: !2570)
!2584 = !DILocation(line: 1937, column: 2, scope: !2570)
!2585 = !DILocation(line: 1937, column: 12, scope: !2570)
!2586 = !DILocation(line: 1937, column: 18, scope: !2570)
!2587 = !DILocation(line: 1937, column: 34, scope: !2570)
!2588 = !DILocation(line: 1939, column: 7, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2570, file: !3, line: 1939, column: 7)
!2590 = !DILocation(line: 1939, column: 17, scope: !2589)
!2591 = !DILocation(line: 1939, column: 23, scope: !2589)
!2592 = !DILocation(line: 1939, column: 30, scope: !2589)
!2593 = !DILocation(line: 1939, column: 40, scope: !2589)
!2594 = !DILocation(line: 1939, column: 46, scope: !2589)
!2595 = !DILocation(line: 1939, column: 28, scope: !2589)
!2596 = !DILocation(line: 1939, column: 56, scope: !2589)
!2597 = !DILocation(line: 1939, column: 59, scope: !2589)
!2598 = !DILocation(line: 1939, column: 69, scope: !2589)
!2599 = !DILocation(line: 1939, column: 75, scope: !2589)
!2600 = !DILocation(line: 1939, column: 87, scope: !2589)
!2601 = !DILocation(line: 1939, column: 7, scope: !2570)
!2602 = !DILocation(line: 1941, column: 11, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2604, file: !3, line: 1941, column: 11)
!2604 = distinct !DILexicalBlock(scope: !2589, file: !3, line: 1940, column: 6)
!2605 = !DILocation(line: 1941, column: 21, scope: !2603)
!2606 = !DILocation(line: 1941, column: 27, scope: !2603)
!2607 = !DILocation(line: 1941, column: 34, scope: !2603)
!2608 = !DILocation(line: 1941, column: 44, scope: !2603)
!2609 = !DILocation(line: 1941, column: 50, scope: !2603)
!2610 = !DILocation(line: 1941, column: 60, scope: !2603)
!2611 = !DILocation(line: 1941, column: 32, scope: !2603)
!2612 = !DILocation(line: 1941, column: 11, scope: !2604)
!2613 = !DILocation(line: 1942, column: 96, scope: !2603)
!2614 = !DILocation(line: 1942, column: 102, scope: !2603)
!2615 = !DILocation(line: 1942, column: 112, scope: !2603)
!2616 = !DILocation(line: 1942, column: 118, scope: !2603)
!2617 = !DILocation(line: 1942, column: 127, scope: !2603)
!2618 = !DILocation(line: 1942, column: 137, scope: !2603)
!2619 = !DILocation(line: 1942, column: 143, scope: !2603)
!2620 = !DILocation(line: 1942, column: 149, scope: !2603)
!2621 = !DILocation(line: 1942, column: 159, scope: !2603)
!2622 = !DILocation(line: 1942, column: 165, scope: !2603)
!2623 = !DILocation(line: 1942, column: 176, scope: !2603)
!2624 = !DILocation(line: 1942, column: 186, scope: !2603)
!2625 = !DILocation(line: 1942, column: 192, scope: !2603)
!2626 = !DILocation(line: 1942, column: 3, scope: !2603)
!2627 = !DILocation(line: 1944, column: 86, scope: !2603)
!2628 = !DILocation(line: 1944, column: 92, scope: !2603)
!2629 = !DILocation(line: 1944, column: 102, scope: !2603)
!2630 = !DILocation(line: 1944, column: 108, scope: !2603)
!2631 = !DILocation(line: 1944, column: 117, scope: !2603)
!2632 = !DILocation(line: 1944, column: 127, scope: !2603)
!2633 = !DILocation(line: 1944, column: 133, scope: !2603)
!2634 = !DILocation(line: 1944, column: 139, scope: !2603)
!2635 = !DILocation(line: 1944, column: 149, scope: !2603)
!2636 = !DILocation(line: 1944, column: 155, scope: !2603)
!2637 = !DILocation(line: 1944, column: 166, scope: !2603)
!2638 = !DILocation(line: 1944, column: 176, scope: !2603)
!2639 = !DILocation(line: 1944, column: 182, scope: !2603)
!2640 = !DILocation(line: 1944, column: 3, scope: !2603)
!2641 = !DILocation(line: 1945, column: 6, scope: !2604)
!2642 = !DILocation(line: 1946, column: 7, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2570, file: !3, line: 1946, column: 7)
!2644 = !DILocation(line: 1946, column: 17, scope: !2643)
!2645 = !DILocation(line: 1946, column: 23, scope: !2643)
!2646 = !DILocation(line: 1946, column: 30, scope: !2643)
!2647 = !DILocation(line: 1946, column: 40, scope: !2643)
!2648 = !DILocation(line: 1946, column: 46, scope: !2643)
!2649 = !DILocation(line: 1946, column: 28, scope: !2643)
!2650 = !DILocation(line: 1946, column: 56, scope: !2643)
!2651 = !DILocation(line: 1946, column: 59, scope: !2643)
!2652 = !DILocation(line: 1946, column: 69, scope: !2643)
!2653 = !DILocation(line: 1946, column: 75, scope: !2643)
!2654 = !DILocation(line: 1946, column: 87, scope: !2643)
!2655 = !DILocation(line: 1946, column: 7, scope: !2570)
!2656 = !DILocation(line: 1948, column: 94, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2643, file: !3, line: 1947, column: 6)
!2658 = !DILocation(line: 1948, column: 100, scope: !2657)
!2659 = !DILocation(line: 1948, column: 110, scope: !2657)
!2660 = !DILocation(line: 1948, column: 116, scope: !2657)
!2661 = !DILocation(line: 1948, column: 125, scope: !2657)
!2662 = !DILocation(line: 1948, column: 135, scope: !2657)
!2663 = !DILocation(line: 1948, column: 141, scope: !2657)
!2664 = !DILocation(line: 1948, column: 147, scope: !2657)
!2665 = !DILocation(line: 1948, column: 157, scope: !2657)
!2666 = !DILocation(line: 1948, column: 163, scope: !2657)
!2667 = !DILocation(line: 1948, column: 174, scope: !2657)
!2668 = !DILocation(line: 1948, column: 184, scope: !2657)
!2669 = !DILocation(line: 1948, column: 190, scope: !2657)
!2670 = !DILocation(line: 1948, column: 6, scope: !2657)
!2671 = !DILocation(line: 1949, column: 6, scope: !2657)
!2672 = !DILocation(line: 1950, column: 2, scope: !2570)
!2673 = !DILocation(line: 1934, column: 42, scope: !2565)
!2674 = !DILocation(line: 1934, column: 5, scope: !2565)
!2675 = distinct !{!2675, !2568, !2676}
!2676 = !DILocation(line: 1950, column: 2, scope: !2562)
!2677 = !DILocation(line: 1955, column: 16, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 1955, column: 5)
!2679 = !DILocation(line: 1955, column: 11, scope: !2678)
!2680 = !DILocation(line: 1955, column: 21, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2678, file: !3, line: 1955, column: 5)
!2682 = !DILocation(line: 1955, column: 28, scope: !2681)
!2683 = !DILocation(line: 1955, column: 26, scope: !2681)
!2684 = !DILocation(line: 1955, column: 5, scope: !2678)
!2685 = !DILocation(line: 1957, column: 7, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2681, file: !3, line: 1956, column: 2)
!2687 = !DILocation(line: 1957, column: 16, scope: !2686)
!2688 = !DILocation(line: 1957, column: 4, scope: !2686)
!2689 = !DILocation(line: 1958, column: 7, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 1958, column: 7)
!2691 = !DILocation(line: 1958, column: 10, scope: !2690)
!2692 = !DILocation(line: 1958, column: 21, scope: !2690)
!2693 = !DILocation(line: 1958, column: 37, scope: !2690)
!2694 = !DILocation(line: 1958, column: 40, scope: !2690)
!2695 = !DILocation(line: 1958, column: 43, scope: !2690)
!2696 = !DILocation(line: 1958, column: 54, scope: !2690)
!2697 = !DILocation(line: 1958, column: 7, scope: !2686)
!2698 = !DILocation(line: 1960, column: 6, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2690, file: !3, line: 1959, column: 6)
!2700 = !DILocation(line: 1960, column: 9, scope: !2699)
!2701 = !DILocation(line: 1960, column: 19, scope: !2699)
!2702 = !DILocation(line: 1961, column: 17, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2699, file: !3, line: 1961, column: 6)
!2704 = !DILocation(line: 1961, column: 12, scope: !2703)
!2705 = !DILocation(line: 1961, column: 22, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 1961, column: 6)
!2707 = !DILocation(line: 1961, column: 29, scope: !2706)
!2708 = !DILocation(line: 1961, column: 32, scope: !2706)
!2709 = !DILocation(line: 1961, column: 27, scope: !2706)
!2710 = !DILocation(line: 1961, column: 6, scope: !2703)
!2711 = !DILocation(line: 1963, column: 10, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2706, file: !3, line: 1962, column: 3)
!2713 = !DILocation(line: 1963, column: 13, scope: !2712)
!2714 = !DILocation(line: 1963, column: 19, scope: !2712)
!2715 = !DILocation(line: 1963, column: 8, scope: !2712)
!2716 = !DILocation(line: 1964, column: 7, scope: !2712)
!2717 = !DILocation(line: 1964, column: 17, scope: !2712)
!2718 = !DILocation(line: 1964, column: 23, scope: !2712)
!2719 = !DILocation(line: 1964, column: 35, scope: !2712)
!2720 = !DILocation(line: 1964, column: 45, scope: !2712)
!2721 = !DILocation(line: 1964, column: 51, scope: !2712)
!2722 = !DILocation(line: 1964, column: 33, scope: !2712)
!2723 = !DILocation(line: 1964, column: 5, scope: !2712)
!2724 = !DILocation(line: 1965, column: 8, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2712, file: !3, line: 1965, column: 8)
!2726 = !DILocation(line: 1965, column: 11, scope: !2725)
!2727 = !DILocation(line: 1965, column: 21, scope: !2725)
!2728 = !DILocation(line: 1965, column: 8, scope: !2712)
!2729 = !DILocation(line: 1966, column: 22, scope: !2725)
!2730 = !DILocation(line: 1966, column: 7, scope: !2725)
!2731 = !DILocation(line: 1966, column: 10, scope: !2725)
!2732 = !DILocation(line: 1966, column: 20, scope: !2725)
!2733 = !DILocation(line: 1968, column: 22, scope: !2725)
!2734 = !DILocation(line: 1968, column: 7, scope: !2725)
!2735 = !DILocation(line: 1968, column: 10, scope: !2725)
!2736 = !DILocation(line: 1968, column: 20, scope: !2725)
!2737 = !DILocation(line: 1969, column: 3, scope: !2712)
!2738 = !DILocation(line: 1961, column: 42, scope: !2706)
!2739 = !DILocation(line: 1961, column: 6, scope: !2706)
!2740 = distinct !{!2740, !2710, !2741}
!2741 = !DILocation(line: 1969, column: 3, scope: !2703)
!2742 = !DILocation(line: 1970, column: 6, scope: !2699)
!2743 = !DILocation(line: 1971, column: 2, scope: !2686)
!2744 = !DILocation(line: 1955, column: 42, scope: !2681)
!2745 = !DILocation(line: 1955, column: 5, scope: !2681)
!2746 = distinct !{!2746, !2684, !2747}
!2747 = !DILocation(line: 1971, column: 2, scope: !2678)
!2748 = !DILocation(line: 1972, column: 5, scope: !2546)
!2749 = distinct !DISubprogram(name: "show_stats", scope: !3, file: !3, line: 2131, type: !227, scopeLine: 2132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2750 = !DILocalVariable(name: "client_data", arg: 1, scope: !2749, file: !3, line: 2131, type: !229)
!2751 = !DILocation(line: 2131, column: 24, scope: !2749)
!2752 = !DILocalVariable(name: "nowP", arg: 2, scope: !2749, file: !3, line: 2131, type: !211)
!2753 = !DILocation(line: 2131, column: 53, scope: !2749)
!2754 = !DILocation(line: 2133, column: 15, scope: !2749)
!2755 = !DILocation(line: 2133, column: 5, scope: !2749)
!2756 = !DILocation(line: 2134, column: 5, scope: !2749)
!2757 = distinct !DISubprogram(name: "re_open_logfile", scope: !3, file: !3, line: 331, type: !2758, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{null}
!2760 = !DILocalVariable(name: "logfp", scope: !2757, file: !3, line: 333, type: !50)
!2761 = !DILocation(line: 333, column: 11, scope: !2757)
!2762 = !DILocation(line: 335, column: 10, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 335, column: 10)
!2764 = !DILocation(line: 335, column: 17, scope: !2763)
!2765 = !DILocation(line: 335, column: 20, scope: !2763)
!2766 = !DILocation(line: 335, column: 23, scope: !2763)
!2767 = !DILocation(line: 335, column: 10, scope: !2757)
!2768 = !DILocation(line: 336, column: 2, scope: !2763)
!2769 = !DILocation(line: 339, column: 10, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 339, column: 10)
!2771 = !DILocation(line: 339, column: 18, scope: !2770)
!2772 = !DILocation(line: 339, column: 31, scope: !2770)
!2773 = !DILocation(line: 339, column: 42, scope: !2770)
!2774 = !DILocation(line: 339, column: 34, scope: !2770)
!2775 = !DILocation(line: 339, column: 57, scope: !2770)
!2776 = !DILocation(line: 339, column: 10, scope: !2757)
!2777 = !DILocation(line: 341, column: 2, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 340, column: 2)
!2779 = !DILocation(line: 342, column: 17, scope: !2778)
!2780 = !DILocation(line: 342, column: 10, scope: !2778)
!2781 = !DILocation(line: 342, column: 8, scope: !2778)
!2782 = !DILocation(line: 343, column: 7, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2778, file: !3, line: 343, column: 7)
!2784 = !DILocation(line: 343, column: 13, scope: !2783)
!2785 = !DILocation(line: 343, column: 7, scope: !2778)
!2786 = !DILocation(line: 345, column: 49, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2783, file: !3, line: 344, column: 6)
!2788 = !DILocation(line: 345, column: 6, scope: !2787)
!2789 = !DILocation(line: 346, column: 6, scope: !2787)
!2790 = !DILocation(line: 348, column: 24, scope: !2778)
!2791 = !DILocation(line: 348, column: 16, scope: !2778)
!2792 = !DILocation(line: 348, column: 9, scope: !2778)
!2793 = !DILocation(line: 349, column: 19, scope: !2778)
!2794 = !DILocation(line: 349, column: 23, scope: !2778)
!2795 = !DILocation(line: 349, column: 2, scope: !2778)
!2796 = !DILocation(line: 350, column: 2, scope: !2778)
!2797 = !DILocation(line: 351, column: 5, scope: !2757)
!2798 = distinct !DISubprogram(name: "handle_newconnect", scope: !3, file: !3, line: 1496, type: !2799, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{!26, !211, !26}
!2801 = !DILocalVariable(name: "tvP", arg: 1, scope: !2798, file: !3, line: 1496, type: !211)
!2802 = !DILocation(line: 1496, column: 36, scope: !2798)
!2803 = !DILocalVariable(name: "listen_fd", arg: 2, scope: !2798, file: !3, line: 1496, type: !26)
!2804 = !DILocation(line: 1496, column: 45, scope: !2798)
!2805 = !DILocalVariable(name: "c", scope: !2798, file: !3, line: 1498, type: !248)
!2806 = !DILocation(line: 1498, column: 17, scope: !2798)
!2807 = !DILocalVariable(name: "client_data", scope: !2798, file: !3, line: 1499, type: !229)
!2808 = !DILocation(line: 1499, column: 16, scope: !2798)
!2809 = !DILocation(line: 1505, column: 5, scope: !2798)
!2810 = !DILocation(line: 1508, column: 7, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 1508, column: 7)
!2812 = distinct !DILexicalBlock(scope: !2813, file: !3, line: 1506, column: 2)
!2813 = distinct !DILexicalBlock(scope: !2814, file: !3, line: 1505, column: 5)
!2814 = distinct !DILexicalBlock(scope: !2798, file: !3, line: 1505, column: 5)
!2815 = !DILocation(line: 1508, column: 23, scope: !2811)
!2816 = !DILocation(line: 1508, column: 20, scope: !2811)
!2817 = !DILocation(line: 1508, column: 7, scope: !2812)
!2818 = !DILocation(line: 1514, column: 6, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 1509, column: 6)
!2820 = !DILocation(line: 1515, column: 15, scope: !2819)
!2821 = !DILocation(line: 1515, column: 6, scope: !2819)
!2822 = !DILocation(line: 1516, column: 6, scope: !2819)
!2823 = !DILocation(line: 1519, column: 7, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 1519, column: 7)
!2825 = !DILocation(line: 1519, column: 26, scope: !2824)
!2826 = !DILocation(line: 1519, column: 32, scope: !2824)
!2827 = !DILocation(line: 1519, column: 35, scope: !2824)
!2828 = !DILocation(line: 1519, column: 44, scope: !2824)
!2829 = !DILocation(line: 1519, column: 64, scope: !2824)
!2830 = !DILocation(line: 1519, column: 75, scope: !2824)
!2831 = !DILocation(line: 1519, column: 7, scope: !2812)
!2832 = !DILocation(line: 1521, column: 6, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2824, file: !3, line: 1520, column: 6)
!2834 = !DILocation(line: 1522, column: 6, scope: !2833)
!2835 = !DILocation(line: 1524, column: 7, scope: !2812)
!2836 = !DILocation(line: 1524, column: 16, scope: !2812)
!2837 = !DILocation(line: 1524, column: 4, scope: !2812)
!2838 = !DILocation(line: 1526, column: 7, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 1526, column: 7)
!2840 = !DILocation(line: 1526, column: 10, scope: !2839)
!2841 = !DILocation(line: 1526, column: 13, scope: !2839)
!2842 = !DILocation(line: 1526, column: 7, scope: !2812)
!2843 = !DILocation(line: 1528, column: 14, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 1527, column: 6)
!2845 = !DILocation(line: 1528, column: 6, scope: !2844)
!2846 = !DILocation(line: 1528, column: 9, scope: !2844)
!2847 = !DILocation(line: 1528, column: 12, scope: !2844)
!2848 = !DILocation(line: 1529, column: 11, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2844, file: !3, line: 1529, column: 11)
!2850 = !DILocation(line: 1529, column: 14, scope: !2849)
!2851 = !DILocation(line: 1529, column: 17, scope: !2849)
!2852 = !DILocation(line: 1529, column: 11, scope: !2844)
!2853 = !DILocation(line: 1531, column: 3, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2849, file: !3, line: 1530, column: 3)
!2855 = !DILocation(line: 1532, column: 3, scope: !2854)
!2856 = !DILocation(line: 1534, column: 6, scope: !2844)
!2857 = !DILocation(line: 1534, column: 9, scope: !2844)
!2858 = !DILocation(line: 1534, column: 13, scope: !2844)
!2859 = !DILocation(line: 1534, column: 25, scope: !2844)
!2860 = !DILocation(line: 1535, column: 6, scope: !2844)
!2861 = !DILocation(line: 1536, column: 6, scope: !2844)
!2862 = !DILocation(line: 1539, column: 27, scope: !2812)
!2863 = !DILocation(line: 1539, column: 31, scope: !2812)
!2864 = !DILocation(line: 1539, column: 42, scope: !2812)
!2865 = !DILocation(line: 1539, column: 45, scope: !2812)
!2866 = !DILocation(line: 1539, column: 11, scope: !2812)
!2867 = !DILocation(line: 1539, column: 2, scope: !2812)
!2868 = !DILocation(line: 1545, column: 15, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 1540, column: 6)
!2870 = !DILocation(line: 1545, column: 6, scope: !2869)
!2871 = !DILocation(line: 1546, column: 6, scope: !2869)
!2872 = !DILocation(line: 1550, column: 6, scope: !2869)
!2873 = !DILocation(line: 1552, column: 2, scope: !2812)
!2874 = !DILocation(line: 1552, column: 5, scope: !2812)
!2875 = !DILocation(line: 1552, column: 16, scope: !2812)
!2876 = !DILocation(line: 1554, column: 23, scope: !2812)
!2877 = !DILocation(line: 1554, column: 26, scope: !2812)
!2878 = !DILocation(line: 1554, column: 21, scope: !2812)
!2879 = !DILocation(line: 1555, column: 2, scope: !2812)
!2880 = !DILocation(line: 1555, column: 5, scope: !2812)
!2881 = !DILocation(line: 1555, column: 23, scope: !2812)
!2882 = !DILocation(line: 1556, column: 2, scope: !2812)
!2883 = !DILocation(line: 1557, column: 18, scope: !2812)
!2884 = !DILocation(line: 1557, column: 14, scope: !2812)
!2885 = !DILocation(line: 1557, column: 16, scope: !2812)
!2886 = !DILocation(line: 1558, column: 17, scope: !2812)
!2887 = !DILocation(line: 1558, column: 22, scope: !2812)
!2888 = !DILocation(line: 1558, column: 2, scope: !2812)
!2889 = !DILocation(line: 1558, column: 5, scope: !2812)
!2890 = !DILocation(line: 1558, column: 15, scope: !2812)
!2891 = !DILocation(line: 1559, column: 2, scope: !2812)
!2892 = !DILocation(line: 1559, column: 5, scope: !2812)
!2893 = !DILocation(line: 1559, column: 18, scope: !2812)
!2894 = !DILocation(line: 1560, column: 2, scope: !2812)
!2895 = !DILocation(line: 1560, column: 5, scope: !2812)
!2896 = !DILocation(line: 1560, column: 18, scope: !2812)
!2897 = !DILocation(line: 1561, column: 2, scope: !2812)
!2898 = !DILocation(line: 1561, column: 5, scope: !2812)
!2899 = !DILocation(line: 1561, column: 21, scope: !2812)
!2900 = !DILocation(line: 1562, column: 2, scope: !2812)
!2901 = !DILocation(line: 1562, column: 5, scope: !2812)
!2902 = !DILocation(line: 1562, column: 14, scope: !2812)
!2903 = !DILocation(line: 1565, column: 20, scope: !2812)
!2904 = !DILocation(line: 1565, column: 23, scope: !2812)
!2905 = !DILocation(line: 1565, column: 27, scope: !2812)
!2906 = !DILocation(line: 1565, column: 2, scope: !2812)
!2907 = !DILocation(line: 1567, column: 18, scope: !2812)
!2908 = !DILocation(line: 1567, column: 21, scope: !2812)
!2909 = !DILocation(line: 1567, column: 25, scope: !2812)
!2910 = !DILocation(line: 1567, column: 34, scope: !2812)
!2911 = !DILocation(line: 1567, column: 2, scope: !2812)
!2912 = !DILocation(line: 1569, column: 2, scope: !2812)
!2913 = !DILocation(line: 1570, column: 7, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 1570, column: 7)
!2915 = !DILocation(line: 1570, column: 22, scope: !2914)
!2916 = !DILocation(line: 1570, column: 20, scope: !2914)
!2917 = !DILocation(line: 1570, column: 7, scope: !2812)
!2918 = !DILocation(line: 1571, column: 27, scope: !2914)
!2919 = !DILocation(line: 1571, column: 25, scope: !2914)
!2920 = !DILocation(line: 1571, column: 6, scope: !2914)
!2921 = !DILocation(line: 1505, column: 5, scope: !2813)
!2922 = distinct !{!2922, !2923, !2924}
!2923 = !DILocation(line: 1505, column: 5, scope: !2814)
!2924 = !DILocation(line: 1572, column: 2, scope: !2814)
!2925 = !DILocation(line: 1573, column: 5, scope: !2798)
!2926 = distinct !DISubprogram(name: "clear_connection", scope: !3, file: !3, line: 1987, type: !2927, scopeLine: 1988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!2927 = !DISubroutineType(types: !2928)
!2928 = !{null, !248, !211}
!2929 = !DILocalVariable(name: "c", arg: 1, scope: !2926, file: !3, line: 1987, type: !248)
!2930 = !DILocation(line: 1987, column: 31, scope: !2926)
!2931 = !DILocalVariable(name: "tvP", arg: 2, scope: !2926, file: !3, line: 1987, type: !211)
!2932 = !DILocation(line: 1987, column: 50, scope: !2926)
!2933 = !DILocalVariable(name: "client_data", scope: !2926, file: !3, line: 1989, type: !229)
!2934 = !DILocation(line: 1989, column: 16, scope: !2926)
!2935 = !DILocation(line: 1991, column: 10, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 1991, column: 10)
!2937 = !DILocation(line: 1991, column: 13, scope: !2936)
!2938 = !DILocation(line: 1991, column: 26, scope: !2936)
!2939 = !DILocation(line: 1991, column: 10, scope: !2926)
!2940 = !DILocation(line: 1993, column: 14, scope: !2941)
!2941 = distinct !DILexicalBlock(scope: !2936, file: !3, line: 1992, column: 2)
!2942 = !DILocation(line: 1993, column: 17, scope: !2941)
!2943 = !DILocation(line: 1993, column: 2, scope: !2941)
!2944 = !DILocation(line: 1994, column: 2, scope: !2941)
!2945 = !DILocation(line: 1994, column: 5, scope: !2941)
!2946 = !DILocation(line: 1994, column: 18, scope: !2941)
!2947 = !DILocation(line: 1995, column: 2, scope: !2941)
!2948 = !DILocation(line: 2008, column: 10, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 2008, column: 10)
!2950 = !DILocation(line: 2008, column: 13, scope: !2949)
!2951 = !DILocation(line: 2008, column: 24, scope: !2949)
!2952 = !DILocation(line: 2008, column: 10, scope: !2926)
!2953 = !DILocation(line: 2011, column: 14, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 2009, column: 2)
!2955 = !DILocation(line: 2011, column: 17, scope: !2954)
!2956 = !DILocation(line: 2011, column: 2, scope: !2954)
!2957 = !DILocation(line: 2012, column: 2, scope: !2954)
!2958 = !DILocation(line: 2012, column: 5, scope: !2954)
!2959 = !DILocation(line: 2012, column: 18, scope: !2954)
!2960 = !DILocation(line: 2013, column: 2, scope: !2954)
!2961 = !DILocation(line: 2013, column: 5, scope: !2954)
!2962 = !DILocation(line: 2013, column: 9, scope: !2954)
!2963 = !DILocation(line: 2013, column: 23, scope: !2954)
!2964 = !DILocation(line: 2014, column: 2, scope: !2954)
!2965 = !DILocation(line: 2015, column: 10, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 2015, column: 10)
!2967 = !DILocation(line: 2015, column: 13, scope: !2966)
!2968 = !DILocation(line: 2015, column: 17, scope: !2966)
!2969 = !DILocation(line: 2015, column: 10, scope: !2926)
!2970 = !DILocation(line: 2017, column: 7, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 2017, column: 7)
!2972 = distinct !DILexicalBlock(scope: !2966, file: !3, line: 2016, column: 2)
!2973 = !DILocation(line: 2017, column: 10, scope: !2971)
!2974 = !DILocation(line: 2017, column: 21, scope: !2971)
!2975 = !DILocation(line: 2017, column: 7, scope: !2972)
!2976 = !DILocation(line: 2018, column: 22, scope: !2971)
!2977 = !DILocation(line: 2018, column: 25, scope: !2971)
!2978 = !DILocation(line: 2018, column: 29, scope: !2971)
!2979 = !DILocation(line: 2018, column: 6, scope: !2971)
!2980 = !DILocation(line: 2019, column: 2, scope: !2972)
!2981 = !DILocation(line: 2019, column: 5, scope: !2972)
!2982 = !DILocation(line: 2019, column: 16, scope: !2972)
!2983 = !DILocation(line: 2020, column: 12, scope: !2972)
!2984 = !DILocation(line: 2020, column: 15, scope: !2972)
!2985 = !DILocation(line: 2020, column: 19, scope: !2972)
!2986 = !DILocation(line: 2020, column: 2, scope: !2972)
!2987 = !DILocation(line: 2021, column: 18, scope: !2972)
!2988 = !DILocation(line: 2021, column: 21, scope: !2972)
!2989 = !DILocation(line: 2021, column: 25, scope: !2972)
!2990 = !DILocation(line: 2021, column: 34, scope: !2972)
!2991 = !DILocation(line: 2021, column: 2, scope: !2972)
!2992 = !DILocation(line: 2022, column: 18, scope: !2972)
!2993 = !DILocation(line: 2022, column: 14, scope: !2972)
!2994 = !DILocation(line: 2022, column: 16, scope: !2972)
!2995 = !DILocation(line: 2023, column: 7, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 2023, column: 7)
!2997 = !DILocation(line: 2023, column: 10, scope: !2996)
!2998 = !DILocation(line: 2023, column: 23, scope: !2996)
!2999 = !DILocation(line: 2023, column: 7, scope: !2972)
!3000 = !DILocation(line: 2024, column: 6, scope: !2996)
!3001 = !DILocation(line: 2026, column: 6, scope: !2972)
!3002 = !DILocation(line: 2025, column: 20, scope: !2972)
!3003 = !DILocation(line: 2025, column: 2, scope: !2972)
!3004 = !DILocation(line: 2025, column: 5, scope: !2972)
!3005 = !DILocation(line: 2025, column: 18, scope: !2972)
!3006 = !DILocation(line: 2027, column: 7, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 2027, column: 7)
!3008 = !DILocation(line: 2027, column: 10, scope: !3007)
!3009 = !DILocation(line: 2027, column: 23, scope: !3007)
!3010 = !DILocation(line: 2027, column: 7, scope: !2972)
!3011 = !DILocation(line: 2029, column: 6, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3007, file: !3, line: 2028, column: 6)
!3013 = !DILocation(line: 2030, column: 6, scope: !3012)
!3014 = !DILocation(line: 2032, column: 2, scope: !2972)
!3015 = !DILocation(line: 2034, column: 27, scope: !2966)
!3016 = !DILocation(line: 2034, column: 30, scope: !2966)
!3017 = !DILocation(line: 2034, column: 2, scope: !2966)
!3018 = !DILocation(line: 2035, column: 5, scope: !2926)
!3019 = distinct !DISubprogram(name: "handle_read", scope: !3, file: !3, line: 1577, type: !2927, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3020 = !DILocalVariable(name: "c", arg: 1, scope: !3019, file: !3, line: 1577, type: !248)
!3021 = !DILocation(line: 1577, column: 26, scope: !3019)
!3022 = !DILocalVariable(name: "tvP", arg: 2, scope: !3019, file: !3, line: 1577, type: !211)
!3023 = !DILocation(line: 1577, column: 45, scope: !3019)
!3024 = !DILocalVariable(name: "sz", scope: !3019, file: !3, line: 1579, type: !26)
!3025 = !DILocation(line: 1579, column: 9, scope: !3019)
!3026 = !DILocalVariable(name: "client_data", scope: !3019, file: !3, line: 1580, type: !229)
!3027 = !DILocation(line: 1580, column: 16, scope: !3019)
!3028 = !DILocalVariable(name: "hc", scope: !3019, file: !3, line: 1581, type: !255)
!3029 = !DILocation(line: 1581, column: 17, scope: !3019)
!3030 = !DILocation(line: 1581, column: 22, scope: !3019)
!3031 = !DILocation(line: 1581, column: 25, scope: !3019)
!3032 = !DILocation(line: 1584, column: 10, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 1584, column: 10)
!3034 = !DILocation(line: 1584, column: 14, scope: !3033)
!3035 = !DILocation(line: 1584, column: 26, scope: !3033)
!3036 = !DILocation(line: 1584, column: 30, scope: !3033)
!3037 = !DILocation(line: 1584, column: 23, scope: !3033)
!3038 = !DILocation(line: 1584, column: 10, scope: !3019)
!3039 = !DILocation(line: 1586, column: 7, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 1586, column: 7)
!3041 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 1585, column: 2)
!3042 = !DILocation(line: 1586, column: 11, scope: !3040)
!3043 = !DILocation(line: 1586, column: 21, scope: !3040)
!3044 = !DILocation(line: 1586, column: 7, scope: !3041)
!3045 = !DILocation(line: 1588, column: 22, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 1587, column: 6)
!3047 = !DILocation(line: 1588, column: 31, scope: !3046)
!3048 = !DILocation(line: 1588, column: 54, scope: !3046)
!3049 = !DILocation(line: 1588, column: 6, scope: !3046)
!3050 = !DILocation(line: 1589, column: 25, scope: !3046)
!3051 = !DILocation(line: 1589, column: 28, scope: !3046)
!3052 = !DILocation(line: 1589, column: 6, scope: !3046)
!3053 = !DILocation(line: 1590, column: 6, scope: !3046)
!3054 = !DILocation(line: 1593, column: 7, scope: !3041)
!3055 = !DILocation(line: 1593, column: 11, scope: !3041)
!3056 = !DILocation(line: 1593, column: 22, scope: !3041)
!3057 = !DILocation(line: 1593, column: 26, scope: !3041)
!3058 = !DILocation(line: 1593, column: 37, scope: !3041)
!3059 = !DILocation(line: 1593, column: 41, scope: !3041)
!3060 = !DILocation(line: 1593, column: 51, scope: !3041)
!3061 = !DILocation(line: 1592, column: 2, scope: !3041)
!3062 = !DILocation(line: 1594, column: 2, scope: !3041)
!3063 = !DILocation(line: 1598, column: 2, scope: !3019)
!3064 = !DILocation(line: 1598, column: 6, scope: !3019)
!3065 = !DILocation(line: 1598, column: 17, scope: !3019)
!3066 = !DILocation(line: 1598, column: 21, scope: !3019)
!3067 = !DILocation(line: 1598, column: 30, scope: !3019)
!3068 = !DILocation(line: 1598, column: 34, scope: !3019)
!3069 = !DILocation(line: 1599, column: 2, scope: !3019)
!3070 = !DILocation(line: 1599, column: 6, scope: !3019)
!3071 = !DILocation(line: 1599, column: 18, scope: !3019)
!3072 = !DILocation(line: 1599, column: 22, scope: !3019)
!3073 = !DILocation(line: 1599, column: 16, scope: !3019)
!3074 = !DILocation(line: 1597, column: 10, scope: !3019)
!3075 = !DILocation(line: 1597, column: 8, scope: !3019)
!3076 = !DILocation(line: 1600, column: 10, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 1600, column: 10)
!3078 = !DILocation(line: 1600, column: 13, scope: !3077)
!3079 = !DILocation(line: 1600, column: 10, scope: !3019)
!3080 = !DILocation(line: 1602, column: 18, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3077, file: !3, line: 1601, column: 2)
!3082 = !DILocation(line: 1602, column: 27, scope: !3081)
!3083 = !DILocation(line: 1602, column: 50, scope: !3081)
!3084 = !DILocation(line: 1602, column: 2, scope: !3081)
!3085 = !DILocation(line: 1603, column: 21, scope: !3081)
!3086 = !DILocation(line: 1603, column: 24, scope: !3081)
!3087 = !DILocation(line: 1603, column: 2, scope: !3081)
!3088 = !DILocation(line: 1604, column: 2, scope: !3081)
!3089 = !DILocation(line: 1606, column: 10, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 1606, column: 10)
!3091 = !DILocation(line: 1606, column: 13, scope: !3090)
!3092 = !DILocation(line: 1606, column: 10, scope: !3019)
!3093 = !DILocation(line: 1613, column: 7, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3095, file: !3, line: 1613, column: 7)
!3095 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 1607, column: 2)
!3096 = !DILocation(line: 1613, column: 13, scope: !3094)
!3097 = !DILocation(line: 1613, column: 22, scope: !3094)
!3098 = !DILocation(line: 1613, column: 25, scope: !3094)
!3099 = !DILocation(line: 1613, column: 31, scope: !3094)
!3100 = !DILocation(line: 1613, column: 41, scope: !3094)
!3101 = !DILocation(line: 1613, column: 44, scope: !3094)
!3102 = !DILocation(line: 1613, column: 50, scope: !3094)
!3103 = !DILocation(line: 1613, column: 7, scope: !3095)
!3104 = !DILocation(line: 1614, column: 6, scope: !3094)
!3105 = !DILocation(line: 1616, column: 6, scope: !3095)
!3106 = !DILocation(line: 1616, column: 15, scope: !3095)
!3107 = !DILocation(line: 1616, column: 38, scope: !3095)
!3108 = !DILocation(line: 1615, column: 2, scope: !3095)
!3109 = !DILocation(line: 1617, column: 21, scope: !3095)
!3110 = !DILocation(line: 1617, column: 24, scope: !3095)
!3111 = !DILocation(line: 1617, column: 2, scope: !3095)
!3112 = !DILocation(line: 1618, column: 2, scope: !3095)
!3113 = !DILocation(line: 1620, column: 21, scope: !3019)
!3114 = !DILocation(line: 1620, column: 5, scope: !3019)
!3115 = !DILocation(line: 1620, column: 9, scope: !3019)
!3116 = !DILocation(line: 1620, column: 18, scope: !3019)
!3117 = !DILocation(line: 1621, column: 20, scope: !3019)
!3118 = !DILocation(line: 1621, column: 25, scope: !3019)
!3119 = !DILocation(line: 1621, column: 5, scope: !3019)
!3120 = !DILocation(line: 1621, column: 8, scope: !3019)
!3121 = !DILocation(line: 1621, column: 18, scope: !3019)
!3122 = !DILocation(line: 1624, column: 33, scope: !3019)
!3123 = !DILocation(line: 1624, column: 14, scope: !3019)
!3124 = !DILocation(line: 1624, column: 5, scope: !3019)
!3125 = !DILocation(line: 1627, column: 2, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 1625, column: 2)
!3127 = !DILocation(line: 1629, column: 18, scope: !3126)
!3128 = !DILocation(line: 1629, column: 27, scope: !3126)
!3129 = !DILocation(line: 1629, column: 50, scope: !3126)
!3130 = !DILocation(line: 1629, column: 2, scope: !3126)
!3131 = !DILocation(line: 1630, column: 21, scope: !3126)
!3132 = !DILocation(line: 1630, column: 24, scope: !3126)
!3133 = !DILocation(line: 1630, column: 2, scope: !3126)
!3134 = !DILocation(line: 1631, column: 2, scope: !3126)
!3135 = !DILocation(line: 1635, column: 31, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 1635, column: 10)
!3137 = !DILocation(line: 1635, column: 10, scope: !3136)
!3138 = !DILocation(line: 1635, column: 36, scope: !3136)
!3139 = !DILocation(line: 1635, column: 10, scope: !3019)
!3140 = !DILocation(line: 1637, column: 21, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3136, file: !3, line: 1636, column: 2)
!3142 = !DILocation(line: 1637, column: 24, scope: !3141)
!3143 = !DILocation(line: 1637, column: 2, scope: !3141)
!3144 = !DILocation(line: 1638, column: 2, scope: !3141)
!3145 = !DILocation(line: 1642, column: 29, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 1642, column: 10)
!3147 = !DILocation(line: 1642, column: 12, scope: !3146)
!3148 = !DILocation(line: 1642, column: 10, scope: !3019)
!3149 = !DILocation(line: 1645, column: 6, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3146, file: !3, line: 1643, column: 2)
!3151 = !DILocation(line: 1645, column: 15, scope: !3150)
!3152 = !DILocation(line: 1645, column: 38, scope: !3150)
!3153 = !DILocation(line: 1645, column: 56, scope: !3150)
!3154 = !DILocation(line: 1645, column: 60, scope: !3150)
!3155 = !DILocation(line: 1644, column: 2, scope: !3150)
!3156 = !DILocation(line: 1646, column: 21, scope: !3150)
!3157 = !DILocation(line: 1646, column: 24, scope: !3150)
!3158 = !DILocation(line: 1646, column: 2, scope: !3150)
!3159 = !DILocation(line: 1647, column: 2, scope: !3150)
!3160 = !DILocation(line: 1651, column: 31, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 1651, column: 10)
!3162 = !DILocation(line: 1651, column: 35, scope: !3161)
!3163 = !DILocation(line: 1651, column: 10, scope: !3161)
!3164 = !DILocation(line: 1651, column: 41, scope: !3161)
!3165 = !DILocation(line: 1651, column: 10, scope: !3019)
!3166 = !DILocation(line: 1654, column: 21, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3161, file: !3, line: 1652, column: 2)
!3168 = !DILocation(line: 1654, column: 24, scope: !3167)
!3169 = !DILocation(line: 1654, column: 2, scope: !3167)
!3170 = !DILocation(line: 1655, column: 2, scope: !3167)
!3171 = !DILocation(line: 1659, column: 10, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 1659, column: 10)
!3173 = !DILocation(line: 1659, column: 14, scope: !3172)
!3174 = !DILocation(line: 1659, column: 10, scope: !3019)
!3175 = !DILocation(line: 1661, column: 23, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3172, file: !3, line: 1660, column: 2)
!3177 = !DILocation(line: 1661, column: 27, scope: !3176)
!3178 = !DILocation(line: 1661, column: 2, scope: !3176)
!3179 = !DILocation(line: 1661, column: 5, scope: !3176)
!3180 = !DILocation(line: 1661, column: 21, scope: !3176)
!3181 = !DILocation(line: 1662, column: 22, scope: !3176)
!3182 = !DILocation(line: 1662, column: 26, scope: !3176)
!3183 = !DILocation(line: 1662, column: 42, scope: !3176)
!3184 = !DILocation(line: 1662, column: 2, scope: !3176)
!3185 = !DILocation(line: 1662, column: 5, scope: !3176)
!3186 = !DILocation(line: 1662, column: 20, scope: !3176)
!3187 = !DILocation(line: 1663, column: 2, scope: !3176)
!3188 = !DILocation(line: 1664, column: 15, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3172, file: !3, line: 1664, column: 15)
!3190 = !DILocation(line: 1664, column: 19, scope: !3189)
!3191 = !DILocation(line: 1664, column: 33, scope: !3189)
!3192 = !DILocation(line: 1664, column: 15, scope: !3172)
!3193 = !DILocation(line: 1665, column: 2, scope: !3189)
!3194 = !DILocation(line: 1665, column: 5, scope: !3189)
!3195 = !DILocation(line: 1665, column: 20, scope: !3189)
!3196 = !DILocation(line: 1667, column: 22, scope: !3189)
!3197 = !DILocation(line: 1667, column: 26, scope: !3189)
!3198 = !DILocation(line: 1667, column: 2, scope: !3189)
!3199 = !DILocation(line: 1667, column: 5, scope: !3189)
!3200 = !DILocation(line: 1667, column: 20, scope: !3189)
!3201 = !DILocation(line: 1670, column: 10, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 1670, column: 10)
!3203 = !DILocation(line: 1670, column: 14, scope: !3202)
!3204 = !DILocation(line: 1670, column: 27, scope: !3202)
!3205 = !DILocation(line: 1670, column: 10, scope: !3019)
!3206 = !DILocalVariable(name: "tind", scope: !3207, file: !3, line: 1673, type: !26)
!3207 = distinct !DILexicalBlock(scope: !3202, file: !3, line: 1671, column: 2)
!3208 = !DILocation(line: 1673, column: 6, scope: !3207)
!3209 = !DILocation(line: 1674, column: 13, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3207, file: !3, line: 1674, column: 2)
!3211 = !DILocation(line: 1674, column: 8, scope: !3210)
!3212 = !DILocation(line: 1674, column: 18, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 1674, column: 2)
!3214 = !DILocation(line: 1674, column: 25, scope: !3213)
!3215 = !DILocation(line: 1674, column: 28, scope: !3213)
!3216 = !DILocation(line: 1674, column: 23, scope: !3213)
!3217 = !DILocation(line: 1674, column: 2, scope: !3210)
!3218 = !DILocation(line: 1675, column: 51, scope: !3213)
!3219 = !DILocation(line: 1675, column: 55, scope: !3213)
!3220 = !DILocation(line: 1675, column: 6, scope: !3213)
!3221 = !DILocation(line: 1675, column: 16, scope: !3213)
!3222 = !DILocation(line: 1675, column: 19, scope: !3213)
!3223 = !DILocation(line: 1675, column: 25, scope: !3213)
!3224 = !DILocation(line: 1675, column: 32, scope: !3213)
!3225 = !DILocation(line: 1675, column: 48, scope: !3213)
!3226 = !DILocation(line: 1674, column: 38, scope: !3213)
!3227 = !DILocation(line: 1674, column: 2, scope: !3213)
!3228 = distinct !{!3228, !3217, !3229}
!3229 = !DILocation(line: 1675, column: 55, scope: !3210)
!3230 = !DILocation(line: 1676, column: 23, scope: !3207)
!3231 = !DILocation(line: 1676, column: 27, scope: !3207)
!3232 = !DILocation(line: 1676, column: 2, scope: !3207)
!3233 = !DILocation(line: 1676, column: 5, scope: !3207)
!3234 = !DILocation(line: 1676, column: 21, scope: !3207)
!3235 = !DILocation(line: 1677, column: 21, scope: !3207)
!3236 = !DILocation(line: 1677, column: 24, scope: !3207)
!3237 = !DILocation(line: 1677, column: 2, scope: !3207)
!3238 = !DILocation(line: 1678, column: 2, scope: !3207)
!3239 = !DILocation(line: 1680, column: 10, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 1680, column: 10)
!3241 = !DILocation(line: 1680, column: 13, scope: !3240)
!3242 = !DILocation(line: 1680, column: 32, scope: !3240)
!3243 = !DILocation(line: 1680, column: 35, scope: !3240)
!3244 = !DILocation(line: 1680, column: 29, scope: !3240)
!3245 = !DILocation(line: 1680, column: 10, scope: !3019)
!3246 = !DILocation(line: 1683, column: 21, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3240, file: !3, line: 1681, column: 2)
!3248 = !DILocation(line: 1683, column: 24, scope: !3247)
!3249 = !DILocation(line: 1683, column: 2, scope: !3247)
!3250 = !DILocation(line: 1684, column: 2, scope: !3247)
!3251 = !DILocation(line: 1688, column: 5, scope: !3019)
!3252 = !DILocation(line: 1688, column: 8, scope: !3019)
!3253 = !DILocation(line: 1688, column: 19, scope: !3019)
!3254 = !DILocation(line: 1689, column: 21, scope: !3019)
!3255 = !DILocation(line: 1689, column: 26, scope: !3019)
!3256 = !DILocation(line: 1689, column: 5, scope: !3019)
!3257 = !DILocation(line: 1689, column: 8, scope: !3019)
!3258 = !DILocation(line: 1689, column: 19, scope: !3019)
!3259 = !DILocation(line: 1690, column: 5, scope: !3019)
!3260 = !DILocation(line: 1690, column: 8, scope: !3019)
!3261 = !DILocation(line: 1690, column: 25, scope: !3019)
!3262 = !DILocation(line: 1691, column: 21, scope: !3019)
!3263 = !DILocation(line: 1691, column: 17, scope: !3019)
!3264 = !DILocation(line: 1691, column: 19, scope: !3019)
!3265 = !DILocation(line: 1693, column: 21, scope: !3019)
!3266 = !DILocation(line: 1693, column: 25, scope: !3019)
!3267 = !DILocation(line: 1693, column: 5, scope: !3019)
!3268 = !DILocation(line: 1694, column: 21, scope: !3019)
!3269 = !DILocation(line: 1694, column: 25, scope: !3019)
!3270 = !DILocation(line: 1694, column: 34, scope: !3019)
!3271 = !DILocation(line: 1694, column: 5, scope: !3019)
!3272 = !DILocation(line: 1695, column: 5, scope: !3019)
!3273 = distinct !DISubprogram(name: "handle_send", scope: !3, file: !3, line: 1699, type: !2927, scopeLine: 1700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3274 = !DILocalVariable(name: "c", arg: 1, scope: !3273, file: !3, line: 1699, type: !248)
!3275 = !DILocation(line: 1699, column: 26, scope: !3273)
!3276 = !DILocalVariable(name: "tvP", arg: 2, scope: !3273, file: !3, line: 1699, type: !211)
!3277 = !DILocation(line: 1699, column: 45, scope: !3273)
!3278 = !DILocalVariable(name: "max_bytes", scope: !3273, file: !3, line: 1701, type: !264)
!3279 = !DILocation(line: 1701, column: 12, scope: !3273)
!3280 = !DILocalVariable(name: "sz", scope: !3273, file: !3, line: 1702, type: !26)
!3281 = !DILocation(line: 1702, column: 9, scope: !3273)
!3282 = !DILocalVariable(name: "coast", scope: !3273, file: !3, line: 1702, type: !26)
!3283 = !DILocation(line: 1702, column: 13, scope: !3273)
!3284 = !DILocalVariable(name: "client_data", scope: !3273, file: !3, line: 1703, type: !229)
!3285 = !DILocation(line: 1703, column: 16, scope: !3273)
!3286 = !DILocalVariable(name: "elapsed", scope: !3273, file: !3, line: 1704, type: !244)
!3287 = !DILocation(line: 1704, column: 12, scope: !3273)
!3288 = !DILocalVariable(name: "hc", scope: !3273, file: !3, line: 1705, type: !255)
!3289 = !DILocation(line: 1705, column: 17, scope: !3273)
!3290 = !DILocation(line: 1705, column: 22, scope: !3273)
!3291 = !DILocation(line: 1705, column: 25, scope: !3273)
!3292 = !DILocalVariable(name: "tind", scope: !3273, file: !3, line: 1706, type: !26)
!3293 = !DILocation(line: 1706, column: 9, scope: !3273)
!3294 = !DILocation(line: 1708, column: 10, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 1708, column: 10)
!3296 = !DILocation(line: 1708, column: 13, scope: !3295)
!3297 = !DILocation(line: 1708, column: 23, scope: !3295)
!3298 = !DILocation(line: 1708, column: 10, scope: !3273)
!3299 = !DILocation(line: 1709, column: 12, scope: !3295)
!3300 = !DILocation(line: 1709, column: 2, scope: !3295)
!3301 = !DILocation(line: 1711, column: 14, scope: !3295)
!3302 = !DILocation(line: 1711, column: 17, scope: !3295)
!3303 = !DILocation(line: 1711, column: 27, scope: !3295)
!3304 = !DILocation(line: 1711, column: 12, scope: !3295)
!3305 = !DILocation(line: 1714, column: 10, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 1714, column: 10)
!3307 = !DILocation(line: 1714, column: 14, scope: !3306)
!3308 = !DILocation(line: 1714, column: 26, scope: !3306)
!3309 = !DILocation(line: 1714, column: 10, scope: !3273)
!3310 = !DILocation(line: 1718, column: 6, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 1715, column: 2)
!3312 = !DILocation(line: 1718, column: 10, scope: !3311)
!3313 = !DILocation(line: 1718, column: 21, scope: !3311)
!3314 = !DILocation(line: 1718, column: 25, scope: !3311)
!3315 = !DILocation(line: 1718, column: 38, scope: !3311)
!3316 = !DILocation(line: 1718, column: 41, scope: !3311)
!3317 = !DILocation(line: 1719, column: 6, scope: !3311)
!3318 = !DILocation(line: 1717, column: 7, scope: !3311)
!3319 = !DILocation(line: 1717, column: 5, scope: !3311)
!3320 = !DILocation(line: 1720, column: 2, scope: !3311)
!3321 = !DILocalVariable(name: "iv", scope: !3322, file: !3, line: 1726, type: !3323)
!3322 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 1722, column: 2)
!3323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3324, size: 256, elements: !367)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !3325, line: 31, size: 128, elements: !3326)
!3325 = !DIFile(filename: "/usr/include/sys/_types/_iovec_t.h", directory: "")
!3326 = !{!3327, !3328}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !3324, file: !3325, line: 32, baseType: !70, size: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !3324, file: !3325, line: 33, baseType: !264, size: 64, offset: 64)
!3329 = !DILocation(line: 1726, column: 15, scope: !3322)
!3330 = !DILocation(line: 1728, column: 19, scope: !3322)
!3331 = !DILocation(line: 1728, column: 23, scope: !3322)
!3332 = !DILocation(line: 1728, column: 2, scope: !3322)
!3333 = !DILocation(line: 1728, column: 8, scope: !3322)
!3334 = !DILocation(line: 1728, column: 17, scope: !3322)
!3335 = !DILocation(line: 1729, column: 18, scope: !3322)
!3336 = !DILocation(line: 1729, column: 22, scope: !3322)
!3337 = !DILocation(line: 1729, column: 2, scope: !3322)
!3338 = !DILocation(line: 1729, column: 8, scope: !3322)
!3339 = !DILocation(line: 1729, column: 16, scope: !3322)
!3340 = !DILocation(line: 1730, column: 21, scope: !3322)
!3341 = !DILocation(line: 1730, column: 25, scope: !3322)
!3342 = !DILocation(line: 1730, column: 38, scope: !3322)
!3343 = !DILocation(line: 1730, column: 41, scope: !3322)
!3344 = !DILocation(line: 1730, column: 2, scope: !3322)
!3345 = !DILocation(line: 1730, column: 8, scope: !3322)
!3346 = !DILocation(line: 1730, column: 17, scope: !3322)
!3347 = !DILocation(line: 1731, column: 18, scope: !3322)
!3348 = !DILocation(line: 1731, column: 2, scope: !3322)
!3349 = !DILocation(line: 1731, column: 8, scope: !3322)
!3350 = !DILocation(line: 1731, column: 16, scope: !3322)
!3351 = !DILocation(line: 1732, column: 15, scope: !3322)
!3352 = !DILocation(line: 1732, column: 19, scope: !3322)
!3353 = !DILocation(line: 1732, column: 28, scope: !3322)
!3354 = !DILocation(line: 1732, column: 7, scope: !3322)
!3355 = !DILocation(line: 1732, column: 5, scope: !3322)
!3356 = !DILocation(line: 1735, column: 10, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 1735, column: 10)
!3358 = !DILocation(line: 1735, column: 13, scope: !3357)
!3359 = !DILocation(line: 1735, column: 17, scope: !3357)
!3360 = !DILocation(line: 1735, column: 20, scope: !3357)
!3361 = !DILocation(line: 1735, column: 26, scope: !3357)
!3362 = !DILocation(line: 1735, column: 10, scope: !3273)
!3363 = !DILocation(line: 1736, column: 2, scope: !3357)
!3364 = !DILocation(line: 1738, column: 10, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 1738, column: 10)
!3366 = !DILocation(line: 1738, column: 13, scope: !3365)
!3367 = !DILocation(line: 1738, column: 18, scope: !3365)
!3368 = !DILocation(line: 1739, column: 5, scope: !3365)
!3369 = !DILocation(line: 1739, column: 8, scope: !3365)
!3370 = !DILocation(line: 1739, column: 12, scope: !3365)
!3371 = !DILocation(line: 1739, column: 17, scope: !3365)
!3372 = !DILocation(line: 1739, column: 23, scope: !3365)
!3373 = !DILocation(line: 1739, column: 38, scope: !3365)
!3374 = !DILocation(line: 1739, column: 41, scope: !3365)
!3375 = !DILocation(line: 1739, column: 47, scope: !3365)
!3376 = !DILocation(line: 1738, column: 10, scope: !3273)
!3377 = !DILocation(line: 1751, column: 2, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3365, file: !3, line: 1740, column: 2)
!3379 = !DILocation(line: 1751, column: 5, scope: !3378)
!3380 = !DILocation(line: 1751, column: 22, scope: !3378)
!3381 = !DILocation(line: 1752, column: 2, scope: !3378)
!3382 = !DILocation(line: 1752, column: 5, scope: !3378)
!3383 = !DILocation(line: 1752, column: 16, scope: !3378)
!3384 = !DILocation(line: 1753, column: 18, scope: !3378)
!3385 = !DILocation(line: 1753, column: 22, scope: !3378)
!3386 = !DILocation(line: 1753, column: 2, scope: !3378)
!3387 = !DILocation(line: 1754, column: 18, scope: !3378)
!3388 = !DILocation(line: 1754, column: 14, scope: !3378)
!3389 = !DILocation(line: 1754, column: 16, scope: !3378)
!3390 = !DILocation(line: 1755, column: 7, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 1755, column: 7)
!3392 = !DILocation(line: 1755, column: 10, scope: !3391)
!3393 = !DILocation(line: 1755, column: 23, scope: !3391)
!3394 = !DILocation(line: 1755, column: 7, scope: !3378)
!3395 = !DILocation(line: 1756, column: 6, scope: !3391)
!3396 = !DILocation(line: 1758, column: 6, scope: !3378)
!3397 = !DILocation(line: 1758, column: 43, scope: !3378)
!3398 = !DILocation(line: 1758, column: 46, scope: !3378)
!3399 = !DILocation(line: 1757, column: 20, scope: !3378)
!3400 = !DILocation(line: 1757, column: 2, scope: !3378)
!3401 = !DILocation(line: 1757, column: 5, scope: !3378)
!3402 = !DILocation(line: 1757, column: 18, scope: !3378)
!3403 = !DILocation(line: 1759, column: 7, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 1759, column: 7)
!3405 = !DILocation(line: 1759, column: 10, scope: !3404)
!3406 = !DILocation(line: 1759, column: 23, scope: !3404)
!3407 = !DILocation(line: 1759, column: 7, scope: !3378)
!3408 = !DILocation(line: 1761, column: 6, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 1760, column: 6)
!3410 = !DILocation(line: 1762, column: 6, scope: !3409)
!3411 = !DILocation(line: 1764, column: 2, scope: !3378)
!3412 = !DILocation(line: 1767, column: 10, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 1767, column: 10)
!3414 = !DILocation(line: 1767, column: 13, scope: !3413)
!3415 = !DILocation(line: 1767, column: 10, scope: !3273)
!3416 = !DILocation(line: 1780, column: 7, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 1780, column: 7)
!3418 = distinct !DILexicalBlock(scope: !3413, file: !3, line: 1768, column: 2)
!3419 = !DILocation(line: 1780, column: 13, scope: !3417)
!3420 = !DILocation(line: 1780, column: 22, scope: !3417)
!3421 = !DILocation(line: 1780, column: 25, scope: !3417)
!3422 = !DILocation(line: 1780, column: 31, scope: !3417)
!3423 = !DILocation(line: 1780, column: 41, scope: !3417)
!3424 = !DILocation(line: 1780, column: 44, scope: !3417)
!3425 = !DILocation(line: 1780, column: 50, scope: !3417)
!3426 = !DILocation(line: 1780, column: 7, scope: !3418)
!3427 = !DILocation(line: 1781, column: 51, scope: !3417)
!3428 = !DILocation(line: 1781, column: 55, scope: !3417)
!3429 = !DILocation(line: 1781, column: 6, scope: !3417)
!3430 = !DILocation(line: 1782, column: 20, scope: !3418)
!3431 = !DILocation(line: 1782, column: 23, scope: !3418)
!3432 = !DILocation(line: 1782, column: 2, scope: !3418)
!3433 = !DILocation(line: 1783, column: 2, scope: !3418)
!3434 = !DILocation(line: 1787, column: 20, scope: !3273)
!3435 = !DILocation(line: 1787, column: 25, scope: !3273)
!3436 = !DILocation(line: 1787, column: 5, scope: !3273)
!3437 = !DILocation(line: 1787, column: 8, scope: !3273)
!3438 = !DILocation(line: 1787, column: 18, scope: !3273)
!3439 = !DILocation(line: 1789, column: 10, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 1789, column: 10)
!3441 = !DILocation(line: 1789, column: 14, scope: !3440)
!3442 = !DILocation(line: 1789, column: 26, scope: !3440)
!3443 = !DILocation(line: 1789, column: 10, scope: !3273)
!3444 = !DILocation(line: 1792, column: 7, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 1792, column: 7)
!3446 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 1790, column: 2)
!3447 = !DILocation(line: 1792, column: 12, scope: !3445)
!3448 = !DILocation(line: 1792, column: 16, scope: !3445)
!3449 = !DILocation(line: 1792, column: 10, scope: !3445)
!3450 = !DILocation(line: 1792, column: 7, scope: !3446)
!3451 = !DILocalVariable(name: "newlen", scope: !3452, file: !3, line: 1795, type: !26)
!3452 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 1793, column: 6)
!3453 = !DILocation(line: 1795, column: 10, scope: !3452)
!3454 = !DILocation(line: 1795, column: 19, scope: !3452)
!3455 = !DILocation(line: 1795, column: 23, scope: !3452)
!3456 = !DILocation(line: 1795, column: 37, scope: !3452)
!3457 = !DILocation(line: 1795, column: 35, scope: !3452)
!3458 = !DILocation(line: 1796, column: 13, scope: !3452)
!3459 = !DILocation(line: 1797, column: 24, scope: !3452)
!3460 = !DILocation(line: 1797, column: 6, scope: !3452)
!3461 = !DILocation(line: 1797, column: 10, scope: !3452)
!3462 = !DILocation(line: 1797, column: 22, scope: !3452)
!3463 = !DILocation(line: 1798, column: 9, scope: !3452)
!3464 = !DILocation(line: 1799, column: 6, scope: !3452)
!3465 = !DILocation(line: 1803, column: 12, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 1801, column: 6)
!3467 = !DILocation(line: 1803, column: 16, scope: !3466)
!3468 = !DILocation(line: 1803, column: 9, scope: !3466)
!3469 = !DILocation(line: 1804, column: 6, scope: !3466)
!3470 = !DILocation(line: 1804, column: 10, scope: !3466)
!3471 = !DILocation(line: 1804, column: 22, scope: !3466)
!3472 = !DILocation(line: 1806, column: 2, scope: !3446)
!3473 = !DILocation(line: 1808, column: 27, scope: !3273)
!3474 = !DILocation(line: 1808, column: 5, scope: !3273)
!3475 = !DILocation(line: 1808, column: 8, scope: !3273)
!3476 = !DILocation(line: 1808, column: 24, scope: !3273)
!3477 = !DILocation(line: 1809, column: 26, scope: !3273)
!3478 = !DILocation(line: 1809, column: 5, scope: !3273)
!3479 = !DILocation(line: 1809, column: 8, scope: !3273)
!3480 = !DILocation(line: 1809, column: 12, scope: !3273)
!3481 = !DILocation(line: 1809, column: 23, scope: !3273)
!3482 = !DILocation(line: 1810, column: 16, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 1810, column: 5)
!3484 = !DILocation(line: 1810, column: 11, scope: !3483)
!3485 = !DILocation(line: 1810, column: 21, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1810, column: 5)
!3487 = !DILocation(line: 1810, column: 28, scope: !3486)
!3488 = !DILocation(line: 1810, column: 31, scope: !3486)
!3489 = !DILocation(line: 1810, column: 26, scope: !3486)
!3490 = !DILocation(line: 1810, column: 5, scope: !3483)
!3491 = !DILocation(line: 1811, column: 47, scope: !3486)
!3492 = !DILocation(line: 1811, column: 2, scope: !3486)
!3493 = !DILocation(line: 1811, column: 12, scope: !3486)
!3494 = !DILocation(line: 1811, column: 15, scope: !3486)
!3495 = !DILocation(line: 1811, column: 21, scope: !3486)
!3496 = !DILocation(line: 1811, column: 28, scope: !3486)
!3497 = !DILocation(line: 1811, column: 44, scope: !3486)
!3498 = !DILocation(line: 1810, column: 41, scope: !3486)
!3499 = !DILocation(line: 1810, column: 5, scope: !3486)
!3500 = distinct !{!3500, !3490, !3501}
!3501 = !DILocation(line: 1811, column: 47, scope: !3483)
!3502 = !DILocation(line: 1814, column: 10, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 1814, column: 10)
!3504 = !DILocation(line: 1814, column: 13, scope: !3503)
!3505 = !DILocation(line: 1814, column: 32, scope: !3503)
!3506 = !DILocation(line: 1814, column: 35, scope: !3503)
!3507 = !DILocation(line: 1814, column: 29, scope: !3503)
!3508 = !DILocation(line: 1814, column: 10, scope: !3273)
!3509 = !DILocation(line: 1817, column: 21, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 1815, column: 2)
!3511 = !DILocation(line: 1817, column: 24, scope: !3510)
!3512 = !DILocation(line: 1817, column: 2, scope: !3510)
!3513 = !DILocation(line: 1818, column: 2, scope: !3510)
!3514 = !DILocation(line: 1822, column: 10, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 1822, column: 10)
!3516 = !DILocation(line: 1822, column: 13, scope: !3515)
!3517 = !DILocation(line: 1822, column: 30, scope: !3515)
!3518 = !DILocation(line: 1822, column: 10, scope: !3273)
!3519 = !DILocation(line: 1823, column: 2, scope: !3515)
!3520 = !DILocation(line: 1823, column: 5, scope: !3515)
!3521 = !DILocation(line: 1823, column: 22, scope: !3515)
!3522 = !DILocation(line: 1826, column: 10, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 1826, column: 10)
!3524 = !DILocation(line: 1826, column: 13, scope: !3523)
!3525 = !DILocation(line: 1826, column: 23, scope: !3523)
!3526 = !DILocation(line: 1826, column: 10, scope: !3273)
!3527 = !DILocation(line: 1828, column: 12, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3523, file: !3, line: 1827, column: 2)
!3529 = !DILocation(line: 1828, column: 17, scope: !3528)
!3530 = !DILocation(line: 1828, column: 26, scope: !3528)
!3531 = !DILocation(line: 1828, column: 29, scope: !3528)
!3532 = !DILocation(line: 1828, column: 24, scope: !3528)
!3533 = !DILocation(line: 1828, column: 10, scope: !3528)
!3534 = !DILocation(line: 1829, column: 7, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 1829, column: 7)
!3536 = !DILocation(line: 1829, column: 15, scope: !3535)
!3537 = !DILocation(line: 1829, column: 7, scope: !3528)
!3538 = !DILocation(line: 1830, column: 14, scope: !3535)
!3539 = !DILocation(line: 1830, column: 6, scope: !3535)
!3540 = !DILocation(line: 1831, column: 7, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 1831, column: 7)
!3542 = !DILocation(line: 1831, column: 10, scope: !3541)
!3543 = !DILocation(line: 1831, column: 14, scope: !3541)
!3544 = !DILocation(line: 1831, column: 27, scope: !3541)
!3545 = !DILocation(line: 1831, column: 25, scope: !3541)
!3546 = !DILocation(line: 1831, column: 37, scope: !3541)
!3547 = !DILocation(line: 1831, column: 40, scope: !3541)
!3548 = !DILocation(line: 1831, column: 35, scope: !3541)
!3549 = !DILocation(line: 1831, column: 7, scope: !3528)
!3550 = !DILocation(line: 1833, column: 6, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3541, file: !3, line: 1832, column: 6)
!3552 = !DILocation(line: 1833, column: 9, scope: !3551)
!3553 = !DILocation(line: 1833, column: 20, scope: !3551)
!3554 = !DILocation(line: 1834, column: 22, scope: !3551)
!3555 = !DILocation(line: 1834, column: 26, scope: !3551)
!3556 = !DILocation(line: 1834, column: 6, scope: !3551)
!3557 = !DILocation(line: 1838, column: 14, scope: !3551)
!3558 = !DILocation(line: 1838, column: 17, scope: !3551)
!3559 = !DILocation(line: 1838, column: 21, scope: !3551)
!3560 = !DILocation(line: 1838, column: 34, scope: !3551)
!3561 = !DILocation(line: 1838, column: 37, scope: !3551)
!3562 = !DILocation(line: 1838, column: 32, scope: !3551)
!3563 = !DILocation(line: 1838, column: 49, scope: !3551)
!3564 = !DILocation(line: 1838, column: 47, scope: !3551)
!3565 = !DILocation(line: 1838, column: 12, scope: !3551)
!3566 = !DILocation(line: 1839, column: 22, scope: !3551)
!3567 = !DILocation(line: 1839, column: 18, scope: !3551)
!3568 = !DILocation(line: 1839, column: 20, scope: !3551)
!3569 = !DILocation(line: 1840, column: 11, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 1840, column: 11)
!3571 = !DILocation(line: 1840, column: 14, scope: !3570)
!3572 = !DILocation(line: 1840, column: 27, scope: !3570)
!3573 = !DILocation(line: 1840, column: 11, scope: !3551)
!3574 = !DILocation(line: 1841, column: 3, scope: !3570)
!3575 = !DILocation(line: 1843, column: 3, scope: !3551)
!3576 = !DILocation(line: 1844, column: 3, scope: !3551)
!3577 = !DILocation(line: 1844, column: 9, scope: !3551)
!3578 = !DILocation(line: 1844, column: 17, scope: !3551)
!3579 = !DILocation(line: 1844, column: 23, scope: !3551)
!3580 = !DILocation(line: 1842, column: 24, scope: !3551)
!3581 = !DILocation(line: 1842, column: 6, scope: !3551)
!3582 = !DILocation(line: 1842, column: 9, scope: !3551)
!3583 = !DILocation(line: 1842, column: 22, scope: !3551)
!3584 = !DILocation(line: 1845, column: 11, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 1845, column: 11)
!3586 = !DILocation(line: 1845, column: 14, scope: !3585)
!3587 = !DILocation(line: 1845, column: 27, scope: !3585)
!3588 = !DILocation(line: 1845, column: 11, scope: !3551)
!3589 = !DILocation(line: 1847, column: 3, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 1846, column: 3)
!3591 = !DILocation(line: 1848, column: 3, scope: !3590)
!3592 = !DILocation(line: 1850, column: 6, scope: !3551)
!3593 = !DILocation(line: 1851, column: 2, scope: !3528)
!3594 = !DILocation(line: 1853, column: 5, scope: !3273)
!3595 = distinct !DISubprogram(name: "handle_linger", scope: !3, file: !3, line: 1857, type: !2927, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3596 = !DILocalVariable(name: "c", arg: 1, scope: !3595, file: !3, line: 1857, type: !248)
!3597 = !DILocation(line: 1857, column: 28, scope: !3595)
!3598 = !DILocalVariable(name: "tvP", arg: 2, scope: !3595, file: !3, line: 1857, type: !211)
!3599 = !DILocation(line: 1857, column: 47, scope: !3595)
!3600 = !DILocalVariable(name: "buf", scope: !3595, file: !3, line: 1859, type: !3601)
!3601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32768, elements: !3602)
!3602 = !{!3603}
!3603 = !DISubrange(count: 4096)
!3604 = !DILocation(line: 1859, column: 10, scope: !3595)
!3605 = !DILocalVariable(name: "r", scope: !3595, file: !3, line: 1860, type: !26)
!3606 = !DILocation(line: 1860, column: 9, scope: !3595)
!3607 = !DILocation(line: 1865, column: 15, scope: !3595)
!3608 = !DILocation(line: 1865, column: 18, scope: !3595)
!3609 = !DILocation(line: 1865, column: 22, scope: !3595)
!3610 = !DILocation(line: 1865, column: 31, scope: !3595)
!3611 = !DILocation(line: 1865, column: 9, scope: !3595)
!3612 = !DILocation(line: 1865, column: 7, scope: !3595)
!3613 = !DILocation(line: 1866, column: 10, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 1866, column: 10)
!3615 = !DILocation(line: 1866, column: 12, scope: !3614)
!3616 = !DILocation(line: 1866, column: 16, scope: !3614)
!3617 = !DILocation(line: 1866, column: 21, scope: !3614)
!3618 = !DILocation(line: 1866, column: 27, scope: !3614)
!3619 = !DILocation(line: 1866, column: 36, scope: !3614)
!3620 = !DILocation(line: 1866, column: 39, scope: !3614)
!3621 = !DILocation(line: 1866, column: 45, scope: !3614)
!3622 = !DILocation(line: 1866, column: 10, scope: !3595)
!3623 = !DILocation(line: 1867, column: 2, scope: !3614)
!3624 = !DILocation(line: 1868, column: 10, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 1868, column: 10)
!3626 = !DILocation(line: 1868, column: 12, scope: !3625)
!3627 = !DILocation(line: 1868, column: 10, scope: !3595)
!3628 = !DILocation(line: 1869, column: 27, scope: !3625)
!3629 = !DILocation(line: 1869, column: 30, scope: !3625)
!3630 = !DILocation(line: 1869, column: 2, scope: !3625)
!3631 = !DILocation(line: 1870, column: 5, scope: !3595)
!3632 = distinct !DISubprogram(name: "shut_down", scope: !3, file: !3, line: 1458, type: !2758, scopeLine: 1459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3633 = !DILocalVariable(name: "cnum", scope: !3632, file: !3, line: 1460, type: !26)
!3634 = !DILocation(line: 1460, column: 9, scope: !3632)
!3635 = !DILocalVariable(name: "tv", scope: !3632, file: !3, line: 1461, type: !212)
!3636 = !DILocation(line: 1461, column: 20, scope: !3632)
!3637 = !DILocation(line: 1463, column: 12, scope: !3632)
!3638 = !DILocation(line: 1464, column: 5, scope: !3632)
!3639 = !DILocation(line: 1465, column: 16, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 1465, column: 5)
!3641 = !DILocation(line: 1465, column: 11, scope: !3640)
!3642 = !DILocation(line: 1465, column: 21, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 1465, column: 5)
!3644 = !DILocation(line: 1465, column: 28, scope: !3643)
!3645 = !DILocation(line: 1465, column: 26, scope: !3643)
!3646 = !DILocation(line: 1465, column: 5, scope: !3640)
!3647 = !DILocation(line: 1467, column: 7, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 1467, column: 7)
!3649 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 1466, column: 2)
!3650 = !DILocation(line: 1467, column: 16, scope: !3648)
!3651 = !DILocation(line: 1467, column: 22, scope: !3648)
!3652 = !DILocation(line: 1467, column: 33, scope: !3648)
!3653 = !DILocation(line: 1467, column: 7, scope: !3649)
!3654 = !DILocation(line: 1468, column: 24, scope: !3648)
!3655 = !DILocation(line: 1468, column: 33, scope: !3648)
!3656 = !DILocation(line: 1468, column: 39, scope: !3648)
!3657 = !DILocation(line: 1468, column: 6, scope: !3648)
!3658 = !DILocation(line: 1469, column: 7, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 1469, column: 7)
!3660 = !DILocation(line: 1469, column: 16, scope: !3659)
!3661 = !DILocation(line: 1469, column: 22, scope: !3659)
!3662 = !DILocation(line: 1469, column: 25, scope: !3659)
!3663 = !DILocation(line: 1469, column: 7, scope: !3649)
!3664 = !DILocation(line: 1471, column: 26, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3659, file: !3, line: 1470, column: 6)
!3666 = !DILocation(line: 1471, column: 35, scope: !3665)
!3667 = !DILocation(line: 1471, column: 41, scope: !3665)
!3668 = !DILocation(line: 1471, column: 6, scope: !3665)
!3669 = !DILocation(line: 1472, column: 20, scope: !3665)
!3670 = !DILocation(line: 1472, column: 29, scope: !3665)
!3671 = !DILocation(line: 1472, column: 35, scope: !3665)
!3672 = !DILocation(line: 1472, column: 12, scope: !3665)
!3673 = !DILocation(line: 1472, column: 6, scope: !3665)
!3674 = !DILocation(line: 1473, column: 6, scope: !3665)
!3675 = !DILocation(line: 1474, column: 6, scope: !3665)
!3676 = !DILocation(line: 1474, column: 15, scope: !3665)
!3677 = !DILocation(line: 1474, column: 21, scope: !3665)
!3678 = !DILocation(line: 1474, column: 24, scope: !3665)
!3679 = !DILocation(line: 1475, column: 6, scope: !3665)
!3680 = !DILocation(line: 1476, column: 2, scope: !3649)
!3681 = !DILocation(line: 1465, column: 42, scope: !3643)
!3682 = !DILocation(line: 1465, column: 5, scope: !3643)
!3683 = distinct !{!3683, !3646, !3684}
!3684 = !DILocation(line: 1476, column: 2, scope: !3640)
!3685 = !DILocation(line: 1477, column: 10, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 1477, column: 10)
!3687 = !DILocation(line: 1477, column: 13, scope: !3686)
!3688 = !DILocation(line: 1477, column: 10, scope: !3632)
!3689 = !DILocalVariable(name: "ths", scope: !3690, file: !3, line: 1479, type: !187)
!3690 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 1478, column: 2)
!3691 = !DILocation(line: 1479, column: 16, scope: !3690)
!3692 = !DILocation(line: 1479, column: 22, scope: !3690)
!3693 = !DILocation(line: 1480, column: 5, scope: !3690)
!3694 = !DILocation(line: 1481, column: 7, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3690, file: !3, line: 1481, column: 7)
!3696 = !DILocation(line: 1481, column: 12, scope: !3695)
!3697 = !DILocation(line: 1481, column: 23, scope: !3695)
!3698 = !DILocation(line: 1481, column: 7, scope: !3690)
!3699 = !DILocation(line: 1482, column: 22, scope: !3695)
!3700 = !DILocation(line: 1482, column: 27, scope: !3695)
!3701 = !DILocation(line: 1482, column: 6, scope: !3695)
!3702 = !DILocation(line: 1483, column: 7, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3690, file: !3, line: 1483, column: 7)
!3704 = !DILocation(line: 1483, column: 12, scope: !3703)
!3705 = !DILocation(line: 1483, column: 23, scope: !3703)
!3706 = !DILocation(line: 1483, column: 7, scope: !3690)
!3707 = !DILocation(line: 1484, column: 22, scope: !3703)
!3708 = !DILocation(line: 1484, column: 27, scope: !3703)
!3709 = !DILocation(line: 1484, column: 6, scope: !3703)
!3710 = !DILocation(line: 1485, column: 19, scope: !3690)
!3711 = !DILocation(line: 1485, column: 2, scope: !3690)
!3712 = !DILocation(line: 1486, column: 2, scope: !3690)
!3713 = !DILocation(line: 1487, column: 5, scope: !3632)
!3714 = !DILocation(line: 1488, column: 5, scope: !3632)
!3715 = !DILocation(line: 1489, column: 19, scope: !3632)
!3716 = !DILocation(line: 1489, column: 11, scope: !3632)
!3717 = !DILocation(line: 1489, column: 5, scope: !3632)
!3718 = !DILocation(line: 1490, column: 10, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 1490, column: 10)
!3720 = !DILocation(line: 1490, column: 20, scope: !3719)
!3721 = !DILocation(line: 1490, column: 10, scope: !3632)
!3722 = !DILocation(line: 1491, column: 16, scope: !3719)
!3723 = !DILocation(line: 1491, column: 8, scope: !3719)
!3724 = !DILocation(line: 1491, column: 2, scope: !3719)
!3725 = !DILocation(line: 1492, column: 5, scope: !3632)
!3726 = distinct !DISubprogram(name: "logstats", scope: !3, file: !3, line: 2140, type: !3727, scopeLine: 2141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{null, !211}
!3729 = !DILocalVariable(name: "nowP", arg: 1, scope: !3726, file: !3, line: 2140, type: !211)
!3730 = !DILocation(line: 2140, column: 27, scope: !3726)
!3731 = !DILocalVariable(name: "tv", scope: !3726, file: !3, line: 2142, type: !212)
!3732 = !DILocation(line: 2142, column: 20, scope: !3726)
!3733 = !DILocalVariable(name: "now", scope: !3726, file: !3, line: 2143, type: !244)
!3734 = !DILocation(line: 2143, column: 12, scope: !3726)
!3735 = !DILocalVariable(name: "up_secs", scope: !3726, file: !3, line: 2144, type: !14)
!3736 = !DILocation(line: 2144, column: 10, scope: !3726)
!3737 = !DILocalVariable(name: "stats_secs", scope: !3726, file: !3, line: 2144, type: !14)
!3738 = !DILocation(line: 2144, column: 19, scope: !3726)
!3739 = !DILocation(line: 2146, column: 10, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 2146, column: 10)
!3741 = !DILocation(line: 2146, column: 15, scope: !3740)
!3742 = !DILocation(line: 2146, column: 10, scope: !3726)
!3743 = !DILocation(line: 2148, column: 9, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3740, file: !3, line: 2147, column: 2)
!3745 = !DILocation(line: 2149, column: 7, scope: !3744)
!3746 = !DILocation(line: 2150, column: 2, scope: !3744)
!3747 = !DILocation(line: 2151, column: 11, scope: !3726)
!3748 = !DILocation(line: 2151, column: 17, scope: !3726)
!3749 = !DILocation(line: 2151, column: 9, scope: !3726)
!3750 = !DILocation(line: 2152, column: 15, scope: !3726)
!3751 = !DILocation(line: 2152, column: 21, scope: !3726)
!3752 = !DILocation(line: 2152, column: 19, scope: !3726)
!3753 = !DILocation(line: 2152, column: 13, scope: !3726)
!3754 = !DILocation(line: 2153, column: 18, scope: !3726)
!3755 = !DILocation(line: 2153, column: 24, scope: !3726)
!3756 = !DILocation(line: 2153, column: 22, scope: !3726)
!3757 = !DILocation(line: 2153, column: 16, scope: !3726)
!3758 = !DILocation(line: 2154, column: 10, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 2154, column: 10)
!3760 = !DILocation(line: 2154, column: 21, scope: !3759)
!3761 = !DILocation(line: 2154, column: 10, scope: !3726)
!3762 = !DILocation(line: 2155, column: 13, scope: !3759)
!3763 = !DILocation(line: 2155, column: 2, scope: !3759)
!3764 = !DILocation(line: 2156, column: 18, scope: !3726)
!3765 = !DILocation(line: 2156, column: 16, scope: !3726)
!3766 = !DILocation(line: 2158, column: 44, scope: !3726)
!3767 = !DILocation(line: 2158, column: 53, scope: !3726)
!3768 = !DILocation(line: 2157, column: 5, scope: !3726)
!3769 = !DILocation(line: 2160, column: 22, scope: !3726)
!3770 = !DILocation(line: 2160, column: 5, scope: !3726)
!3771 = !DILocation(line: 2161, column: 21, scope: !3726)
!3772 = !DILocation(line: 2161, column: 5, scope: !3726)
!3773 = !DILocation(line: 2162, column: 19, scope: !3726)
!3774 = !DILocation(line: 2162, column: 5, scope: !3726)
!3775 = !DILocation(line: 2163, column: 23, scope: !3726)
!3776 = !DILocation(line: 2163, column: 5, scope: !3726)
!3777 = !DILocation(line: 2164, column: 19, scope: !3726)
!3778 = !DILocation(line: 2164, column: 5, scope: !3726)
!3779 = !DILocation(line: 2165, column: 5, scope: !3726)
!3780 = distinct !DISubprogram(name: "thttpd_logstats", scope: !3, file: !3, line: 2170, type: !3781, scopeLine: 2171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{null, !14}
!3783 = !DILocalVariable(name: "secs", arg: 1, scope: !3780, file: !3, line: 2170, type: !14)
!3784 = !DILocation(line: 2170, column: 23, scope: !3780)
!3785 = !DILocation(line: 2172, column: 10, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 2172, column: 10)
!3787 = !DILocation(line: 2172, column: 15, scope: !3786)
!3788 = !DILocation(line: 2172, column: 10, scope: !3780)
!3789 = !DILocation(line: 2175, column: 6, scope: !3786)
!3790 = !DILocation(line: 2175, column: 33, scope: !3786)
!3791 = !DILocation(line: 2175, column: 25, scope: !3786)
!3792 = !DILocation(line: 2175, column: 53, scope: !3786)
!3793 = !DILocation(line: 2175, column: 51, scope: !3786)
!3794 = !DILocation(line: 2176, column: 6, scope: !3786)
!3795 = !DILocation(line: 2176, column: 38, scope: !3786)
!3796 = !DILocation(line: 2177, column: 14, scope: !3786)
!3797 = !DILocation(line: 2177, column: 6, scope: !3786)
!3798 = !DILocation(line: 2177, column: 28, scope: !3786)
!3799 = !DILocation(line: 2177, column: 26, scope: !3786)
!3800 = !DILocation(line: 2177, column: 34, scope: !3786)
!3801 = !DILocation(line: 2173, column: 2, scope: !3786)
!3802 = !DILocation(line: 2178, column: 23, scope: !3780)
!3803 = !DILocation(line: 2179, column: 17, scope: !3780)
!3804 = !DILocation(line: 2180, column: 24, scope: !3780)
!3805 = !DILocation(line: 2181, column: 5, scope: !3780)
!3806 = distinct !DISubprogram(name: "really_clear_connection", scope: !3, file: !3, line: 2039, type: !2927, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3807 = !DILocalVariable(name: "c", arg: 1, scope: !3806, file: !3, line: 2039, type: !248)
!3808 = !DILocation(line: 2039, column: 38, scope: !3806)
!3809 = !DILocalVariable(name: "tvP", arg: 2, scope: !3806, file: !3, line: 2039, type: !211)
!3810 = !DILocation(line: 2039, column: 57, scope: !3806)
!3811 = !DILocation(line: 2041, column: 20, scope: !3806)
!3812 = !DILocation(line: 2041, column: 23, scope: !3806)
!3813 = !DILocation(line: 2041, column: 27, scope: !3806)
!3814 = !DILocation(line: 2041, column: 17, scope: !3806)
!3815 = !DILocation(line: 2042, column: 10, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 2042, column: 10)
!3817 = !DILocation(line: 2042, column: 13, scope: !3816)
!3818 = !DILocation(line: 2042, column: 24, scope: !3816)
!3819 = !DILocation(line: 2042, column: 10, scope: !3806)
!3820 = !DILocation(line: 2043, column: 18, scope: !3816)
!3821 = !DILocation(line: 2043, column: 21, scope: !3816)
!3822 = !DILocation(line: 2043, column: 25, scope: !3816)
!3823 = !DILocation(line: 2043, column: 2, scope: !3816)
!3824 = !DILocation(line: 2044, column: 23, scope: !3806)
!3825 = !DILocation(line: 2044, column: 26, scope: !3806)
!3826 = !DILocation(line: 2044, column: 30, scope: !3806)
!3827 = !DILocation(line: 2044, column: 5, scope: !3806)
!3828 = !DILocation(line: 2045, column: 22, scope: !3806)
!3829 = !DILocation(line: 2045, column: 25, scope: !3806)
!3830 = !DILocation(line: 2045, column: 5, scope: !3806)
!3831 = !DILocation(line: 2046, column: 10, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 2046, column: 10)
!3833 = !DILocation(line: 2046, column: 13, scope: !3832)
!3834 = !DILocation(line: 2046, column: 26, scope: !3832)
!3835 = !DILocation(line: 2046, column: 10, scope: !3806)
!3836 = !DILocation(line: 2048, column: 14, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 2047, column: 2)
!3838 = !DILocation(line: 2048, column: 17, scope: !3837)
!3839 = !DILocation(line: 2048, column: 2, scope: !3837)
!3840 = !DILocation(line: 2049, column: 2, scope: !3837)
!3841 = !DILocation(line: 2049, column: 5, scope: !3837)
!3842 = !DILocation(line: 2049, column: 18, scope: !3837)
!3843 = !DILocation(line: 2050, column: 2, scope: !3837)
!3844 = !DILocation(line: 2051, column: 5, scope: !3806)
!3845 = !DILocation(line: 2051, column: 8, scope: !3806)
!3846 = !DILocation(line: 2051, column: 19, scope: !3806)
!3847 = !DILocation(line: 2052, column: 28, scope: !3806)
!3848 = !DILocation(line: 2052, column: 5, scope: !3806)
!3849 = !DILocation(line: 2052, column: 8, scope: !3806)
!3850 = !DILocation(line: 2052, column: 26, scope: !3806)
!3851 = !DILocation(line: 2053, column: 26, scope: !3806)
!3852 = !DILocation(line: 2053, column: 30, scope: !3806)
!3853 = !DILocation(line: 2053, column: 28, scope: !3806)
!3854 = !DILocation(line: 2053, column: 24, scope: !3806)
!3855 = !DILocation(line: 2054, column: 5, scope: !3806)
!3856 = !DILocation(line: 2055, column: 5, scope: !3806)
!3857 = distinct !DISubprogram(name: "clear_throttles", scope: !3, file: !3, line: 1914, type: !2927, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3858 = !DILocalVariable(name: "c", arg: 1, scope: !3857, file: !3, line: 1914, type: !248)
!3859 = !DILocation(line: 1914, column: 30, scope: !3857)
!3860 = !DILocalVariable(name: "tvP", arg: 2, scope: !3857, file: !3, line: 1914, type: !211)
!3861 = !DILocation(line: 1914, column: 49, scope: !3857)
!3862 = !DILocalVariable(name: "tind", scope: !3857, file: !3, line: 1916, type: !26)
!3863 = !DILocation(line: 1916, column: 9, scope: !3857)
!3864 = !DILocation(line: 1918, column: 16, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 1918, column: 5)
!3866 = !DILocation(line: 1918, column: 11, scope: !3865)
!3867 = !DILocation(line: 1918, column: 21, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3865, file: !3, line: 1918, column: 5)
!3869 = !DILocation(line: 1918, column: 28, scope: !3868)
!3870 = !DILocation(line: 1918, column: 31, scope: !3868)
!3871 = !DILocation(line: 1918, column: 26, scope: !3868)
!3872 = !DILocation(line: 1918, column: 5, scope: !3865)
!3873 = !DILocation(line: 1919, column: 4, scope: !3868)
!3874 = !DILocation(line: 1919, column: 14, scope: !3868)
!3875 = !DILocation(line: 1919, column: 17, scope: !3868)
!3876 = !DILocation(line: 1919, column: 23, scope: !3868)
!3877 = !DILocation(line: 1919, column: 30, scope: !3868)
!3878 = !DILocation(line: 1919, column: 2, scope: !3868)
!3879 = !DILocation(line: 1918, column: 41, scope: !3868)
!3880 = !DILocation(line: 1918, column: 5, scope: !3868)
!3881 = distinct !{!3881, !3872, !3882}
!3882 = !DILocation(line: 1919, column: 30, scope: !3865)
!3883 = !DILocation(line: 1920, column: 5, scope: !3857)
!3884 = distinct !DISubprogram(name: "wakeup_connection", scope: !3, file: !3, line: 2096, type: !227, scopeLine: 2097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3885 = !DILocalVariable(name: "client_data", arg: 1, scope: !3884, file: !3, line: 2096, type: !229)
!3886 = !DILocation(line: 2096, column: 31, scope: !3884)
!3887 = !DILocalVariable(name: "nowP", arg: 2, scope: !3884, file: !3, line: 2096, type: !211)
!3888 = !DILocation(line: 2096, column: 60, scope: !3884)
!3889 = !DILocalVariable(name: "c", scope: !3884, file: !3, line: 2098, type: !248)
!3890 = !DILocation(line: 2098, column: 17, scope: !3884)
!3891 = !DILocation(line: 2100, column: 35, scope: !3884)
!3892 = !DILocation(line: 2100, column: 9, scope: !3884)
!3893 = !DILocation(line: 2100, column: 7, scope: !3884)
!3894 = !DILocation(line: 2101, column: 5, scope: !3884)
!3895 = !DILocation(line: 2101, column: 8, scope: !3884)
!3896 = !DILocation(line: 2101, column: 21, scope: !3884)
!3897 = !DILocation(line: 2102, column: 10, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3884, file: !3, line: 2102, column: 10)
!3899 = !DILocation(line: 2102, column: 13, scope: !3898)
!3900 = !DILocation(line: 2102, column: 24, scope: !3898)
!3901 = !DILocation(line: 2102, column: 10, scope: !3884)
!3902 = !DILocation(line: 2104, column: 2, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 2103, column: 2)
!3904 = !DILocation(line: 2104, column: 5, scope: !3903)
!3905 = !DILocation(line: 2104, column: 16, scope: !3903)
!3906 = !DILocation(line: 2105, column: 18, scope: !3903)
!3907 = !DILocation(line: 2105, column: 21, scope: !3903)
!3908 = !DILocation(line: 2105, column: 25, scope: !3903)
!3909 = !DILocation(line: 2105, column: 34, scope: !3903)
!3910 = !DILocation(line: 2105, column: 2, scope: !3903)
!3911 = !DILocation(line: 2106, column: 2, scope: !3903)
!3912 = !DILocation(line: 2107, column: 5, scope: !3884)
!3913 = distinct !DISubprogram(name: "finish_connection", scope: !3, file: !3, line: 1976, type: !2927, scopeLine: 1977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3914 = !DILocalVariable(name: "c", arg: 1, scope: !3913, file: !3, line: 1976, type: !248)
!3915 = !DILocation(line: 1976, column: 32, scope: !3913)
!3916 = !DILocalVariable(name: "tvP", arg: 2, scope: !3913, file: !3, line: 1976, type: !211)
!3917 = !DILocation(line: 1976, column: 51, scope: !3913)
!3918 = !DILocation(line: 1979, column: 27, scope: !3913)
!3919 = !DILocation(line: 1979, column: 30, scope: !3913)
!3920 = !DILocation(line: 1979, column: 5, scope: !3913)
!3921 = !DILocation(line: 1982, column: 23, scope: !3913)
!3922 = !DILocation(line: 1982, column: 26, scope: !3913)
!3923 = !DILocation(line: 1982, column: 5, scope: !3913)
!3924 = !DILocation(line: 1983, column: 5, scope: !3913)
!3925 = distinct !DISubprogram(name: "check_throttles", scope: !3, file: !3, line: 1874, type: !3926, scopeLine: 1875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{!26, !248}
!3928 = !DILocalVariable(name: "c", arg: 1, scope: !3925, file: !3, line: 1874, type: !248)
!3929 = !DILocation(line: 1874, column: 30, scope: !3925)
!3930 = !DILocalVariable(name: "tnum", scope: !3925, file: !3, line: 1876, type: !26)
!3931 = !DILocation(line: 1876, column: 9, scope: !3925)
!3932 = !DILocalVariable(name: "l", scope: !3925, file: !3, line: 1877, type: !14)
!3933 = !DILocation(line: 1877, column: 10, scope: !3925)
!3934 = !DILocation(line: 1879, column: 5, scope: !3925)
!3935 = !DILocation(line: 1879, column: 8, scope: !3925)
!3936 = !DILocation(line: 1879, column: 17, scope: !3925)
!3937 = !DILocation(line: 1880, column: 20, scope: !3925)
!3938 = !DILocation(line: 1880, column: 23, scope: !3925)
!3939 = !DILocation(line: 1880, column: 33, scope: !3925)
!3940 = !DILocation(line: 1880, column: 5, scope: !3925)
!3941 = !DILocation(line: 1880, column: 8, scope: !3925)
!3942 = !DILocation(line: 1880, column: 18, scope: !3925)
!3943 = !DILocation(line: 1881, column: 16, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3925, file: !3, line: 1881, column: 5)
!3945 = !DILocation(line: 1881, column: 11, scope: !3944)
!3946 = !DILocation(line: 1881, column: 21, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 1881, column: 5)
!3948 = !DILocation(line: 1881, column: 28, scope: !3947)
!3949 = !DILocation(line: 1881, column: 26, scope: !3947)
!3950 = !DILocation(line: 1881, column: 41, scope: !3947)
!3951 = !DILocation(line: 1881, column: 44, scope: !3947)
!3952 = !DILocation(line: 1881, column: 47, scope: !3947)
!3953 = !DILocation(line: 1881, column: 56, scope: !3947)
!3954 = !DILocation(line: 0, scope: !3947)
!3955 = !DILocation(line: 1881, column: 5, scope: !3944)
!3956 = !DILocation(line: 1883, column: 14, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3947, file: !3, line: 1883, column: 7)
!3958 = !DILocation(line: 1883, column: 24, scope: !3957)
!3959 = !DILocation(line: 1883, column: 30, scope: !3957)
!3960 = !DILocation(line: 1883, column: 39, scope: !3957)
!3961 = !DILocation(line: 1883, column: 42, scope: !3957)
!3962 = !DILocation(line: 1883, column: 46, scope: !3957)
!3963 = !DILocation(line: 1883, column: 7, scope: !3957)
!3964 = !DILocation(line: 1883, column: 7, scope: !3947)
!3965 = !DILocation(line: 1886, column: 11, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 1886, column: 11)
!3967 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 1884, column: 6)
!3968 = !DILocation(line: 1886, column: 21, scope: !3966)
!3969 = !DILocation(line: 1886, column: 27, scope: !3966)
!3970 = !DILocation(line: 1886, column: 34, scope: !3966)
!3971 = !DILocation(line: 1886, column: 44, scope: !3966)
!3972 = !DILocation(line: 1886, column: 50, scope: !3966)
!3973 = !DILocation(line: 1886, column: 60, scope: !3966)
!3974 = !DILocation(line: 1886, column: 32, scope: !3966)
!3975 = !DILocation(line: 1886, column: 11, scope: !3967)
!3976 = !DILocation(line: 1887, column: 3, scope: !3966)
!3977 = !DILocation(line: 1889, column: 11, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 1889, column: 11)
!3979 = !DILocation(line: 1889, column: 21, scope: !3978)
!3980 = !DILocation(line: 1889, column: 27, scope: !3978)
!3981 = !DILocation(line: 1889, column: 34, scope: !3978)
!3982 = !DILocation(line: 1889, column: 44, scope: !3978)
!3983 = !DILocation(line: 1889, column: 50, scope: !3978)
!3984 = !DILocation(line: 1889, column: 32, scope: !3978)
!3985 = !DILocation(line: 1889, column: 11, scope: !3967)
!3986 = !DILocation(line: 1890, column: 3, scope: !3978)
!3987 = !DILocation(line: 1891, column: 11, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 1891, column: 11)
!3989 = !DILocation(line: 1891, column: 21, scope: !3988)
!3990 = !DILocation(line: 1891, column: 27, scope: !3988)
!3991 = !DILocation(line: 1891, column: 39, scope: !3988)
!3992 = !DILocation(line: 1891, column: 11, scope: !3967)
!3993 = !DILocation(line: 1893, column: 3, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 1892, column: 3)
!3995 = !DILocation(line: 1894, column: 3, scope: !3994)
!3996 = !DILocation(line: 1894, column: 13, scope: !3994)
!3997 = !DILocation(line: 1894, column: 19, scope: !3994)
!3998 = !DILocation(line: 1894, column: 31, scope: !3994)
!3999 = !DILocation(line: 1895, column: 3, scope: !3994)
!4000 = !DILocation(line: 1896, column: 32, scope: !3967)
!4001 = !DILocation(line: 1896, column: 6, scope: !3967)
!4002 = !DILocation(line: 1896, column: 9, scope: !3967)
!4003 = !DILocation(line: 1896, column: 15, scope: !3967)
!4004 = !DILocation(line: 1896, column: 18, scope: !3967)
!4005 = !DILocation(line: 1896, column: 26, scope: !3967)
!4006 = !DILocation(line: 1896, column: 30, scope: !3967)
!4007 = !DILocation(line: 1897, column: 8, scope: !3967)
!4008 = !DILocation(line: 1897, column: 18, scope: !3967)
!4009 = !DILocation(line: 1897, column: 24, scope: !3967)
!4010 = !DILocation(line: 1897, column: 6, scope: !3967)
!4011 = !DILocation(line: 1898, column: 10, scope: !3967)
!4012 = !DILocation(line: 1898, column: 20, scope: !3967)
!4013 = !DILocation(line: 1898, column: 26, scope: !3967)
!4014 = !DILocation(line: 1898, column: 38, scope: !3967)
!4015 = !DILocation(line: 1898, column: 48, scope: !3967)
!4016 = !DILocation(line: 1898, column: 54, scope: !3967)
!4017 = !DILocation(line: 1898, column: 36, scope: !3967)
!4018 = !DILocation(line: 1898, column: 8, scope: !3967)
!4019 = !DILocation(line: 1899, column: 11, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 1899, column: 11)
!4021 = !DILocation(line: 1899, column: 14, scope: !4020)
!4022 = !DILocation(line: 1899, column: 24, scope: !4020)
!4023 = !DILocation(line: 1899, column: 11, scope: !3967)
!4024 = !DILocation(line: 1900, column: 18, scope: !4020)
!4025 = !DILocation(line: 1900, column: 3, scope: !4020)
!4026 = !DILocation(line: 1900, column: 6, scope: !4020)
!4027 = !DILocation(line: 1900, column: 16, scope: !4020)
!4028 = !DILocation(line: 1902, column: 18, scope: !4020)
!4029 = !DILocation(line: 1902, column: 3, scope: !4020)
!4030 = !DILocation(line: 1902, column: 6, scope: !4020)
!4031 = !DILocation(line: 1902, column: 16, scope: !4020)
!4032 = !DILocation(line: 1903, column: 10, scope: !3967)
!4033 = !DILocation(line: 1903, column: 20, scope: !3967)
!4034 = !DILocation(line: 1903, column: 26, scope: !3967)
!4035 = !DILocation(line: 1903, column: 8, scope: !3967)
!4036 = !DILocation(line: 1904, column: 11, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 1904, column: 11)
!4038 = !DILocation(line: 1904, column: 14, scope: !4037)
!4039 = !DILocation(line: 1904, column: 24, scope: !4037)
!4040 = !DILocation(line: 1904, column: 11, scope: !3967)
!4041 = !DILocation(line: 1905, column: 18, scope: !4037)
!4042 = !DILocation(line: 1905, column: 3, scope: !4037)
!4043 = !DILocation(line: 1905, column: 6, scope: !4037)
!4044 = !DILocation(line: 1905, column: 16, scope: !4037)
!4045 = !DILocation(line: 1907, column: 18, scope: !4037)
!4046 = !DILocation(line: 1907, column: 3, scope: !4037)
!4047 = !DILocation(line: 1907, column: 6, scope: !4037)
!4048 = !DILocation(line: 1907, column: 16, scope: !4037)
!4049 = !DILocation(line: 1908, column: 6, scope: !3967)
!4050 = !DILocation(line: 1883, column: 59, scope: !3957)
!4051 = !DILocation(line: 1882, column: 4, scope: !3947)
!4052 = !DILocation(line: 1881, column: 5, scope: !3947)
!4053 = distinct !{!4053, !3955, !4054}
!4054 = !DILocation(line: 1908, column: 6, scope: !3944)
!4055 = !DILocation(line: 1909, column: 5, scope: !3925)
!4056 = !DILocation(line: 1910, column: 5, scope: !3925)
!4057 = distinct !DISubprogram(name: "linger_clear_connection", scope: !3, file: !3, line: 2110, type: !227, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4058 = !DILocalVariable(name: "client_data", arg: 1, scope: !4057, file: !3, line: 2110, type: !229)
!4059 = !DILocation(line: 2110, column: 37, scope: !4057)
!4060 = !DILocalVariable(name: "nowP", arg: 2, scope: !4057, file: !3, line: 2110, type: !211)
!4061 = !DILocation(line: 2110, column: 66, scope: !4057)
!4062 = !DILocalVariable(name: "c", scope: !4057, file: !3, line: 2112, type: !248)
!4063 = !DILocation(line: 2112, column: 17, scope: !4057)
!4064 = !DILocation(line: 2114, column: 35, scope: !4057)
!4065 = !DILocation(line: 2114, column: 9, scope: !4057)
!4066 = !DILocation(line: 2114, column: 7, scope: !4057)
!4067 = !DILocation(line: 2115, column: 5, scope: !4057)
!4068 = !DILocation(line: 2115, column: 8, scope: !4057)
!4069 = !DILocation(line: 2115, column: 21, scope: !4057)
!4070 = !DILocation(line: 2116, column: 30, scope: !4057)
!4071 = !DILocation(line: 2116, column: 33, scope: !4057)
!4072 = !DILocation(line: 2116, column: 5, scope: !4057)
!4073 = !DILocation(line: 2117, column: 5, scope: !4057)
!4074 = distinct !DISubprogram(name: "e_strdup", scope: !3, file: !3, line: 1211, type: !4075, scopeLine: 1212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{!6, !6}
!4077 = !DILocalVariable(name: "oldstr", arg: 1, scope: !4074, file: !3, line: 1211, type: !6)
!4078 = !DILocation(line: 1211, column: 17, scope: !4074)
!4079 = !DILocalVariable(name: "newstr", scope: !4074, file: !3, line: 1213, type: !6)
!4080 = !DILocation(line: 1213, column: 11, scope: !4074)
!4081 = !DILocation(line: 1215, column: 22, scope: !4074)
!4082 = !DILocation(line: 1215, column: 14, scope: !4074)
!4083 = !DILocation(line: 1215, column: 12, scope: !4074)
!4084 = !DILocation(line: 1216, column: 10, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 1216, column: 10)
!4086 = !DILocation(line: 1216, column: 17, scope: !4085)
!4087 = !DILocation(line: 1216, column: 10, scope: !4074)
!4088 = !DILocation(line: 1218, column: 2, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 1217, column: 2)
!4090 = !DILocation(line: 1219, column: 18, scope: !4089)
!4091 = !DILocation(line: 1219, column: 66, scope: !4089)
!4092 = !DILocation(line: 1219, column: 9, scope: !4089)
!4093 = !DILocation(line: 1220, column: 2, scope: !4089)
!4094 = !DILocation(line: 1222, column: 12, scope: !4074)
!4095 = !DILocation(line: 1222, column: 5, scope: !4074)
!4096 = distinct !DISubprogram(name: "read_config", scope: !3, file: !3, line: 1000, type: !2142, scopeLine: 1001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4097 = !DILocalVariable(name: "filename", arg: 1, scope: !4096, file: !3, line: 1000, type: !6)
!4098 = !DILocation(line: 1000, column: 20, scope: !4096)
!4099 = !DILocalVariable(name: "fp", scope: !4096, file: !3, line: 1002, type: !50)
!4100 = !DILocation(line: 1002, column: 11, scope: !4096)
!4101 = !DILocalVariable(name: "line", scope: !4096, file: !3, line: 1003, type: !4102)
!4102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 80000, elements: !4103)
!4103 = !{!4104}
!4104 = !DISubrange(count: 10000)
!4105 = !DILocation(line: 1003, column: 10, scope: !4096)
!4106 = !DILocalVariable(name: "cp", scope: !4096, file: !3, line: 1004, type: !6)
!4107 = !DILocation(line: 1004, column: 11, scope: !4096)
!4108 = !DILocalVariable(name: "cp2", scope: !4096, file: !3, line: 1005, type: !6)
!4109 = !DILocation(line: 1005, column: 11, scope: !4096)
!4110 = !DILocalVariable(name: "name", scope: !4096, file: !3, line: 1006, type: !6)
!4111 = !DILocation(line: 1006, column: 11, scope: !4096)
!4112 = !DILocalVariable(name: "value", scope: !4096, file: !3, line: 1007, type: !6)
!4113 = !DILocation(line: 1007, column: 11, scope: !4096)
!4114 = !DILocation(line: 1009, column: 17, scope: !4096)
!4115 = !DILocation(line: 1009, column: 10, scope: !4096)
!4116 = !DILocation(line: 1009, column: 8, scope: !4096)
!4117 = !DILocation(line: 1010, column: 10, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4096, file: !3, line: 1010, column: 10)
!4119 = !DILocation(line: 1010, column: 13, scope: !4118)
!4120 = !DILocation(line: 1010, column: 10, scope: !4096)
!4121 = !DILocation(line: 1012, column: 10, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 1011, column: 2)
!4123 = !DILocation(line: 1012, column: 2, scope: !4122)
!4124 = !DILocation(line: 1013, column: 2, scope: !4122)
!4125 = !DILocation(line: 1016, column: 5, scope: !4096)
!4126 = !DILocation(line: 1016, column: 20, scope: !4096)
!4127 = !DILocation(line: 1016, column: 40, scope: !4096)
!4128 = !DILocation(line: 1016, column: 13, scope: !4096)
!4129 = !DILocation(line: 1016, column: 45, scope: !4096)
!4130 = !DILocation(line: 1019, column: 22, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1019, column: 7)
!4132 = distinct !DILexicalBlock(scope: !4096, file: !3, line: 1017, column: 2)
!4133 = !DILocation(line: 1019, column: 14, scope: !4131)
!4134 = !DILocation(line: 1019, column: 12, scope: !4131)
!4135 = !DILocation(line: 1019, column: 36, scope: !4131)
!4136 = !DILocation(line: 1019, column: 7, scope: !4132)
!4137 = !DILocation(line: 1020, column: 7, scope: !4131)
!4138 = !DILocation(line: 1020, column: 10, scope: !4131)
!4139 = !DILocation(line: 1020, column: 6, scope: !4131)
!4140 = !DILocation(line: 1023, column: 7, scope: !4132)
!4141 = !DILocation(line: 1023, column: 5, scope: !4132)
!4142 = !DILocation(line: 1024, column: 16, scope: !4132)
!4143 = !DILocation(line: 1024, column: 8, scope: !4132)
!4144 = !DILocation(line: 1024, column: 5, scope: !4132)
!4145 = !DILocation(line: 1027, column: 2, scope: !4132)
!4146 = !DILocation(line: 1027, column: 11, scope: !4132)
!4147 = !DILocation(line: 1027, column: 10, scope: !4132)
!4148 = !DILocation(line: 1027, column: 14, scope: !4132)
!4149 = !DILocation(line: 1030, column: 12, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 1028, column: 6)
!4151 = !DILocation(line: 1030, column: 26, scope: !4150)
!4152 = !DILocation(line: 1030, column: 17, scope: !4150)
!4153 = !DILocation(line: 1030, column: 15, scope: !4150)
!4154 = !DILocation(line: 1030, column: 10, scope: !4150)
!4155 = !DILocation(line: 1032, column: 6, scope: !4150)
!4156 = !DILocation(line: 1032, column: 15, scope: !4150)
!4157 = !DILocation(line: 1032, column: 14, scope: !4150)
!4158 = !DILocation(line: 1032, column: 19, scope: !4150)
!4159 = !DILocation(line: 1032, column: 26, scope: !4150)
!4160 = !DILocation(line: 1032, column: 30, scope: !4150)
!4161 = !DILocation(line: 1032, column: 29, scope: !4150)
!4162 = !DILocation(line: 1032, column: 34, scope: !4150)
!4163 = !DILocation(line: 1032, column: 42, scope: !4150)
!4164 = !DILocation(line: 1032, column: 46, scope: !4150)
!4165 = !DILocation(line: 1032, column: 45, scope: !4150)
!4166 = !DILocation(line: 1032, column: 50, scope: !4150)
!4167 = !DILocation(line: 1032, column: 58, scope: !4150)
!4168 = !DILocation(line: 1032, column: 62, scope: !4150)
!4169 = !DILocation(line: 1032, column: 61, scope: !4150)
!4170 = !DILocation(line: 1032, column: 66, scope: !4150)
!4171 = !DILocation(line: 1033, column: 7, scope: !4150)
!4172 = !DILocation(line: 1033, column: 10, scope: !4150)
!4173 = distinct !{!4173, !4155, !4174}
!4174 = !DILocation(line: 1033, column: 12, scope: !4150)
!4175 = !DILocation(line: 1035, column: 13, scope: !4150)
!4176 = !DILocation(line: 1035, column: 11, scope: !4150)
!4177 = !DILocation(line: 1036, column: 22, scope: !4150)
!4178 = !DILocation(line: 1036, column: 14, scope: !4150)
!4179 = !DILocation(line: 1036, column: 12, scope: !4150)
!4180 = !DILocation(line: 1037, column: 11, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 1037, column: 11)
!4182 = !DILocation(line: 1037, column: 17, scope: !4181)
!4183 = !DILocation(line: 1037, column: 11, scope: !4150)
!4184 = !DILocation(line: 1038, column: 9, scope: !4181)
!4185 = !DILocation(line: 1038, column: 12, scope: !4181)
!4186 = !DILocation(line: 1038, column: 3, scope: !4181)
!4187 = !DILocation(line: 1040, column: 23, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 1040, column: 11)
!4189 = !DILocation(line: 1040, column: 11, scope: !4188)
!4190 = !DILocation(line: 1040, column: 39, scope: !4188)
!4191 = !DILocation(line: 1040, column: 11, scope: !4150)
!4192 = !DILocation(line: 1042, column: 22, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 1041, column: 3)
!4194 = !DILocation(line: 1042, column: 28, scope: !4193)
!4195 = !DILocation(line: 1042, column: 3, scope: !4193)
!4196 = !DILocation(line: 1043, column: 9, scope: !4193)
!4197 = !DILocation(line: 1044, column: 3, scope: !4193)
!4198 = !DILocation(line: 1045, column: 28, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 1045, column: 16)
!4200 = !DILocation(line: 1045, column: 16, scope: !4199)
!4201 = !DILocation(line: 1045, column: 43, scope: !4199)
!4202 = !DILocation(line: 1045, column: 16, scope: !4188)
!4203 = !DILocation(line: 1047, column: 19, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 1046, column: 3)
!4205 = !DILocation(line: 1047, column: 25, scope: !4204)
!4206 = !DILocation(line: 1047, column: 3, scope: !4204)
!4207 = !DILocation(line: 1048, column: 33, scope: !4204)
!4208 = !DILocation(line: 1048, column: 27, scope: !4204)
!4209 = !DILocation(line: 1048, column: 10, scope: !4204)
!4210 = !DILocation(line: 1048, column: 8, scope: !4204)
!4211 = !DILocation(line: 1049, column: 3, scope: !4204)
!4212 = !DILocation(line: 1050, column: 28, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 1050, column: 16)
!4214 = !DILocation(line: 1050, column: 16, scope: !4213)
!4215 = !DILocation(line: 1050, column: 42, scope: !4213)
!4216 = !DILocation(line: 1050, column: 16, scope: !4199)
!4217 = !DILocation(line: 1052, column: 19, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 1051, column: 3)
!4219 = !DILocation(line: 1052, column: 25, scope: !4218)
!4220 = !DILocation(line: 1052, column: 3, scope: !4218)
!4221 = !DILocation(line: 1053, column: 19, scope: !4218)
!4222 = !DILocation(line: 1053, column: 9, scope: !4218)
!4223 = !DILocation(line: 1053, column: 7, scope: !4218)
!4224 = !DILocation(line: 1054, column: 3, scope: !4218)
!4225 = !DILocation(line: 1055, column: 28, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 1055, column: 16)
!4227 = !DILocation(line: 1055, column: 16, scope: !4226)
!4228 = !DILocation(line: 1055, column: 45, scope: !4226)
!4229 = !DILocation(line: 1055, column: 16, scope: !4213)
!4230 = !DILocation(line: 1057, column: 22, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 1056, column: 3)
!4232 = !DILocation(line: 1057, column: 28, scope: !4231)
!4233 = !DILocation(line: 1057, column: 3, scope: !4231)
!4234 = !DILocation(line: 1058, column: 13, scope: !4231)
!4235 = !DILocation(line: 1059, column: 20, scope: !4231)
!4236 = !DILocation(line: 1060, column: 3, scope: !4231)
!4237 = !DILocation(line: 1061, column: 28, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 1061, column: 16)
!4239 = !DILocation(line: 1061, column: 16, scope: !4238)
!4240 = !DILocation(line: 1061, column: 47, scope: !4238)
!4241 = !DILocation(line: 1061, column: 16, scope: !4226)
!4242 = !DILocation(line: 1063, column: 22, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 1062, column: 3)
!4244 = !DILocation(line: 1063, column: 28, scope: !4243)
!4245 = !DILocation(line: 1063, column: 3, scope: !4243)
!4246 = !DILocation(line: 1064, column: 13, scope: !4243)
!4247 = !DILocation(line: 1065, column: 20, scope: !4243)
!4248 = !DILocation(line: 1066, column: 3, scope: !4243)
!4249 = !DILocation(line: 1067, column: 28, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4238, file: !3, line: 1067, column: 16)
!4251 = !DILocation(line: 1067, column: 16, scope: !4250)
!4252 = !DILocation(line: 1067, column: 47, scope: !4250)
!4253 = !DILocation(line: 1067, column: 16, scope: !4238)
!4254 = !DILocation(line: 1069, column: 19, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 1068, column: 3)
!4256 = !DILocation(line: 1069, column: 25, scope: !4255)
!4257 = !DILocation(line: 1069, column: 3, scope: !4255)
!4258 = !DILocation(line: 1070, column: 24, scope: !4255)
!4259 = !DILocation(line: 1070, column: 14, scope: !4255)
!4260 = !DILocation(line: 1070, column: 12, scope: !4255)
!4261 = !DILocation(line: 1071, column: 3, scope: !4255)
!4262 = !DILocation(line: 1072, column: 28, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 1072, column: 16)
!4264 = !DILocation(line: 1072, column: 16, scope: !4263)
!4265 = !DILocation(line: 1072, column: 53, scope: !4263)
!4266 = !DILocation(line: 1072, column: 16, scope: !4250)
!4267 = !DILocation(line: 1074, column: 22, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 1073, column: 3)
!4269 = !DILocation(line: 1074, column: 28, scope: !4268)
!4270 = !DILocation(line: 1074, column: 3, scope: !4268)
!4271 = !DILocation(line: 1075, column: 20, scope: !4268)
!4272 = !DILocation(line: 1076, column: 3, scope: !4268)
!4273 = !DILocation(line: 1077, column: 28, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 1077, column: 16)
!4275 = !DILocation(line: 1077, column: 16, scope: !4274)
!4276 = !DILocation(line: 1077, column: 51, scope: !4274)
!4277 = !DILocation(line: 1077, column: 16, scope: !4263)
!4278 = !DILocation(line: 1079, column: 22, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4274, file: !3, line: 1078, column: 3)
!4280 = !DILocation(line: 1079, column: 28, scope: !4279)
!4281 = !DILocation(line: 1079, column: 3, scope: !4279)
!4282 = !DILocation(line: 1080, column: 20, scope: !4279)
!4283 = !DILocation(line: 1081, column: 3, scope: !4279)
!4284 = !DILocation(line: 1082, column: 28, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4274, file: !3, line: 1082, column: 16)
!4286 = !DILocation(line: 1082, column: 16, scope: !4285)
!4287 = !DILocation(line: 1082, column: 43, scope: !4285)
!4288 = !DILocation(line: 1082, column: 16, scope: !4274)
!4289 = !DILocation(line: 1084, column: 19, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 1083, column: 3)
!4291 = !DILocation(line: 1084, column: 25, scope: !4290)
!4292 = !DILocation(line: 1084, column: 3, scope: !4290)
!4293 = !DILocation(line: 1085, column: 20, scope: !4290)
!4294 = !DILocation(line: 1085, column: 10, scope: !4290)
!4295 = !DILocation(line: 1085, column: 8, scope: !4290)
!4296 = !DILocation(line: 1086, column: 3, scope: !4290)
!4297 = !DILocation(line: 1087, column: 28, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 1087, column: 16)
!4299 = !DILocation(line: 1087, column: 16, scope: !4298)
!4300 = !DILocation(line: 1087, column: 45, scope: !4298)
!4301 = !DILocation(line: 1087, column: 16, scope: !4285)
!4302 = !DILocation(line: 1089, column: 19, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 1088, column: 3)
!4304 = !DILocation(line: 1089, column: 25, scope: !4303)
!4305 = !DILocation(line: 1089, column: 3, scope: !4303)
!4306 = !DILocation(line: 1090, column: 27, scope: !4303)
!4307 = !DILocation(line: 1090, column: 17, scope: !4303)
!4308 = !DILocation(line: 1090, column: 15, scope: !4303)
!4309 = !DILocation(line: 1091, column: 3, scope: !4303)
!4310 = !DILocation(line: 1092, column: 28, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4298, file: !3, line: 1092, column: 16)
!4312 = !DILocation(line: 1092, column: 16, scope: !4311)
!4313 = !DILocation(line: 1092, column: 47, scope: !4311)
!4314 = !DILocation(line: 1092, column: 16, scope: !4298)
!4315 = !DILocation(line: 1094, column: 19, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 1093, column: 3)
!4317 = !DILocation(line: 1094, column: 25, scope: !4316)
!4318 = !DILocation(line: 1094, column: 3, scope: !4316)
!4319 = !DILocation(line: 1095, column: 21, scope: !4316)
!4320 = !DILocation(line: 1095, column: 15, scope: !4316)
!4321 = !DILocation(line: 1095, column: 13, scope: !4316)
!4322 = !DILocation(line: 1096, column: 3, scope: !4316)
!4323 = !DILocation(line: 1097, column: 28, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 1097, column: 16)
!4325 = !DILocation(line: 1097, column: 16, scope: !4324)
!4326 = !DILocation(line: 1097, column: 45, scope: !4324)
!4327 = !DILocation(line: 1097, column: 16, scope: !4311)
!4328 = !DILocation(line: 1099, column: 19, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4324, file: !3, line: 1098, column: 3)
!4330 = !DILocation(line: 1099, column: 25, scope: !4329)
!4331 = !DILocation(line: 1099, column: 3, scope: !4329)
!4332 = !DILocation(line: 1100, column: 27, scope: !4329)
!4333 = !DILocation(line: 1100, column: 17, scope: !4329)
!4334 = !DILocation(line: 1100, column: 15, scope: !4329)
!4335 = !DILocation(line: 1101, column: 3, scope: !4329)
!4336 = !DILocation(line: 1102, column: 28, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4324, file: !3, line: 1102, column: 16)
!4338 = !DILocation(line: 1102, column: 16, scope: !4337)
!4339 = !DILocation(line: 1102, column: 54, scope: !4337)
!4340 = !DILocation(line: 1102, column: 59, scope: !4337)
!4341 = !DILocation(line: 1103, column: 28, scope: !4337)
!4342 = !DILocation(line: 1103, column: 16, scope: !4337)
!4343 = !DILocation(line: 1103, column: 55, scope: !4337)
!4344 = !DILocation(line: 1102, column: 16, scope: !4324)
!4345 = !DILocation(line: 1105, column: 22, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 1104, column: 3)
!4347 = !DILocation(line: 1105, column: 28, scope: !4346)
!4348 = !DILocation(line: 1105, column: 3, scope: !4346)
!4349 = !DILocation(line: 1106, column: 22, scope: !4346)
!4350 = !DILocation(line: 1107, column: 3, scope: !4346)
!4351 = !DILocation(line: 1108, column: 28, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 1108, column: 16)
!4353 = !DILocation(line: 1108, column: 16, scope: !4352)
!4354 = !DILocation(line: 1108, column: 47, scope: !4352)
!4355 = !DILocation(line: 1108, column: 16, scope: !4337)
!4356 = !DILocation(line: 1110, column: 19, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 1109, column: 3)
!4358 = !DILocation(line: 1110, column: 25, scope: !4357)
!4359 = !DILocation(line: 1110, column: 3, scope: !4357)
!4360 = !DILocation(line: 1111, column: 29, scope: !4357)
!4361 = !DILocation(line: 1111, column: 19, scope: !4357)
!4362 = !DILocation(line: 1111, column: 17, scope: !4357)
!4363 = !DILocation(line: 1112, column: 3, scope: !4357)
!4364 = !DILocation(line: 1113, column: 28, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 1113, column: 16)
!4366 = !DILocation(line: 1113, column: 16, scope: !4365)
!4367 = !DILocation(line: 1113, column: 48, scope: !4365)
!4368 = !DILocation(line: 1113, column: 16, scope: !4352)
!4369 = !DILocation(line: 1115, column: 19, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 1114, column: 3)
!4371 = !DILocation(line: 1115, column: 25, scope: !4370)
!4372 = !DILocation(line: 1115, column: 3, scope: !4370)
!4373 = !DILocation(line: 1116, column: 28, scope: !4370)
!4374 = !DILocation(line: 1116, column: 18, scope: !4370)
!4375 = !DILocation(line: 1116, column: 16, scope: !4370)
!4376 = !DILocation(line: 1117, column: 3, scope: !4370)
!4377 = !DILocation(line: 1118, column: 28, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 1118, column: 16)
!4379 = !DILocation(line: 1118, column: 16, scope: !4378)
!4380 = !DILocation(line: 1118, column: 43, scope: !4378)
!4381 = !DILocation(line: 1118, column: 16, scope: !4365)
!4382 = !DILocation(line: 1120, column: 19, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 1119, column: 3)
!4384 = !DILocation(line: 1120, column: 25, scope: !4383)
!4385 = !DILocation(line: 1120, column: 3, scope: !4383)
!4386 = !DILocation(line: 1121, column: 24, scope: !4383)
!4387 = !DILocation(line: 1121, column: 14, scope: !4383)
!4388 = !DILocation(line: 1121, column: 12, scope: !4383)
!4389 = !DILocation(line: 1122, column: 3, scope: !4383)
!4390 = !DILocation(line: 1123, column: 28, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 1123, column: 16)
!4392 = !DILocation(line: 1123, column: 16, scope: !4391)
!4393 = !DILocation(line: 1123, column: 46, scope: !4391)
!4394 = !DILocation(line: 1123, column: 16, scope: !4378)
!4395 = !DILocation(line: 1125, column: 19, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 1124, column: 3)
!4397 = !DILocation(line: 1125, column: 25, scope: !4396)
!4398 = !DILocation(line: 1125, column: 3, scope: !4396)
!4399 = !DILocation(line: 1126, column: 23, scope: !4396)
!4400 = !DILocation(line: 1126, column: 13, scope: !4396)
!4401 = !DILocation(line: 1126, column: 11, scope: !4396)
!4402 = !DILocation(line: 1127, column: 3, scope: !4396)
!4403 = !DILocation(line: 1128, column: 28, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 1128, column: 16)
!4405 = !DILocation(line: 1128, column: 16, scope: !4404)
!4406 = !DILocation(line: 1128, column: 44, scope: !4404)
!4407 = !DILocation(line: 1128, column: 16, scope: !4391)
!4408 = !DILocation(line: 1130, column: 22, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 1129, column: 3)
!4410 = !DILocation(line: 1130, column: 28, scope: !4409)
!4411 = !DILocation(line: 1130, column: 3, scope: !4409)
!4412 = !DILocation(line: 1131, column: 12, scope: !4409)
!4413 = !DILocation(line: 1132, column: 3, scope: !4409)
!4414 = !DILocation(line: 1133, column: 28, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 1133, column: 16)
!4416 = !DILocation(line: 1133, column: 16, scope: !4415)
!4417 = !DILocation(line: 1133, column: 46, scope: !4415)
!4418 = !DILocation(line: 1133, column: 16, scope: !4404)
!4419 = !DILocation(line: 1135, column: 22, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 1134, column: 3)
!4421 = !DILocation(line: 1135, column: 28, scope: !4420)
!4422 = !DILocation(line: 1135, column: 3, scope: !4420)
!4423 = !DILocation(line: 1136, column: 12, scope: !4420)
!4424 = !DILocation(line: 1137, column: 3, scope: !4420)
!4425 = !DILocation(line: 1138, column: 28, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 1138, column: 16)
!4427 = !DILocation(line: 1138, column: 16, scope: !4426)
!4428 = !DILocation(line: 1138, column: 51, scope: !4426)
!4429 = !DILocation(line: 1138, column: 16, scope: !4415)
!4430 = !DILocation(line: 1140, column: 22, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 1139, column: 3)
!4432 = !DILocation(line: 1140, column: 28, scope: !4431)
!4433 = !DILocation(line: 1140, column: 3, scope: !4431)
!4434 = !DILocation(line: 1141, column: 20, scope: !4431)
!4435 = !DILocation(line: 1142, column: 3, scope: !4431)
!4436 = !DILocation(line: 1143, column: 28, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 1143, column: 16)
!4438 = !DILocation(line: 1143, column: 16, scope: !4437)
!4439 = !DILocation(line: 1143, column: 53, scope: !4437)
!4440 = !DILocation(line: 1143, column: 16, scope: !4426)
!4441 = !DILocation(line: 1145, column: 22, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4437, file: !3, line: 1144, column: 3)
!4443 = !DILocation(line: 1145, column: 28, scope: !4442)
!4444 = !DILocation(line: 1145, column: 3, scope: !4442)
!4445 = !DILocation(line: 1146, column: 20, scope: !4442)
!4446 = !DILocation(line: 1147, column: 3, scope: !4442)
!4447 = !DILocation(line: 1148, column: 28, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4437, file: !3, line: 1148, column: 16)
!4449 = !DILocation(line: 1148, column: 16, scope: !4448)
!4450 = !DILocation(line: 1148, column: 46, scope: !4448)
!4451 = !DILocation(line: 1148, column: 16, scope: !4437)
!4452 = !DILocation(line: 1150, column: 19, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 1149, column: 3)
!4454 = !DILocation(line: 1150, column: 25, scope: !4453)
!4455 = !DILocation(line: 1150, column: 3, scope: !4453)
!4456 = !DILocation(line: 1151, column: 23, scope: !4453)
!4457 = !DILocation(line: 1151, column: 13, scope: !4453)
!4458 = !DILocation(line: 1151, column: 11, scope: !4453)
!4459 = !DILocation(line: 1152, column: 3, scope: !4453)
!4460 = !DILocation(line: 1153, column: 28, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 1153, column: 16)
!4462 = !DILocation(line: 1153, column: 16, scope: !4461)
!4463 = !DILocation(line: 1153, column: 46, scope: !4461)
!4464 = !DILocation(line: 1153, column: 16, scope: !4448)
!4465 = !DILocation(line: 1155, column: 19, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 1154, column: 3)
!4467 = !DILocation(line: 1155, column: 25, scope: !4466)
!4468 = !DILocation(line: 1155, column: 3, scope: !4466)
!4469 = !DILocation(line: 1156, column: 23, scope: !4466)
!4470 = !DILocation(line: 1156, column: 13, scope: !4466)
!4471 = !DILocation(line: 1156, column: 11, scope: !4466)
!4472 = !DILocation(line: 1157, column: 3, scope: !4466)
!4473 = !DILocation(line: 1158, column: 28, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4461, file: !3, line: 1158, column: 16)
!4475 = !DILocation(line: 1158, column: 16, scope: !4474)
!4476 = !DILocation(line: 1158, column: 42, scope: !4474)
!4477 = !DILocation(line: 1158, column: 16, scope: !4461)
!4478 = !DILocation(line: 1160, column: 19, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 1159, column: 3)
!4480 = !DILocation(line: 1160, column: 25, scope: !4479)
!4481 = !DILocation(line: 1160, column: 3, scope: !4479)
!4482 = !DILocation(line: 1161, column: 19, scope: !4479)
!4483 = !DILocation(line: 1161, column: 9, scope: !4479)
!4484 = !DILocation(line: 1161, column: 7, scope: !4479)
!4485 = !DILocation(line: 1162, column: 3, scope: !4479)
!4486 = !DILocation(line: 1163, column: 28, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 1163, column: 16)
!4488 = !DILocation(line: 1163, column: 16, scope: !4487)
!4489 = !DILocation(line: 1163, column: 46, scope: !4487)
!4490 = !DILocation(line: 1163, column: 16, scope: !4474)
!4491 = !DILocation(line: 1165, column: 19, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4487, file: !3, line: 1164, column: 3)
!4493 = !DILocation(line: 1165, column: 25, scope: !4492)
!4494 = !DILocation(line: 1165, column: 3, scope: !4492)
!4495 = !DILocation(line: 1166, column: 19, scope: !4492)
!4496 = !DILocation(line: 1166, column: 13, scope: !4492)
!4497 = !DILocation(line: 1166, column: 11, scope: !4492)
!4498 = !DILocation(line: 1167, column: 3, scope: !4492)
!4499 = !DILocation(line: 1171, column: 7, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4487, file: !3, line: 1169, column: 3)
!4501 = !DILocation(line: 1171, column: 51, scope: !4500)
!4502 = !DILocation(line: 1171, column: 58, scope: !4500)
!4503 = !DILocation(line: 1170, column: 10, scope: !4500)
!4504 = !DILocation(line: 1172, column: 3, scope: !4500)
!4505 = !DILocation(line: 1176, column: 11, scope: !4150)
!4506 = !DILocation(line: 1176, column: 9, scope: !4150)
!4507 = !DILocation(line: 1177, column: 20, scope: !4150)
!4508 = !DILocation(line: 1177, column: 12, scope: !4150)
!4509 = !DILocation(line: 1177, column: 9, scope: !4150)
!4510 = distinct !{!4510, !4145, !4511}
!4511 = !DILocation(line: 1178, column: 6, scope: !4132)
!4512 = distinct !{!4512, !4125, !4513}
!4513 = !DILocation(line: 1179, column: 2, scope: !4096)
!4514 = !DILocation(line: 1181, column: 20, scope: !4096)
!4515 = !DILocation(line: 1181, column: 12, scope: !4096)
!4516 = !DILocation(line: 1182, column: 5, scope: !4096)
!4517 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 990, type: !2758, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4518 = !DILocation(line: 992, column: 21, scope: !4517)
!4519 = !DILocation(line: 994, column: 2, scope: !4517)
!4520 = !DILocation(line: 992, column: 12, scope: !4517)
!4521 = !DILocation(line: 995, column: 5, scope: !4517)
!4522 = distinct !DISubprogram(name: "no_value_required", scope: !3, file: !3, line: 1198, type: !4523, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{null, !6, !6}
!4525 = !DILocalVariable(name: "name", arg: 1, scope: !4522, file: !3, line: 1198, type: !6)
!4526 = !DILocation(line: 1198, column: 26, scope: !4522)
!4527 = !DILocalVariable(name: "value", arg: 2, scope: !4522, file: !3, line: 1198, type: !6)
!4528 = !DILocation(line: 1198, column: 38, scope: !4522)
!4529 = !DILocation(line: 1200, column: 10, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 1200, column: 10)
!4531 = !DILocation(line: 1200, column: 16, scope: !4530)
!4532 = !DILocation(line: 1200, column: 10, scope: !4522)
!4533 = !DILocation(line: 1203, column: 6, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 1201, column: 2)
!4535 = !DILocation(line: 1204, column: 6, scope: !4534)
!4536 = !DILocation(line: 1204, column: 13, scope: !4534)
!4537 = !DILocation(line: 1202, column: 9, scope: !4534)
!4538 = !DILocation(line: 1205, column: 2, scope: !4534)
!4539 = !DILocation(line: 1207, column: 5, scope: !4522)
!4540 = distinct !DISubprogram(name: "value_required", scope: !3, file: !3, line: 1186, type: !4523, scopeLine: 1187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !4)
!4541 = !DILocalVariable(name: "name", arg: 1, scope: !4540, file: !3, line: 1186, type: !6)
!4542 = !DILocation(line: 1186, column: 23, scope: !4540)
!4543 = !DILocalVariable(name: "value", arg: 2, scope: !4540, file: !3, line: 1186, type: !6)
!4544 = !DILocation(line: 1186, column: 35, scope: !4540)
!4545 = !DILocation(line: 1188, column: 10, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 1188, column: 10)
!4547 = !DILocation(line: 1188, column: 16, scope: !4546)
!4548 = !DILocation(line: 1188, column: 10, scope: !4540)
!4549 = !DILocation(line: 1191, column: 6, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 1189, column: 2)
!4551 = !DILocation(line: 1191, column: 52, scope: !4550)
!4552 = !DILocation(line: 1191, column: 59, scope: !4550)
!4553 = !DILocation(line: 1190, column: 9, scope: !4550)
!4554 = !DILocation(line: 1192, column: 2, scope: !4550)
!4555 = !DILocation(line: 1194, column: 5, scope: !4540)
!4556 = !DILocalVariable(name: "hostname", arg: 1, scope: !668, file: !497, line: 229, type: !6)
!4557 = !DILocation(line: 229, column: 11, scope: !668)
!4558 = !DILocalVariable(name: "sa4P", arg: 2, scope: !668, file: !497, line: 229, type: !551)
!4559 = !DILocation(line: 229, column: 37, scope: !668)
!4560 = !DILocalVariable(name: "sa6P", arg: 3, scope: !668, file: !497, line: 229, type: !551)
!4561 = !DILocation(line: 229, column: 59, scope: !668)
!4562 = !DILocalVariable(name: "port", arg: 4, scope: !668, file: !497, line: 230, type: !137)
!4563 = !DILocation(line: 230, column: 20, scope: !668)
!4564 = !DILocalVariable(name: "cgi_pattern", arg: 5, scope: !668, file: !497, line: 230, type: !6)
!4565 = !DILocation(line: 230, column: 32, scope: !668)
!4566 = !DILocalVariable(name: "cgi_limit", arg: 6, scope: !668, file: !497, line: 230, type: !26)
!4567 = !DILocation(line: 230, column: 49, scope: !668)
!4568 = !DILocalVariable(name: "charset", arg: 7, scope: !668, file: !497, line: 230, type: !6)
!4569 = !DILocation(line: 230, column: 66, scope: !668)
!4570 = !DILocalVariable(name: "p3p", arg: 8, scope: !668, file: !497, line: 231, type: !6)
!4571 = !DILocation(line: 231, column: 11, scope: !668)
!4572 = !DILocalVariable(name: "max_age", arg: 9, scope: !668, file: !497, line: 231, type: !26)
!4573 = !DILocation(line: 231, column: 20, scope: !668)
!4574 = !DILocalVariable(name: "cwd", arg: 10, scope: !668, file: !497, line: 231, type: !6)
!4575 = !DILocation(line: 231, column: 35, scope: !668)
!4576 = !DILocalVariable(name: "no_log", arg: 11, scope: !668, file: !497, line: 231, type: !26)
!4577 = !DILocation(line: 231, column: 44, scope: !668)
!4578 = !DILocalVariable(name: "logfp", arg: 12, scope: !668, file: !497, line: 231, type: !517)
!4579 = !DILocation(line: 231, column: 58, scope: !668)
!4580 = !DILocalVariable(name: "no_symlink_check", arg: 13, scope: !668, file: !497, line: 232, type: !26)
!4581 = !DILocation(line: 232, column: 9, scope: !668)
!4582 = !DILocalVariable(name: "vhost", arg: 14, scope: !668, file: !497, line: 232, type: !26)
!4583 = !DILocation(line: 232, column: 31, scope: !668)
!4584 = !DILocalVariable(name: "global_passwd", arg: 15, scope: !668, file: !497, line: 232, type: !26)
!4585 = !DILocation(line: 232, column: 42, scope: !668)
!4586 = !DILocalVariable(name: "url_pattern", arg: 16, scope: !668, file: !497, line: 232, type: !6)
!4587 = !DILocation(line: 232, column: 63, scope: !668)
!4588 = !DILocalVariable(name: "local_pattern", arg: 17, scope: !668, file: !497, line: 233, type: !6)
!4589 = !DILocation(line: 233, column: 11, scope: !668)
!4590 = !DILocalVariable(name: "no_empty_referrers", arg: 18, scope: !668, file: !497, line: 233, type: !26)
!4591 = !DILocation(line: 233, column: 30, scope: !668)
!4592 = !DILocalVariable(name: "hs", scope: !668, file: !497, line: 235, type: !499)
!4593 = !DILocation(line: 235, column: 19, scope: !668)
!4594 = !DILocalVariable(name: "cp", scope: !668, file: !497, line: 237, type: !6)
!4595 = !DILocation(line: 237, column: 11, scope: !668)
!4596 = !DILocation(line: 239, column: 5, scope: !668)
!4597 = !DILocation(line: 241, column: 10, scope: !668)
!4598 = !DILocation(line: 241, column: 8, scope: !668)
!4599 = !DILocation(line: 242, column: 10, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !668, file: !497, line: 242, column: 10)
!4601 = !DILocation(line: 242, column: 13, scope: !4600)
!4602 = !DILocation(line: 242, column: 10, scope: !668)
!4603 = !DILocation(line: 244, column: 2, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4600, file: !497, line: 243, column: 2)
!4605 = !DILocation(line: 245, column: 2, scope: !4604)
!4606 = !DILocation(line: 248, column: 10, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !668, file: !497, line: 248, column: 10)
!4608 = !DILocation(line: 248, column: 19, scope: !4607)
!4609 = !DILocation(line: 248, column: 10, scope: !668)
!4610 = !DILocation(line: 250, column: 33, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4607, file: !497, line: 249, column: 2)
!4612 = !DILocation(line: 250, column: 25, scope: !4611)
!4613 = !DILocation(line: 250, column: 2, scope: !4611)
!4614 = !DILocation(line: 250, column: 6, scope: !4611)
!4615 = !DILocation(line: 250, column: 23, scope: !4611)
!4616 = !DILocation(line: 251, column: 7, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4611, file: !497, line: 251, column: 7)
!4618 = !DILocation(line: 251, column: 11, scope: !4617)
!4619 = !DILocation(line: 251, column: 28, scope: !4617)
!4620 = !DILocation(line: 251, column: 7, scope: !4611)
!4621 = !DILocation(line: 253, column: 6, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4617, file: !497, line: 252, column: 6)
!4623 = !DILocation(line: 254, column: 6, scope: !4622)
!4624 = !DILocation(line: 256, column: 24, scope: !4611)
!4625 = !DILocation(line: 256, column: 28, scope: !4611)
!4626 = !DILocation(line: 256, column: 2, scope: !4611)
!4627 = !DILocation(line: 256, column: 6, scope: !4611)
!4628 = !DILocation(line: 256, column: 22, scope: !4611)
!4629 = !DILocation(line: 257, column: 2, scope: !4611)
!4630 = !DILocation(line: 260, column: 2, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4607, file: !497, line: 259, column: 2)
!4632 = !DILocation(line: 260, column: 6, scope: !4631)
!4633 = !DILocation(line: 260, column: 23, scope: !4631)
!4634 = !DILocation(line: 261, column: 2, scope: !4631)
!4635 = !DILocation(line: 261, column: 6, scope: !4631)
!4636 = !DILocation(line: 261, column: 22, scope: !4631)
!4637 = !DILocation(line: 262, column: 7, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4631, file: !497, line: 262, column: 7)
!4639 = !DILocation(line: 262, column: 45, scope: !4638)
!4640 = !DILocation(line: 262, column: 7, scope: !4631)
!4641 = !DILocation(line: 263, column: 16, scope: !4638)
!4642 = !DILocation(line: 263, column: 6, scope: !4638)
!4643 = !DILocation(line: 268, column: 7, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4631, file: !497, line: 268, column: 7)
!4645 = !DILocation(line: 268, column: 11, scope: !4644)
!4646 = !DILocation(line: 268, column: 27, scope: !4644)
!4647 = !DILocation(line: 268, column: 7, scope: !4631)
!4648 = !DILocation(line: 273, column: 11, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4650, file: !497, line: 273, column: 11)
!4650 = distinct !DILexicalBlock(scope: !4644, file: !497, line: 269, column: 6)
!4651 = !DILocation(line: 273, column: 21, scope: !4649)
!4652 = !DILocation(line: 273, column: 11, scope: !4650)
!4653 = !DILocation(line: 274, column: 3, scope: !4649)
!4654 = !DILocation(line: 274, column: 7, scope: !4649)
!4655 = !DILocation(line: 274, column: 23, scope: !4649)
!4656 = !DILocation(line: 276, column: 6, scope: !4650)
!4657 = !DILocation(line: 279, column: 16, scope: !668)
!4658 = !DILocation(line: 279, column: 5, scope: !668)
!4659 = !DILocation(line: 279, column: 9, scope: !668)
!4660 = !DILocation(line: 279, column: 14, scope: !668)
!4661 = !DILocation(line: 280, column: 10, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !668, file: !497, line: 280, column: 10)
!4663 = !DILocation(line: 280, column: 22, scope: !4662)
!4664 = !DILocation(line: 280, column: 10, scope: !668)
!4665 = !DILocation(line: 281, column: 2, scope: !4662)
!4666 = !DILocation(line: 281, column: 6, scope: !4662)
!4667 = !DILocation(line: 281, column: 18, scope: !4662)
!4668 = !DILocation(line: 285, column: 7, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !497, line: 285, column: 7)
!4670 = distinct !DILexicalBlock(scope: !4662, file: !497, line: 283, column: 2)
!4671 = !DILocation(line: 285, column: 22, scope: !4669)
!4672 = !DILocation(line: 285, column: 7, scope: !4670)
!4673 = !DILocation(line: 286, column: 6, scope: !4669)
!4674 = !DILocation(line: 287, column: 28, scope: !4670)
!4675 = !DILocation(line: 287, column: 20, scope: !4670)
!4676 = !DILocation(line: 287, column: 2, scope: !4670)
!4677 = !DILocation(line: 287, column: 6, scope: !4670)
!4678 = !DILocation(line: 287, column: 18, scope: !4670)
!4679 = !DILocation(line: 288, column: 7, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4670, file: !497, line: 288, column: 7)
!4681 = !DILocation(line: 288, column: 11, scope: !4680)
!4682 = !DILocation(line: 288, column: 23, scope: !4680)
!4683 = !DILocation(line: 288, column: 7, scope: !4670)
!4684 = !DILocation(line: 290, column: 6, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4680, file: !497, line: 289, column: 6)
!4686 = !DILocation(line: 291, column: 6, scope: !4685)
!4687 = !DILocation(line: 294, column: 2, scope: !4670)
!4688 = !DILocation(line: 294, column: 25, scope: !4670)
!4689 = !DILocation(line: 294, column: 29, scope: !4670)
!4690 = !DILocation(line: 294, column: 17, scope: !4670)
!4691 = !DILocation(line: 294, column: 15, scope: !4670)
!4692 = !DILocation(line: 294, column: 51, scope: !4670)
!4693 = !DILocation(line: 295, column: 13, scope: !4670)
!4694 = distinct !{!4694, !4687, !4693}
!4695 = !DILocation(line: 297, column: 21, scope: !668)
!4696 = !DILocation(line: 297, column: 5, scope: !668)
!4697 = !DILocation(line: 297, column: 9, scope: !668)
!4698 = !DILocation(line: 297, column: 19, scope: !668)
!4699 = !DILocation(line: 298, column: 5, scope: !668)
!4700 = !DILocation(line: 298, column: 9, scope: !668)
!4701 = !DILocation(line: 298, column: 19, scope: !668)
!4702 = !DILocation(line: 299, column: 27, scope: !668)
!4703 = !DILocation(line: 299, column: 19, scope: !668)
!4704 = !DILocation(line: 299, column: 5, scope: !668)
!4705 = !DILocation(line: 299, column: 9, scope: !668)
!4706 = !DILocation(line: 299, column: 17, scope: !668)
!4707 = !DILocation(line: 300, column: 23, scope: !668)
!4708 = !DILocation(line: 300, column: 15, scope: !668)
!4709 = !DILocation(line: 300, column: 5, scope: !668)
!4710 = !DILocation(line: 300, column: 9, scope: !668)
!4711 = !DILocation(line: 300, column: 13, scope: !668)
!4712 = !DILocation(line: 301, column: 19, scope: !668)
!4713 = !DILocation(line: 301, column: 5, scope: !668)
!4714 = !DILocation(line: 301, column: 9, scope: !668)
!4715 = !DILocation(line: 301, column: 17, scope: !668)
!4716 = !DILocation(line: 302, column: 23, scope: !668)
!4717 = !DILocation(line: 302, column: 15, scope: !668)
!4718 = !DILocation(line: 302, column: 5, scope: !668)
!4719 = !DILocation(line: 302, column: 9, scope: !668)
!4720 = !DILocation(line: 302, column: 13, scope: !668)
!4721 = !DILocation(line: 303, column: 10, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !668, file: !497, line: 303, column: 10)
!4723 = !DILocation(line: 303, column: 14, scope: !4722)
!4724 = !DILocation(line: 303, column: 18, scope: !4722)
!4725 = !DILocation(line: 303, column: 10, scope: !668)
!4726 = !DILocation(line: 305, column: 2, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4722, file: !497, line: 304, column: 2)
!4728 = !DILocation(line: 306, column: 2, scope: !4727)
!4729 = !DILocation(line: 308, column: 10, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !668, file: !497, line: 308, column: 10)
!4731 = !DILocation(line: 308, column: 22, scope: !4730)
!4732 = !DILocation(line: 308, column: 10, scope: !668)
!4733 = !DILocation(line: 309, column: 2, scope: !4730)
!4734 = !DILocation(line: 309, column: 6, scope: !4730)
!4735 = !DILocation(line: 309, column: 18, scope: !4730)
!4736 = !DILocation(line: 312, column: 28, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4730, file: !497, line: 311, column: 2)
!4738 = !DILocation(line: 312, column: 20, scope: !4737)
!4739 = !DILocation(line: 312, column: 2, scope: !4737)
!4740 = !DILocation(line: 312, column: 6, scope: !4737)
!4741 = !DILocation(line: 312, column: 18, scope: !4737)
!4742 = !DILocation(line: 313, column: 7, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4737, file: !497, line: 313, column: 7)
!4744 = !DILocation(line: 313, column: 11, scope: !4743)
!4745 = !DILocation(line: 313, column: 23, scope: !4743)
!4746 = !DILocation(line: 313, column: 7, scope: !4737)
!4747 = !DILocation(line: 315, column: 6, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4743, file: !497, line: 314, column: 6)
!4749 = !DILocation(line: 316, column: 6, scope: !4748)
!4750 = !DILocation(line: 319, column: 10, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !668, file: !497, line: 319, column: 10)
!4752 = !DILocation(line: 319, column: 24, scope: !4751)
!4753 = !DILocation(line: 319, column: 10, scope: !668)
!4754 = !DILocation(line: 320, column: 2, scope: !4751)
!4755 = !DILocation(line: 320, column: 6, scope: !4751)
!4756 = !DILocation(line: 320, column: 20, scope: !4751)
!4757 = !DILocation(line: 323, column: 30, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4751, file: !497, line: 322, column: 2)
!4759 = !DILocation(line: 323, column: 22, scope: !4758)
!4760 = !DILocation(line: 323, column: 2, scope: !4758)
!4761 = !DILocation(line: 323, column: 6, scope: !4758)
!4762 = !DILocation(line: 323, column: 20, scope: !4758)
!4763 = !DILocation(line: 324, column: 7, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4758, file: !497, line: 324, column: 7)
!4765 = !DILocation(line: 324, column: 11, scope: !4764)
!4766 = !DILocation(line: 324, column: 25, scope: !4764)
!4767 = !DILocation(line: 324, column: 7, scope: !4758)
!4768 = !DILocation(line: 326, column: 6, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4764, file: !497, line: 325, column: 6)
!4770 = !DILocation(line: 327, column: 6, scope: !4769)
!4771 = !DILocation(line: 330, column: 18, scope: !668)
!4772 = !DILocation(line: 330, column: 5, scope: !668)
!4773 = !DILocation(line: 330, column: 9, scope: !668)
!4774 = !DILocation(line: 330, column: 16, scope: !668)
!4775 = !DILocation(line: 331, column: 5, scope: !668)
!4776 = !DILocation(line: 331, column: 9, scope: !668)
!4777 = !DILocation(line: 331, column: 15, scope: !668)
!4778 = !DILocation(line: 332, column: 22, scope: !668)
!4779 = !DILocation(line: 332, column: 26, scope: !668)
!4780 = !DILocation(line: 332, column: 5, scope: !668)
!4781 = !DILocation(line: 333, column: 28, scope: !668)
!4782 = !DILocation(line: 333, column: 5, scope: !668)
!4783 = !DILocation(line: 333, column: 9, scope: !668)
!4784 = !DILocation(line: 333, column: 26, scope: !668)
!4785 = !DILocation(line: 334, column: 17, scope: !668)
!4786 = !DILocation(line: 334, column: 5, scope: !668)
!4787 = !DILocation(line: 334, column: 9, scope: !668)
!4788 = !DILocation(line: 334, column: 15, scope: !668)
!4789 = !DILocation(line: 335, column: 25, scope: !668)
!4790 = !DILocation(line: 335, column: 5, scope: !668)
!4791 = !DILocation(line: 335, column: 9, scope: !668)
!4792 = !DILocation(line: 335, column: 23, scope: !668)
!4793 = !DILocation(line: 336, column: 30, scope: !668)
!4794 = !DILocation(line: 336, column: 5, scope: !668)
!4795 = !DILocation(line: 336, column: 9, scope: !668)
!4796 = !DILocation(line: 336, column: 28, scope: !668)
!4797 = !DILocation(line: 342, column: 10, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !668, file: !497, line: 342, column: 10)
!4799 = !DILocation(line: 342, column: 15, scope: !4798)
!4800 = !DILocation(line: 342, column: 10, scope: !668)
!4801 = !DILocation(line: 343, column: 2, scope: !4798)
!4802 = !DILocation(line: 343, column: 6, scope: !4798)
!4803 = !DILocation(line: 343, column: 17, scope: !4798)
!4804 = !DILocation(line: 345, column: 45, scope: !4798)
!4805 = !DILocation(line: 345, column: 19, scope: !4798)
!4806 = !DILocation(line: 345, column: 2, scope: !4798)
!4807 = !DILocation(line: 345, column: 6, scope: !4798)
!4808 = !DILocation(line: 345, column: 17, scope: !4798)
!4809 = !DILocation(line: 346, column: 10, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !668, file: !497, line: 346, column: 10)
!4811 = !DILocation(line: 346, column: 15, scope: !4810)
!4812 = !DILocation(line: 346, column: 10, scope: !668)
!4813 = !DILocation(line: 347, column: 2, scope: !4810)
!4814 = !DILocation(line: 347, column: 6, scope: !4810)
!4815 = !DILocation(line: 347, column: 17, scope: !4810)
!4816 = !DILocation(line: 349, column: 45, scope: !4810)
!4817 = !DILocation(line: 349, column: 19, scope: !4810)
!4818 = !DILocation(line: 349, column: 2, scope: !4810)
!4819 = !DILocation(line: 349, column: 6, scope: !4810)
!4820 = !DILocation(line: 349, column: 17, scope: !4810)
!4821 = !DILocation(line: 351, column: 10, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !668, file: !497, line: 351, column: 10)
!4823 = !DILocation(line: 351, column: 14, scope: !4822)
!4824 = !DILocation(line: 351, column: 25, scope: !4822)
!4825 = !DILocation(line: 351, column: 31, scope: !4822)
!4826 = !DILocation(line: 351, column: 34, scope: !4822)
!4827 = !DILocation(line: 351, column: 38, scope: !4822)
!4828 = !DILocation(line: 351, column: 49, scope: !4822)
!4829 = !DILocation(line: 351, column: 10, scope: !668)
!4830 = !DILocation(line: 353, column: 21, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4822, file: !497, line: 352, column: 2)
!4832 = !DILocation(line: 353, column: 2, scope: !4831)
!4833 = !DILocation(line: 354, column: 2, scope: !4831)
!4834 = !DILocation(line: 357, column: 5, scope: !668)
!4835 = !DILocation(line: 360, column: 10, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !668, file: !497, line: 360, column: 10)
!4837 = !DILocation(line: 360, column: 14, scope: !4836)
!4838 = !DILocation(line: 360, column: 31, scope: !4836)
!4839 = !DILocation(line: 360, column: 10, scope: !668)
!4840 = !DILocation(line: 363, column: 12, scope: !4836)
!4841 = !DILocation(line: 363, column: 16, scope: !4836)
!4842 = !DILocation(line: 363, column: 6, scope: !4836)
!4843 = !DILocation(line: 361, column: 2, scope: !4836)
!4844 = !DILocation(line: 367, column: 18, scope: !4836)
!4845 = !DILocation(line: 367, column: 22, scope: !4836)
!4846 = !DILocation(line: 367, column: 33, scope: !4836)
!4847 = !DILocation(line: 367, column: 41, scope: !4836)
!4848 = !DILocation(line: 367, column: 48, scope: !4836)
!4849 = !DILocation(line: 367, column: 6, scope: !4836)
!4850 = !DILocation(line: 368, column: 12, scope: !4836)
!4851 = !DILocation(line: 368, column: 16, scope: !4836)
!4852 = !DILocation(line: 368, column: 6, scope: !4836)
!4853 = !DILocation(line: 365, column: 2, scope: !4836)
!4854 = !DILocation(line: 369, column: 12, scope: !668)
!4855 = !DILocation(line: 369, column: 5, scope: !668)
!4856 = !DILocation(line: 370, column: 5, scope: !668)
!4857 = distinct !DISubprogram(name: "check_options", scope: !497, file: !497, line: 197, type: !2758, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!4858 = !DILocation(line: 203, column: 5, scope: !4857)
!4859 = distinct !DISubprogram(name: "httpd_set_logfp", scope: !497, file: !497, line: 455, type: !4860, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{null, !499, !517}
!4862 = !DILocalVariable(name: "hs", arg: 1, scope: !4859, file: !497, line: 455, type: !499)
!4863 = !DILocation(line: 455, column: 32, scope: !4859)
!4864 = !DILocalVariable(name: "logfp", arg: 2, scope: !4859, file: !497, line: 455, type: !517)
!4865 = !DILocation(line: 455, column: 42, scope: !4859)
!4866 = !DILocation(line: 457, column: 10, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4859, file: !497, line: 457, column: 10)
!4868 = !DILocation(line: 457, column: 14, scope: !4867)
!4869 = !DILocation(line: 457, column: 20, scope: !4867)
!4870 = !DILocation(line: 457, column: 10, scope: !4859)
!4871 = !DILocation(line: 458, column: 17, scope: !4867)
!4872 = !DILocation(line: 458, column: 21, scope: !4867)
!4873 = !DILocation(line: 458, column: 9, scope: !4867)
!4874 = !DILocation(line: 458, column: 2, scope: !4867)
!4875 = !DILocation(line: 459, column: 17, scope: !4859)
!4876 = !DILocation(line: 459, column: 5, scope: !4859)
!4877 = !DILocation(line: 459, column: 9, scope: !4859)
!4878 = !DILocation(line: 459, column: 15, scope: !4859)
!4879 = !DILocation(line: 460, column: 5, scope: !4859)
!4880 = distinct !DISubprogram(name: "initialize_listen_socket", scope: !497, file: !497, line: 374, type: !4881, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{!26, !551}
!4883 = !DILocalVariable(name: "saP", arg: 1, scope: !4880, file: !497, line: 374, type: !551)
!4884 = !DILocation(line: 374, column: 43, scope: !4880)
!4885 = !DILocalVariable(name: "listen_fd", scope: !4880, file: !497, line: 376, type: !26)
!4886 = !DILocation(line: 376, column: 9, scope: !4880)
!4887 = !DILocalVariable(name: "on", scope: !4880, file: !497, line: 377, type: !26)
!4888 = !DILocation(line: 377, column: 9, scope: !4880)
!4889 = !DILocalVariable(name: "flags", scope: !4880, file: !497, line: 377, type: !26)
!4890 = !DILocation(line: 377, column: 13, scope: !4880)
!4891 = !DILocation(line: 380, column: 28, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4880, file: !497, line: 380, column: 10)
!4893 = !DILocation(line: 380, column: 12, scope: !4892)
!4894 = !DILocation(line: 380, column: 10, scope: !4880)
!4895 = !DILocation(line: 382, column: 2, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4892, file: !497, line: 381, column: 2)
!4897 = !DILocation(line: 383, column: 2, scope: !4896)
!4898 = !DILocation(line: 387, column: 25, scope: !4880)
!4899 = !DILocation(line: 387, column: 30, scope: !4880)
!4900 = !DILocation(line: 387, column: 33, scope: !4880)
!4901 = !DILocation(line: 387, column: 17, scope: !4880)
!4902 = !DILocation(line: 387, column: 15, scope: !4880)
!4903 = !DILocation(line: 388, column: 10, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4880, file: !497, line: 388, column: 10)
!4905 = !DILocation(line: 388, column: 20, scope: !4904)
!4906 = !DILocation(line: 388, column: 10, scope: !4880)
!4907 = !DILocation(line: 390, column: 53, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4904, file: !497, line: 389, column: 2)
!4909 = !DILocation(line: 390, column: 41, scope: !4908)
!4910 = !DILocation(line: 390, column: 2, scope: !4908)
!4911 = !DILocation(line: 391, column: 2, scope: !4908)
!4912 = !DILocation(line: 393, column: 19, scope: !4880)
!4913 = !DILocation(line: 393, column: 12, scope: !4880)
!4914 = !DILocation(line: 396, column: 8, scope: !4880)
!4915 = !DILocation(line: 398, column: 7, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4880, file: !497, line: 397, column: 10)
!4917 = !DILocation(line: 398, column: 44, scope: !4916)
!4918 = !DILocation(line: 397, column: 10, scope: !4916)
!4919 = !DILocation(line: 399, column: 20, scope: !4916)
!4920 = !DILocation(line: 397, column: 10, scope: !4880)
!4921 = !DILocation(line: 400, column: 2, scope: !4916)
!4922 = !DILocation(line: 403, column: 16, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4880, file: !497, line: 403, column: 10)
!4924 = !DILocation(line: 403, column: 28, scope: !4923)
!4925 = !DILocation(line: 403, column: 33, scope: !4923)
!4926 = !DILocation(line: 403, column: 51, scope: !4923)
!4927 = !DILocation(line: 403, column: 37, scope: !4923)
!4928 = !DILocation(line: 403, column: 10, scope: !4923)
!4929 = !DILocation(line: 403, column: 59, scope: !4923)
!4930 = !DILocation(line: 403, column: 10, scope: !4880)
!4931 = !DILocation(line: 406, column: 47, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4923, file: !497, line: 404, column: 2)
!4933 = !DILocation(line: 406, column: 35, scope: !4932)
!4934 = !DILocation(line: 405, column: 2, scope: !4932)
!4935 = !DILocation(line: 407, column: 16, scope: !4932)
!4936 = !DILocation(line: 407, column: 9, scope: !4932)
!4937 = !DILocation(line: 408, column: 2, scope: !4932)
!4938 = !DILocation(line: 412, column: 20, scope: !4880)
!4939 = !DILocation(line: 412, column: 13, scope: !4880)
!4940 = !DILocation(line: 412, column: 11, scope: !4880)
!4941 = !DILocation(line: 413, column: 10, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4880, file: !497, line: 413, column: 10)
!4943 = !DILocation(line: 413, column: 16, scope: !4942)
!4944 = !DILocation(line: 413, column: 10, scope: !4880)
!4945 = !DILocation(line: 415, column: 2, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4942, file: !497, line: 414, column: 2)
!4947 = !DILocation(line: 416, column: 16, scope: !4946)
!4948 = !DILocation(line: 416, column: 9, scope: !4946)
!4949 = !DILocation(line: 417, column: 2, scope: !4946)
!4950 = !DILocation(line: 419, column: 17, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4880, file: !497, line: 419, column: 10)
!4952 = !DILocation(line: 419, column: 37, scope: !4951)
!4953 = !DILocation(line: 419, column: 43, scope: !4951)
!4954 = !DILocation(line: 419, column: 10, scope: !4951)
!4955 = !DILocation(line: 419, column: 56, scope: !4951)
!4956 = !DILocation(line: 419, column: 10, scope: !4880)
!4957 = !DILocation(line: 421, column: 2, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4951, file: !497, line: 420, column: 2)
!4959 = !DILocation(line: 422, column: 16, scope: !4958)
!4960 = !DILocation(line: 422, column: 9, scope: !4958)
!4961 = !DILocation(line: 423, column: 2, scope: !4958)
!4962 = !DILocation(line: 427, column: 18, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4880, file: !497, line: 427, column: 10)
!4964 = !DILocation(line: 427, column: 10, scope: !4963)
!4965 = !DILocation(line: 427, column: 46, scope: !4963)
!4966 = !DILocation(line: 427, column: 10, scope: !4880)
!4967 = !DILocation(line: 429, column: 2, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4963, file: !497, line: 428, column: 2)
!4969 = !DILocation(line: 430, column: 16, scope: !4968)
!4970 = !DILocation(line: 430, column: 9, scope: !4968)
!4971 = !DILocation(line: 431, column: 2, scope: !4968)
!4972 = !DILocation(line: 450, column: 12, scope: !4880)
!4973 = !DILocation(line: 450, column: 5, scope: !4880)
!4974 = !DILocation(line: 451, column: 5, scope: !4880)
!4975 = distinct !DISubprogram(name: "free_httpd_server", scope: !497, file: !497, line: 207, type: !4976, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{null, !499}
!4978 = !DILocalVariable(name: "hs", arg: 1, scope: !4975, file: !497, line: 207, type: !499)
!4979 = !DILocation(line: 207, column: 34, scope: !4975)
!4980 = !DILocation(line: 209, column: 10, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4975, file: !497, line: 209, column: 10)
!4982 = !DILocation(line: 209, column: 14, scope: !4981)
!4983 = !DILocation(line: 209, column: 31, scope: !4981)
!4984 = !DILocation(line: 209, column: 10, scope: !4975)
!4985 = !DILocation(line: 210, column: 16, scope: !4981)
!4986 = !DILocation(line: 210, column: 20, scope: !4981)
!4987 = !DILocation(line: 210, column: 2, scope: !4981)
!4988 = !DILocation(line: 211, column: 10, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4975, file: !497, line: 211, column: 10)
!4990 = !DILocation(line: 211, column: 14, scope: !4989)
!4991 = !DILocation(line: 211, column: 18, scope: !4989)
!4992 = !DILocation(line: 211, column: 10, scope: !4975)
!4993 = !DILocation(line: 212, column: 16, scope: !4989)
!4994 = !DILocation(line: 212, column: 20, scope: !4989)
!4995 = !DILocation(line: 212, column: 2, scope: !4989)
!4996 = !DILocation(line: 213, column: 10, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4975, file: !497, line: 213, column: 10)
!4998 = !DILocation(line: 213, column: 14, scope: !4997)
!4999 = !DILocation(line: 213, column: 26, scope: !4997)
!5000 = !DILocation(line: 213, column: 10, scope: !4975)
!5001 = !DILocation(line: 214, column: 16, scope: !4997)
!5002 = !DILocation(line: 214, column: 20, scope: !4997)
!5003 = !DILocation(line: 214, column: 2, scope: !4997)
!5004 = !DILocation(line: 215, column: 10, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4975, file: !497, line: 215, column: 10)
!5006 = !DILocation(line: 215, column: 14, scope: !5005)
!5007 = !DILocation(line: 215, column: 22, scope: !5005)
!5008 = !DILocation(line: 215, column: 10, scope: !4975)
!5009 = !DILocation(line: 216, column: 16, scope: !5005)
!5010 = !DILocation(line: 216, column: 20, scope: !5005)
!5011 = !DILocation(line: 216, column: 2, scope: !5005)
!5012 = !DILocation(line: 217, column: 10, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4975, file: !497, line: 217, column: 10)
!5014 = !DILocation(line: 217, column: 14, scope: !5013)
!5015 = !DILocation(line: 217, column: 18, scope: !5013)
!5016 = !DILocation(line: 217, column: 10, scope: !4975)
!5017 = !DILocation(line: 218, column: 16, scope: !5013)
!5018 = !DILocation(line: 218, column: 20, scope: !5013)
!5019 = !DILocation(line: 218, column: 2, scope: !5013)
!5020 = !DILocation(line: 219, column: 10, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !4975, file: !497, line: 219, column: 10)
!5022 = !DILocation(line: 219, column: 14, scope: !5021)
!5023 = !DILocation(line: 219, column: 26, scope: !5021)
!5024 = !DILocation(line: 219, column: 10, scope: !4975)
!5025 = !DILocation(line: 220, column: 16, scope: !5021)
!5026 = !DILocation(line: 220, column: 20, scope: !5021)
!5027 = !DILocation(line: 220, column: 2, scope: !5021)
!5028 = !DILocation(line: 221, column: 10, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !4975, file: !497, line: 221, column: 10)
!5030 = !DILocation(line: 221, column: 14, scope: !5029)
!5031 = !DILocation(line: 221, column: 28, scope: !5029)
!5032 = !DILocation(line: 221, column: 10, scope: !4975)
!5033 = !DILocation(line: 222, column: 16, scope: !5029)
!5034 = !DILocation(line: 222, column: 20, scope: !5029)
!5035 = !DILocation(line: 222, column: 2, scope: !5029)
!5036 = !DILocation(line: 223, column: 19, scope: !4975)
!5037 = !DILocation(line: 223, column: 11, scope: !4975)
!5038 = !DILocation(line: 223, column: 5, scope: !4975)
!5039 = !DILocation(line: 224, column: 5, scope: !4975)
!5040 = distinct !DISubprogram(name: "init_mime", scope: !497, file: !497, line: 2540, type: !2758, scopeLine: 2541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5041 = !DILocalVariable(name: "i", scope: !5040, file: !497, line: 2542, type: !26)
!5042 = !DILocation(line: 2542, column: 9, scope: !5040)
!5043 = !DILocation(line: 2545, column: 5, scope: !5040)
!5044 = !DILocation(line: 2546, column: 5, scope: !5040)
!5045 = !DILocation(line: 2549, column: 13, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5040, file: !497, line: 2549, column: 5)
!5047 = !DILocation(line: 2549, column: 11, scope: !5046)
!5048 = !DILocation(line: 2549, column: 18, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5046, file: !497, line: 2549, column: 5)
!5050 = !DILocation(line: 2549, column: 20, scope: !5049)
!5051 = !DILocation(line: 2549, column: 5, scope: !5046)
!5052 = !DILocation(line: 2551, column: 39, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5049, file: !497, line: 2550, column: 2)
!5054 = !DILocation(line: 2551, column: 31, scope: !5053)
!5055 = !DILocation(line: 2551, column: 42, scope: !5053)
!5056 = !DILocation(line: 2551, column: 23, scope: !5053)
!5057 = !DILocation(line: 2551, column: 10, scope: !5053)
!5058 = !DILocation(line: 2551, column: 2, scope: !5053)
!5059 = !DILocation(line: 2551, column: 13, scope: !5053)
!5060 = !DILocation(line: 2551, column: 21, scope: !5053)
!5061 = !DILocation(line: 2552, column: 39, scope: !5053)
!5062 = !DILocation(line: 2552, column: 31, scope: !5053)
!5063 = !DILocation(line: 2552, column: 42, scope: !5053)
!5064 = !DILocation(line: 2552, column: 23, scope: !5053)
!5065 = !DILocation(line: 2552, column: 10, scope: !5053)
!5066 = !DILocation(line: 2552, column: 2, scope: !5053)
!5067 = !DILocation(line: 2552, column: 13, scope: !5053)
!5068 = !DILocation(line: 2552, column: 21, scope: !5053)
!5069 = !DILocation(line: 2553, column: 2, scope: !5053)
!5070 = !DILocation(line: 2549, column: 33, scope: !5049)
!5071 = !DILocation(line: 2549, column: 5, scope: !5049)
!5072 = distinct !{!5072, !5051, !5073}
!5073 = !DILocation(line: 2553, column: 2, scope: !5046)
!5074 = !DILocation(line: 2554, column: 13, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5040, file: !497, line: 2554, column: 5)
!5076 = !DILocation(line: 2554, column: 11, scope: !5075)
!5077 = !DILocation(line: 2554, column: 18, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5075, file: !497, line: 2554, column: 5)
!5079 = !DILocation(line: 2554, column: 20, scope: !5078)
!5080 = !DILocation(line: 2554, column: 5, scope: !5075)
!5081 = !DILocation(line: 2556, column: 39, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5078, file: !497, line: 2555, column: 2)
!5083 = !DILocation(line: 2556, column: 31, scope: !5082)
!5084 = !DILocation(line: 2556, column: 42, scope: !5082)
!5085 = !DILocation(line: 2556, column: 23, scope: !5082)
!5086 = !DILocation(line: 2556, column: 10, scope: !5082)
!5087 = !DILocation(line: 2556, column: 2, scope: !5082)
!5088 = !DILocation(line: 2556, column: 13, scope: !5082)
!5089 = !DILocation(line: 2556, column: 21, scope: !5082)
!5090 = !DILocation(line: 2557, column: 39, scope: !5082)
!5091 = !DILocation(line: 2557, column: 31, scope: !5082)
!5092 = !DILocation(line: 2557, column: 42, scope: !5082)
!5093 = !DILocation(line: 2557, column: 23, scope: !5082)
!5094 = !DILocation(line: 2557, column: 10, scope: !5082)
!5095 = !DILocation(line: 2557, column: 2, scope: !5082)
!5096 = !DILocation(line: 2557, column: 13, scope: !5082)
!5097 = !DILocation(line: 2557, column: 21, scope: !5082)
!5098 = !DILocation(line: 2558, column: 2, scope: !5082)
!5099 = !DILocation(line: 2554, column: 33, scope: !5078)
!5100 = !DILocation(line: 2554, column: 5, scope: !5078)
!5101 = distinct !{!5101, !5080, !5102}
!5102 = !DILocation(line: 2558, column: 2, scope: !5075)
!5103 = !DILocation(line: 2560, column: 5, scope: !5040)
!5104 = !DILocalVariable(name: "saP", arg: 1, scope: !686, file: !497, line: 4112, type: !551)
!5105 = !DILocation(line: 4112, column: 29, scope: !686)
!5106 = !DILocation(line: 4117, column: 24, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !686, file: !497, line: 4117, column: 10)
!5108 = !DILocation(line: 4117, column: 29, scope: !5107)
!5109 = !DILocation(line: 4117, column: 47, scope: !5107)
!5110 = !DILocation(line: 4117, column: 33, scope: !5107)
!5111 = !DILocation(line: 4117, column: 10, scope: !5107)
!5112 = !DILocation(line: 4117, column: 95, scope: !5107)
!5113 = !DILocation(line: 4117, column: 10, scope: !686)
!5114 = !DILocation(line: 4119, column: 9, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5107, file: !497, line: 4118, column: 2)
!5116 = !DILocation(line: 4120, column: 9, scope: !5115)
!5117 = !DILocation(line: 4121, column: 2, scope: !5115)
!5118 = !DILocation(line: 4122, column: 15, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5107, file: !497, line: 4122, column: 15)
!5120 = !DILocation(line: 4122, column: 62, scope: !5119)
!5121 = !DILocation(line: 4122, column: 65, scope: !5119)
!5122 = !DILocation(line: 4122, column: 94, scope: !5119)
!5123 = !DILocation(line: 4122, column: 15, scope: !5107)
!5124 = !DILocation(line: 4124, column: 9, scope: !5119)
!5125 = !DILocation(line: 4124, column: 2, scope: !5119)
!5126 = !DILocation(line: 4126, column: 5, scope: !686)
!5127 = distinct !DISubprogram(name: "sockaddr_len", scope: !497, file: !497, line: 4152, type: !5128, scopeLine: 4153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{!264, !551}
!5130 = !DILocalVariable(name: "saP", arg: 1, scope: !5127, file: !497, line: 4152, type: !551)
!5131 = !DILocation(line: 4152, column: 31, scope: !5127)
!5132 = !DILocation(line: 4154, column: 14, scope: !5127)
!5133 = !DILocation(line: 4154, column: 19, scope: !5127)
!5134 = !DILocation(line: 4154, column: 22, scope: !5127)
!5135 = !DILocation(line: 4154, column: 5, scope: !5127)
!5136 = !DILocation(line: 4156, column: 16, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5127, file: !497, line: 4155, column: 2)
!5138 = !DILocation(line: 4158, column: 17, scope: !5137)
!5139 = !DILocation(line: 4161, column: 2, scope: !5137)
!5140 = !DILocation(line: 4163, column: 5, scope: !5127)
!5141 = distinct !DISubprogram(name: "ext_compare", scope: !497, file: !497, line: 2530, type: !5142, scopeLine: 2531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5142 = !DISubroutineType(types: !5143)
!5143 = !{!26, !599, !599}
!5144 = !DILocalVariable(name: "v1", arg: 1, scope: !5141, file: !497, line: 2530, type: !599)
!5145 = !DILocation(line: 2530, column: 26, scope: !5141)
!5146 = !DILocalVariable(name: "v2", arg: 2, scope: !5141, file: !497, line: 2530, type: !599)
!5147 = !DILocation(line: 2530, column: 42, scope: !5141)
!5148 = !DILocalVariable(name: "m1", scope: !5141, file: !497, line: 2532, type: !601)
!5149 = !DILocation(line: 2532, column: 30, scope: !5141)
!5150 = !DILocation(line: 2532, column: 62, scope: !5141)
!5151 = !DILocation(line: 2532, column: 35, scope: !5141)
!5152 = !DILocalVariable(name: "m2", scope: !5141, file: !497, line: 2533, type: !601)
!5153 = !DILocation(line: 2533, column: 30, scope: !5141)
!5154 = !DILocation(line: 2533, column: 62, scope: !5141)
!5155 = !DILocation(line: 2533, column: 35, scope: !5141)
!5156 = !DILocation(line: 2535, column: 20, scope: !5141)
!5157 = !DILocation(line: 2535, column: 24, scope: !5141)
!5158 = !DILocation(line: 2535, column: 29, scope: !5141)
!5159 = !DILocation(line: 2535, column: 33, scope: !5141)
!5160 = !DILocation(line: 2535, column: 12, scope: !5141)
!5161 = !DILocation(line: 2535, column: 5, scope: !5141)
!5162 = distinct !DISubprogram(name: "sockaddr_check", scope: !497, file: !497, line: 4137, type: !4881, scopeLine: 4138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5163 = !DILocalVariable(name: "saP", arg: 1, scope: !5162, file: !497, line: 4137, type: !551)
!5164 = !DILocation(line: 4137, column: 33, scope: !5162)
!5165 = !DILocation(line: 4139, column: 14, scope: !5162)
!5166 = !DILocation(line: 4139, column: 19, scope: !5162)
!5167 = !DILocation(line: 4139, column: 22, scope: !5162)
!5168 = !DILocation(line: 4139, column: 5, scope: !5162)
!5169 = !DILocation(line: 4141, column: 16, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5162, file: !497, line: 4140, column: 2)
!5171 = !DILocation(line: 4143, column: 17, scope: !5170)
!5172 = !DILocation(line: 4146, column: 2, scope: !5170)
!5173 = !DILocation(line: 4148, column: 5, scope: !5162)
!5174 = distinct !DISubprogram(name: "httpd_terminate", scope: !497, file: !497, line: 464, type: !4976, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5175 = !DILocalVariable(name: "hs", arg: 1, scope: !5174, file: !497, line: 464, type: !499)
!5176 = !DILocation(line: 464, column: 32, scope: !5174)
!5177 = !DILocation(line: 466, column: 21, scope: !5174)
!5178 = !DILocation(line: 466, column: 5, scope: !5174)
!5179 = !DILocation(line: 467, column: 10, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5174, file: !497, line: 467, column: 10)
!5181 = !DILocation(line: 467, column: 14, scope: !5180)
!5182 = !DILocation(line: 467, column: 20, scope: !5180)
!5183 = !DILocation(line: 467, column: 10, scope: !5174)
!5184 = !DILocation(line: 468, column: 17, scope: !5180)
!5185 = !DILocation(line: 468, column: 21, scope: !5180)
!5186 = !DILocation(line: 468, column: 9, scope: !5180)
!5187 = !DILocation(line: 468, column: 2, scope: !5180)
!5188 = !DILocation(line: 469, column: 24, scope: !5174)
!5189 = !DILocation(line: 469, column: 5, scope: !5174)
!5190 = !DILocation(line: 470, column: 5, scope: !5174)
!5191 = distinct !DISubprogram(name: "httpd_unlisten", scope: !497, file: !497, line: 474, type: !4976, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5192 = !DILocalVariable(name: "hs", arg: 1, scope: !5191, file: !497, line: 474, type: !499)
!5193 = !DILocation(line: 474, column: 31, scope: !5191)
!5194 = !DILocation(line: 476, column: 10, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5191, file: !497, line: 476, column: 10)
!5196 = !DILocation(line: 476, column: 14, scope: !5195)
!5197 = !DILocation(line: 476, column: 25, scope: !5195)
!5198 = !DILocation(line: 476, column: 10, scope: !5191)
!5199 = !DILocation(line: 478, column: 16, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5195, file: !497, line: 477, column: 2)
!5201 = !DILocation(line: 478, column: 20, scope: !5200)
!5202 = !DILocation(line: 478, column: 9, scope: !5200)
!5203 = !DILocation(line: 479, column: 2, scope: !5200)
!5204 = !DILocation(line: 479, column: 6, scope: !5200)
!5205 = !DILocation(line: 479, column: 17, scope: !5200)
!5206 = !DILocation(line: 480, column: 2, scope: !5200)
!5207 = !DILocation(line: 481, column: 10, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5191, file: !497, line: 481, column: 10)
!5209 = !DILocation(line: 481, column: 14, scope: !5208)
!5210 = !DILocation(line: 481, column: 25, scope: !5208)
!5211 = !DILocation(line: 481, column: 10, scope: !5191)
!5212 = !DILocation(line: 483, column: 16, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5208, file: !497, line: 482, column: 2)
!5214 = !DILocation(line: 483, column: 20, scope: !5213)
!5215 = !DILocation(line: 483, column: 9, scope: !5213)
!5216 = !DILocation(line: 484, column: 2, scope: !5213)
!5217 = !DILocation(line: 484, column: 6, scope: !5213)
!5218 = !DILocation(line: 484, column: 17, scope: !5213)
!5219 = !DILocation(line: 485, column: 2, scope: !5213)
!5220 = !DILocation(line: 486, column: 5, scope: !5191)
!5221 = distinct !DISubprogram(name: "httpd_write_response", scope: !497, file: !497, line: 564, type: !852, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5222 = !DILocalVariable(name: "hc", arg: 1, scope: !5221, file: !497, line: 564, type: !709)
!5223 = !DILocation(line: 564, column: 35, scope: !5221)
!5224 = !DILocation(line: 567, column: 10, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5221, file: !497, line: 567, column: 10)
!5226 = !DILocation(line: 567, column: 10, scope: !5221)
!5227 = !DILocation(line: 568, column: 22, scope: !5225)
!5228 = !DILocation(line: 568, column: 26, scope: !5225)
!5229 = !DILocation(line: 568, column: 2, scope: !5225)
!5230 = !DILocation(line: 570, column: 10, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5221, file: !497, line: 570, column: 10)
!5232 = !DILocation(line: 570, column: 14, scope: !5231)
!5233 = !DILocation(line: 570, column: 26, scope: !5231)
!5234 = !DILocation(line: 570, column: 10, scope: !5221)
!5235 = !DILocation(line: 572, column: 28, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5231, file: !497, line: 571, column: 2)
!5237 = !DILocation(line: 572, column: 32, scope: !5236)
!5238 = !DILocation(line: 572, column: 41, scope: !5236)
!5239 = !DILocation(line: 572, column: 45, scope: !5236)
!5240 = !DILocation(line: 572, column: 55, scope: !5236)
!5241 = !DILocation(line: 572, column: 59, scope: !5236)
!5242 = !DILocation(line: 572, column: 9, scope: !5236)
!5243 = !DILocation(line: 573, column: 2, scope: !5236)
!5244 = !DILocation(line: 573, column: 6, scope: !5236)
!5245 = !DILocation(line: 573, column: 18, scope: !5236)
!5246 = !DILocation(line: 574, column: 2, scope: !5236)
!5247 = !DILocation(line: 575, column: 5, scope: !5221)
!5248 = distinct !DISubprogram(name: "httpd_clear_ndelay", scope: !497, file: !497, line: 596, type: !107, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5249 = !DILocalVariable(name: "fd", arg: 1, scope: !5248, file: !497, line: 596, type: !26)
!5250 = !DILocation(line: 596, column: 25, scope: !5248)
!5251 = !DILocalVariable(name: "flags", scope: !5248, file: !497, line: 598, type: !26)
!5252 = !DILocation(line: 598, column: 9, scope: !5248)
!5253 = !DILocalVariable(name: "newflags", scope: !5248, file: !497, line: 598, type: !26)
!5254 = !DILocation(line: 598, column: 16, scope: !5248)
!5255 = !DILocation(line: 600, column: 20, scope: !5248)
!5256 = !DILocation(line: 600, column: 13, scope: !5248)
!5257 = !DILocation(line: 600, column: 11, scope: !5248)
!5258 = !DILocation(line: 601, column: 10, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5248, file: !497, line: 601, column: 10)
!5260 = !DILocation(line: 601, column: 16, scope: !5259)
!5261 = !DILocation(line: 601, column: 10, scope: !5248)
!5262 = !DILocation(line: 603, column: 13, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5259, file: !497, line: 602, column: 2)
!5264 = !DILocation(line: 603, column: 19, scope: !5263)
!5265 = !DILocation(line: 603, column: 11, scope: !5263)
!5266 = !DILocation(line: 604, column: 7, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5263, file: !497, line: 604, column: 7)
!5268 = !DILocation(line: 604, column: 19, scope: !5267)
!5269 = !DILocation(line: 604, column: 16, scope: !5267)
!5270 = !DILocation(line: 604, column: 7, scope: !5263)
!5271 = !DILocation(line: 605, column: 20, scope: !5267)
!5272 = !DILocation(line: 605, column: 33, scope: !5267)
!5273 = !DILocation(line: 605, column: 13, scope: !5267)
!5274 = !DILocation(line: 605, column: 6, scope: !5267)
!5275 = !DILocation(line: 606, column: 2, scope: !5263)
!5276 = !DILocation(line: 607, column: 5, scope: !5248)
!5277 = distinct !DISubprogram(name: "httpd_write_fully", scope: !497, file: !497, line: 4244, type: !5278, scopeLine: 4245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5278 = !DISubroutineType(types: !5279)
!5279 = !{!26, !26, !88, !264}
!5280 = !DILocalVariable(name: "fd", arg: 1, scope: !5277, file: !497, line: 4244, type: !26)
!5281 = !DILocation(line: 4244, column: 24, scope: !5277)
!5282 = !DILocalVariable(name: "buf", arg: 2, scope: !5277, file: !497, line: 4244, type: !88)
!5283 = !DILocation(line: 4244, column: 40, scope: !5277)
!5284 = !DILocalVariable(name: "nbytes", arg: 3, scope: !5277, file: !497, line: 4244, type: !264)
!5285 = !DILocation(line: 4244, column: 52, scope: !5277)
!5286 = !DILocalVariable(name: "nwritten", scope: !5277, file: !497, line: 4246, type: !26)
!5287 = !DILocation(line: 4246, column: 9, scope: !5277)
!5288 = !DILocation(line: 4248, column: 14, scope: !5277)
!5289 = !DILocation(line: 4249, column: 5, scope: !5277)
!5290 = !DILocation(line: 4249, column: 13, scope: !5277)
!5291 = !DILocation(line: 4249, column: 24, scope: !5277)
!5292 = !DILocation(line: 4249, column: 22, scope: !5277)
!5293 = !DILocalVariable(name: "r", scope: !5294, file: !497, line: 4251, type: !26)
!5294 = distinct !DILexicalBlock(scope: !5277, file: !497, line: 4250, column: 2)
!5295 = !DILocation(line: 4251, column: 6, scope: !5294)
!5296 = !DILocation(line: 4253, column: 13, scope: !5294)
!5297 = !DILocation(line: 4253, column: 17, scope: !5294)
!5298 = !DILocation(line: 4253, column: 23, scope: !5294)
!5299 = !DILocation(line: 4253, column: 21, scope: !5294)
!5300 = !DILocation(line: 4253, column: 33, scope: !5294)
!5301 = !DILocation(line: 4253, column: 42, scope: !5294)
!5302 = !DILocation(line: 4253, column: 40, scope: !5294)
!5303 = !DILocation(line: 4253, column: 6, scope: !5294)
!5304 = !DILocation(line: 4253, column: 4, scope: !5294)
!5305 = !DILocation(line: 4254, column: 7, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5294, file: !497, line: 4254, column: 7)
!5307 = !DILocation(line: 4254, column: 9, scope: !5306)
!5308 = !DILocation(line: 4254, column: 13, scope: !5306)
!5309 = !DILocation(line: 4254, column: 18, scope: !5306)
!5310 = !DILocation(line: 4254, column: 24, scope: !5306)
!5311 = !DILocation(line: 4254, column: 33, scope: !5306)
!5312 = !DILocation(line: 4254, column: 36, scope: !5306)
!5313 = !DILocation(line: 4254, column: 42, scope: !5306)
!5314 = !DILocation(line: 4254, column: 7, scope: !5294)
!5315 = !DILocation(line: 4256, column: 6, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5306, file: !497, line: 4255, column: 6)
!5317 = !DILocation(line: 4257, column: 6, scope: !5316)
!5318 = distinct !{!5318, !5289, !5319}
!5319 = !DILocation(line: 4264, column: 2, scope: !5277)
!5320 = !DILocation(line: 4259, column: 7, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5294, file: !497, line: 4259, column: 7)
!5322 = !DILocation(line: 4259, column: 9, scope: !5321)
!5323 = !DILocation(line: 4259, column: 7, scope: !5294)
!5324 = !DILocation(line: 4260, column: 13, scope: !5321)
!5325 = !DILocation(line: 4260, column: 6, scope: !5321)
!5326 = !DILocation(line: 4261, column: 7, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5294, file: !497, line: 4261, column: 7)
!5328 = !DILocation(line: 4261, column: 9, scope: !5327)
!5329 = !DILocation(line: 4261, column: 7, scope: !5294)
!5330 = !DILocation(line: 4262, column: 6, scope: !5327)
!5331 = !DILocation(line: 4263, column: 14, scope: !5294)
!5332 = !DILocation(line: 4263, column: 11, scope: !5294)
!5333 = !DILocation(line: 4266, column: 12, scope: !5277)
!5334 = !DILocation(line: 4266, column: 5, scope: !5277)
!5335 = !DILocation(line: 4267, column: 5, scope: !5277)
!5336 = distinct !DISubprogram(name: "httpd_set_ndelay", scope: !497, file: !497, line: 580, type: !107, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5337 = !DILocalVariable(name: "fd", arg: 1, scope: !5336, file: !497, line: 580, type: !26)
!5338 = !DILocation(line: 580, column: 23, scope: !5336)
!5339 = !DILocalVariable(name: "flags", scope: !5336, file: !497, line: 582, type: !26)
!5340 = !DILocation(line: 582, column: 9, scope: !5336)
!5341 = !DILocalVariable(name: "newflags", scope: !5336, file: !497, line: 582, type: !26)
!5342 = !DILocation(line: 582, column: 16, scope: !5336)
!5343 = !DILocation(line: 584, column: 20, scope: !5336)
!5344 = !DILocation(line: 584, column: 13, scope: !5336)
!5345 = !DILocation(line: 584, column: 11, scope: !5336)
!5346 = !DILocation(line: 585, column: 10, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5336, file: !497, line: 585, column: 10)
!5348 = !DILocation(line: 585, column: 16, scope: !5347)
!5349 = !DILocation(line: 585, column: 10, scope: !5336)
!5350 = !DILocation(line: 587, column: 13, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5347, file: !497, line: 586, column: 2)
!5352 = !DILocation(line: 587, column: 19, scope: !5351)
!5353 = !DILocation(line: 587, column: 11, scope: !5351)
!5354 = !DILocation(line: 588, column: 7, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5351, file: !497, line: 588, column: 7)
!5356 = !DILocation(line: 588, column: 19, scope: !5355)
!5357 = !DILocation(line: 588, column: 16, scope: !5355)
!5358 = !DILocation(line: 588, column: 7, scope: !5351)
!5359 = !DILocation(line: 589, column: 20, scope: !5355)
!5360 = !DILocation(line: 589, column: 33, scope: !5355)
!5361 = !DILocation(line: 589, column: 13, scope: !5355)
!5362 = !DILocation(line: 589, column: 6, scope: !5355)
!5363 = !DILocation(line: 590, column: 2, scope: !5351)
!5364 = !DILocation(line: 591, column: 5, scope: !5336)
!5365 = distinct !DISubprogram(name: "httpd_realloc_str", scope: !497, file: !497, line: 711, type: !5366, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5366 = !DISubroutineType(types: !5367)
!5367 = !{null, !635, !5368, !264}
!5368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!5369 = !DILocalVariable(name: "strP", arg: 1, scope: !5365, file: !497, line: 711, type: !635)
!5370 = !DILocation(line: 711, column: 27, scope: !5365)
!5371 = !DILocalVariable(name: "maxsizeP", arg: 2, scope: !5365, file: !497, line: 711, type: !5368)
!5372 = !DILocation(line: 711, column: 41, scope: !5365)
!5373 = !DILocalVariable(name: "size", arg: 3, scope: !5365, file: !497, line: 711, type: !264)
!5374 = !DILocation(line: 711, column: 58, scope: !5365)
!5375 = !DILocation(line: 713, column: 11, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5365, file: !497, line: 713, column: 10)
!5377 = !DILocation(line: 713, column: 10, scope: !5376)
!5378 = !DILocation(line: 713, column: 20, scope: !5376)
!5379 = !DILocation(line: 713, column: 10, scope: !5365)
!5380 = !DILocation(line: 715, column: 14, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5376, file: !497, line: 714, column: 2)
!5382 = !DILocation(line: 715, column: 3, scope: !5381)
!5383 = !DILocation(line: 715, column: 12, scope: !5381)
!5384 = !DILocation(line: 716, column: 10, scope: !5381)
!5385 = !DILocation(line: 716, column: 3, scope: !5381)
!5386 = !DILocation(line: 716, column: 8, scope: !5381)
!5387 = !DILocation(line: 717, column: 2, scope: !5381)
!5388 = !DILocation(line: 718, column: 21, scope: !5381)
!5389 = !DILocation(line: 718, column: 20, scope: !5381)
!5390 = !DILocation(line: 718, column: 17, scope: !5381)
!5391 = !DILocation(line: 719, column: 2, scope: !5381)
!5392 = !DILocation(line: 720, column: 15, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5376, file: !497, line: 720, column: 15)
!5394 = !DILocation(line: 720, column: 23, scope: !5393)
!5395 = !DILocation(line: 720, column: 22, scope: !5393)
!5396 = !DILocation(line: 720, column: 20, scope: !5393)
!5397 = !DILocation(line: 720, column: 15, scope: !5376)
!5398 = !DILocation(line: 722, column: 21, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5393, file: !497, line: 721, column: 2)
!5400 = !DILocation(line: 722, column: 20, scope: !5399)
!5401 = !DILocation(line: 722, column: 17, scope: !5399)
!5402 = !DILocation(line: 723, column: 14, scope: !5399)
!5403 = !DILocation(line: 723, column: 3, scope: !5399)
!5404 = !DILocation(line: 723, column: 12, scope: !5399)
!5405 = !DILocation(line: 724, column: 10, scope: !5399)
!5406 = !DILocation(line: 724, column: 3, scope: !5399)
!5407 = !DILocation(line: 724, column: 8, scope: !5399)
!5408 = !DILocation(line: 725, column: 21, scope: !5399)
!5409 = !DILocation(line: 725, column: 20, scope: !5399)
!5410 = !DILocation(line: 725, column: 17, scope: !5399)
!5411 = !DILocation(line: 726, column: 2, scope: !5399)
!5412 = !DILocation(line: 728, column: 2, scope: !5393)
!5413 = !DILocation(line: 729, column: 11, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5365, file: !497, line: 729, column: 10)
!5415 = !DILocation(line: 729, column: 10, scope: !5414)
!5416 = !DILocation(line: 729, column: 16, scope: !5414)
!5417 = !DILocation(line: 729, column: 10, scope: !5365)
!5418 = !DILocation(line: 733, column: 14, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5414, file: !497, line: 730, column: 2)
!5420 = !DILocation(line: 733, column: 13, scope: !5419)
!5421 = !DILocation(line: 731, column: 2, scope: !5419)
!5422 = !DILocation(line: 734, column: 2, scope: !5419)
!5423 = !DILocation(line: 736, column: 5, scope: !5365)
!5424 = distinct !DISubprogram(name: "httpd_send_err", scope: !497, file: !497, line: 829, type: !5425, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5425 = !DISubroutineType(types: !5426)
!5426 = !{null, !709, !26, !6, !6, !6, !6}
!5427 = !DILocalVariable(name: "hc", arg: 1, scope: !5424, file: !497, line: 829, type: !709)
!5428 = !DILocation(line: 829, column: 29, scope: !5424)
!5429 = !DILocalVariable(name: "status", arg: 2, scope: !5424, file: !497, line: 829, type: !26)
!5430 = !DILocation(line: 829, column: 37, scope: !5424)
!5431 = !DILocalVariable(name: "title", arg: 3, scope: !5424, file: !497, line: 829, type: !6)
!5432 = !DILocation(line: 829, column: 51, scope: !5424)
!5433 = !DILocalVariable(name: "extraheads", arg: 4, scope: !5424, file: !497, line: 829, type: !6)
!5434 = !DILocation(line: 829, column: 64, scope: !5424)
!5435 = !DILocalVariable(name: "form", arg: 5, scope: !5424, file: !497, line: 829, type: !6)
!5436 = !DILocation(line: 829, column: 82, scope: !5424)
!5437 = !DILocalVariable(name: "arg", arg: 6, scope: !5424, file: !497, line: 829, type: !6)
!5438 = !DILocation(line: 829, column: 94, scope: !5424)
!5439 = !DILocalVariable(name: "filename", scope: !5424, file: !497, line: 833, type: !5440)
!5440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8000, elements: !5441)
!5441 = !{!5442}
!5442 = !DISubrange(count: 1000)
!5443 = !DILocation(line: 833, column: 10, scope: !5424)
!5444 = !DILocation(line: 836, column: 10, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5424, file: !497, line: 836, column: 10)
!5446 = !DILocation(line: 836, column: 14, scope: !5445)
!5447 = !DILocation(line: 836, column: 18, scope: !5445)
!5448 = !DILocation(line: 836, column: 24, scope: !5445)
!5449 = !DILocation(line: 836, column: 27, scope: !5445)
!5450 = !DILocation(line: 836, column: 31, scope: !5445)
!5451 = !DILocation(line: 836, column: 42, scope: !5445)
!5452 = !DILocation(line: 836, column: 10, scope: !5424)
!5453 = !DILocation(line: 838, column: 22, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5445, file: !497, line: 837, column: 2)
!5455 = !DILocation(line: 839, column: 26, scope: !5454)
!5456 = !DILocation(line: 839, column: 30, scope: !5454)
!5457 = !DILocation(line: 839, column: 48, scope: !5454)
!5458 = !DILocation(line: 838, column: 9, scope: !5454)
!5459 = !DILocation(line: 840, column: 22, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5454, file: !497, line: 840, column: 7)
!5461 = !DILocation(line: 840, column: 26, scope: !5460)
!5462 = !DILocation(line: 840, column: 34, scope: !5460)
!5463 = !DILocation(line: 840, column: 41, scope: !5460)
!5464 = !DILocation(line: 840, column: 53, scope: !5460)
!5465 = !DILocation(line: 840, column: 7, scope: !5460)
!5466 = !DILocation(line: 840, column: 7, scope: !5454)
!5467 = !DILocation(line: 841, column: 6, scope: !5460)
!5468 = !DILocation(line: 842, column: 2, scope: !5454)
!5469 = !DILocation(line: 845, column: 25, scope: !5424)
!5470 = !DILocation(line: 846, column: 28, scope: !5424)
!5471 = !DILocation(line: 845, column: 12, scope: !5424)
!5472 = !DILocation(line: 847, column: 25, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5424, file: !497, line: 847, column: 10)
!5474 = !DILocation(line: 847, column: 29, scope: !5473)
!5475 = !DILocation(line: 847, column: 37, scope: !5473)
!5476 = !DILocation(line: 847, column: 44, scope: !5473)
!5477 = !DILocation(line: 847, column: 56, scope: !5473)
!5478 = !DILocation(line: 847, column: 10, scope: !5473)
!5479 = !DILocation(line: 847, column: 10, scope: !5424)
!5480 = !DILocation(line: 848, column: 2, scope: !5473)
!5481 = !DILocation(line: 851, column: 20, scope: !5424)
!5482 = !DILocation(line: 851, column: 24, scope: !5424)
!5483 = !DILocation(line: 851, column: 32, scope: !5424)
!5484 = !DILocation(line: 851, column: 39, scope: !5424)
!5485 = !DILocation(line: 851, column: 51, scope: !5424)
!5486 = !DILocation(line: 851, column: 57, scope: !5424)
!5487 = !DILocation(line: 851, column: 5, scope: !5424)
!5488 = !DILocation(line: 858, column: 5, scope: !5424)
!5489 = distinct !DISubprogram(name: "my_snprintf", scope: !497, file: !497, line: 4172, type: !5490, scopeLine: 4173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5490 = !DISubroutineType(types: !5491)
!5491 = !{!26, !6, !264, !88, null}
!5492 = !DILocalVariable(name: "str", arg: 1, scope: !5489, file: !497, line: 4172, type: !6)
!5493 = !DILocation(line: 4172, column: 20, scope: !5489)
!5494 = !DILocalVariable(name: "size", arg: 2, scope: !5489, file: !497, line: 4172, type: !264)
!5495 = !DILocation(line: 4172, column: 32, scope: !5489)
!5496 = !DILocalVariable(name: "format", arg: 3, scope: !5489, file: !497, line: 4172, type: !88)
!5497 = !DILocation(line: 4172, column: 50, scope: !5489)
!5498 = !DILocalVariable(name: "ap", scope: !5489, file: !497, line: 4174, type: !5499)
!5499 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5500, line: 14, baseType: !5501)
!5500 = !DIFile(filename: "/usr/local/Cellar/llvm-10/10.0.0/lib/llvm-10/lib/clang/10.0.0/include/stdarg.h", directory: "")
!5501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !497, line: 4174, baseType: !5502)
!5502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5503, size: 192, elements: !101)
!5503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !497, line: 4174, size: 192, elements: !5504)
!5504 = !{!5505, !5506, !5507, !5508}
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5503, file: !497, line: 4174, baseType: !38, size: 32)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5503, file: !497, line: 4174, baseType: !38, size: 32, offset: 32)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5503, file: !497, line: 4174, baseType: !70, size: 64, offset: 64)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5503, file: !497, line: 4174, baseType: !70, size: 64, offset: 128)
!5509 = !DILocation(line: 4174, column: 13, scope: !5489)
!5510 = !DILocalVariable(name: "r", scope: !5489, file: !497, line: 4175, type: !26)
!5511 = !DILocation(line: 4175, column: 9, scope: !5489)
!5512 = !DILocation(line: 4177, column: 5, scope: !5489)
!5513 = !DILocation(line: 4179, column: 9, scope: !5489)
!5514 = !DILocation(line: 4179, column: 7, scope: !5489)
!5515 = !DILocation(line: 4183, column: 5, scope: !5489)
!5516 = !DILocation(line: 4184, column: 12, scope: !5489)
!5517 = !DILocation(line: 4184, column: 5, scope: !5489)
!5518 = distinct !DISubprogram(name: "send_err_file", scope: !497, file: !497, line: 863, type: !5519, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{!26, !709, !26, !6, !6, !6}
!5521 = !DILocalVariable(name: "hc", arg: 1, scope: !5518, file: !497, line: 863, type: !709)
!5522 = !DILocation(line: 863, column: 28, scope: !5518)
!5523 = !DILocalVariable(name: "status", arg: 2, scope: !5518, file: !497, line: 863, type: !26)
!5524 = !DILocation(line: 863, column: 36, scope: !5518)
!5525 = !DILocalVariable(name: "title", arg: 3, scope: !5518, file: !497, line: 863, type: !6)
!5526 = !DILocation(line: 863, column: 50, scope: !5518)
!5527 = !DILocalVariable(name: "extraheads", arg: 4, scope: !5518, file: !497, line: 863, type: !6)
!5528 = !DILocation(line: 863, column: 63, scope: !5518)
!5529 = !DILocalVariable(name: "filename", arg: 5, scope: !5518, file: !497, line: 863, type: !6)
!5530 = !DILocation(line: 863, column: 81, scope: !5518)
!5531 = !DILocalVariable(name: "fp", scope: !5518, file: !497, line: 865, type: !517)
!5532 = !DILocation(line: 865, column: 11, scope: !5518)
!5533 = !DILocalVariable(name: "buf", scope: !5518, file: !497, line: 866, type: !5440)
!5534 = !DILocation(line: 866, column: 10, scope: !5518)
!5535 = !DILocalVariable(name: "r", scope: !5518, file: !497, line: 867, type: !264)
!5536 = !DILocation(line: 867, column: 12, scope: !5518)
!5537 = !DILocation(line: 869, column: 17, scope: !5518)
!5538 = !DILocation(line: 869, column: 10, scope: !5518)
!5539 = !DILocation(line: 869, column: 8, scope: !5518)
!5540 = !DILocation(line: 870, column: 10, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5518, file: !497, line: 870, column: 10)
!5542 = !DILocation(line: 870, column: 13, scope: !5541)
!5543 = !DILocation(line: 870, column: 10, scope: !5518)
!5544 = !DILocation(line: 871, column: 2, scope: !5541)
!5545 = !DILocation(line: 873, column: 2, scope: !5518)
!5546 = !DILocation(line: 873, column: 6, scope: !5518)
!5547 = !DILocation(line: 873, column: 14, scope: !5518)
!5548 = !DILocation(line: 873, column: 25, scope: !5518)
!5549 = !DILocation(line: 872, column: 5, scope: !5518)
!5550 = !DILocation(line: 875, column: 5, scope: !5518)
!5551 = !DILocation(line: 877, column: 13, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5553, file: !497, line: 876, column: 2)
!5553 = distinct !DILexicalBlock(scope: !5554, file: !497, line: 875, column: 5)
!5554 = distinct !DILexicalBlock(scope: !5518, file: !497, line: 875, column: 5)
!5555 = !DILocation(line: 877, column: 38, scope: !5552)
!5556 = !DILocation(line: 877, column: 6, scope: !5552)
!5557 = !DILocation(line: 877, column: 4, scope: !5552)
!5558 = !DILocation(line: 878, column: 7, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5552, file: !497, line: 878, column: 7)
!5560 = !DILocation(line: 878, column: 9, scope: !5559)
!5561 = !DILocation(line: 878, column: 7, scope: !5552)
!5562 = !DILocation(line: 879, column: 6, scope: !5559)
!5563 = !DILocation(line: 880, column: 6, scope: !5552)
!5564 = !DILocation(line: 880, column: 2, scope: !5552)
!5565 = !DILocation(line: 880, column: 9, scope: !5552)
!5566 = !DILocation(line: 881, column: 16, scope: !5552)
!5567 = !DILocation(line: 881, column: 20, scope: !5552)
!5568 = !DILocation(line: 881, column: 2, scope: !5552)
!5569 = !DILocation(line: 875, column: 5, scope: !5553)
!5570 = distinct !{!5570, !5571, !5572}
!5571 = !DILocation(line: 875, column: 5, scope: !5554)
!5572 = !DILocation(line: 882, column: 2, scope: !5554)
!5573 = !DILocation(line: 883, column: 20, scope: !5518)
!5574 = !DILocation(line: 883, column: 12, scope: !5518)
!5575 = !DILocation(line: 886, column: 25, scope: !5518)
!5576 = !DILocation(line: 886, column: 5, scope: !5518)
!5577 = !DILocation(line: 889, column: 5, scope: !5518)
!5578 = !DILocation(line: 890, column: 5, scope: !5518)
!5579 = distinct !DISubprogram(name: "send_response", scope: !497, file: !497, line: 740, type: !5425, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5580 = !DILocalVariable(name: "hc", arg: 1, scope: !5579, file: !497, line: 740, type: !709)
!5581 = !DILocation(line: 740, column: 28, scope: !5579)
!5582 = !DILocalVariable(name: "status", arg: 2, scope: !5579, file: !497, line: 740, type: !26)
!5583 = !DILocation(line: 740, column: 36, scope: !5579)
!5584 = !DILocalVariable(name: "title", arg: 3, scope: !5579, file: !497, line: 740, type: !6)
!5585 = !DILocation(line: 740, column: 50, scope: !5579)
!5586 = !DILocalVariable(name: "extraheads", arg: 4, scope: !5579, file: !497, line: 740, type: !6)
!5587 = !DILocation(line: 740, column: 63, scope: !5579)
!5588 = !DILocalVariable(name: "form", arg: 5, scope: !5579, file: !497, line: 740, type: !6)
!5589 = !DILocation(line: 740, column: 81, scope: !5579)
!5590 = !DILocalVariable(name: "arg", arg: 6, scope: !5579, file: !497, line: 740, type: !6)
!5591 = !DILocation(line: 740, column: 93, scope: !5579)
!5592 = !DILocalVariable(name: "defanged_arg", scope: !5579, file: !497, line: 742, type: !5440)
!5593 = !DILocation(line: 742, column: 10, scope: !5579)
!5594 = !DILocalVariable(name: "buf", scope: !5579, file: !497, line: 742, type: !5595)
!5595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 16000, elements: !5596)
!5596 = !{!5597}
!5597 = !DISubrange(count: 2000)
!5598 = !DILocation(line: 742, column: 30, scope: !5579)
!5599 = !DILocation(line: 745, column: 2, scope: !5579)
!5600 = !DILocation(line: 745, column: 6, scope: !5579)
!5601 = !DILocation(line: 745, column: 14, scope: !5579)
!5602 = !DILocation(line: 745, column: 25, scope: !5579)
!5603 = !DILocation(line: 744, column: 5, scope: !5579)
!5604 = !DILocation(line: 747, column: 25, scope: !5579)
!5605 = !DILocation(line: 760, column: 2, scope: !5579)
!5606 = !DILocation(line: 760, column: 10, scope: !5579)
!5607 = !DILocation(line: 760, column: 17, scope: !5579)
!5608 = !DILocation(line: 760, column: 25, scope: !5579)
!5609 = !DILocation(line: 747, column: 12, scope: !5579)
!5610 = !DILocation(line: 761, column: 19, scope: !5579)
!5611 = !DILocation(line: 761, column: 23, scope: !5579)
!5612 = !DILocation(line: 761, column: 5, scope: !5579)
!5613 = !DILocation(line: 762, column: 13, scope: !5579)
!5614 = !DILocation(line: 762, column: 18, scope: !5579)
!5615 = !DILocation(line: 762, column: 5, scope: !5579)
!5616 = !DILocation(line: 763, column: 25, scope: !5579)
!5617 = !DILocation(line: 763, column: 43, scope: !5579)
!5618 = !DILocation(line: 763, column: 49, scope: !5579)
!5619 = !DILocation(line: 763, column: 12, scope: !5579)
!5620 = !DILocation(line: 764, column: 19, scope: !5579)
!5621 = !DILocation(line: 764, column: 23, scope: !5579)
!5622 = !DILocation(line: 764, column: 5, scope: !5579)
!5623 = !DILocation(line: 765, column: 29, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5579, file: !497, line: 765, column: 10)
!5625 = !DILocation(line: 765, column: 33, scope: !5624)
!5626 = !DILocation(line: 765, column: 10, scope: !5624)
!5627 = !DILocation(line: 765, column: 10, scope: !5579)
!5628 = !DILocalVariable(name: "n", scope: !5629, file: !497, line: 767, type: !26)
!5629 = distinct !DILexicalBlock(scope: !5624, file: !497, line: 766, column: 2)
!5630 = !DILocation(line: 767, column: 6, scope: !5629)
!5631 = !DILocation(line: 768, column: 16, scope: !5629)
!5632 = !DILocation(line: 768, column: 2, scope: !5629)
!5633 = !DILocation(line: 769, column: 10, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5629, file: !497, line: 769, column: 2)
!5635 = !DILocation(line: 769, column: 8, scope: !5634)
!5636 = !DILocation(line: 769, column: 15, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5634, file: !497, line: 769, column: 2)
!5638 = !DILocation(line: 769, column: 17, scope: !5637)
!5639 = !DILocation(line: 769, column: 2, scope: !5634)
!5640 = !DILocation(line: 770, column: 20, scope: !5637)
!5641 = !DILocation(line: 770, column: 6, scope: !5637)
!5642 = !DILocation(line: 769, column: 22, scope: !5637)
!5643 = !DILocation(line: 769, column: 2, scope: !5637)
!5644 = distinct !{!5644, !5639, !5645}
!5645 = !DILocation(line: 770, column: 105, scope: !5634)
!5646 = !DILocation(line: 771, column: 16, scope: !5629)
!5647 = !DILocation(line: 771, column: 2, scope: !5629)
!5648 = !DILocation(line: 772, column: 2, scope: !5629)
!5649 = !DILocation(line: 773, column: 25, scope: !5579)
!5650 = !DILocation(line: 773, column: 5, scope: !5579)
!5651 = !DILocation(line: 774, column: 5, scope: !5579)
!5652 = distinct !DISubprogram(name: "send_mime", scope: !497, file: !497, line: 611, type: !5653, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5653 = !DISubroutineType(types: !5654)
!5654 = !{null, !709, !26, !6, !6, !6, !6, !18, !244}
!5655 = !DILocalVariable(name: "hc", arg: 1, scope: !5652, file: !497, line: 611, type: !709)
!5656 = !DILocation(line: 611, column: 24, scope: !5652)
!5657 = !DILocalVariable(name: "status", arg: 2, scope: !5652, file: !497, line: 611, type: !26)
!5658 = !DILocation(line: 611, column: 32, scope: !5652)
!5659 = !DILocalVariable(name: "title", arg: 3, scope: !5652, file: !497, line: 611, type: !6)
!5660 = !DILocation(line: 611, column: 46, scope: !5652)
!5661 = !DILocalVariable(name: "encodings", arg: 4, scope: !5652, file: !497, line: 611, type: !6)
!5662 = !DILocation(line: 611, column: 59, scope: !5652)
!5663 = !DILocalVariable(name: "extraheads", arg: 5, scope: !5652, file: !497, line: 611, type: !6)
!5664 = !DILocation(line: 611, column: 76, scope: !5652)
!5665 = !DILocalVariable(name: "type", arg: 6, scope: !5652, file: !497, line: 611, type: !6)
!5666 = !DILocation(line: 611, column: 94, scope: !5652)
!5667 = !DILocalVariable(name: "length", arg: 7, scope: !5652, file: !497, line: 611, type: !18)
!5668 = !DILocation(line: 611, column: 106, scope: !5652)
!5669 = !DILocalVariable(name: "mod", arg: 8, scope: !5652, file: !497, line: 611, type: !244)
!5670 = !DILocation(line: 611, column: 121, scope: !5652)
!5671 = !DILocalVariable(name: "now", scope: !5652, file: !497, line: 613, type: !244)
!5672 = !DILocation(line: 613, column: 12, scope: !5652)
!5673 = !DILocalVariable(name: "expires", scope: !5652, file: !497, line: 613, type: !244)
!5674 = !DILocation(line: 613, column: 17, scope: !5652)
!5675 = !DILocalVariable(name: "rfc1123fmt", scope: !5652, file: !497, line: 614, type: !88)
!5676 = !DILocation(line: 614, column: 17, scope: !5652)
!5677 = !DILocalVariable(name: "nowbuf", scope: !5652, file: !497, line: 615, type: !5678)
!5678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 800, elements: !5679)
!5679 = !{!5680}
!5680 = !DISubrange(count: 100)
!5681 = !DILocation(line: 615, column: 10, scope: !5652)
!5682 = !DILocalVariable(name: "modbuf", scope: !5652, file: !497, line: 616, type: !5678)
!5683 = !DILocation(line: 616, column: 10, scope: !5652)
!5684 = !DILocalVariable(name: "expbuf", scope: !5652, file: !497, line: 617, type: !5678)
!5685 = !DILocation(line: 617, column: 10, scope: !5652)
!5686 = !DILocalVariable(name: "fixed_type", scope: !5652, file: !497, line: 618, type: !5687)
!5687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 4000, elements: !5688)
!5688 = !{!5689}
!5689 = !DISubrange(count: 500)
!5690 = !DILocation(line: 618, column: 10, scope: !5652)
!5691 = !DILocalVariable(name: "buf", scope: !5652, file: !497, line: 619, type: !5440)
!5692 = !DILocation(line: 619, column: 10, scope: !5652)
!5693 = !DILocalVariable(name: "partial_content", scope: !5652, file: !497, line: 620, type: !26)
!5694 = !DILocation(line: 620, column: 9, scope: !5652)
!5695 = !DILocalVariable(name: "s100", scope: !5652, file: !497, line: 621, type: !26)
!5696 = !DILocation(line: 621, column: 9, scope: !5652)
!5697 = !DILocation(line: 623, column: 18, scope: !5652)
!5698 = !DILocation(line: 623, column: 5, scope: !5652)
!5699 = !DILocation(line: 623, column: 9, scope: !5652)
!5700 = !DILocation(line: 623, column: 16, scope: !5652)
!5701 = !DILocation(line: 624, column: 25, scope: !5652)
!5702 = !DILocation(line: 624, column: 5, scope: !5652)
!5703 = !DILocation(line: 624, column: 9, scope: !5652)
!5704 = !DILocation(line: 624, column: 23, scope: !5652)
!5705 = !DILocation(line: 625, column: 10, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5652, file: !497, line: 625, column: 10)
!5707 = !DILocation(line: 625, column: 14, scope: !5706)
!5708 = !DILocation(line: 625, column: 10, scope: !5652)
!5709 = !DILocation(line: 627, column: 7, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5711, file: !497, line: 627, column: 7)
!5711 = distinct !DILexicalBlock(scope: !5706, file: !497, line: 626, column: 2)
!5712 = !DILocation(line: 627, column: 14, scope: !5710)
!5713 = !DILocation(line: 627, column: 21, scope: !5710)
!5714 = !DILocation(line: 627, column: 24, scope: !5710)
!5715 = !DILocation(line: 627, column: 28, scope: !5710)
!5716 = !DILocation(line: 627, column: 38, scope: !5710)
!5717 = !DILocation(line: 628, column: 9, scope: !5710)
!5718 = !DILocation(line: 628, column: 13, scope: !5710)
!5719 = !DILocation(line: 628, column: 32, scope: !5710)
!5720 = !DILocation(line: 628, column: 36, scope: !5710)
!5721 = !DILocation(line: 628, column: 29, scope: !5710)
!5722 = !DILocation(line: 628, column: 55, scope: !5710)
!5723 = !DILocation(line: 629, column: 11, scope: !5710)
!5724 = !DILocation(line: 629, column: 15, scope: !5710)
!5725 = !DILocation(line: 629, column: 34, scope: !5710)
!5726 = !DILocation(line: 629, column: 41, scope: !5710)
!5727 = !DILocation(line: 629, column: 31, scope: !5710)
!5728 = !DILocation(line: 629, column: 47, scope: !5710)
!5729 = !DILocation(line: 630, column: 11, scope: !5710)
!5730 = !DILocation(line: 630, column: 15, scope: !5710)
!5731 = !DILocation(line: 630, column: 32, scope: !5710)
!5732 = !DILocation(line: 630, column: 41, scope: !5710)
!5733 = !DILocation(line: 631, column: 9, scope: !5710)
!5734 = !DILocation(line: 631, column: 13, scope: !5710)
!5735 = !DILocation(line: 631, column: 22, scope: !5710)
!5736 = !DILocation(line: 631, column: 37, scope: !5710)
!5737 = !DILocation(line: 632, column: 9, scope: !5710)
!5738 = !DILocation(line: 632, column: 13, scope: !5710)
!5739 = !DILocation(line: 632, column: 25, scope: !5710)
!5740 = !DILocation(line: 632, column: 29, scope: !5710)
!5741 = !DILocation(line: 632, column: 32, scope: !5710)
!5742 = !DILocation(line: 632, column: 22, scope: !5710)
!5743 = !DILocation(line: 627, column: 7, scope: !5711)
!5744 = !DILocation(line: 634, column: 22, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5710, file: !497, line: 633, column: 6)
!5746 = !DILocation(line: 635, column: 26, scope: !5745)
!5747 = !DILocation(line: 635, column: 6, scope: !5745)
!5748 = !DILocation(line: 635, column: 10, scope: !5745)
!5749 = !DILocation(line: 635, column: 17, scope: !5745)
!5750 = !DILocation(line: 636, column: 14, scope: !5745)
!5751 = !DILocation(line: 636, column: 12, scope: !5745)
!5752 = !DILocation(line: 637, column: 6, scope: !5745)
!5753 = !DILocation(line: 640, column: 22, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5710, file: !497, line: 639, column: 6)
!5755 = !DILocation(line: 641, column: 6, scope: !5754)
!5756 = !DILocation(line: 641, column: 10, scope: !5754)
!5757 = !DILocation(line: 641, column: 20, scope: !5754)
!5758 = !DILocation(line: 644, column: 8, scope: !5711)
!5759 = !DILocation(line: 644, column: 6, scope: !5711)
!5760 = !DILocation(line: 645, column: 7, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5711, file: !497, line: 645, column: 7)
!5762 = !DILocation(line: 645, column: 11, scope: !5761)
!5763 = !DILocation(line: 645, column: 7, scope: !5711)
!5764 = !DILocation(line: 646, column: 12, scope: !5761)
!5765 = !DILocation(line: 646, column: 10, scope: !5761)
!5766 = !DILocation(line: 646, column: 6, scope: !5761)
!5767 = !DILocation(line: 647, column: 19, scope: !5711)
!5768 = !DILocation(line: 647, column: 43, scope: !5711)
!5769 = !DILocation(line: 647, column: 55, scope: !5711)
!5770 = !DILocation(line: 647, column: 9, scope: !5711)
!5771 = !DILocation(line: 648, column: 19, scope: !5711)
!5772 = !DILocation(line: 648, column: 43, scope: !5711)
!5773 = !DILocation(line: 648, column: 55, scope: !5711)
!5774 = !DILocation(line: 648, column: 9, scope: !5711)
!5775 = !DILocation(line: 650, column: 6, scope: !5711)
!5776 = !DILocation(line: 650, column: 38, scope: !5711)
!5777 = !DILocation(line: 650, column: 44, scope: !5711)
!5778 = !DILocation(line: 650, column: 48, scope: !5711)
!5779 = !DILocation(line: 650, column: 52, scope: !5711)
!5780 = !DILocation(line: 649, column: 9, scope: !5711)
!5781 = !DILocation(line: 651, column: 22, scope: !5711)
!5782 = !DILocation(line: 653, column: 6, scope: !5711)
!5783 = !DILocation(line: 653, column: 10, scope: !5711)
!5784 = !DILocation(line: 653, column: 20, scope: !5711)
!5785 = !DILocation(line: 653, column: 28, scope: !5711)
!5786 = !DILocation(line: 653, column: 60, scope: !5711)
!5787 = !DILocation(line: 654, column: 6, scope: !5711)
!5788 = !DILocation(line: 654, column: 14, scope: !5711)
!5789 = !DILocation(line: 651, column: 9, scope: !5711)
!5790 = !DILocation(line: 655, column: 16, scope: !5711)
!5791 = !DILocation(line: 655, column: 20, scope: !5711)
!5792 = !DILocation(line: 655, column: 2, scope: !5711)
!5793 = !DILocation(line: 656, column: 9, scope: !5711)
!5794 = !DILocation(line: 656, column: 16, scope: !5711)
!5795 = !DILocation(line: 656, column: 7, scope: !5711)
!5796 = !DILocation(line: 657, column: 7, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5711, file: !497, line: 657, column: 7)
!5798 = !DILocation(line: 657, column: 12, scope: !5797)
!5799 = !DILocation(line: 657, column: 17, scope: !5797)
!5800 = !DILocation(line: 657, column: 20, scope: !5797)
!5801 = !DILocation(line: 657, column: 25, scope: !5797)
!5802 = !DILocation(line: 657, column: 7, scope: !5711)
!5803 = !DILocation(line: 659, column: 26, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5797, file: !497, line: 658, column: 6)
!5805 = !DILocation(line: 659, column: 13, scope: !5804)
!5806 = !DILocation(line: 661, column: 20, scope: !5804)
!5807 = !DILocation(line: 661, column: 24, scope: !5804)
!5808 = !DILocation(line: 661, column: 6, scope: !5804)
!5809 = !DILocation(line: 662, column: 6, scope: !5804)
!5810 = !DILocation(line: 663, column: 7, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5711, file: !497, line: 663, column: 7)
!5812 = !DILocation(line: 663, column: 20, scope: !5811)
!5813 = !DILocation(line: 663, column: 7, scope: !5711)
!5814 = !DILocation(line: 665, column: 26, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5811, file: !497, line: 664, column: 6)
!5816 = !DILocation(line: 666, column: 35, scope: !5815)
!5817 = !DILocation(line: 665, column: 13, scope: !5815)
!5818 = !DILocation(line: 667, column: 20, scope: !5815)
!5819 = !DILocation(line: 667, column: 24, scope: !5815)
!5820 = !DILocation(line: 667, column: 6, scope: !5815)
!5821 = !DILocation(line: 668, column: 6, scope: !5815)
!5822 = !DILocation(line: 669, column: 7, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5711, file: !497, line: 669, column: 7)
!5824 = !DILocation(line: 669, column: 7, scope: !5711)
!5825 = !DILocation(line: 671, column: 26, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5823, file: !497, line: 670, column: 6)
!5827 = !DILocation(line: 673, column: 15, scope: !5826)
!5828 = !DILocation(line: 673, column: 19, scope: !5826)
!5829 = !DILocation(line: 674, column: 15, scope: !5826)
!5830 = !DILocation(line: 674, column: 19, scope: !5826)
!5831 = !DILocation(line: 675, column: 15, scope: !5826)
!5832 = !DILocation(line: 676, column: 17, scope: !5826)
!5833 = !DILocation(line: 676, column: 21, scope: !5826)
!5834 = !DILocation(line: 676, column: 39, scope: !5826)
!5835 = !DILocation(line: 676, column: 43, scope: !5826)
!5836 = !DILocation(line: 676, column: 37, scope: !5826)
!5837 = !DILocation(line: 676, column: 60, scope: !5826)
!5838 = !DILocation(line: 671, column: 13, scope: !5826)
!5839 = !DILocation(line: 677, column: 20, scope: !5826)
!5840 = !DILocation(line: 677, column: 24, scope: !5826)
!5841 = !DILocation(line: 677, column: 6, scope: !5826)
!5842 = !DILocation(line: 678, column: 6, scope: !5826)
!5843 = !DILocation(line: 679, column: 12, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5823, file: !497, line: 679, column: 12)
!5845 = !DILocation(line: 679, column: 19, scope: !5844)
!5846 = !DILocation(line: 679, column: 12, scope: !5823)
!5847 = !DILocation(line: 681, column: 26, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5844, file: !497, line: 680, column: 6)
!5849 = !DILocation(line: 682, column: 47, scope: !5848)
!5850 = !DILocation(line: 681, column: 13, scope: !5848)
!5851 = !DILocation(line: 683, column: 20, scope: !5848)
!5852 = !DILocation(line: 683, column: 24, scope: !5848)
!5853 = !DILocation(line: 683, column: 6, scope: !5848)
!5854 = !DILocation(line: 684, column: 6, scope: !5848)
!5855 = !DILocation(line: 685, column: 7, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5711, file: !497, line: 685, column: 7)
!5857 = !DILocation(line: 685, column: 11, scope: !5856)
!5858 = !DILocation(line: 685, column: 15, scope: !5856)
!5859 = !DILocation(line: 685, column: 22, scope: !5856)
!5860 = !DILocation(line: 685, column: 7, scope: !5711)
!5861 = !DILocation(line: 687, column: 26, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5856, file: !497, line: 686, column: 6)
!5863 = !DILocation(line: 687, column: 63, scope: !5862)
!5864 = !DILocation(line: 687, column: 67, scope: !5862)
!5865 = !DILocation(line: 687, column: 71, scope: !5862)
!5866 = !DILocation(line: 687, column: 13, scope: !5862)
!5867 = !DILocation(line: 688, column: 20, scope: !5862)
!5868 = !DILocation(line: 688, column: 24, scope: !5862)
!5869 = !DILocation(line: 688, column: 6, scope: !5862)
!5870 = !DILocation(line: 689, column: 6, scope: !5862)
!5871 = !DILocation(line: 690, column: 7, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5711, file: !497, line: 690, column: 7)
!5873 = !DILocation(line: 690, column: 11, scope: !5872)
!5874 = !DILocation(line: 690, column: 15, scope: !5872)
!5875 = !DILocation(line: 690, column: 23, scope: !5872)
!5876 = !DILocation(line: 690, column: 7, scope: !5711)
!5877 = !DILocation(line: 692, column: 16, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5872, file: !497, line: 691, column: 6)
!5879 = !DILocation(line: 692, column: 22, scope: !5878)
!5880 = !DILocation(line: 692, column: 26, scope: !5878)
!5881 = !DILocation(line: 692, column: 30, scope: !5878)
!5882 = !DILocation(line: 692, column: 20, scope: !5878)
!5883 = !DILocation(line: 692, column: 14, scope: !5878)
!5884 = !DILocation(line: 694, column: 3, scope: !5878)
!5885 = !DILocation(line: 694, column: 27, scope: !5878)
!5886 = !DILocation(line: 694, column: 39, scope: !5878)
!5887 = !DILocation(line: 693, column: 13, scope: !5878)
!5888 = !DILocation(line: 695, column: 26, scope: !5878)
!5889 = !DILocation(line: 697, column: 3, scope: !5878)
!5890 = !DILocation(line: 697, column: 7, scope: !5878)
!5891 = !DILocation(line: 697, column: 11, scope: !5878)
!5892 = !DILocation(line: 697, column: 20, scope: !5878)
!5893 = !DILocation(line: 695, column: 13, scope: !5878)
!5894 = !DILocation(line: 698, column: 20, scope: !5878)
!5895 = !DILocation(line: 698, column: 24, scope: !5878)
!5896 = !DILocation(line: 698, column: 6, scope: !5878)
!5897 = !DILocation(line: 699, column: 6, scope: !5878)
!5898 = !DILocation(line: 700, column: 7, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5711, file: !497, line: 700, column: 7)
!5900 = !DILocation(line: 700, column: 21, scope: !5899)
!5901 = !DILocation(line: 700, column: 7, scope: !5711)
!5902 = !DILocation(line: 701, column: 20, scope: !5899)
!5903 = !DILocation(line: 701, column: 24, scope: !5899)
!5904 = !DILocation(line: 701, column: 6, scope: !5899)
!5905 = !DILocation(line: 702, column: 16, scope: !5711)
!5906 = !DILocation(line: 702, column: 2, scope: !5711)
!5907 = !DILocation(line: 703, column: 2, scope: !5711)
!5908 = !DILocation(line: 704, column: 5, scope: !5652)
!5909 = distinct !DISubprogram(name: "add_response", scope: !497, file: !497, line: 552, type: !893, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5910 = !DILocalVariable(name: "hc", arg: 1, scope: !5909, file: !497, line: 552, type: !709)
!5911 = !DILocation(line: 552, column: 27, scope: !5909)
!5912 = !DILocalVariable(name: "str", arg: 2, scope: !5909, file: !497, line: 552, type: !6)
!5913 = !DILocation(line: 552, column: 37, scope: !5909)
!5914 = !DILocalVariable(name: "len", scope: !5909, file: !497, line: 554, type: !264)
!5915 = !DILocation(line: 554, column: 12, scope: !5909)
!5916 = !DILocation(line: 556, column: 19, scope: !5909)
!5917 = !DILocation(line: 556, column: 11, scope: !5909)
!5918 = !DILocation(line: 556, column: 9, scope: !5909)
!5919 = !DILocation(line: 557, column: 25, scope: !5909)
!5920 = !DILocation(line: 557, column: 29, scope: !5909)
!5921 = !DILocation(line: 557, column: 40, scope: !5909)
!5922 = !DILocation(line: 557, column: 44, scope: !5909)
!5923 = !DILocation(line: 557, column: 57, scope: !5909)
!5924 = !DILocation(line: 557, column: 61, scope: !5909)
!5925 = !DILocation(line: 557, column: 75, scope: !5909)
!5926 = !DILocation(line: 557, column: 73, scope: !5909)
!5927 = !DILocation(line: 557, column: 5, scope: !5909)
!5928 = !DILocation(line: 558, column: 12, scope: !5909)
!5929 = !DILocation(line: 559, column: 24, scope: !5909)
!5930 = !DILocation(line: 559, column: 5, scope: !5909)
!5931 = !DILocation(line: 559, column: 9, scope: !5909)
!5932 = !DILocation(line: 559, column: 21, scope: !5909)
!5933 = !DILocation(line: 560, column: 5, scope: !5909)
!5934 = distinct !DISubprogram(name: "defang", scope: !497, file: !497, line: 796, type: !5935, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!5935 = !DISubroutineType(types: !5936)
!5936 = !{null, !6, !6, !26}
!5937 = !DILocalVariable(name: "str", arg: 1, scope: !5934, file: !497, line: 796, type: !6)
!5938 = !DILocation(line: 796, column: 15, scope: !5934)
!5939 = !DILocalVariable(name: "dfstr", arg: 2, scope: !5934, file: !497, line: 796, type: !6)
!5940 = !DILocation(line: 796, column: 26, scope: !5934)
!5941 = !DILocalVariable(name: "dfsize", arg: 3, scope: !5934, file: !497, line: 796, type: !26)
!5942 = !DILocation(line: 796, column: 37, scope: !5934)
!5943 = !DILocalVariable(name: "cp1", scope: !5934, file: !497, line: 798, type: !6)
!5944 = !DILocation(line: 798, column: 11, scope: !5934)
!5945 = !DILocalVariable(name: "cp2", scope: !5934, file: !497, line: 799, type: !6)
!5946 = !DILocation(line: 799, column: 11, scope: !5934)
!5947 = !DILocation(line: 801, column: 17, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5934, file: !497, line: 801, column: 5)
!5949 = !DILocation(line: 801, column: 15, scope: !5948)
!5950 = !DILocation(line: 801, column: 28, scope: !5948)
!5951 = !DILocation(line: 801, column: 26, scope: !5948)
!5952 = !DILocation(line: 801, column: 11, scope: !5948)
!5953 = !DILocation(line: 802, column: 5, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5948, file: !497, line: 801, column: 5)
!5955 = !DILocation(line: 802, column: 4, scope: !5954)
!5956 = !DILocation(line: 802, column: 9, scope: !5954)
!5957 = !DILocation(line: 802, column: 17, scope: !5954)
!5958 = !DILocation(line: 802, column: 20, scope: !5954)
!5959 = !DILocation(line: 802, column: 26, scope: !5954)
!5960 = !DILocation(line: 802, column: 24, scope: !5954)
!5961 = !DILocation(line: 802, column: 34, scope: !5954)
!5962 = !DILocation(line: 802, column: 41, scope: !5954)
!5963 = !DILocation(line: 802, column: 32, scope: !5954)
!5964 = !DILocation(line: 0, scope: !5954)
!5965 = !DILocation(line: 801, column: 5, scope: !5948)
!5966 = !DILocation(line: 805, column: 12, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5954, file: !497, line: 804, column: 2)
!5968 = !DILocation(line: 805, column: 11, scope: !5967)
!5969 = !DILocation(line: 805, column: 2, scope: !5967)
!5970 = !DILocation(line: 808, column: 10, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5967, file: !497, line: 806, column: 6)
!5972 = !DILocation(line: 808, column: 13, scope: !5971)
!5973 = !DILocation(line: 809, column: 10, scope: !5971)
!5974 = !DILocation(line: 809, column: 13, scope: !5971)
!5975 = !DILocation(line: 810, column: 10, scope: !5971)
!5976 = !DILocation(line: 810, column: 13, scope: !5971)
!5977 = !DILocation(line: 811, column: 7, scope: !5971)
!5978 = !DILocation(line: 811, column: 11, scope: !5971)
!5979 = !DILocation(line: 812, column: 6, scope: !5971)
!5980 = !DILocation(line: 814, column: 10, scope: !5971)
!5981 = !DILocation(line: 814, column: 13, scope: !5971)
!5982 = !DILocation(line: 815, column: 10, scope: !5971)
!5983 = !DILocation(line: 815, column: 13, scope: !5971)
!5984 = !DILocation(line: 816, column: 10, scope: !5971)
!5985 = !DILocation(line: 816, column: 13, scope: !5971)
!5986 = !DILocation(line: 817, column: 7, scope: !5971)
!5987 = !DILocation(line: 817, column: 11, scope: !5971)
!5988 = !DILocation(line: 818, column: 6, scope: !5971)
!5989 = !DILocation(line: 820, column: 14, scope: !5971)
!5990 = !DILocation(line: 820, column: 13, scope: !5971)
!5991 = !DILocation(line: 820, column: 7, scope: !5971)
!5992 = !DILocation(line: 820, column: 11, scope: !5971)
!5993 = !DILocation(line: 821, column: 6, scope: !5971)
!5994 = !DILocation(line: 823, column: 2, scope: !5967)
!5995 = !DILocation(line: 803, column: 4, scope: !5954)
!5996 = !DILocation(line: 803, column: 11, scope: !5954)
!5997 = !DILocation(line: 801, column: 5, scope: !5954)
!5998 = distinct !{!5998, !5965, !5999}
!5999 = !DILocation(line: 823, column: 2, scope: !5948)
!6000 = !DILocation(line: 824, column: 6, scope: !5934)
!6001 = !DILocation(line: 824, column: 10, scope: !5934)
!6002 = !DILocation(line: 825, column: 5, scope: !5934)
!6003 = distinct !DISubprogram(name: "send_response_tail", scope: !497, file: !497, line: 778, type: !852, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!6004 = !DILocalVariable(name: "hc", arg: 1, scope: !6003, file: !497, line: 778, type: !709)
!6005 = !DILocation(line: 778, column: 33, scope: !6003)
!6006 = !DILocalVariable(name: "buf", scope: !6003, file: !497, line: 780, type: !5440)
!6007 = !DILocation(line: 780, column: 10, scope: !6003)
!6008 = !DILocation(line: 782, column: 25, scope: !6003)
!6009 = !DILocation(line: 782, column: 12, scope: !6003)
!6010 = !DILocation(line: 791, column: 19, scope: !6003)
!6011 = !DILocation(line: 791, column: 23, scope: !6003)
!6012 = !DILocation(line: 791, column: 5, scope: !6003)
!6013 = !DILocation(line: 792, column: 5, scope: !6003)
!6014 = distinct !DISubprogram(name: "httpd_method_str", scope: !497, file: !497, line: 1206, type: !6015, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!6015 = !DISubroutineType(types: !6016)
!6016 = !{!6, !26}
!6017 = !DILocalVariable(name: "method", arg: 1, scope: !6014, file: !497, line: 1206, type: !26)
!6018 = !DILocation(line: 1206, column: 23, scope: !6014)
!6019 = !DILocation(line: 1208, column: 14, scope: !6014)
!6020 = !DILocation(line: 1208, column: 5, scope: !6014)
!6021 = !DILocation(line: 1210, column: 19, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6014, file: !497, line: 1209, column: 2)
!6023 = !DILocation(line: 1211, column: 20, scope: !6022)
!6024 = !DILocation(line: 1212, column: 20, scope: !6022)
!6025 = !DILocation(line: 1213, column: 19, scope: !6022)
!6026 = !DILocation(line: 1214, column: 22, scope: !6022)
!6027 = !DILocation(line: 1215, column: 21, scope: !6022)
!6028 = !DILocation(line: 1216, column: 11, scope: !6022)
!6029 = !DILocation(line: 1218, column: 5, scope: !6014)
!6030 = distinct !DISubprogram(name: "httpd_get_conn", scope: !497, file: !497, line: 1675, type: !6031, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!6031 = !DISubroutineType(types: !6032)
!6032 = !{!26, !499, !26, !709}
!6033 = !DILocalVariable(name: "hs", arg: 1, scope: !6030, file: !497, line: 1675, type: !499)
!6034 = !DILocation(line: 1675, column: 31, scope: !6030)
!6035 = !DILocalVariable(name: "listen_fd", arg: 2, scope: !6030, file: !497, line: 1675, type: !26)
!6036 = !DILocation(line: 1675, column: 39, scope: !6030)
!6037 = !DILocalVariable(name: "hc", arg: 3, scope: !6030, file: !497, line: 1675, type: !709)
!6038 = !DILocation(line: 1675, column: 62, scope: !6030)
!6039 = !DILocalVariable(name: "sa", scope: !6030, file: !497, line: 1677, type: !552)
!6040 = !DILocation(line: 1677, column: 20, scope: !6030)
!6041 = !DILocalVariable(name: "sz", scope: !6030, file: !497, line: 1678, type: !405)
!6042 = !DILocation(line: 1678, column: 15, scope: !6030)
!6043 = !DILocation(line: 1680, column: 12, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6030, file: !497, line: 1680, column: 10)
!6045 = !DILocation(line: 1680, column: 16, scope: !6044)
!6046 = !DILocation(line: 1680, column: 10, scope: !6030)
!6047 = !DILocation(line: 1682, column: 2, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6044, file: !497, line: 1681, column: 2)
!6049 = !DILocation(line: 1682, column: 6, scope: !6048)
!6050 = !DILocation(line: 1682, column: 16, scope: !6048)
!6051 = !DILocation(line: 1683, column: 22, scope: !6048)
!6052 = !DILocation(line: 1683, column: 26, scope: !6048)
!6053 = !DILocation(line: 1683, column: 37, scope: !6048)
!6054 = !DILocation(line: 1683, column: 41, scope: !6048)
!6055 = !DILocation(line: 1683, column: 2, scope: !6048)
!6056 = !DILocation(line: 1688, column: 26, scope: !6048)
!6057 = !DILocation(line: 1688, column: 30, scope: !6048)
!6058 = !DILocation(line: 1688, column: 42, scope: !6048)
!6059 = !DILocation(line: 1688, column: 6, scope: !6048)
!6060 = !DILocation(line: 1688, column: 10, scope: !6048)
!6061 = !DILocation(line: 1688, column: 24, scope: !6048)
!6062 = !DILocation(line: 1687, column: 40, scope: !6048)
!6063 = !DILocation(line: 1687, column: 44, scope: !6048)
!6064 = !DILocation(line: 1687, column: 55, scope: !6048)
!6065 = !DILocation(line: 1687, column: 23, scope: !6048)
!6066 = !DILocation(line: 1687, column: 27, scope: !6048)
!6067 = !DILocation(line: 1687, column: 38, scope: !6048)
!6068 = !DILocation(line: 1687, column: 6, scope: !6048)
!6069 = !DILocation(line: 1687, column: 10, scope: !6048)
!6070 = !DILocation(line: 1687, column: 21, scope: !6048)
!6071 = !DILocation(line: 1686, column: 39, scope: !6048)
!6072 = !DILocation(line: 1686, column: 43, scope: !6048)
!6073 = !DILocation(line: 1686, column: 53, scope: !6048)
!6074 = !DILocation(line: 1686, column: 24, scope: !6048)
!6075 = !DILocation(line: 1686, column: 28, scope: !6048)
!6076 = !DILocation(line: 1686, column: 37, scope: !6048)
!6077 = !DILocation(line: 1686, column: 6, scope: !6048)
!6078 = !DILocation(line: 1686, column: 10, scope: !6048)
!6079 = !DILocation(line: 1686, column: 22, scope: !6048)
!6080 = !DILocation(line: 1685, column: 50, scope: !6048)
!6081 = !DILocation(line: 1685, column: 54, scope: !6048)
!6082 = !DILocation(line: 1685, column: 67, scope: !6048)
!6083 = !DILocation(line: 1685, column: 28, scope: !6048)
!6084 = !DILocation(line: 1685, column: 32, scope: !6048)
!6085 = !DILocation(line: 1685, column: 48, scope: !6048)
!6086 = !DILocation(line: 1685, column: 6, scope: !6048)
!6087 = !DILocation(line: 1685, column: 10, scope: !6048)
!6088 = !DILocation(line: 1685, column: 26, scope: !6048)
!6089 = !DILocation(line: 1684, column: 2, scope: !6048)
!6090 = !DILocation(line: 1684, column: 6, scope: !6048)
!6091 = !DILocation(line: 1684, column: 20, scope: !6048)
!6092 = !DILocation(line: 1692, column: 22, scope: !6048)
!6093 = !DILocation(line: 1692, column: 26, scope: !6048)
!6094 = !DILocation(line: 1692, column: 39, scope: !6048)
!6095 = !DILocation(line: 1692, column: 43, scope: !6048)
!6096 = !DILocation(line: 1692, column: 2, scope: !6048)
!6097 = !DILocation(line: 1693, column: 22, scope: !6048)
!6098 = !DILocation(line: 1693, column: 26, scope: !6048)
!6099 = !DILocation(line: 1693, column: 41, scope: !6048)
!6100 = !DILocation(line: 1693, column: 45, scope: !6048)
!6101 = !DILocation(line: 1693, column: 2, scope: !6048)
!6102 = !DILocation(line: 1694, column: 22, scope: !6048)
!6103 = !DILocation(line: 1694, column: 26, scope: !6048)
!6104 = !DILocation(line: 1694, column: 41, scope: !6048)
!6105 = !DILocation(line: 1694, column: 45, scope: !6048)
!6106 = !DILocation(line: 1694, column: 2, scope: !6048)
!6107 = !DILocation(line: 1695, column: 22, scope: !6048)
!6108 = !DILocation(line: 1695, column: 26, scope: !6048)
!6109 = !DILocation(line: 1695, column: 38, scope: !6048)
!6110 = !DILocation(line: 1695, column: 42, scope: !6048)
!6111 = !DILocation(line: 1695, column: 2, scope: !6048)
!6112 = !DILocation(line: 1696, column: 22, scope: !6048)
!6113 = !DILocation(line: 1696, column: 26, scope: !6048)
!6114 = !DILocation(line: 1696, column: 37, scope: !6048)
!6115 = !DILocation(line: 1696, column: 41, scope: !6048)
!6116 = !DILocation(line: 1696, column: 2, scope: !6048)
!6117 = !DILocation(line: 1697, column: 22, scope: !6048)
!6118 = !DILocation(line: 1697, column: 26, scope: !6048)
!6119 = !DILocation(line: 1697, column: 34, scope: !6048)
!6120 = !DILocation(line: 1697, column: 38, scope: !6048)
!6121 = !DILocation(line: 1697, column: 2, scope: !6048)
!6122 = !DILocation(line: 1698, column: 22, scope: !6048)
!6123 = !DILocation(line: 1698, column: 26, scope: !6048)
!6124 = !DILocation(line: 1698, column: 35, scope: !6048)
!6125 = !DILocation(line: 1698, column: 39, scope: !6048)
!6126 = !DILocation(line: 1698, column: 2, scope: !6048)
!6127 = !DILocation(line: 1699, column: 22, scope: !6048)
!6128 = !DILocation(line: 1699, column: 26, scope: !6048)
!6129 = !DILocation(line: 1699, column: 36, scope: !6048)
!6130 = !DILocation(line: 1699, column: 40, scope: !6048)
!6131 = !DILocation(line: 1699, column: 2, scope: !6048)
!6132 = !DILocation(line: 1700, column: 22, scope: !6048)
!6133 = !DILocation(line: 1700, column: 26, scope: !6048)
!6134 = !DILocation(line: 1700, column: 36, scope: !6048)
!6135 = !DILocation(line: 1700, column: 40, scope: !6048)
!6136 = !DILocation(line: 1700, column: 2, scope: !6048)
!6137 = !DILocation(line: 1701, column: 22, scope: !6048)
!6138 = !DILocation(line: 1701, column: 26, scope: !6048)
!6139 = !DILocation(line: 1701, column: 36, scope: !6048)
!6140 = !DILocation(line: 1701, column: 40, scope: !6048)
!6141 = !DILocation(line: 1701, column: 2, scope: !6048)
!6142 = !DILocation(line: 1702, column: 22, scope: !6048)
!6143 = !DILocation(line: 1702, column: 26, scope: !6048)
!6144 = !DILocation(line: 1702, column: 39, scope: !6048)
!6145 = !DILocation(line: 1702, column: 43, scope: !6048)
!6146 = !DILocation(line: 1702, column: 2, scope: !6048)
!6147 = !DILocation(line: 1703, column: 22, scope: !6048)
!6148 = !DILocation(line: 1703, column: 26, scope: !6048)
!6149 = !DILocation(line: 1703, column: 37, scope: !6048)
!6150 = !DILocation(line: 1703, column: 41, scope: !6048)
!6151 = !DILocation(line: 1703, column: 2, scope: !6048)
!6152 = !DILocation(line: 1707, column: 2, scope: !6048)
!6153 = !DILocation(line: 1707, column: 6, scope: !6048)
!6154 = !DILocation(line: 1707, column: 18, scope: !6048)
!6155 = !DILocation(line: 1708, column: 2, scope: !6048)
!6156 = !DILocation(line: 1711, column: 8, scope: !6030)
!6157 = !DILocation(line: 1712, column: 27, scope: !6030)
!6158 = !DILocation(line: 1712, column: 42, scope: !6030)
!6159 = !DILocation(line: 1712, column: 19, scope: !6030)
!6160 = !DILocation(line: 1712, column: 5, scope: !6030)
!6161 = !DILocation(line: 1712, column: 9, scope: !6030)
!6162 = !DILocation(line: 1712, column: 17, scope: !6030)
!6163 = !DILocation(line: 1713, column: 10, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6030, file: !497, line: 1713, column: 10)
!6165 = !DILocation(line: 1713, column: 14, scope: !6164)
!6166 = !DILocation(line: 1713, column: 22, scope: !6164)
!6167 = !DILocation(line: 1713, column: 10, scope: !6030)
!6168 = !DILocation(line: 1715, column: 7, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !497, line: 1715, column: 7)
!6170 = distinct !DILexicalBlock(scope: !6164, file: !497, line: 1714, column: 2)
!6171 = !DILocation(line: 1715, column: 13, scope: !6169)
!6172 = !DILocation(line: 1715, column: 7, scope: !6170)
!6173 = !DILocation(line: 1716, column: 6, scope: !6169)
!6174 = !DILocation(line: 1720, column: 7, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6170, file: !497, line: 1720, column: 7)
!6176 = !DILocation(line: 1720, column: 13, scope: !6175)
!6177 = !DILocation(line: 1720, column: 7, scope: !6170)
!6178 = !DILocation(line: 1721, column: 6, scope: !6175)
!6179 = !DILocation(line: 1722, column: 2, scope: !6170)
!6180 = !DILocation(line: 1724, column: 12, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6030, file: !497, line: 1724, column: 10)
!6182 = !DILocation(line: 1724, column: 10, scope: !6030)
!6183 = !DILocation(line: 1726, column: 2, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6181, file: !497, line: 1725, column: 2)
!6185 = !DILocation(line: 1727, column: 9, scope: !6184)
!6186 = !DILocation(line: 1727, column: 13, scope: !6184)
!6187 = !DILocation(line: 1727, column: 2, scope: !6184)
!6188 = !DILocation(line: 1728, column: 2, scope: !6184)
!6189 = !DILocation(line: 1728, column: 6, scope: !6184)
!6190 = !DILocation(line: 1728, column: 14, scope: !6184)
!6191 = !DILocation(line: 1729, column: 2, scope: !6184)
!6192 = !DILocation(line: 1731, column: 19, scope: !6030)
!6193 = !DILocation(line: 1731, column: 23, scope: !6030)
!6194 = !DILocation(line: 1731, column: 12, scope: !6030)
!6195 = !DILocation(line: 1732, column: 14, scope: !6030)
!6196 = !DILocation(line: 1732, column: 5, scope: !6030)
!6197 = !DILocation(line: 1732, column: 9, scope: !6030)
!6198 = !DILocation(line: 1732, column: 12, scope: !6030)
!6199 = !DILocation(line: 1733, column: 12, scope: !6030)
!6200 = !DILocation(line: 1734, column: 12, scope: !6030)
!6201 = !DILocation(line: 1735, column: 5, scope: !6030)
!6202 = !DILocation(line: 1735, column: 9, scope: !6030)
!6203 = !DILocation(line: 1735, column: 18, scope: !6030)
!6204 = !DILocation(line: 1736, column: 5, scope: !6030)
!6205 = !DILocation(line: 1736, column: 9, scope: !6030)
!6206 = !DILocation(line: 1736, column: 21, scope: !6030)
!6207 = !DILocation(line: 1737, column: 5, scope: !6030)
!6208 = !DILocation(line: 1737, column: 9, scope: !6030)
!6209 = !DILocation(line: 1737, column: 23, scope: !6030)
!6210 = !DILocation(line: 1738, column: 5, scope: !6030)
!6211 = !DILocation(line: 1738, column: 9, scope: !6030)
!6212 = !DILocation(line: 1738, column: 16, scope: !6030)
!6213 = !DILocation(line: 1739, column: 5, scope: !6030)
!6214 = !DILocation(line: 1739, column: 9, scope: !6030)
!6215 = !DILocation(line: 1739, column: 16, scope: !6030)
!6216 = !DILocation(line: 1740, column: 5, scope: !6030)
!6217 = !DILocation(line: 1740, column: 9, scope: !6030)
!6218 = !DILocation(line: 1740, column: 23, scope: !6030)
!6219 = !DILocation(line: 1741, column: 5, scope: !6030)
!6220 = !DILocation(line: 1741, column: 9, scope: !6030)
!6221 = !DILocation(line: 1741, column: 20, scope: !6030)
!6222 = !DILocation(line: 1742, column: 5, scope: !6030)
!6223 = !DILocation(line: 1742, column: 9, scope: !6030)
!6224 = !DILocation(line: 1742, column: 20, scope: !6030)
!6225 = !DILocation(line: 1743, column: 5, scope: !6030)
!6226 = !DILocation(line: 1743, column: 9, scope: !6030)
!6227 = !DILocation(line: 1743, column: 23, scope: !6030)
!6228 = !DILocation(line: 1744, column: 5, scope: !6030)
!6229 = !DILocation(line: 1744, column: 9, scope: !6030)
!6230 = !DILocation(line: 1744, column: 18, scope: !6030)
!6231 = !DILocation(line: 1745, column: 5, scope: !6030)
!6232 = !DILocation(line: 1745, column: 9, scope: !6030)
!6233 = !DILocation(line: 1745, column: 25, scope: !6030)
!6234 = !DILocation(line: 1746, column: 5, scope: !6030)
!6235 = !DILocation(line: 1746, column: 9, scope: !6030)
!6236 = !DILocation(line: 1746, column: 25, scope: !6030)
!6237 = !DILocation(line: 1747, column: 5, scope: !6030)
!6238 = !DILocation(line: 1747, column: 9, scope: !6030)
!6239 = !DILocation(line: 1747, column: 22, scope: !6030)
!6240 = !DILocation(line: 1748, column: 5, scope: !6030)
!6241 = !DILocation(line: 1748, column: 9, scope: !6030)
!6242 = !DILocation(line: 1748, column: 21, scope: !6030)
!6243 = !DILocation(line: 1749, column: 5, scope: !6030)
!6244 = !DILocation(line: 1749, column: 9, scope: !6030)
!6245 = !DILocation(line: 1749, column: 18, scope: !6030)
!6246 = !DILocation(line: 1750, column: 5, scope: !6030)
!6247 = !DILocation(line: 1750, column: 9, scope: !6030)
!6248 = !DILocation(line: 1750, column: 18, scope: !6030)
!6249 = !DILocation(line: 1751, column: 5, scope: !6030)
!6250 = !DILocation(line: 1751, column: 9, scope: !6030)
!6251 = !DILocation(line: 1751, column: 19, scope: !6030)
!6252 = !DILocation(line: 1752, column: 5, scope: !6030)
!6253 = !DILocation(line: 1752, column: 9, scope: !6030)
!6254 = !DILocation(line: 1752, column: 19, scope: !6030)
!6255 = !DILocation(line: 1753, column: 5, scope: !6030)
!6256 = !DILocation(line: 1753, column: 9, scope: !6030)
!6257 = !DILocation(line: 1753, column: 20, scope: !6030)
!6258 = !DILocation(line: 1754, column: 5, scope: !6030)
!6259 = !DILocation(line: 1754, column: 9, scope: !6030)
!6260 = !DILocation(line: 1754, column: 17, scope: !6030)
!6261 = !DILocation(line: 1755, column: 5, scope: !6030)
!6262 = !DILocation(line: 1755, column: 9, scope: !6030)
!6263 = !DILocation(line: 1755, column: 16, scope: !6030)
!6264 = !DILocation(line: 1756, column: 5, scope: !6030)
!6265 = !DILocation(line: 1756, column: 9, scope: !6030)
!6266 = !DILocation(line: 1756, column: 21, scope: !6030)
!6267 = !DILocation(line: 1757, column: 5, scope: !6030)
!6268 = !DILocation(line: 1757, column: 9, scope: !6030)
!6269 = !DILocation(line: 1757, column: 20, scope: !6030)
!6270 = !DILocation(line: 1758, column: 5, scope: !6030)
!6271 = !DILocation(line: 1758, column: 9, scope: !6030)
!6272 = !DILocation(line: 1758, column: 17, scope: !6030)
!6273 = !DILocation(line: 1759, column: 5, scope: !6030)
!6274 = !DILocation(line: 1759, column: 9, scope: !6030)
!6275 = !DILocation(line: 1759, column: 20, scope: !6030)
!6276 = !DILocation(line: 1760, column: 5, scope: !6030)
!6277 = !DILocation(line: 1760, column: 9, scope: !6030)
!6278 = !DILocation(line: 1760, column: 23, scope: !6030)
!6279 = !DILocation(line: 1761, column: 5, scope: !6030)
!6280 = !DILocation(line: 1761, column: 9, scope: !6030)
!6281 = !DILocation(line: 1761, column: 23, scope: !6030)
!6282 = !DILocation(line: 1762, column: 5, scope: !6030)
!6283 = !DILocation(line: 1762, column: 9, scope: !6030)
!6284 = !DILocation(line: 1762, column: 21, scope: !6030)
!6285 = !DILocation(line: 1766, column: 5, scope: !6030)
!6286 = !DILocation(line: 1766, column: 9, scope: !6030)
!6287 = !DILocation(line: 1766, column: 21, scope: !6030)
!6288 = !DILocation(line: 1767, column: 5, scope: !6030)
!6289 = !DILocation(line: 1767, column: 9, scope: !6030)
!6290 = !DILocation(line: 1767, column: 27, scope: !6030)
!6291 = !DILocation(line: 1768, column: 5, scope: !6030)
!6292 = !DILocation(line: 1768, column: 9, scope: !6030)
!6293 = !DILocation(line: 1768, column: 18, scope: !6030)
!6294 = !DILocation(line: 1769, column: 5, scope: !6030)
!6295 = !DILocation(line: 1769, column: 9, scope: !6030)
!6296 = !DILocation(line: 1769, column: 23, scope: !6030)
!6297 = !DILocation(line: 1770, column: 5, scope: !6030)
!6298 = !DILocation(line: 1770, column: 9, scope: !6030)
!6299 = !DILocation(line: 1770, column: 14, scope: !6030)
!6300 = !DILocation(line: 1771, column: 5, scope: !6030)
!6301 = !DILocation(line: 1771, column: 9, scope: !6030)
!6302 = !DILocation(line: 1771, column: 18, scope: !6030)
!6303 = !DILocation(line: 1772, column: 5, scope: !6030)
!6304 = !DILocation(line: 1772, column: 9, scope: !6030)
!6305 = !DILocation(line: 1772, column: 19, scope: !6030)
!6306 = !DILocation(line: 1773, column: 5, scope: !6030)
!6307 = !DILocation(line: 1773, column: 9, scope: !6030)
!6308 = !DILocation(line: 1773, column: 17, scope: !6030)
!6309 = !DILocation(line: 1774, column: 5, scope: !6030)
!6310 = !DILocation(line: 1774, column: 9, scope: !6030)
!6311 = !DILocation(line: 1774, column: 19, scope: !6030)
!6312 = !DILocation(line: 1775, column: 5, scope: !6030)
!6313 = !DILocation(line: 1775, column: 9, scope: !6030)
!6314 = !DILocation(line: 1775, column: 21, scope: !6030)
!6315 = !DILocation(line: 1776, column: 5, scope: !6030)
!6316 = !DILocation(line: 1776, column: 9, scope: !6030)
!6317 = !DILocation(line: 1776, column: 26, scope: !6030)
!6318 = !DILocation(line: 1777, column: 5, scope: !6030)
!6319 = !DILocation(line: 1777, column: 9, scope: !6030)
!6320 = !DILocation(line: 1777, column: 25, scope: !6030)
!6321 = !DILocation(line: 1778, column: 5, scope: !6030)
!6322 = !DILocation(line: 1778, column: 9, scope: !6030)
!6323 = !DILocation(line: 1778, column: 20, scope: !6030)
!6324 = !DILocation(line: 1779, column: 5, scope: !6030)
!6325 = !DILocation(line: 1779, column: 9, scope: !6030)
!6326 = !DILocation(line: 1779, column: 23, scope: !6030)
!6327 = !DILocation(line: 1780, column: 5, scope: !6030)
!6328 = !DILocation(line: 1780, column: 9, scope: !6030)
!6329 = !DILocation(line: 1780, column: 22, scope: !6030)
!6330 = !DILocation(line: 1781, column: 5, scope: !6030)
!6331 = !DILocation(line: 1782, column: 5, scope: !6030)
!6332 = distinct !DISubprogram(name: "httpd_got_request", scope: !497, file: !497, line: 1794, type: !707, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!6333 = !DILocalVariable(name: "hc", arg: 1, scope: !6332, file: !497, line: 1794, type: !709)
!6334 = !DILocation(line: 1794, column: 32, scope: !6332)
!6335 = !DILocalVariable(name: "c", scope: !6332, file: !497, line: 1796, type: !7)
!6336 = !DILocation(line: 1796, column: 10, scope: !6332)
!6337 = !DILocation(line: 1798, column: 5, scope: !6332)
!6338 = !DILocation(line: 1798, column: 13, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !497, line: 1798, column: 5)
!6340 = distinct !DILexicalBlock(scope: !6332, file: !497, line: 1798, column: 5)
!6341 = !DILocation(line: 1798, column: 17, scope: !6339)
!6342 = !DILocation(line: 1798, column: 31, scope: !6339)
!6343 = !DILocation(line: 1798, column: 35, scope: !6339)
!6344 = !DILocation(line: 1798, column: 29, scope: !6339)
!6345 = !DILocation(line: 1798, column: 5, scope: !6340)
!6346 = !DILocation(line: 1800, column: 6, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6339, file: !497, line: 1799, column: 2)
!6348 = !DILocation(line: 1800, column: 10, scope: !6347)
!6349 = !DILocation(line: 1800, column: 19, scope: !6347)
!6350 = !DILocation(line: 1800, column: 23, scope: !6347)
!6351 = !DILocation(line: 1800, column: 4, scope: !6347)
!6352 = !DILocation(line: 1801, column: 11, scope: !6347)
!6353 = !DILocation(line: 1801, column: 15, scope: !6347)
!6354 = !DILocation(line: 1801, column: 2, scope: !6347)
!6355 = !DILocation(line: 1804, column: 15, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6347, file: !497, line: 1802, column: 6)
!6357 = !DILocation(line: 1804, column: 6, scope: !6356)
!6358 = !DILocation(line: 1807, column: 3, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6356, file: !497, line: 1805, column: 3)
!6360 = !DILocation(line: 1807, column: 7, scope: !6359)
!6361 = !DILocation(line: 1807, column: 21, scope: !6359)
!6362 = !DILocation(line: 1808, column: 3, scope: !6359)
!6363 = !DILocation(line: 1810, column: 3, scope: !6359)
!6364 = !DILocation(line: 1810, column: 7, scope: !6359)
!6365 = !DILocation(line: 1810, column: 21, scope: !6359)
!6366 = !DILocation(line: 1811, column: 3, scope: !6359)
!6367 = !DILocation(line: 1813, column: 6, scope: !6356)
!6368 = !DILocation(line: 1815, column: 15, scope: !6356)
!6369 = !DILocation(line: 1815, column: 6, scope: !6356)
!6370 = !DILocation(line: 1818, column: 3, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6356, file: !497, line: 1816, column: 3)
!6372 = !DILocation(line: 1820, column: 3, scope: !6371)
!6373 = !DILocation(line: 1820, column: 7, scope: !6371)
!6374 = !DILocation(line: 1820, column: 21, scope: !6371)
!6375 = !DILocation(line: 1821, column: 3, scope: !6371)
!6376 = !DILocation(line: 1823, column: 3, scope: !6371)
!6377 = !DILocation(line: 1823, column: 7, scope: !6371)
!6378 = !DILocation(line: 1823, column: 21, scope: !6371)
!6379 = !DILocation(line: 1824, column: 3, scope: !6371)
!6380 = !DILocation(line: 1826, column: 6, scope: !6356)
!6381 = !DILocation(line: 1828, column: 15, scope: !6356)
!6382 = !DILocation(line: 1828, column: 6, scope: !6356)
!6383 = !DILocation(line: 1831, column: 3, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6356, file: !497, line: 1829, column: 3)
!6385 = !DILocation(line: 1831, column: 7, scope: !6384)
!6386 = !DILocation(line: 1831, column: 21, scope: !6384)
!6387 = !DILocation(line: 1832, column: 3, scope: !6384)
!6388 = !DILocation(line: 1835, column: 3, scope: !6384)
!6389 = !DILocation(line: 1837, column: 6, scope: !6356)
!6390 = !DILocation(line: 1839, column: 15, scope: !6356)
!6391 = !DILocation(line: 1839, column: 6, scope: !6356)
!6392 = !DILocation(line: 1842, column: 3, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6356, file: !497, line: 1840, column: 3)
!6394 = !DILocation(line: 1844, column: 3, scope: !6393)
!6395 = !DILocation(line: 1844, column: 7, scope: !6393)
!6396 = !DILocation(line: 1844, column: 21, scope: !6393)
!6397 = !DILocation(line: 1845, column: 3, scope: !6393)
!6398 = !DILocation(line: 1847, column: 3, scope: !6393)
!6399 = !DILocation(line: 1847, column: 7, scope: !6393)
!6400 = !DILocation(line: 1847, column: 21, scope: !6393)
!6401 = !DILocation(line: 1848, column: 3, scope: !6393)
!6402 = !DILocation(line: 1850, column: 6, scope: !6356)
!6403 = !DILocation(line: 1852, column: 15, scope: !6356)
!6404 = !DILocation(line: 1852, column: 6, scope: !6356)
!6405 = !DILocation(line: 1855, column: 3, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6356, file: !497, line: 1853, column: 3)
!6407 = !DILocation(line: 1855, column: 7, scope: !6406)
!6408 = !DILocation(line: 1855, column: 21, scope: !6406)
!6409 = !DILocation(line: 1856, column: 3, scope: !6406)
!6410 = !DILocation(line: 1858, column: 3, scope: !6406)
!6411 = !DILocation(line: 1858, column: 7, scope: !6406)
!6412 = !DILocation(line: 1858, column: 21, scope: !6406)
!6413 = !DILocation(line: 1859, column: 3, scope: !6406)
!6414 = !DILocation(line: 1861, column: 3, scope: !6406)
!6415 = !DILocation(line: 1861, column: 7, scope: !6406)
!6416 = !DILocation(line: 1861, column: 21, scope: !6406)
!6417 = !DILocation(line: 1862, column: 3, scope: !6406)
!6418 = !DILocation(line: 1864, column: 6, scope: !6356)
!6419 = !DILocation(line: 1866, column: 15, scope: !6356)
!6420 = !DILocation(line: 1866, column: 6, scope: !6356)
!6421 = !DILocation(line: 1869, column: 3, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6356, file: !497, line: 1867, column: 3)
!6423 = !DILocation(line: 1871, column: 3, scope: !6422)
!6424 = !DILocation(line: 1871, column: 7, scope: !6422)
!6425 = !DILocation(line: 1871, column: 21, scope: !6422)
!6426 = !DILocation(line: 1872, column: 3, scope: !6422)
!6427 = !DILocation(line: 1874, column: 3, scope: !6422)
!6428 = !DILocation(line: 1874, column: 7, scope: !6422)
!6429 = !DILocation(line: 1874, column: 21, scope: !6422)
!6430 = !DILocation(line: 1875, column: 3, scope: !6422)
!6431 = !DILocation(line: 1877, column: 3, scope: !6422)
!6432 = !DILocation(line: 1877, column: 7, scope: !6422)
!6433 = !DILocation(line: 1877, column: 21, scope: !6422)
!6434 = !DILocation(line: 1878, column: 3, scope: !6422)
!6435 = !DILocation(line: 1880, column: 6, scope: !6356)
!6436 = !DILocation(line: 1882, column: 15, scope: !6356)
!6437 = !DILocation(line: 1882, column: 6, scope: !6356)
!6438 = !DILocation(line: 1885, column: 3, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6356, file: !497, line: 1883, column: 3)
!6440 = !DILocation(line: 1885, column: 7, scope: !6439)
!6441 = !DILocation(line: 1885, column: 21, scope: !6439)
!6442 = !DILocation(line: 1886, column: 3, scope: !6439)
!6443 = !DILocation(line: 1888, column: 3, scope: !6439)
!6444 = !DILocation(line: 1888, column: 7, scope: !6439)
!6445 = !DILocation(line: 1888, column: 21, scope: !6439)
!6446 = !DILocation(line: 1889, column: 3, scope: !6439)
!6447 = !DILocation(line: 1891, column: 6, scope: !6356)
!6448 = !DILocation(line: 1893, column: 15, scope: !6356)
!6449 = !DILocation(line: 1893, column: 6, scope: !6356)
!6450 = !DILocation(line: 1897, column: 3, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6356, file: !497, line: 1894, column: 3)
!6452 = !DILocation(line: 1899, column: 3, scope: !6451)
!6453 = !DILocation(line: 1899, column: 7, scope: !6451)
!6454 = !DILocation(line: 1899, column: 21, scope: !6451)
!6455 = !DILocation(line: 1900, column: 3, scope: !6451)
!6456 = !DILocation(line: 1902, column: 3, scope: !6451)
!6457 = !DILocation(line: 1902, column: 7, scope: !6451)
!6458 = !DILocation(line: 1902, column: 21, scope: !6451)
!6459 = !DILocation(line: 1903, column: 3, scope: !6451)
!6460 = !DILocation(line: 1905, column: 6, scope: !6356)
!6461 = !DILocation(line: 1907, column: 15, scope: !6356)
!6462 = !DILocation(line: 1907, column: 6, scope: !6356)
!6463 = !DILocation(line: 1910, column: 3, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6356, file: !497, line: 1908, column: 3)
!6465 = !DILocation(line: 1910, column: 7, scope: !6464)
!6466 = !DILocation(line: 1910, column: 21, scope: !6464)
!6467 = !DILocation(line: 1911, column: 3, scope: !6464)
!6468 = !DILocation(line: 1914, column: 3, scope: !6464)
!6469 = !DILocation(line: 1916, column: 3, scope: !6464)
!6470 = !DILocation(line: 1916, column: 7, scope: !6464)
!6471 = !DILocation(line: 1916, column: 21, scope: !6464)
!6472 = !DILocation(line: 1917, column: 3, scope: !6464)
!6473 = !DILocation(line: 1919, column: 6, scope: !6356)
!6474 = !DILocation(line: 1921, column: 15, scope: !6356)
!6475 = !DILocation(line: 1921, column: 6, scope: !6356)
!6476 = !DILocation(line: 1925, column: 3, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6356, file: !497, line: 1922, column: 3)
!6478 = !DILocation(line: 1927, column: 3, scope: !6477)
!6479 = !DILocation(line: 1927, column: 7, scope: !6477)
!6480 = !DILocation(line: 1927, column: 21, scope: !6477)
!6481 = !DILocation(line: 1928, column: 3, scope: !6477)
!6482 = !DILocation(line: 1930, column: 3, scope: !6477)
!6483 = !DILocation(line: 1930, column: 7, scope: !6477)
!6484 = !DILocation(line: 1930, column: 21, scope: !6477)
!6485 = !DILocation(line: 1931, column: 3, scope: !6477)
!6486 = !DILocation(line: 1933, column: 6, scope: !6356)
!6487 = !DILocation(line: 1935, column: 15, scope: !6356)
!6488 = !DILocation(line: 1935, column: 6, scope: !6356)
!6489 = !DILocation(line: 1939, column: 3, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6356, file: !497, line: 1936, column: 3)
!6491 = !DILocation(line: 1941, column: 3, scope: !6490)
!6492 = !DILocation(line: 1941, column: 7, scope: !6490)
!6493 = !DILocation(line: 1941, column: 21, scope: !6490)
!6494 = !DILocation(line: 1942, column: 3, scope: !6490)
!6495 = !DILocation(line: 1944, column: 6, scope: !6356)
!6496 = !DILocation(line: 1946, column: 6, scope: !6356)
!6497 = !DILocation(line: 1948, column: 2, scope: !6347)
!6498 = !DILocation(line: 1798, column: 47, scope: !6339)
!6499 = !DILocation(line: 1798, column: 51, scope: !6339)
!6500 = !DILocation(line: 1798, column: 45, scope: !6339)
!6501 = !DILocation(line: 1798, column: 5, scope: !6339)
!6502 = distinct !{!6502, !6345, !6503}
!6503 = !DILocation(line: 1948, column: 2, scope: !6340)
!6504 = !DILocation(line: 1949, column: 5, scope: !6332)
!6505 = !DILocation(line: 1950, column: 5, scope: !6332)
!6506 = distinct !DISubprogram(name: "httpd_parse_request", scope: !497, file: !497, line: 1954, type: !707, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!6507 = !DILocalVariable(name: "hc", arg: 1, scope: !6506, file: !497, line: 1954, type: !709)
!6508 = !DILocation(line: 1954, column: 34, scope: !6506)
!6509 = !DILocalVariable(name: "buf", scope: !6506, file: !497, line: 1956, type: !6)
!6510 = !DILocation(line: 1956, column: 11, scope: !6506)
!6511 = !DILocalVariable(name: "method_str", scope: !6506, file: !497, line: 1957, type: !6)
!6512 = !DILocation(line: 1957, column: 11, scope: !6506)
!6513 = !DILocalVariable(name: "url", scope: !6506, file: !497, line: 1958, type: !6)
!6514 = !DILocation(line: 1958, column: 11, scope: !6506)
!6515 = !DILocalVariable(name: "protocol", scope: !6506, file: !497, line: 1959, type: !6)
!6516 = !DILocation(line: 1959, column: 11, scope: !6506)
!6517 = !DILocalVariable(name: "reqhost", scope: !6506, file: !497, line: 1960, type: !6)
!6518 = !DILocation(line: 1960, column: 11, scope: !6506)
!6519 = !DILocalVariable(name: "eol", scope: !6506, file: !497, line: 1961, type: !6)
!6520 = !DILocation(line: 1961, column: 11, scope: !6506)
!6521 = !DILocalVariable(name: "cp", scope: !6506, file: !497, line: 1962, type: !6)
!6522 = !DILocation(line: 1962, column: 11, scope: !6506)
!6523 = !DILocalVariable(name: "pi", scope: !6506, file: !497, line: 1963, type: !6)
!6524 = !DILocation(line: 1963, column: 11, scope: !6506)
!6525 = !DILocation(line: 1965, column: 5, scope: !6506)
!6526 = !DILocation(line: 1965, column: 9, scope: !6506)
!6527 = !DILocation(line: 1965, column: 21, scope: !6506)
!6528 = !DILocation(line: 1966, column: 27, scope: !6506)
!6529 = !DILocation(line: 1966, column: 18, scope: !6506)
!6530 = !DILocation(line: 1966, column: 16, scope: !6506)
!6531 = !DILocation(line: 1967, column: 20, scope: !6506)
!6532 = !DILocation(line: 1967, column: 11, scope: !6506)
!6533 = !DILocation(line: 1967, column: 9, scope: !6506)
!6534 = !DILocation(line: 1968, column: 10, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 1968, column: 10)
!6536 = !DILocation(line: 1968, column: 14, scope: !6535)
!6537 = !DILocation(line: 1968, column: 10, scope: !6506)
!6538 = !DILocation(line: 1970, column: 18, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6535, file: !497, line: 1969, column: 2)
!6540 = !DILocation(line: 1970, column: 27, scope: !6539)
!6541 = !DILocation(line: 1970, column: 50, scope: !6539)
!6542 = !DILocation(line: 1970, column: 2, scope: !6539)
!6543 = !DILocation(line: 1971, column: 2, scope: !6539)
!6544 = !DILocation(line: 1973, column: 9, scope: !6506)
!6545 = !DILocation(line: 1973, column: 12, scope: !6506)
!6546 = !DILocation(line: 1974, column: 20, scope: !6506)
!6547 = !DILocation(line: 1974, column: 12, scope: !6506)
!6548 = !DILocation(line: 1974, column: 9, scope: !6506)
!6549 = !DILocation(line: 1975, column: 25, scope: !6506)
!6550 = !DILocation(line: 1975, column: 16, scope: !6506)
!6551 = !DILocation(line: 1975, column: 14, scope: !6506)
!6552 = !DILocation(line: 1976, column: 10, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 1976, column: 10)
!6554 = !DILocation(line: 1976, column: 19, scope: !6553)
!6555 = !DILocation(line: 1976, column: 10, scope: !6506)
!6556 = !DILocation(line: 1978, column: 11, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6553, file: !497, line: 1977, column: 2)
!6558 = !DILocation(line: 1979, column: 2, scope: !6557)
!6559 = !DILocation(line: 1979, column: 6, scope: !6557)
!6560 = !DILocation(line: 1979, column: 16, scope: !6557)
!6561 = !DILocation(line: 1980, column: 2, scope: !6557)
!6562 = !DILocation(line: 1983, column: 11, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6553, file: !497, line: 1982, column: 2)
!6564 = !DILocation(line: 1983, column: 14, scope: !6563)
!6565 = !DILocation(line: 1984, column: 22, scope: !6563)
!6566 = !DILocation(line: 1984, column: 14, scope: !6563)
!6567 = !DILocation(line: 1984, column: 11, scope: !6563)
!6568 = !DILocation(line: 1985, column: 8, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6563, file: !497, line: 1985, column: 7)
!6570 = !DILocation(line: 1985, column: 7, scope: !6569)
!6571 = !DILocation(line: 1985, column: 17, scope: !6569)
!6572 = !DILocation(line: 1985, column: 7, scope: !6563)
!6573 = !DILocation(line: 1987, column: 21, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6569, file: !497, line: 1986, column: 6)
!6575 = !DILocation(line: 1987, column: 12, scope: !6574)
!6576 = !DILocation(line: 1987, column: 10, scope: !6574)
!6577 = !DILocation(line: 1988, column: 11, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6574, file: !497, line: 1988, column: 11)
!6579 = !DILocation(line: 1988, column: 15, scope: !6578)
!6580 = !DILocation(line: 1988, column: 11, scope: !6574)
!6581 = !DILocation(line: 1989, column: 4, scope: !6578)
!6582 = !DILocation(line: 1989, column: 8, scope: !6578)
!6583 = !DILocation(line: 1989, column: 3, scope: !6578)
!6584 = !DILocation(line: 1990, column: 23, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6574, file: !497, line: 1990, column: 11)
!6586 = !DILocation(line: 1990, column: 11, scope: !6585)
!6587 = !DILocation(line: 1990, column: 46, scope: !6585)
!6588 = !DILocation(line: 1990, column: 11, scope: !6574)
!6589 = !DILocation(line: 1991, column: 3, scope: !6585)
!6590 = !DILocation(line: 1991, column: 7, scope: !6585)
!6591 = !DILocation(line: 1991, column: 15, scope: !6585)
!6592 = !DILocation(line: 1992, column: 6, scope: !6574)
!6593 = !DILocation(line: 1994, column: 20, scope: !6506)
!6594 = !DILocation(line: 1994, column: 5, scope: !6506)
!6595 = !DILocation(line: 1994, column: 9, scope: !6506)
!6596 = !DILocation(line: 1994, column: 18, scope: !6506)
!6597 = !DILocation(line: 1997, column: 23, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 1997, column: 10)
!6599 = !DILocation(line: 1997, column: 10, scope: !6598)
!6600 = !DILocation(line: 1997, column: 43, scope: !6598)
!6601 = !DILocation(line: 1997, column: 10, scope: !6506)
!6602 = !DILocation(line: 1999, column: 9, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6604, file: !497, line: 1999, column: 7)
!6604 = distinct !DILexicalBlock(scope: !6598, file: !497, line: 1998, column: 2)
!6605 = !DILocation(line: 1999, column: 13, scope: !6603)
!6606 = !DILocation(line: 1999, column: 7, scope: !6604)
!6607 = !DILocation(line: 2001, column: 22, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6603, file: !497, line: 2000, column: 6)
!6609 = !DILocation(line: 2001, column: 31, scope: !6608)
!6610 = !DILocation(line: 2001, column: 54, scope: !6608)
!6611 = !DILocation(line: 2001, column: 6, scope: !6608)
!6612 = !DILocation(line: 2002, column: 6, scope: !6608)
!6613 = !DILocation(line: 2004, column: 12, scope: !6604)
!6614 = !DILocation(line: 2004, column: 16, scope: !6604)
!6615 = !DILocation(line: 2004, column: 10, scope: !6604)
!6616 = !DILocation(line: 2005, column: 16, scope: !6604)
!6617 = !DILocation(line: 2005, column: 8, scope: !6604)
!6618 = !DILocation(line: 2005, column: 6, scope: !6604)
!6619 = !DILocation(line: 2006, column: 7, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6604, file: !497, line: 2006, column: 7)
!6621 = !DILocation(line: 2006, column: 11, scope: !6620)
!6622 = !DILocation(line: 2006, column: 7, scope: !6604)
!6623 = !DILocation(line: 2008, column: 22, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6620, file: !497, line: 2007, column: 6)
!6625 = !DILocation(line: 2008, column: 31, scope: !6624)
!6626 = !DILocation(line: 2008, column: 54, scope: !6624)
!6627 = !DILocation(line: 2008, column: 6, scope: !6624)
!6628 = !DILocation(line: 2009, column: 6, scope: !6624)
!6629 = !DILocation(line: 2011, column: 3, scope: !6604)
!6630 = !DILocation(line: 2011, column: 7, scope: !6604)
!6631 = !DILocation(line: 2012, column: 15, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6604, file: !497, line: 2012, column: 7)
!6633 = !DILocation(line: 2012, column: 7, scope: !6632)
!6634 = !DILocation(line: 2012, column: 30, scope: !6632)
!6635 = !DILocation(line: 2012, column: 43, scope: !6632)
!6636 = !DILocation(line: 2012, column: 46, scope: !6632)
!6637 = !DILocation(line: 2012, column: 57, scope: !6632)
!6638 = !DILocation(line: 2012, column: 7, scope: !6604)
!6639 = !DILocation(line: 2014, column: 22, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6632, file: !497, line: 2013, column: 6)
!6641 = !DILocation(line: 2014, column: 31, scope: !6640)
!6642 = !DILocation(line: 2014, column: 54, scope: !6640)
!6643 = !DILocation(line: 2014, column: 6, scope: !6640)
!6644 = !DILocation(line: 2015, column: 6, scope: !6640)
!6645 = !DILocation(line: 2017, column: 22, scope: !6604)
!6646 = !DILocation(line: 2017, column: 26, scope: !6604)
!6647 = !DILocation(line: 2017, column: 36, scope: !6604)
!6648 = !DILocation(line: 2017, column: 40, scope: !6604)
!6649 = !DILocation(line: 2017, column: 60, scope: !6604)
!6650 = !DILocation(line: 2017, column: 52, scope: !6604)
!6651 = !DILocation(line: 2017, column: 2, scope: !6604)
!6652 = !DILocation(line: 2018, column: 9, scope: !6604)
!6653 = !DILocation(line: 2019, column: 3, scope: !6604)
!6654 = !DILocation(line: 2019, column: 7, scope: !6604)
!6655 = !DILocation(line: 2020, column: 2, scope: !6604)
!6656 = !DILocation(line: 2022, column: 11, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 2022, column: 10)
!6658 = !DILocation(line: 2022, column: 10, scope: !6657)
!6659 = !DILocation(line: 2022, column: 15, scope: !6657)
!6660 = !DILocation(line: 2022, column: 10, scope: !6506)
!6661 = !DILocation(line: 2024, column: 18, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6657, file: !497, line: 2023, column: 2)
!6663 = !DILocation(line: 2024, column: 27, scope: !6662)
!6664 = !DILocation(line: 2024, column: 50, scope: !6662)
!6665 = !DILocation(line: 2024, column: 2, scope: !6662)
!6666 = !DILocation(line: 2025, column: 2, scope: !6662)
!6667 = !DILocation(line: 2028, column: 22, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 2028, column: 10)
!6669 = !DILocation(line: 2028, column: 34, scope: !6668)
!6670 = !DILocation(line: 2028, column: 10, scope: !6668)
!6671 = !DILocation(line: 2028, column: 67, scope: !6668)
!6672 = !DILocation(line: 2028, column: 10, scope: !6506)
!6673 = !DILocation(line: 2029, column: 2, scope: !6668)
!6674 = !DILocation(line: 2029, column: 6, scope: !6668)
!6675 = !DILocation(line: 2029, column: 13, scope: !6668)
!6676 = !DILocation(line: 2030, column: 27, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6668, file: !497, line: 2030, column: 15)
!6678 = !DILocation(line: 2030, column: 39, scope: !6677)
!6679 = !DILocation(line: 2030, column: 15, scope: !6677)
!6680 = !DILocation(line: 2030, column: 73, scope: !6677)
!6681 = !DILocation(line: 2030, column: 15, scope: !6668)
!6682 = !DILocation(line: 2031, column: 2, scope: !6677)
!6683 = !DILocation(line: 2031, column: 6, scope: !6677)
!6684 = !DILocation(line: 2031, column: 13, scope: !6677)
!6685 = !DILocation(line: 2032, column: 27, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6677, file: !497, line: 2032, column: 15)
!6687 = !DILocation(line: 2032, column: 39, scope: !6686)
!6688 = !DILocation(line: 2032, column: 15, scope: !6686)
!6689 = !DILocation(line: 2032, column: 73, scope: !6686)
!6690 = !DILocation(line: 2032, column: 15, scope: !6677)
!6691 = !DILocation(line: 2033, column: 2, scope: !6686)
!6692 = !DILocation(line: 2033, column: 6, scope: !6686)
!6693 = !DILocation(line: 2033, column: 13, scope: !6686)
!6694 = !DILocation(line: 2034, column: 27, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6686, file: !497, line: 2034, column: 15)
!6696 = !DILocation(line: 2034, column: 39, scope: !6695)
!6697 = !DILocation(line: 2034, column: 15, scope: !6695)
!6698 = !DILocation(line: 2034, column: 72, scope: !6695)
!6699 = !DILocation(line: 2034, column: 15, scope: !6686)
!6700 = !DILocation(line: 2035, column: 2, scope: !6695)
!6701 = !DILocation(line: 2035, column: 6, scope: !6695)
!6702 = !DILocation(line: 2035, column: 13, scope: !6695)
!6703 = !DILocation(line: 2036, column: 27, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6695, file: !497, line: 2036, column: 15)
!6705 = !DILocation(line: 2036, column: 39, scope: !6704)
!6706 = !DILocation(line: 2036, column: 15, scope: !6704)
!6707 = !DILocation(line: 2036, column: 75, scope: !6704)
!6708 = !DILocation(line: 2036, column: 15, scope: !6695)
!6709 = !DILocation(line: 2037, column: 2, scope: !6704)
!6710 = !DILocation(line: 2037, column: 6, scope: !6704)
!6711 = !DILocation(line: 2037, column: 13, scope: !6704)
!6712 = !DILocation(line: 2038, column: 27, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6704, file: !497, line: 2038, column: 15)
!6714 = !DILocation(line: 2038, column: 39, scope: !6713)
!6715 = !DILocation(line: 2038, column: 15, scope: !6713)
!6716 = !DILocation(line: 2038, column: 74, scope: !6713)
!6717 = !DILocation(line: 2038, column: 15, scope: !6704)
!6718 = !DILocation(line: 2039, column: 2, scope: !6713)
!6719 = !DILocation(line: 2039, column: 6, scope: !6713)
!6720 = !DILocation(line: 2039, column: 13, scope: !6713)
!6721 = !DILocation(line: 2042, column: 18, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6713, file: !497, line: 2041, column: 2)
!6723 = !DILocation(line: 2042, column: 27, scope: !6722)
!6724 = !DILocation(line: 2042, column: 44, scope: !6722)
!6725 = !DILocation(line: 2042, column: 56, scope: !6722)
!6726 = !DILocation(line: 2042, column: 2, scope: !6722)
!6727 = !DILocation(line: 2043, column: 2, scope: !6722)
!6728 = !DILocation(line: 2046, column: 22, scope: !6506)
!6729 = !DILocation(line: 2046, column: 5, scope: !6506)
!6730 = !DILocation(line: 2046, column: 9, scope: !6506)
!6731 = !DILocation(line: 2046, column: 20, scope: !6506)
!6732 = !DILocation(line: 2048, column: 3, scope: !6506)
!6733 = !DILocation(line: 2048, column: 7, scope: !6506)
!6734 = !DILocation(line: 2048, column: 20, scope: !6506)
!6735 = !DILocation(line: 2048, column: 24, scope: !6506)
!6736 = !DILocation(line: 2048, column: 47, scope: !6506)
!6737 = !DILocation(line: 2048, column: 51, scope: !6506)
!6738 = !DILocation(line: 2048, column: 39, scope: !6506)
!6739 = !DILocation(line: 2047, column: 5, scope: !6506)
!6740 = !DILocation(line: 2049, column: 16, scope: !6506)
!6741 = !DILocation(line: 2049, column: 20, scope: !6506)
!6742 = !DILocation(line: 2049, column: 32, scope: !6506)
!6743 = !DILocation(line: 2049, column: 36, scope: !6506)
!6744 = !DILocation(line: 2049, column: 5, scope: !6506)
!6745 = !DILocation(line: 2052, column: 3, scope: !6506)
!6746 = !DILocation(line: 2052, column: 7, scope: !6506)
!6747 = !DILocation(line: 2052, column: 22, scope: !6506)
!6748 = !DILocation(line: 2052, column: 26, scope: !6506)
!6749 = !DILocation(line: 2052, column: 51, scope: !6506)
!6750 = !DILocation(line: 2052, column: 55, scope: !6506)
!6751 = !DILocation(line: 2052, column: 43, scope: !6506)
!6752 = !DILocation(line: 2051, column: 5, scope: !6506)
!6753 = !DILocation(line: 2053, column: 12, scope: !6506)
!6754 = !DILocation(line: 2055, column: 10, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 2055, column: 10)
!6756 = !DILocation(line: 2055, column: 14, scope: !6755)
!6757 = !DILocation(line: 2055, column: 30, scope: !6755)
!6758 = !DILocation(line: 2055, column: 10, scope: !6506)
!6759 = !DILocation(line: 2056, column: 9, scope: !6755)
!6760 = !DILocation(line: 2056, column: 2, scope: !6755)
!6761 = !DILocation(line: 2059, column: 18, scope: !6506)
!6762 = !DILocation(line: 2059, column: 22, scope: !6506)
!6763 = !DILocation(line: 2059, column: 10, scope: !6506)
!6764 = !DILocation(line: 2059, column: 8, scope: !6506)
!6765 = !DILocation(line: 2060, column: 10, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 2060, column: 10)
!6767 = !DILocation(line: 2060, column: 13, scope: !6766)
!6768 = !DILocation(line: 2060, column: 10, scope: !6506)
!6769 = !DILocation(line: 2062, column: 2, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6766, file: !497, line: 2061, column: 2)
!6771 = !DILocation(line: 2063, column: 22, scope: !6770)
!6772 = !DILocation(line: 2063, column: 26, scope: !6770)
!6773 = !DILocation(line: 2063, column: 34, scope: !6770)
!6774 = !DILocation(line: 2063, column: 38, scope: !6770)
!6775 = !DILocation(line: 2063, column: 56, scope: !6770)
!6776 = !DILocation(line: 2063, column: 48, scope: !6770)
!6777 = !DILocation(line: 2063, column: 2, scope: !6770)
!6778 = !DILocation(line: 2064, column: 9, scope: !6770)
!6779 = !DILocation(line: 2066, column: 15, scope: !6770)
!6780 = !DILocation(line: 2066, column: 19, scope: !6770)
!6781 = !DILocation(line: 2066, column: 7, scope: !6770)
!6782 = !DILocation(line: 2066, column: 5, scope: !6770)
!6783 = !DILocation(line: 2067, column: 7, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6770, file: !497, line: 2067, column: 7)
!6785 = !DILocation(line: 2067, column: 10, scope: !6784)
!6786 = !DILocation(line: 2067, column: 7, scope: !6770)
!6787 = !DILocation(line: 2068, column: 7, scope: !6784)
!6788 = !DILocation(line: 2068, column: 10, scope: !6784)
!6789 = !DILocation(line: 2068, column: 6, scope: !6784)
!6790 = !DILocation(line: 2069, column: 2, scope: !6770)
!6791 = !DILocation(line: 2071, column: 16, scope: !6506)
!6792 = !DILocation(line: 2071, column: 20, scope: !6506)
!6793 = !DILocation(line: 2071, column: 5, scope: !6506)
!6794 = !DILocation(line: 2072, column: 10, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 2072, column: 10)
!6796 = !DILocation(line: 2072, column: 14, scope: !6795)
!6797 = !DILocation(line: 2072, column: 30, scope: !6795)
!6798 = !DILocation(line: 2072, column: 37, scope: !6795)
!6799 = !DILocation(line: 2073, column: 5, scope: !6795)
!6800 = !DILocation(line: 2073, column: 9, scope: !6795)
!6801 = !DILocation(line: 2073, column: 25, scope: !6795)
!6802 = !DILocation(line: 2073, column: 32, scope: !6795)
!6803 = !DILocation(line: 2073, column: 35, scope: !6795)
!6804 = !DILocation(line: 2073, column: 39, scope: !6795)
!6805 = !DILocation(line: 2073, column: 55, scope: !6795)
!6806 = !DILocation(line: 2073, column: 62, scope: !6795)
!6807 = !DILocation(line: 2074, column: 7, scope: !6795)
!6808 = !DILocation(line: 2074, column: 11, scope: !6795)
!6809 = !DILocation(line: 2074, column: 27, scope: !6795)
!6810 = !DILocation(line: 2074, column: 35, scope: !6795)
!6811 = !DILocation(line: 2074, column: 38, scope: !6795)
!6812 = !DILocation(line: 2074, column: 42, scope: !6795)
!6813 = !DILocation(line: 2074, column: 58, scope: !6795)
!6814 = !DILocation(line: 2072, column: 10, scope: !6506)
!6815 = !DILocation(line: 2076, column: 18, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6795, file: !497, line: 2075, column: 2)
!6817 = !DILocation(line: 2076, column: 27, scope: !6816)
!6818 = !DILocation(line: 2076, column: 50, scope: !6816)
!6819 = !DILocation(line: 2076, column: 2, scope: !6816)
!6820 = !DILocation(line: 2077, column: 2, scope: !6816)
!6821 = !DILocation(line: 2080, column: 10, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 2080, column: 10)
!6823 = !DILocation(line: 2080, column: 14, scope: !6822)
!6824 = !DILocation(line: 2080, column: 10, scope: !6506)
!6825 = !DILocation(line: 2083, column: 2, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6822, file: !497, line: 2081, column: 2)
!6827 = !DILocation(line: 2083, column: 27, scope: !6826)
!6828 = !DILocation(line: 2083, column: 18, scope: !6826)
!6829 = !DILocation(line: 2083, column: 16, scope: !6826)
!6830 = !DILocation(line: 2083, column: 34, scope: !6826)
!6831 = !DILocation(line: 2085, column: 11, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6833, file: !497, line: 2085, column: 11)
!6833 = distinct !DILexicalBlock(scope: !6826, file: !497, line: 2084, column: 6)
!6834 = !DILocation(line: 2085, column: 18, scope: !6832)
!6835 = !DILocation(line: 2085, column: 11, scope: !6833)
!6836 = !DILocation(line: 2086, column: 3, scope: !6832)
!6837 = !DILocation(line: 2087, column: 24, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6833, file: !497, line: 2087, column: 11)
!6839 = !DILocation(line: 2087, column: 11, scope: !6838)
!6840 = !DILocation(line: 2087, column: 45, scope: !6838)
!6841 = !DILocation(line: 2087, column: 11, scope: !6833)
!6842 = !DILocation(line: 2089, column: 9, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6838, file: !497, line: 2088, column: 3)
!6844 = !DILocation(line: 2089, column: 6, scope: !6843)
!6845 = !DILocation(line: 2090, column: 17, scope: !6843)
!6846 = !DILocation(line: 2090, column: 9, scope: !6843)
!6847 = !DILocation(line: 2090, column: 6, scope: !6843)
!6848 = !DILocation(line: 2091, column: 18, scope: !6843)
!6849 = !DILocation(line: 2091, column: 3, scope: !6843)
!6850 = !DILocation(line: 2091, column: 7, scope: !6843)
!6851 = !DILocation(line: 2091, column: 16, scope: !6843)
!6852 = !DILocation(line: 2092, column: 3, scope: !6843)
!6853 = !DILocation(line: 2093, column: 29, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6838, file: !497, line: 2093, column: 16)
!6855 = !DILocation(line: 2093, column: 16, scope: !6854)
!6856 = !DILocation(line: 2093, column: 51, scope: !6854)
!6857 = !DILocation(line: 2093, column: 16, scope: !6838)
!6858 = !DILocation(line: 2095, column: 9, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6854, file: !497, line: 2094, column: 3)
!6860 = !DILocation(line: 2095, column: 6, scope: !6859)
!6861 = !DILocation(line: 2096, column: 17, scope: !6859)
!6862 = !DILocation(line: 2096, column: 9, scope: !6859)
!6863 = !DILocation(line: 2096, column: 6, scope: !6859)
!6864 = !DILocation(line: 2097, column: 18, scope: !6859)
!6865 = !DILocation(line: 2097, column: 3, scope: !6859)
!6866 = !DILocation(line: 2097, column: 7, scope: !6859)
!6867 = !DILocation(line: 2097, column: 16, scope: !6859)
!6868 = !DILocation(line: 2098, column: 3, scope: !6859)
!6869 = !DILocation(line: 2099, column: 29, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6854, file: !497, line: 2099, column: 16)
!6871 = !DILocation(line: 2099, column: 16, scope: !6870)
!6872 = !DILocation(line: 2099, column: 54, scope: !6870)
!6873 = !DILocation(line: 2099, column: 16, scope: !6854)
!6874 = !DILocation(line: 2101, column: 9, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6870, file: !497, line: 2100, column: 3)
!6876 = !DILocation(line: 2101, column: 6, scope: !6875)
!6877 = !DILocation(line: 2102, column: 17, scope: !6875)
!6878 = !DILocation(line: 2102, column: 9, scope: !6875)
!6879 = !DILocation(line: 2102, column: 6, scope: !6875)
!6880 = !DILocation(line: 2103, column: 19, scope: !6875)
!6881 = !DILocation(line: 2103, column: 3, scope: !6875)
!6882 = !DILocation(line: 2103, column: 7, scope: !6875)
!6883 = !DILocation(line: 2103, column: 17, scope: !6875)
!6884 = !DILocation(line: 2104, column: 3, scope: !6875)
!6885 = !DILocation(line: 2105, column: 29, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6870, file: !497, line: 2105, column: 16)
!6887 = !DILocation(line: 2105, column: 16, scope: !6886)
!6888 = !DILocation(line: 2105, column: 47, scope: !6886)
!6889 = !DILocation(line: 2105, column: 16, scope: !6870)
!6890 = !DILocation(line: 2107, column: 9, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6886, file: !497, line: 2106, column: 3)
!6892 = !DILocation(line: 2107, column: 6, scope: !6891)
!6893 = !DILocation(line: 2108, column: 17, scope: !6891)
!6894 = !DILocation(line: 2108, column: 9, scope: !6891)
!6895 = !DILocation(line: 2108, column: 6, scope: !6891)
!6896 = !DILocation(line: 2109, column: 17, scope: !6891)
!6897 = !DILocation(line: 2109, column: 3, scope: !6891)
!6898 = !DILocation(line: 2109, column: 7, scope: !6891)
!6899 = !DILocation(line: 2109, column: 15, scope: !6891)
!6900 = !DILocation(line: 2110, column: 16, scope: !6891)
!6901 = !DILocation(line: 2110, column: 20, scope: !6891)
!6902 = !DILocation(line: 2110, column: 8, scope: !6891)
!6903 = !DILocation(line: 2110, column: 6, scope: !6891)
!6904 = !DILocation(line: 2111, column: 8, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6891, file: !497, line: 2111, column: 8)
!6906 = !DILocation(line: 2111, column: 11, scope: !6905)
!6907 = !DILocation(line: 2111, column: 8, scope: !6891)
!6908 = !DILocation(line: 2112, column: 8, scope: !6905)
!6909 = !DILocation(line: 2112, column: 11, scope: !6905)
!6910 = !DILocation(line: 2112, column: 7, scope: !6905)
!6911 = !DILocation(line: 2113, column: 16, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6891, file: !497, line: 2113, column: 8)
!6913 = !DILocation(line: 2113, column: 20, scope: !6912)
!6914 = !DILocation(line: 2113, column: 8, scope: !6912)
!6915 = !DILocation(line: 2113, column: 35, scope: !6912)
!6916 = !DILocation(line: 2113, column: 48, scope: !6912)
!6917 = !DILocation(line: 2113, column: 51, scope: !6912)
!6918 = !DILocation(line: 2113, column: 55, scope: !6912)
!6919 = !DILocation(line: 2113, column: 66, scope: !6912)
!6920 = !DILocation(line: 2113, column: 8, scope: !6891)
!6921 = !DILocation(line: 2115, column: 23, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6912, file: !497, line: 2114, column: 7)
!6923 = !DILocation(line: 2115, column: 32, scope: !6922)
!6924 = !DILocation(line: 2115, column: 55, scope: !6922)
!6925 = !DILocation(line: 2115, column: 7, scope: !6922)
!6926 = !DILocation(line: 2116, column: 7, scope: !6922)
!6927 = !DILocation(line: 2118, column: 3, scope: !6891)
!6928 = !DILocation(line: 2119, column: 29, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6886, file: !497, line: 2119, column: 16)
!6930 = !DILocation(line: 2119, column: 16, scope: !6929)
!6931 = !DILocation(line: 2119, column: 49, scope: !6929)
!6932 = !DILocation(line: 2119, column: 16, scope: !6886)
!6933 = !DILocation(line: 2121, column: 9, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6929, file: !497, line: 2120, column: 3)
!6935 = !DILocation(line: 2121, column: 6, scope: !6934)
!6936 = !DILocation(line: 2122, column: 17, scope: !6934)
!6937 = !DILocation(line: 2122, column: 9, scope: !6934)
!6938 = !DILocation(line: 2122, column: 6, scope: !6934)
!6939 = !DILocation(line: 2123, column: 8, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6934, file: !497, line: 2123, column: 8)
!6941 = !DILocation(line: 2123, column: 12, scope: !6940)
!6942 = !DILocation(line: 2123, column: 22, scope: !6940)
!6943 = !DILocation(line: 2123, column: 8, scope: !6934)
!6944 = !DILocation(line: 2125, column: 20, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !497, line: 2125, column: 12)
!6946 = distinct !DILexicalBlock(scope: !6940, file: !497, line: 2124, column: 7)
!6947 = !DILocation(line: 2125, column: 24, scope: !6945)
!6948 = !DILocation(line: 2125, column: 12, scope: !6945)
!6949 = !DILocation(line: 2125, column: 33, scope: !6945)
!6950 = !DILocation(line: 2125, column: 12, scope: !6946)
!6951 = !DILocation(line: 2129, column: 21, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6945, file: !497, line: 2126, column: 4)
!6953 = !DILocation(line: 2129, column: 25, scope: !6952)
!6954 = !DILocation(line: 2129, column: 8, scope: !6952)
!6955 = !DILocation(line: 2127, column: 4, scope: !6952)
!6956 = !DILocation(line: 2130, column: 4, scope: !6952)
!6957 = distinct !{!6957, !6825, !6958}
!6958 = !DILocation(line: 2277, column: 6, scope: !6826)
!6959 = !DILocation(line: 2133, column: 5, scope: !6946)
!6960 = !DILocation(line: 2133, column: 9, scope: !6946)
!6961 = !DILocation(line: 2133, column: 18, scope: !6946)
!6962 = !DILocation(line: 2133, column: 22, scope: !6946)
!6963 = !DILocation(line: 2134, column: 12, scope: !6946)
!6964 = !DILocation(line: 2134, column: 16, scope: !6946)
!6965 = !DILocation(line: 2134, column: 4, scope: !6946)
!6966 = !DILocation(line: 2134, column: 25, scope: !6946)
!6967 = !DILocation(line: 2134, column: 39, scope: !6946)
!6968 = !DILocation(line: 2134, column: 31, scope: !6946)
!6969 = !DILocation(line: 2134, column: 29, scope: !6946)
!6970 = !DILocation(line: 2132, column: 7, scope: !6946)
!6971 = !DILocation(line: 2135, column: 14, scope: !6946)
!6972 = !DILocation(line: 2136, column: 7, scope: !6946)
!6973 = !DILocation(line: 2139, column: 5, scope: !6940)
!6974 = !DILocation(line: 2139, column: 9, scope: !6940)
!6975 = !DILocation(line: 2139, column: 18, scope: !6940)
!6976 = !DILocation(line: 2139, column: 22, scope: !6940)
!6977 = !DILocation(line: 2139, column: 41, scope: !6940)
!6978 = !DILocation(line: 2139, column: 33, scope: !6940)
!6979 = !DILocation(line: 2138, column: 7, scope: !6940)
!6980 = !DILocation(line: 2140, column: 10, scope: !6934)
!6981 = !DILocation(line: 2141, column: 3, scope: !6934)
!6982 = !DILocation(line: 2142, column: 29, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6929, file: !497, line: 2142, column: 16)
!6984 = !DILocation(line: 2142, column: 16, scope: !6983)
!6985 = !DILocation(line: 2142, column: 59, scope: !6983)
!6986 = !DILocation(line: 2142, column: 16, scope: !6929)
!6987 = !DILocation(line: 2144, column: 9, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6983, file: !497, line: 2143, column: 3)
!6989 = !DILocation(line: 2144, column: 6, scope: !6988)
!6990 = !DILocation(line: 2145, column: 17, scope: !6988)
!6991 = !DILocation(line: 2145, column: 9, scope: !6988)
!6992 = !DILocation(line: 2145, column: 6, scope: !6988)
!6993 = !DILocation(line: 2146, column: 8, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6988, file: !497, line: 2146, column: 8)
!6995 = !DILocation(line: 2146, column: 12, scope: !6994)
!6996 = !DILocation(line: 2146, column: 23, scope: !6994)
!6997 = !DILocation(line: 2146, column: 8, scope: !6988)
!6998 = !DILocation(line: 2148, column: 20, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !497, line: 2148, column: 12)
!7000 = distinct !DILexicalBlock(scope: !6994, file: !497, line: 2147, column: 7)
!7001 = !DILocation(line: 2148, column: 24, scope: !6999)
!7002 = !DILocation(line: 2148, column: 12, scope: !6999)
!7003 = !DILocation(line: 2148, column: 34, scope: !6999)
!7004 = !DILocation(line: 2148, column: 12, scope: !7000)
!7005 = !DILocation(line: 2152, column: 21, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6999, file: !497, line: 2149, column: 4)
!7007 = !DILocation(line: 2152, column: 25, scope: !7006)
!7008 = !DILocation(line: 2152, column: 8, scope: !7006)
!7009 = !DILocation(line: 2150, column: 4, scope: !7006)
!7010 = !DILocation(line: 2153, column: 4, scope: !7006)
!7011 = !DILocation(line: 2156, column: 5, scope: !7000)
!7012 = !DILocation(line: 2156, column: 9, scope: !7000)
!7013 = !DILocation(line: 2156, column: 19, scope: !7000)
!7014 = !DILocation(line: 2156, column: 23, scope: !7000)
!7015 = !DILocation(line: 2157, column: 12, scope: !7000)
!7016 = !DILocation(line: 2157, column: 16, scope: !7000)
!7017 = !DILocation(line: 2157, column: 4, scope: !7000)
!7018 = !DILocation(line: 2157, column: 26, scope: !7000)
!7019 = !DILocation(line: 2157, column: 40, scope: !7000)
!7020 = !DILocation(line: 2157, column: 32, scope: !7000)
!7021 = !DILocation(line: 2157, column: 30, scope: !7000)
!7022 = !DILocation(line: 2155, column: 7, scope: !7000)
!7023 = !DILocation(line: 2158, column: 14, scope: !7000)
!7024 = !DILocation(line: 2159, column: 7, scope: !7000)
!7025 = !DILocation(line: 2162, column: 5, scope: !6994)
!7026 = !DILocation(line: 2162, column: 9, scope: !6994)
!7027 = !DILocation(line: 2162, column: 19, scope: !6994)
!7028 = !DILocation(line: 2162, column: 23, scope: !6994)
!7029 = !DILocation(line: 2162, column: 43, scope: !6994)
!7030 = !DILocation(line: 2162, column: 35, scope: !6994)
!7031 = !DILocation(line: 2161, column: 7, scope: !6994)
!7032 = !DILocation(line: 2163, column: 10, scope: !6988)
!7033 = !DILocation(line: 2164, column: 3, scope: !6988)
!7034 = !DILocation(line: 2165, column: 29, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !6983, file: !497, line: 2165, column: 16)
!7036 = !DILocation(line: 2165, column: 16, scope: !7035)
!7037 = !DILocation(line: 2165, column: 59, scope: !7035)
!7038 = !DILocation(line: 2165, column: 16, scope: !6983)
!7039 = !DILocation(line: 2167, column: 9, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7035, file: !497, line: 2166, column: 3)
!7041 = !DILocation(line: 2167, column: 6, scope: !7040)
!7042 = !DILocation(line: 2168, column: 17, scope: !7040)
!7043 = !DILocation(line: 2168, column: 9, scope: !7040)
!7044 = !DILocation(line: 2168, column: 6, scope: !7040)
!7045 = !DILocation(line: 2169, column: 17, scope: !7040)
!7046 = !DILocation(line: 2169, column: 3, scope: !7040)
!7047 = !DILocation(line: 2169, column: 7, scope: !7040)
!7048 = !DILocation(line: 2169, column: 15, scope: !7040)
!7049 = !DILocation(line: 2170, column: 3, scope: !7040)
!7050 = !DILocation(line: 2171, column: 29, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7035, file: !497, line: 2171, column: 16)
!7052 = !DILocation(line: 2171, column: 16, scope: !7051)
!7053 = !DILocation(line: 2171, column: 61, scope: !7051)
!7054 = !DILocation(line: 2171, column: 16, scope: !7035)
!7055 = !DILocation(line: 2173, column: 9, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7051, file: !497, line: 2172, column: 3)
!7057 = !DILocation(line: 2173, column: 6, scope: !7056)
!7058 = !DILocation(line: 2174, column: 40, scope: !7056)
!7059 = !DILocation(line: 2174, column: 27, scope: !7056)
!7060 = !DILocation(line: 2174, column: 3, scope: !7056)
!7061 = !DILocation(line: 2174, column: 7, scope: !7056)
!7062 = !DILocation(line: 2174, column: 25, scope: !7056)
!7063 = !DILocation(line: 2175, column: 8, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7056, file: !497, line: 2175, column: 8)
!7065 = !DILocation(line: 2175, column: 12, scope: !7064)
!7066 = !DILocation(line: 2175, column: 30, scope: !7064)
!7067 = !DILocation(line: 2175, column: 8, scope: !7056)
!7068 = !DILocation(line: 2176, column: 52, scope: !7064)
!7069 = !DILocation(line: 2176, column: 7, scope: !7064)
!7070 = !DILocation(line: 2177, column: 3, scope: !7056)
!7071 = !DILocation(line: 2178, column: 29, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7051, file: !497, line: 2178, column: 16)
!7073 = !DILocation(line: 2178, column: 16, scope: !7072)
!7074 = !DILocation(line: 2178, column: 49, scope: !7072)
!7075 = !DILocation(line: 2178, column: 16, scope: !7051)
!7076 = !DILocation(line: 2180, column: 9, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7072, file: !497, line: 2179, column: 3)
!7078 = !DILocation(line: 2180, column: 6, scope: !7077)
!7079 = !DILocation(line: 2181, column: 17, scope: !7077)
!7080 = !DILocation(line: 2181, column: 9, scope: !7077)
!7081 = !DILocation(line: 2181, column: 6, scope: !7077)
!7082 = !DILocation(line: 2182, column: 16, scope: !7077)
!7083 = !DILocation(line: 2182, column: 3, scope: !7077)
!7084 = !DILocation(line: 2182, column: 7, scope: !7077)
!7085 = !DILocation(line: 2182, column: 14, scope: !7077)
!7086 = !DILocation(line: 2183, column: 3, scope: !7077)
!7087 = !DILocation(line: 2184, column: 29, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7072, file: !497, line: 2184, column: 16)
!7089 = !DILocation(line: 2184, column: 16, scope: !7088)
!7090 = !DILocation(line: 2184, column: 48, scope: !7088)
!7091 = !DILocation(line: 2184, column: 16, scope: !7072)
!7092 = !DILocation(line: 2187, column: 16, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !497, line: 2187, column: 8)
!7094 = distinct !DILexicalBlock(scope: !7088, file: !497, line: 2185, column: 3)
!7095 = !DILocation(line: 2187, column: 8, scope: !7093)
!7096 = !DILocation(line: 2187, column: 27, scope: !7093)
!7097 = !DILocation(line: 2187, column: 8, scope: !7094)
!7098 = !DILocalVariable(name: "cp_dash", scope: !7099, file: !497, line: 2189, type: !6)
!7099 = distinct !DILexicalBlock(scope: !7093, file: !497, line: 2188, column: 7)
!7100 = !DILocation(line: 2189, column: 13, scope: !7099)
!7101 = !DILocation(line: 2190, column: 21, scope: !7099)
!7102 = !DILocation(line: 2190, column: 12, scope: !7099)
!7103 = !DILocation(line: 2190, column: 10, scope: !7099)
!7104 = !DILocation(line: 2191, column: 12, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7099, file: !497, line: 2191, column: 12)
!7106 = !DILocation(line: 2191, column: 15, scope: !7105)
!7107 = !DILocation(line: 2191, column: 12, scope: !7099)
!7108 = !DILocation(line: 2193, column: 22, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7105, file: !497, line: 2192, column: 4)
!7110 = !DILocation(line: 2193, column: 25, scope: !7109)
!7111 = !DILocation(line: 2193, column: 14, scope: !7109)
!7112 = !DILocation(line: 2193, column: 12, scope: !7109)
!7113 = !DILocation(line: 2194, column: 9, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7109, file: !497, line: 2194, column: 9)
!7115 = !DILocation(line: 2194, column: 17, scope: !7114)
!7116 = !DILocation(line: 2194, column: 30, scope: !7114)
!7117 = !DILocation(line: 2194, column: 33, scope: !7114)
!7118 = !DILocation(line: 2194, column: 44, scope: !7114)
!7119 = !DILocation(line: 2194, column: 47, scope: !7114)
!7120 = !DILocation(line: 2194, column: 41, scope: !7114)
!7121 = !DILocation(line: 2194, column: 9, scope: !7109)
!7122 = !DILocation(line: 2196, column: 9, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7114, file: !497, line: 2195, column: 8)
!7124 = !DILocation(line: 2196, column: 17, scope: !7123)
!7125 = !DILocation(line: 2197, column: 8, scope: !7123)
!7126 = !DILocation(line: 2197, column: 12, scope: !7123)
!7127 = !DILocation(line: 2197, column: 22, scope: !7123)
!7128 = !DILocation(line: 2198, column: 38, scope: !7123)
!7129 = !DILocation(line: 2198, column: 41, scope: !7123)
!7130 = !DILocation(line: 2198, column: 31, scope: !7123)
!7131 = !DILocation(line: 2198, column: 8, scope: !7123)
!7132 = !DILocation(line: 2198, column: 12, scope: !7123)
!7133 = !DILocation(line: 2198, column: 29, scope: !7123)
!7134 = !DILocation(line: 2199, column: 13, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7123, file: !497, line: 2199, column: 13)
!7136 = !DILocation(line: 2199, column: 17, scope: !7135)
!7137 = !DILocation(line: 2199, column: 34, scope: !7135)
!7138 = !DILocation(line: 2199, column: 13, scope: !7123)
!7139 = !DILocation(line: 2200, column: 5, scope: !7135)
!7140 = !DILocation(line: 2200, column: 9, scope: !7135)
!7141 = !DILocation(line: 2200, column: 26, scope: !7135)
!7142 = !DILocation(line: 2201, column: 28, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7123, file: !497, line: 2201, column: 13)
!7144 = !DILocation(line: 2201, column: 22, scope: !7143)
!7145 = !DILocation(line: 2201, column: 13, scope: !7143)
!7146 = !DILocation(line: 2201, column: 13, scope: !7123)
!7147 = !DILocation(line: 2203, column: 34, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7143, file: !497, line: 2202, column: 5)
!7149 = !DILocation(line: 2203, column: 42, scope: !7148)
!7150 = !DILocation(line: 2203, column: 27, scope: !7148)
!7151 = !DILocation(line: 2203, column: 5, scope: !7148)
!7152 = !DILocation(line: 2203, column: 9, scope: !7148)
!7153 = !DILocation(line: 2203, column: 25, scope: !7148)
!7154 = !DILocation(line: 2204, column: 10, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7148, file: !497, line: 2204, column: 10)
!7156 = !DILocation(line: 2204, column: 14, scope: !7155)
!7157 = !DILocation(line: 2204, column: 30, scope: !7155)
!7158 = !DILocation(line: 2204, column: 10, scope: !7148)
!7159 = !DILocation(line: 2205, column: 9, scope: !7155)
!7160 = !DILocation(line: 2205, column: 13, scope: !7155)
!7161 = !DILocation(line: 2205, column: 29, scope: !7155)
!7162 = !DILocation(line: 2206, column: 5, scope: !7148)
!7163 = !DILocation(line: 2207, column: 8, scope: !7123)
!7164 = !DILocation(line: 2208, column: 4, scope: !7109)
!7165 = !DILocation(line: 2209, column: 7, scope: !7099)
!7166 = !DILocation(line: 2210, column: 3, scope: !7094)
!7167 = !DILocation(line: 2211, column: 29, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7088, file: !497, line: 2211, column: 16)
!7169 = !DILocation(line: 2211, column: 16, scope: !7168)
!7170 = !DILocation(line: 2211, column: 51, scope: !7168)
!7171 = !DILocation(line: 2211, column: 56, scope: !7168)
!7172 = !DILocation(line: 2212, column: 22, scope: !7168)
!7173 = !DILocation(line: 2212, column: 9, scope: !7168)
!7174 = !DILocation(line: 2212, column: 44, scope: !7168)
!7175 = !DILocation(line: 2211, column: 16, scope: !7088)
!7176 = !DILocation(line: 2214, column: 9, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7168, file: !497, line: 2213, column: 3)
!7178 = !DILocation(line: 2214, column: 6, scope: !7177)
!7179 = !DILocation(line: 2215, column: 31, scope: !7177)
!7180 = !DILocation(line: 2215, column: 18, scope: !7177)
!7181 = !DILocation(line: 2215, column: 3, scope: !7177)
!7182 = !DILocation(line: 2215, column: 7, scope: !7177)
!7183 = !DILocation(line: 2215, column: 16, scope: !7177)
!7184 = !DILocation(line: 2216, column: 8, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7177, file: !497, line: 2216, column: 8)
!7186 = !DILocation(line: 2216, column: 12, scope: !7185)
!7187 = !DILocation(line: 2216, column: 21, scope: !7185)
!7188 = !DILocation(line: 2216, column: 8, scope: !7177)
!7189 = !DILocation(line: 2217, column: 52, scope: !7185)
!7190 = !DILocation(line: 2217, column: 7, scope: !7185)
!7191 = !DILocation(line: 2218, column: 3, scope: !7177)
!7192 = !DILocation(line: 2219, column: 29, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7168, file: !497, line: 2219, column: 16)
!7194 = !DILocation(line: 2219, column: 16, scope: !7193)
!7195 = !DILocation(line: 2219, column: 56, scope: !7193)
!7196 = !DILocation(line: 2219, column: 16, scope: !7168)
!7197 = !DILocation(line: 2221, column: 9, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7193, file: !497, line: 2220, column: 3)
!7199 = !DILocation(line: 2221, column: 6, scope: !7198)
!7200 = !DILocation(line: 2222, column: 17, scope: !7198)
!7201 = !DILocation(line: 2222, column: 9, scope: !7198)
!7202 = !DILocation(line: 2222, column: 6, scope: !7198)
!7203 = !DILocation(line: 2223, column: 21, scope: !7198)
!7204 = !DILocation(line: 2223, column: 3, scope: !7198)
!7205 = !DILocation(line: 2223, column: 7, scope: !7198)
!7206 = !DILocation(line: 2223, column: 19, scope: !7198)
!7207 = !DILocation(line: 2224, column: 3, scope: !7198)
!7208 = !DILocation(line: 2225, column: 29, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7193, file: !497, line: 2225, column: 16)
!7210 = !DILocation(line: 2225, column: 16, scope: !7209)
!7211 = !DILocation(line: 2225, column: 58, scope: !7209)
!7212 = !DILocation(line: 2225, column: 16, scope: !7193)
!7213 = !DILocation(line: 2227, column: 9, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7209, file: !497, line: 2226, column: 3)
!7215 = !DILocation(line: 2227, column: 6, scope: !7214)
!7216 = !DILocation(line: 2228, column: 29, scope: !7214)
!7217 = !DILocation(line: 2228, column: 23, scope: !7214)
!7218 = !DILocation(line: 2228, column: 3, scope: !7214)
!7219 = !DILocation(line: 2228, column: 7, scope: !7214)
!7220 = !DILocation(line: 2228, column: 21, scope: !7214)
!7221 = !DILocation(line: 2229, column: 3, scope: !7214)
!7222 = !DILocation(line: 2230, column: 29, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7209, file: !497, line: 2230, column: 16)
!7224 = !DILocation(line: 2230, column: 16, scope: !7223)
!7225 = !DILocation(line: 2230, column: 57, scope: !7223)
!7226 = !DILocation(line: 2230, column: 16, scope: !7209)
!7227 = !DILocation(line: 2232, column: 9, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7223, file: !497, line: 2231, column: 3)
!7229 = !DILocation(line: 2232, column: 6, scope: !7228)
!7230 = !DILocation(line: 2233, column: 17, scope: !7228)
!7231 = !DILocation(line: 2233, column: 9, scope: !7228)
!7232 = !DILocation(line: 2233, column: 6, scope: !7228)
!7233 = !DILocation(line: 2234, column: 23, scope: !7228)
!7234 = !DILocation(line: 2234, column: 3, scope: !7228)
!7235 = !DILocation(line: 2234, column: 7, scope: !7228)
!7236 = !DILocation(line: 2234, column: 21, scope: !7228)
!7237 = !DILocation(line: 2235, column: 3, scope: !7228)
!7238 = !DILocation(line: 2236, column: 29, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7223, file: !497, line: 2236, column: 16)
!7240 = !DILocation(line: 2236, column: 16, scope: !7239)
!7241 = !DILocation(line: 2236, column: 54, scope: !7239)
!7242 = !DILocation(line: 2236, column: 16, scope: !7223)
!7243 = !DILocation(line: 2238, column: 9, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7239, file: !497, line: 2237, column: 3)
!7245 = !DILocation(line: 2238, column: 6, scope: !7244)
!7246 = !DILocation(line: 2239, column: 17, scope: !7244)
!7247 = !DILocation(line: 2239, column: 9, scope: !7244)
!7248 = !DILocation(line: 2239, column: 6, scope: !7244)
!7249 = !DILocation(line: 2240, column: 20, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7244, file: !497, line: 2240, column: 8)
!7251 = !DILocation(line: 2240, column: 8, scope: !7250)
!7252 = !DILocation(line: 2240, column: 39, scope: !7250)
!7253 = !DILocation(line: 2240, column: 8, scope: !7244)
!7254 = !DILocation(line: 2241, column: 7, scope: !7250)
!7255 = !DILocation(line: 2241, column: 11, scope: !7250)
!7256 = !DILocation(line: 2241, column: 22, scope: !7250)
!7257 = !DILocation(line: 2242, column: 3, scope: !7244)
!7258 = !DILocation(line: 2278, column: 2, scope: !6826)
!7259 = !DILocation(line: 2280, column: 10, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 2280, column: 10)
!7261 = !DILocation(line: 2280, column: 14, scope: !7260)
!7262 = !DILocation(line: 2280, column: 10, scope: !6506)
!7263 = !DILocation(line: 2283, column: 7, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !497, line: 2283, column: 7)
!7265 = distinct !DILexicalBlock(scope: !7260, file: !497, line: 2281, column: 2)
!7266 = !DILocation(line: 2283, column: 11, scope: !7264)
!7267 = !DILocation(line: 2283, column: 22, scope: !7264)
!7268 = !DILocation(line: 2283, column: 30, scope: !7264)
!7269 = !DILocation(line: 2283, column: 33, scope: !7264)
!7270 = !DILocation(line: 2283, column: 37, scope: !7264)
!7271 = !DILocation(line: 2283, column: 48, scope: !7264)
!7272 = !DILocation(line: 2283, column: 7, scope: !7265)
!7273 = !DILocation(line: 2285, column: 22, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7264, file: !497, line: 2284, column: 6)
!7275 = !DILocation(line: 2285, column: 31, scope: !7274)
!7276 = !DILocation(line: 2285, column: 54, scope: !7274)
!7277 = !DILocation(line: 2285, column: 6, scope: !7274)
!7278 = !DILocation(line: 2286, column: 6, scope: !7274)
!7279 = !DILocation(line: 2295, column: 7, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7265, file: !497, line: 2295, column: 7)
!7281 = !DILocation(line: 2295, column: 11, scope: !7280)
!7282 = !DILocation(line: 2295, column: 7, scope: !7265)
!7283 = !DILocation(line: 2296, column: 6, scope: !7280)
!7284 = !DILocation(line: 2296, column: 10, scope: !7280)
!7285 = !DILocation(line: 2296, column: 24, scope: !7280)
!7286 = !DILocation(line: 2297, column: 2, scope: !7265)
!7287 = !DILocation(line: 2305, column: 3, scope: !6506)
!7288 = !DILocation(line: 2305, column: 7, scope: !6506)
!7289 = !DILocation(line: 2305, column: 22, scope: !6506)
!7290 = !DILocation(line: 2305, column: 26, scope: !6506)
!7291 = !DILocation(line: 2305, column: 51, scope: !6506)
!7292 = !DILocation(line: 2305, column: 55, scope: !6506)
!7293 = !DILocation(line: 2305, column: 43, scope: !6506)
!7294 = !DILocation(line: 2304, column: 5, scope: !6506)
!7295 = !DILocation(line: 2306, column: 12, scope: !6506)
!7296 = !DILocation(line: 2309, column: 10, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 2309, column: 10)
!7298 = !DILocation(line: 2309, column: 14, scope: !7297)
!7299 = !DILocation(line: 2309, column: 30, scope: !7297)
!7300 = !DILocation(line: 2309, column: 10, scope: !6506)
!7301 = !DILocation(line: 2325, column: 2, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7297, file: !497, line: 2310, column: 2)
!7303 = !DILocation(line: 2328, column: 10, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 2328, column: 10)
!7305 = !DILocation(line: 2328, column: 14, scope: !7304)
!7306 = !DILocation(line: 2328, column: 18, scope: !7304)
!7307 = !DILocation(line: 2328, column: 10, scope: !6506)
!7308 = !DILocation(line: 2329, column: 20, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7304, file: !497, line: 2329, column: 7)
!7310 = !DILocation(line: 2329, column: 9, scope: !7309)
!7311 = !DILocation(line: 2329, column: 7, scope: !7304)
!7312 = !DILocation(line: 2331, column: 22, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7309, file: !497, line: 2330, column: 6)
!7314 = !DILocation(line: 2331, column: 31, scope: !7313)
!7315 = !DILocation(line: 2331, column: 48, scope: !7313)
!7316 = !DILocation(line: 2331, column: 60, scope: !7313)
!7317 = !DILocation(line: 2331, column: 64, scope: !7313)
!7318 = !DILocation(line: 2331, column: 6, scope: !7313)
!7319 = !DILocation(line: 2332, column: 6, scope: !7313)
!7320 = !DILocation(line: 2329, column: 23, scope: !7309)
!7321 = !DILocation(line: 2338, column: 27, scope: !6506)
!7322 = !DILocation(line: 2338, column: 31, scope: !6506)
!7323 = !DILocation(line: 2338, column: 50, scope: !6506)
!7324 = !DILocation(line: 2338, column: 54, scope: !6506)
!7325 = !DILocation(line: 2338, column: 58, scope: !6506)
!7326 = !DILocation(line: 2338, column: 76, scope: !6506)
!7327 = !DILocation(line: 2338, column: 80, scope: !6506)
!7328 = !DILocation(line: 2338, column: 10, scope: !6506)
!7329 = !DILocation(line: 2338, column: 8, scope: !6506)
!7330 = !DILocation(line: 2339, column: 10, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 2339, column: 10)
!7332 = !DILocation(line: 2339, column: 13, scope: !7331)
!7333 = !DILocation(line: 2339, column: 10, scope: !6506)
!7334 = !DILocation(line: 2341, column: 18, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7331, file: !497, line: 2340, column: 2)
!7336 = !DILocation(line: 2341, column: 27, scope: !7335)
!7337 = !DILocation(line: 2341, column: 44, scope: !7335)
!7338 = !DILocation(line: 2341, column: 56, scope: !7335)
!7339 = !DILocation(line: 2341, column: 60, scope: !7335)
!7340 = !DILocation(line: 2341, column: 2, scope: !7335)
!7341 = !DILocation(line: 2342, column: 2, scope: !7335)
!7342 = !DILocation(line: 2344, column: 25, scope: !6506)
!7343 = !DILocation(line: 2344, column: 29, scope: !6506)
!7344 = !DILocation(line: 2344, column: 44, scope: !6506)
!7345 = !DILocation(line: 2344, column: 48, scope: !6506)
!7346 = !DILocation(line: 2344, column: 73, scope: !6506)
!7347 = !DILocation(line: 2344, column: 65, scope: !6506)
!7348 = !DILocation(line: 2344, column: 5, scope: !6506)
!7349 = !DILocation(line: 2345, column: 12, scope: !6506)
!7350 = !DILocation(line: 2346, column: 25, scope: !6506)
!7351 = !DILocation(line: 2346, column: 29, scope: !6506)
!7352 = !DILocation(line: 2346, column: 40, scope: !6506)
!7353 = !DILocation(line: 2346, column: 44, scope: !6506)
!7354 = !DILocation(line: 2346, column: 65, scope: !6506)
!7355 = !DILocation(line: 2346, column: 57, scope: !6506)
!7356 = !DILocation(line: 2346, column: 5, scope: !6506)
!7357 = !DILocation(line: 2347, column: 12, scope: !6506)
!7358 = !DILocation(line: 2350, column: 10, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 2350, column: 10)
!7360 = !DILocation(line: 2350, column: 14, scope: !7359)
!7361 = !DILocation(line: 2350, column: 26, scope: !7359)
!7362 = !DILocation(line: 2350, column: 10, scope: !6506)
!7363 = !DILocalVariable(name: "i", scope: !7364, file: !497, line: 2352, type: !26)
!7364 = distinct !DILexicalBlock(scope: !7359, file: !497, line: 2351, column: 2)
!7365 = !DILocation(line: 2352, column: 6, scope: !7364)
!7366 = !DILocation(line: 2353, column: 14, scope: !7364)
!7367 = !DILocation(line: 2353, column: 18, scope: !7364)
!7368 = !DILocation(line: 2353, column: 6, scope: !7364)
!7369 = !DILocation(line: 2353, column: 43, scope: !7364)
!7370 = !DILocation(line: 2353, column: 47, scope: !7364)
!7371 = !DILocation(line: 2353, column: 35, scope: !7364)
!7372 = !DILocation(line: 2353, column: 33, scope: !7364)
!7373 = !DILocation(line: 2353, column: 4, scope: !7364)
!7374 = !DILocation(line: 2354, column: 7, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7364, file: !497, line: 2354, column: 7)
!7376 = !DILocation(line: 2354, column: 9, scope: !7375)
!7377 = !DILocation(line: 2354, column: 13, scope: !7375)
!7378 = !DILocation(line: 2354, column: 25, scope: !7375)
!7379 = !DILocation(line: 2354, column: 29, scope: !7375)
!7380 = !DILocation(line: 2354, column: 42, scope: !7375)
!7381 = !DILocation(line: 2354, column: 46, scope: !7375)
!7382 = !DILocation(line: 2354, column: 50, scope: !7375)
!7383 = !DILocation(line: 2354, column: 16, scope: !7375)
!7384 = !DILocation(line: 2354, column: 61, scope: !7375)
!7385 = !DILocation(line: 2354, column: 7, scope: !7364)
!7386 = !DILocation(line: 2355, column: 6, scope: !7375)
!7387 = !DILocation(line: 2355, column: 10, scope: !7375)
!7388 = !DILocation(line: 2355, column: 23, scope: !7375)
!7389 = !DILocation(line: 2355, column: 25, scope: !7375)
!7390 = !DILocation(line: 2355, column: 30, scope: !7375)
!7391 = !DILocation(line: 2356, column: 2, scope: !7364)
!7392 = !DILocation(line: 2361, column: 10, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !6506, file: !497, line: 2361, column: 10)
!7394 = !DILocation(line: 2361, column: 14, scope: !7393)
!7395 = !DILocation(line: 2361, column: 30, scope: !7393)
!7396 = !DILocation(line: 2361, column: 10, scope: !6506)
!7397 = !DILocation(line: 2364, column: 4, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !497, line: 2363, column: 7)
!7399 = distinct !DILexicalBlock(scope: !7393, file: !497, line: 2362, column: 2)
!7400 = !DILocation(line: 2364, column: 8, scope: !7398)
!7401 = !DILocation(line: 2364, column: 22, scope: !7398)
!7402 = !DILocation(line: 2364, column: 26, scope: !7398)
!7403 = !DILocation(line: 2364, column: 30, scope: !7398)
!7404 = !DILocation(line: 2364, column: 43, scope: !7398)
!7405 = !DILocation(line: 2364, column: 47, scope: !7398)
!7406 = !DILocation(line: 2364, column: 51, scope: !7398)
!7407 = !DILocation(line: 2364, column: 35, scope: !7398)
!7408 = !DILocation(line: 2363, column: 7, scope: !7398)
!7409 = !DILocation(line: 2364, column: 59, scope: !7398)
!7410 = !DILocation(line: 2363, column: 7, scope: !7399)
!7411 = !DILocation(line: 2367, column: 13, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7398, file: !497, line: 2365, column: 6)
!7413 = !DILocation(line: 2369, column: 6, scope: !7412)
!7414 = !DILocation(line: 2383, column: 16, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7398, file: !497, line: 2380, column: 6)
!7416 = !DILocation(line: 2383, column: 20, scope: !7415)
!7417 = !DILocation(line: 2383, column: 3, scope: !7415)
!7418 = !DILocation(line: 2383, column: 35, scope: !7415)
!7419 = !DILocation(line: 2383, column: 39, scope: !7415)
!7420 = !DILocation(line: 2381, column: 6, scope: !7415)
!7421 = !DILocation(line: 2385, column: 3, scope: !7415)
!7422 = !DILocation(line: 2385, column: 12, scope: !7415)
!7423 = !DILocation(line: 2387, column: 3, scope: !7415)
!7424 = !DILocation(line: 2387, column: 7, scope: !7415)
!7425 = !DILocation(line: 2384, column: 6, scope: !7415)
!7426 = !DILocation(line: 2388, column: 6, scope: !7415)
!7427 = !DILocation(line: 2390, column: 2, scope: !7399)
!7428 = !DILocation(line: 2392, column: 5, scope: !6506)
!7429 = !DILocation(line: 2393, column: 5, scope: !6506)
!7430 = distinct !DISubprogram(name: "bufgets", scope: !497, file: !497, line: 2397, type: !7431, scopeLine: 2398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!7431 = !DISubroutineType(types: !7432)
!7432 = !{!6, !709}
!7433 = !DILocalVariable(name: "hc", arg: 1, scope: !7430, file: !497, line: 2397, type: !709)
!7434 = !DILocation(line: 2397, column: 22, scope: !7430)
!7435 = !DILocalVariable(name: "i", scope: !7430, file: !497, line: 2399, type: !26)
!7436 = !DILocation(line: 2399, column: 9, scope: !7430)
!7437 = !DILocalVariable(name: "c", scope: !7430, file: !497, line: 2400, type: !7)
!7438 = !DILocation(line: 2400, column: 10, scope: !7430)
!7439 = !DILocation(line: 2402, column: 15, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7430, file: !497, line: 2402, column: 5)
!7441 = !DILocation(line: 2402, column: 19, scope: !7440)
!7442 = !DILocation(line: 2402, column: 13, scope: !7440)
!7443 = !DILocation(line: 2402, column: 11, scope: !7440)
!7444 = !DILocation(line: 2402, column: 32, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7440, file: !497, line: 2402, column: 5)
!7446 = !DILocation(line: 2402, column: 36, scope: !7445)
!7447 = !DILocation(line: 2402, column: 50, scope: !7445)
!7448 = !DILocation(line: 2402, column: 54, scope: !7445)
!7449 = !DILocation(line: 2402, column: 48, scope: !7445)
!7450 = !DILocation(line: 2402, column: 5, scope: !7440)
!7451 = !DILocation(line: 2404, column: 6, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7445, file: !497, line: 2403, column: 2)
!7453 = !DILocation(line: 2404, column: 10, scope: !7452)
!7454 = !DILocation(line: 2404, column: 19, scope: !7452)
!7455 = !DILocation(line: 2404, column: 23, scope: !7452)
!7456 = !DILocation(line: 2404, column: 4, scope: !7452)
!7457 = !DILocation(line: 2405, column: 7, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7452, file: !497, line: 2405, column: 7)
!7459 = !DILocation(line: 2405, column: 9, scope: !7458)
!7460 = !DILocation(line: 2405, column: 19, scope: !7458)
!7461 = !DILocation(line: 2405, column: 22, scope: !7458)
!7462 = !DILocation(line: 2405, column: 24, scope: !7458)
!7463 = !DILocation(line: 2405, column: 7, scope: !7452)
!7464 = !DILocation(line: 2407, column: 6, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7458, file: !497, line: 2406, column: 6)
!7466 = !DILocation(line: 2407, column: 10, scope: !7465)
!7467 = !DILocation(line: 2407, column: 19, scope: !7465)
!7468 = !DILocation(line: 2407, column: 23, scope: !7465)
!7469 = !DILocation(line: 2407, column: 36, scope: !7465)
!7470 = !DILocation(line: 2408, column: 8, scope: !7465)
!7471 = !DILocation(line: 2408, column: 12, scope: !7465)
!7472 = !DILocation(line: 2408, column: 6, scope: !7465)
!7473 = !DILocation(line: 2409, column: 11, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7465, file: !497, line: 2409, column: 11)
!7475 = !DILocation(line: 2409, column: 13, scope: !7474)
!7476 = !DILocation(line: 2409, column: 23, scope: !7474)
!7477 = !DILocation(line: 2409, column: 26, scope: !7474)
!7478 = !DILocation(line: 2409, column: 30, scope: !7474)
!7479 = !DILocation(line: 2409, column: 44, scope: !7474)
!7480 = !DILocation(line: 2409, column: 48, scope: !7474)
!7481 = !DILocation(line: 2409, column: 42, scope: !7474)
!7482 = !DILocation(line: 2409, column: 57, scope: !7474)
!7483 = !DILocation(line: 2410, column: 4, scope: !7474)
!7484 = !DILocation(line: 2410, column: 8, scope: !7474)
!7485 = !DILocation(line: 2410, column: 17, scope: !7474)
!7486 = !DILocation(line: 2410, column: 21, scope: !7474)
!7487 = !DILocation(line: 2410, column: 34, scope: !7474)
!7488 = !DILocation(line: 2409, column: 11, scope: !7465)
!7489 = !DILocation(line: 2412, column: 3, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7474, file: !497, line: 2411, column: 3)
!7491 = !DILocation(line: 2412, column: 7, scope: !7490)
!7492 = !DILocation(line: 2412, column: 16, scope: !7490)
!7493 = !DILocation(line: 2412, column: 20, scope: !7490)
!7494 = !DILocation(line: 2412, column: 33, scope: !7490)
!7495 = !DILocation(line: 2413, column: 5, scope: !7490)
!7496 = !DILocation(line: 2413, column: 9, scope: !7490)
!7497 = !DILocation(line: 2413, column: 3, scope: !7490)
!7498 = !DILocation(line: 2414, column: 3, scope: !7490)
!7499 = !DILocation(line: 2415, column: 15, scope: !7465)
!7500 = !DILocation(line: 2415, column: 19, scope: !7465)
!7501 = !DILocation(line: 2415, column: 28, scope: !7465)
!7502 = !DILocation(line: 2415, column: 6, scope: !7465)
!7503 = !DILocation(line: 2417, column: 2, scope: !7452)
!7504 = !DILocation(line: 2402, column: 66, scope: !7445)
!7505 = !DILocation(line: 2402, column: 70, scope: !7445)
!7506 = !DILocation(line: 2402, column: 64, scope: !7445)
!7507 = !DILocation(line: 2402, column: 5, scope: !7445)
!7508 = distinct !{!7508, !7450, !7509}
!7509 = !DILocation(line: 2417, column: 2, scope: !7440)
!7510 = !DILocation(line: 2418, column: 5, scope: !7430)
!7511 = !DILocation(line: 2419, column: 5, scope: !7430)
!7512 = distinct !DISubprogram(name: "strdecode", scope: !497, file: !497, line: 1238, type: !4523, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!7513 = !DILocalVariable(name: "to", arg: 1, scope: !7512, file: !497, line: 1238, type: !6)
!7514 = !DILocation(line: 1238, column: 18, scope: !7512)
!7515 = !DILocalVariable(name: "from", arg: 2, scope: !7512, file: !497, line: 1238, type: !6)
!7516 = !DILocation(line: 1238, column: 28, scope: !7512)
!7517 = !DILocation(line: 1240, column: 5, scope: !7512)
!7518 = !DILocation(line: 1240, column: 14, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7520, file: !497, line: 1240, column: 5)
!7520 = distinct !DILexicalBlock(scope: !7512, file: !497, line: 1240, column: 5)
!7521 = !DILocation(line: 1240, column: 13, scope: !7519)
!7522 = !DILocation(line: 1240, column: 19, scope: !7519)
!7523 = !DILocation(line: 1240, column: 5, scope: !7520)
!7524 = !DILocation(line: 1242, column: 7, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7526, file: !497, line: 1242, column: 7)
!7526 = distinct !DILexicalBlock(scope: !7519, file: !497, line: 1241, column: 2)
!7527 = !DILocation(line: 1242, column: 15, scope: !7525)
!7528 = !DILocation(line: 1242, column: 22, scope: !7525)
!7529 = !DILocation(line: 1242, column: 35, scope: !7525)
!7530 = !DILocation(line: 1242, column: 25, scope: !7525)
!7531 = !DILocation(line: 1242, column: 45, scope: !7525)
!7532 = !DILocation(line: 1242, column: 58, scope: !7525)
!7533 = !DILocation(line: 1242, column: 48, scope: !7525)
!7534 = !DILocation(line: 1242, column: 7, scope: !7526)
!7535 = !DILocation(line: 1244, column: 19, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7525, file: !497, line: 1243, column: 6)
!7537 = !DILocation(line: 1244, column: 12, scope: !7536)
!7538 = !DILocation(line: 1244, column: 29, scope: !7536)
!7539 = !DILocation(line: 1244, column: 43, scope: !7536)
!7540 = !DILocation(line: 1244, column: 36, scope: !7536)
!7541 = !DILocation(line: 1244, column: 34, scope: !7536)
!7542 = !DILocation(line: 1244, column: 7, scope: !7536)
!7543 = !DILocation(line: 1244, column: 10, scope: !7536)
!7544 = !DILocation(line: 1245, column: 11, scope: !7536)
!7545 = !DILocation(line: 1246, column: 6, scope: !7536)
!7546 = !DILocation(line: 1248, column: 13, scope: !7525)
!7547 = !DILocation(line: 1248, column: 12, scope: !7525)
!7548 = !DILocation(line: 1248, column: 7, scope: !7525)
!7549 = !DILocation(line: 1248, column: 10, scope: !7525)
!7550 = !DILocation(line: 1249, column: 2, scope: !7526)
!7551 = !DILocation(line: 1240, column: 28, scope: !7519)
!7552 = !DILocation(line: 1240, column: 34, scope: !7519)
!7553 = !DILocation(line: 1240, column: 5, scope: !7519)
!7554 = distinct !{!7554, !7523, !7555}
!7555 = !DILocation(line: 1249, column: 2, scope: !7520)
!7556 = !DILocation(line: 1250, column: 6, scope: !7512)
!7557 = !DILocation(line: 1250, column: 9, scope: !7512)
!7558 = !DILocation(line: 1251, column: 5, scope: !7512)
!7559 = distinct !DISubprogram(name: "de_dotdot", scope: !497, file: !497, line: 2423, type: !2142, scopeLine: 2424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!7560 = !DILocalVariable(name: "file", arg: 1, scope: !7559, file: !497, line: 2423, type: !6)
!7561 = !DILocation(line: 2423, column: 18, scope: !7559)
!7562 = !DILocalVariable(name: "cp", scope: !7559, file: !497, line: 2425, type: !6)
!7563 = !DILocation(line: 2425, column: 11, scope: !7559)
!7564 = !DILocalVariable(name: "cp2", scope: !7559, file: !497, line: 2426, type: !6)
!7565 = !DILocation(line: 2426, column: 11, scope: !7559)
!7566 = !DILocalVariable(name: "l", scope: !7559, file: !497, line: 2427, type: !26)
!7567 = !DILocation(line: 2427, column: 9, scope: !7559)
!7568 = !DILocation(line: 2430, column: 5, scope: !7559)
!7569 = !DILocation(line: 2430, column: 28, scope: !7559)
!7570 = !DILocation(line: 2430, column: 20, scope: !7559)
!7571 = !DILocation(line: 2430, column: 18, scope: !7559)
!7572 = !DILocation(line: 2430, column: 42, scope: !7559)
!7573 = !DILocation(line: 2432, column: 14, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !497, line: 2432, column: 2)
!7575 = distinct !DILexicalBlock(scope: !7559, file: !497, line: 2431, column: 2)
!7576 = !DILocation(line: 2432, column: 17, scope: !7574)
!7577 = !DILocation(line: 2432, column: 12, scope: !7574)
!7578 = !DILocation(line: 2432, column: 8, scope: !7574)
!7579 = !DILocation(line: 2432, column: 23, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7574, file: !497, line: 2432, column: 2)
!7581 = !DILocation(line: 2432, column: 22, scope: !7580)
!7582 = !DILocation(line: 2432, column: 27, scope: !7580)
!7583 = !DILocation(line: 2432, column: 2, scope: !7574)
!7584 = !DILocation(line: 2433, column: 6, scope: !7580)
!7585 = !DILocation(line: 2432, column: 35, scope: !7580)
!7586 = !DILocation(line: 2432, column: 2, scope: !7580)
!7587 = distinct !{!7587, !7583, !7588}
!7588 = !DILocation(line: 2433, column: 6, scope: !7574)
!7589 = !DILocation(line: 2434, column: 9, scope: !7575)
!7590 = distinct !{!7590, !7568, !7591}
!7591 = !DILocation(line: 2435, column: 2, scope: !7559)
!7592 = !DILocation(line: 2438, column: 5, scope: !7559)
!7593 = !DILocation(line: 2438, column: 22, scope: !7559)
!7594 = !DILocation(line: 2438, column: 13, scope: !7559)
!7595 = !DILocation(line: 2438, column: 38, scope: !7559)
!7596 = !DILocation(line: 2439, column: 9, scope: !7559)
!7597 = distinct !{!7597, !7592, !7596}
!7598 = !DILocation(line: 2440, column: 5, scope: !7559)
!7599 = !DILocation(line: 2440, column: 28, scope: !7559)
!7600 = !DILocation(line: 2440, column: 20, scope: !7559)
!7601 = !DILocation(line: 2440, column: 18, scope: !7559)
!7602 = !DILocation(line: 2440, column: 43, scope: !7559)
!7603 = !DILocation(line: 2441, column: 9, scope: !7559)
!7604 = distinct !{!7604, !7598, !7603}
!7605 = !DILocation(line: 2444, column: 5, scope: !7559)
!7606 = !DILocation(line: 2446, column: 2, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !497, line: 2445, column: 2)
!7608 = distinct !DILexicalBlock(scope: !7609, file: !497, line: 2444, column: 5)
!7609 = distinct !DILexicalBlock(scope: !7559, file: !497, line: 2444, column: 5)
!7610 = !DILocation(line: 2446, column: 19, scope: !7607)
!7611 = !DILocation(line: 2446, column: 10, scope: !7607)
!7612 = !DILocation(line: 2446, column: 36, scope: !7607)
!7613 = !DILocation(line: 2447, column: 13, scope: !7607)
!7614 = distinct !{!7614, !7606, !7613}
!7615 = !DILocation(line: 2448, column: 15, scope: !7607)
!7616 = !DILocation(line: 2448, column: 7, scope: !7607)
!7617 = !DILocation(line: 2448, column: 5, scope: !7607)
!7618 = !DILocation(line: 2449, column: 7, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7607, file: !497, line: 2449, column: 7)
!7620 = !DILocation(line: 2449, column: 10, scope: !7619)
!7621 = !DILocation(line: 2449, column: 7, scope: !7607)
!7622 = !DILocation(line: 2450, column: 6, scope: !7619)
!7623 = !DILocation(line: 2451, column: 14, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7607, file: !497, line: 2451, column: 2)
!7625 = !DILocation(line: 2451, column: 17, scope: !7624)
!7626 = !DILocation(line: 2451, column: 12, scope: !7624)
!7627 = !DILocation(line: 2451, column: 8, scope: !7624)
!7628 = !DILocation(line: 2451, column: 22, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7624, file: !497, line: 2451, column: 2)
!7630 = !DILocation(line: 2451, column: 29, scope: !7629)
!7631 = !DILocation(line: 2451, column: 26, scope: !7629)
!7632 = !DILocation(line: 2451, column: 34, scope: !7629)
!7633 = !DILocation(line: 2451, column: 38, scope: !7629)
!7634 = !DILocation(line: 2451, column: 37, scope: !7629)
!7635 = !DILocation(line: 2451, column: 42, scope: !7629)
!7636 = !DILocation(line: 0, scope: !7629)
!7637 = !DILocation(line: 2451, column: 2, scope: !7624)
!7638 = !DILocation(line: 2452, column: 6, scope: !7629)
!7639 = !DILocation(line: 2451, column: 50, scope: !7629)
!7640 = !DILocation(line: 2451, column: 2, scope: !7629)
!7641 = distinct !{!7641, !7637, !7642}
!7642 = !DILocation(line: 2452, column: 6, scope: !7624)
!7643 = !DILocation(line: 2453, column: 9, scope: !7607)
!7644 = !DILocation(line: 2444, column: 5, scope: !7608)
!7645 = distinct !{!7645, !7646, !7647}
!7646 = !DILocation(line: 2444, column: 5, scope: !7609)
!7647 = !DILocation(line: 2454, column: 2, scope: !7609)
!7648 = !DILocation(line: 2457, column: 5, scope: !7559)
!7649 = !DILocation(line: 2457, column: 27, scope: !7559)
!7650 = !DILocation(line: 2457, column: 19, scope: !7559)
!7651 = !DILocation(line: 2457, column: 17, scope: !7559)
!7652 = !DILocation(line: 2457, column: 36, scope: !7559)
!7653 = !DILocation(line: 2457, column: 40, scope: !7559)
!7654 = !DILocation(line: 2458, column: 21, scope: !7559)
!7655 = !DILocation(line: 2458, column: 28, scope: !7559)
!7656 = !DILocation(line: 2458, column: 26, scope: !7559)
!7657 = !DILocation(line: 2458, column: 30, scope: !7559)
!7658 = !DILocation(line: 2458, column: 19, scope: !7559)
!7659 = !DILocation(line: 2458, column: 6, scope: !7559)
!7660 = !DILocation(line: 2458, column: 45, scope: !7559)
!7661 = !DILocation(line: 0, scope: !7559)
!7662 = !DILocation(line: 2460, column: 14, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !497, line: 2460, column: 2)
!7664 = distinct !DILexicalBlock(scope: !7559, file: !497, line: 2459, column: 2)
!7665 = !DILocation(line: 2460, column: 17, scope: !7663)
!7666 = !DILocation(line: 2460, column: 12, scope: !7663)
!7667 = !DILocation(line: 2460, column: 8, scope: !7663)
!7668 = !DILocation(line: 2460, column: 22, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7663, file: !497, line: 2460, column: 2)
!7670 = !DILocation(line: 2460, column: 29, scope: !7669)
!7671 = !DILocation(line: 2460, column: 26, scope: !7669)
!7672 = !DILocation(line: 2460, column: 34, scope: !7669)
!7673 = !DILocation(line: 2460, column: 38, scope: !7669)
!7674 = !DILocation(line: 2460, column: 37, scope: !7669)
!7675 = !DILocation(line: 2460, column: 42, scope: !7669)
!7676 = !DILocation(line: 0, scope: !7669)
!7677 = !DILocation(line: 2460, column: 2, scope: !7663)
!7678 = !DILocation(line: 2461, column: 6, scope: !7669)
!7679 = !DILocation(line: 2460, column: 50, scope: !7669)
!7680 = !DILocation(line: 2460, column: 2, scope: !7669)
!7681 = distinct !{!7681, !7677, !7682}
!7682 = !DILocation(line: 2461, column: 6, scope: !7663)
!7683 = !DILocation(line: 2462, column: 7, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7664, file: !497, line: 2462, column: 7)
!7685 = !DILocation(line: 2462, column: 13, scope: !7684)
!7686 = !DILocation(line: 2462, column: 11, scope: !7684)
!7687 = !DILocation(line: 2462, column: 7, scope: !7664)
!7688 = !DILocation(line: 2463, column: 6, scope: !7684)
!7689 = !DILocation(line: 2464, column: 3, scope: !7664)
!7690 = !DILocation(line: 2464, column: 7, scope: !7664)
!7691 = distinct !{!7691, !7648, !7692}
!7692 = !DILocation(line: 2465, column: 2, scope: !7559)
!7693 = !DILocation(line: 2466, column: 5, scope: !7559)
!7694 = !DILocalVariable(name: "hc", arg: 1, scope: !706, file: !497, line: 1364, type: !709)
!7695 = !DILocation(line: 1364, column: 24, scope: !706)
!7696 = !DILocalVariable(name: "sa", scope: !706, file: !497, line: 1366, type: !552)
!7697 = !DILocation(line: 1366, column: 20, scope: !706)
!7698 = !DILocalVariable(name: "sz", scope: !706, file: !497, line: 1367, type: !405)
!7699 = !DILocation(line: 1367, column: 15, scope: !706)
!7700 = !DILocalVariable(name: "cp1", scope: !706, file: !497, line: 1370, type: !6)
!7701 = !DILocation(line: 1370, column: 11, scope: !706)
!7702 = !DILocalVariable(name: "len", scope: !706, file: !497, line: 1371, type: !26)
!7703 = !DILocation(line: 1371, column: 9, scope: !706)
!7704 = !DILocation(line: 1378, column: 10, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !706, file: !497, line: 1378, column: 10)
!7706 = !DILocation(line: 1378, column: 14, scope: !7705)
!7707 = !DILocation(line: 1378, column: 25, scope: !7705)
!7708 = !DILocation(line: 1378, column: 10, scope: !706)
!7709 = !DILocation(line: 1379, column: 17, scope: !7705)
!7710 = !DILocation(line: 1379, column: 21, scope: !7705)
!7711 = !DILocation(line: 1379, column: 2, scope: !7705)
!7712 = !DILocation(line: 1379, column: 6, scope: !7705)
!7713 = !DILocation(line: 1379, column: 15, scope: !7705)
!7714 = !DILocation(line: 1380, column: 15, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7705, file: !497, line: 1380, column: 15)
!7716 = !DILocation(line: 1380, column: 19, scope: !7715)
!7717 = !DILocation(line: 1380, column: 30, scope: !7715)
!7718 = !DILocation(line: 1380, column: 15, scope: !7705)
!7719 = !DILocation(line: 1381, column: 17, scope: !7715)
!7720 = !DILocation(line: 1381, column: 21, scope: !7715)
!7721 = !DILocation(line: 1381, column: 2, scope: !7715)
!7722 = !DILocation(line: 1381, column: 6, scope: !7715)
!7723 = !DILocation(line: 1381, column: 15, scope: !7715)
!7724 = !DILocation(line: 1384, column: 5, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7715, file: !497, line: 1383, column: 2)
!7726 = !DILocation(line: 1385, column: 20, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7725, file: !497, line: 1385, column: 7)
!7728 = !DILocation(line: 1385, column: 24, scope: !7727)
!7729 = !DILocation(line: 1385, column: 37, scope: !7727)
!7730 = !DILocation(line: 1385, column: 7, scope: !7727)
!7731 = !DILocation(line: 1385, column: 47, scope: !7727)
!7732 = !DILocation(line: 1385, column: 7, scope: !7725)
!7733 = !DILocation(line: 1387, column: 6, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7727, file: !497, line: 1386, column: 6)
!7735 = !DILocation(line: 1388, column: 6, scope: !7734)
!7736 = !DILocation(line: 1390, column: 17, scope: !7725)
!7737 = !DILocation(line: 1390, column: 2, scope: !7725)
!7738 = !DILocation(line: 1390, column: 6, scope: !7725)
!7739 = !DILocation(line: 1390, column: 15, scope: !7725)
!7740 = !DILocation(line: 1393, column: 17, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !706, file: !497, line: 1393, column: 5)
!7742 = !DILocation(line: 1393, column: 21, scope: !7741)
!7743 = !DILocation(line: 1393, column: 15, scope: !7741)
!7744 = !DILocation(line: 1393, column: 11, scope: !7741)
!7745 = !DILocation(line: 1393, column: 32, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7741, file: !497, line: 1393, column: 5)
!7747 = !DILocation(line: 1393, column: 31, scope: !7746)
!7748 = !DILocation(line: 1393, column: 36, scope: !7746)
!7749 = !DILocation(line: 1393, column: 5, scope: !7741)
!7750 = !DILocation(line: 1394, column: 17, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7746, file: !497, line: 1394, column: 7)
!7752 = !DILocation(line: 1394, column: 16, scope: !7751)
!7753 = !DILocation(line: 1394, column: 7, scope: !7751)
!7754 = !DILocation(line: 1394, column: 7, scope: !7746)
!7755 = !DILocation(line: 1395, column: 23, scope: !7751)
!7756 = !DILocation(line: 1395, column: 22, scope: !7751)
!7757 = !DILocation(line: 1395, column: 13, scope: !7751)
!7758 = !DILocation(line: 1395, column: 7, scope: !7751)
!7759 = !DILocation(line: 1395, column: 11, scope: !7751)
!7760 = !DILocation(line: 1395, column: 6, scope: !7751)
!7761 = !DILocation(line: 1394, column: 21, scope: !7751)
!7762 = !DILocation(line: 1393, column: 45, scope: !7746)
!7763 = !DILocation(line: 1393, column: 5, scope: !7746)
!7764 = distinct !{!7764, !7749, !7765}
!7765 = !DILocation(line: 1395, column: 27, scope: !7741)
!7766 = !DILocation(line: 1397, column: 10, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !706, file: !497, line: 1397, column: 10)
!7768 = !DILocation(line: 1397, column: 14, scope: !7767)
!7769 = !DILocation(line: 1397, column: 10, scope: !706)
!7770 = !DILocation(line: 1398, column: 2, scope: !7767)
!7771 = !DILocation(line: 1429, column: 25, scope: !706)
!7772 = !DILocation(line: 1429, column: 29, scope: !706)
!7773 = !DILocation(line: 1429, column: 39, scope: !706)
!7774 = !DILocation(line: 1429, column: 43, scope: !706)
!7775 = !DILocation(line: 1429, column: 63, scope: !706)
!7776 = !DILocation(line: 1429, column: 67, scope: !706)
!7777 = !DILocation(line: 1429, column: 55, scope: !706)
!7778 = !DILocation(line: 1429, column: 5, scope: !706)
!7779 = !DILocation(line: 1430, column: 12, scope: !706)
!7780 = !DILocation(line: 1434, column: 19, scope: !706)
!7781 = !DILocation(line: 1434, column: 23, scope: !706)
!7782 = !DILocation(line: 1434, column: 11, scope: !706)
!7783 = !DILocation(line: 1434, column: 9, scope: !706)
!7784 = !DILocation(line: 1435, column: 57, scope: !706)
!7785 = !DILocation(line: 1435, column: 5, scope: !706)
!7786 = !DILocation(line: 1436, column: 12, scope: !706)
!7787 = !DILocation(line: 1438, column: 3, scope: !706)
!7788 = !DILocation(line: 1438, column: 7, scope: !706)
!7789 = !DILocation(line: 1438, column: 22, scope: !706)
!7790 = !DILocation(line: 1438, column: 26, scope: !706)
!7791 = !DILocation(line: 1439, column: 10, scope: !706)
!7792 = !DILocation(line: 1439, column: 14, scope: !706)
!7793 = !DILocation(line: 1439, column: 2, scope: !706)
!7794 = !DILocation(line: 1439, column: 24, scope: !706)
!7795 = !DILocation(line: 1439, column: 30, scope: !706)
!7796 = !DILocation(line: 1439, column: 28, scope: !706)
!7797 = !DILocation(line: 1437, column: 5, scope: !706)
!7798 = !DILocation(line: 1440, column: 12, scope: !706)
!7799 = !DILocation(line: 1441, column: 12, scope: !706)
!7800 = !DILocation(line: 1442, column: 12, scope: !706)
!7801 = !DILocation(line: 1443, column: 5, scope: !706)
!7802 = !DILocation(line: 1444, column: 5, scope: !706)
!7803 = !DILocalVariable(name: "path", arg: 1, scope: !807, file: !497, line: 1456, type: !6)
!7804 = !DILocation(line: 1456, column: 24, scope: !807)
!7805 = !DILocalVariable(name: "restP", arg: 2, scope: !807, file: !497, line: 1456, type: !635)
!7806 = !DILocation(line: 1456, column: 37, scope: !807)
!7807 = !DILocalVariable(name: "no_symlink_check", arg: 3, scope: !807, file: !497, line: 1456, type: !26)
!7808 = !DILocation(line: 1456, column: 48, scope: !807)
!7809 = !DILocalVariable(name: "tildemapped", arg: 4, scope: !807, file: !497, line: 1456, type: !26)
!7810 = !DILocation(line: 1456, column: 70, scope: !807)
!7811 = !DILocalVariable(name: "lnk", scope: !807, file: !497, line: 1460, type: !2149)
!7812 = !DILocation(line: 1460, column: 10, scope: !807)
!7813 = !DILocalVariable(name: "checkedlen", scope: !807, file: !497, line: 1462, type: !264)
!7814 = !DILocation(line: 1462, column: 12, scope: !807)
!7815 = !DILocalVariable(name: "restlen", scope: !807, file: !497, line: 1462, type: !264)
!7816 = !DILocation(line: 1462, column: 24, scope: !807)
!7817 = !DILocalVariable(name: "linklen", scope: !807, file: !497, line: 1462, type: !264)
!7818 = !DILocation(line: 1462, column: 33, scope: !807)
!7819 = !DILocalVariable(name: "prevcheckedlen", scope: !807, file: !497, line: 1462, type: !264)
!7820 = !DILocation(line: 1462, column: 42, scope: !807)
!7821 = !DILocalVariable(name: "prevrestlen", scope: !807, file: !497, line: 1462, type: !264)
!7822 = !DILocation(line: 1462, column: 58, scope: !807)
!7823 = !DILocalVariable(name: "nlinks", scope: !807, file: !497, line: 1463, type: !26)
!7824 = !DILocation(line: 1463, column: 9, scope: !807)
!7825 = !DILocalVariable(name: "i", scope: !807, file: !497, line: 1463, type: !26)
!7826 = !DILocation(line: 1463, column: 17, scope: !807)
!7827 = !DILocalVariable(name: "r", scope: !807, file: !497, line: 1464, type: !6)
!7828 = !DILocation(line: 1464, column: 11, scope: !807)
!7829 = !DILocalVariable(name: "cp1", scope: !807, file: !497, line: 1465, type: !6)
!7830 = !DILocation(line: 1465, column: 11, scope: !807)
!7831 = !DILocalVariable(name: "cp2", scope: !807, file: !497, line: 1466, type: !6)
!7832 = !DILocation(line: 1466, column: 11, scope: !807)
!7833 = !DILocation(line: 1468, column: 10, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !807, file: !497, line: 1468, column: 10)
!7835 = !DILocation(line: 1468, column: 10, scope: !807)
!7836 = !DILocalVariable(name: "sb", scope: !7837, file: !497, line: 1482, type: !773)
!7837 = distinct !DILexicalBlock(scope: !7834, file: !497, line: 1469, column: 2)
!7838 = !DILocation(line: 1482, column: 14, scope: !7837)
!7839 = !DILocation(line: 1483, column: 13, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7837, file: !497, line: 1483, column: 7)
!7841 = !DILocation(line: 1483, column: 7, scope: !7840)
!7842 = !DILocation(line: 1483, column: 25, scope: !7840)
!7843 = !DILocation(line: 1483, column: 7, scope: !7837)
!7844 = !DILocation(line: 1485, column: 27, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7840, file: !497, line: 1484, column: 6)
!7846 = !DILocation(line: 1485, column: 19, scope: !7845)
!7847 = !DILocation(line: 1485, column: 17, scope: !7845)
!7848 = !DILocation(line: 1486, column: 48, scope: !7845)
!7849 = !DILocation(line: 1486, column: 6, scope: !7845)
!7850 = !DILocation(line: 1487, column: 13, scope: !7845)
!7851 = !DILocation(line: 1489, column: 6, scope: !7845)
!7852 = !DILocation(line: 1489, column: 14, scope: !7845)
!7853 = !DILocation(line: 1489, column: 22, scope: !7845)
!7854 = !DILocation(line: 1489, column: 33, scope: !7845)
!7855 = !DILocation(line: 1489, column: 38, scope: !7845)
!7856 = !DILocation(line: 1491, column: 3, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7845, file: !497, line: 1490, column: 3)
!7858 = !DILocation(line: 1491, column: 11, scope: !7857)
!7859 = !DILocation(line: 1491, column: 22, scope: !7857)
!7860 = !DILocation(line: 1491, column: 27, scope: !7857)
!7861 = !DILocation(line: 1492, column: 3, scope: !7857)
!7862 = distinct !{!7862, !7851, !7863}
!7863 = !DILocation(line: 1493, column: 3, scope: !7845)
!7864 = !DILocation(line: 1494, column: 6, scope: !7845)
!7865 = !DILocation(line: 1495, column: 6, scope: !7845)
!7866 = !DILocation(line: 1495, column: 14, scope: !7845)
!7867 = !DILocation(line: 1496, column: 15, scope: !7845)
!7868 = !DILocation(line: 1496, column: 7, scope: !7845)
!7869 = !DILocation(line: 1496, column: 13, scope: !7845)
!7870 = !DILocation(line: 1497, column: 13, scope: !7845)
!7871 = !DILocation(line: 1497, column: 6, scope: !7845)
!7872 = !DILocation(line: 1499, column: 2, scope: !7837)
!7873 = !DILocation(line: 1502, column: 5, scope: !807)
!7874 = !DILocation(line: 1503, column: 5, scope: !807)
!7875 = !DILocation(line: 1503, column: 16, scope: !807)
!7876 = !DILocation(line: 1504, column: 16, scope: !807)
!7877 = !DILocation(line: 1505, column: 23, scope: !807)
!7878 = !DILocation(line: 1505, column: 15, scope: !807)
!7879 = !DILocation(line: 1505, column: 13, scope: !807)
!7880 = !DILocation(line: 1506, column: 41, scope: !807)
!7881 = !DILocation(line: 1506, column: 5, scope: !807)
!7882 = !DILocation(line: 1507, column: 12, scope: !807)
!7883 = !DILocation(line: 1508, column: 10, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !807, file: !497, line: 1508, column: 10)
!7885 = !DILocation(line: 1508, column: 15, scope: !7884)
!7886 = !DILocation(line: 1508, column: 23, scope: !7884)
!7887 = !DILocation(line: 1508, column: 28, scope: !7884)
!7888 = !DILocation(line: 1508, column: 10, scope: !807)
!7889 = !DILocation(line: 1509, column: 2, scope: !7884)
!7890 = !DILocation(line: 1509, column: 7, scope: !7884)
!7891 = !DILocation(line: 1509, column: 18, scope: !7884)
!7892 = !DILocation(line: 1510, column: 12, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !807, file: !497, line: 1510, column: 10)
!7894 = !DILocation(line: 1510, column: 10, scope: !807)
!7895 = !DILocation(line: 1512, column: 2, scope: !7893)
!7896 = !DILocation(line: 1512, column: 10, scope: !7893)
!7897 = !DILocation(line: 1512, column: 18, scope: !7893)
!7898 = !DILocation(line: 1514, column: 13, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7893, file: !497, line: 1513, column: 6)
!7900 = !DILocation(line: 1515, column: 6, scope: !7899)
!7901 = distinct !{!7901, !7895, !7902}
!7902 = !DILocation(line: 1516, column: 6, scope: !7893)
!7903 = !DILocation(line: 1517, column: 9, scope: !807)
!7904 = !DILocation(line: 1517, column: 7, scope: !807)
!7905 = !DILocation(line: 1518, column: 12, scope: !807)
!7906 = !DILocation(line: 1521, column: 5, scope: !807)
!7907 = !DILocation(line: 1521, column: 13, scope: !807)
!7908 = !DILocation(line: 1521, column: 21, scope: !807)
!7909 = !DILocation(line: 1526, column: 19, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !807, file: !497, line: 1522, column: 2)
!7911 = !DILocation(line: 1526, column: 17, scope: !7910)
!7912 = !DILocation(line: 1527, column: 16, scope: !7910)
!7913 = !DILocation(line: 1527, column: 14, scope: !7910)
!7914 = !DILocation(line: 1530, column: 16, scope: !7910)
!7915 = !DILocation(line: 1530, column: 8, scope: !7910)
!7916 = !DILocation(line: 1530, column: 6, scope: !7910)
!7917 = !DILocation(line: 1531, column: 7, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7910, file: !497, line: 1531, column: 7)
!7919 = !DILocation(line: 1531, column: 11, scope: !7918)
!7920 = !DILocation(line: 1531, column: 7, scope: !7910)
!7921 = !DILocation(line: 1533, column: 10, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7918, file: !497, line: 1532, column: 6)
!7923 = !DILocation(line: 1533, column: 16, scope: !7922)
!7924 = !DILocation(line: 1533, column: 14, scope: !7922)
!7925 = !DILocation(line: 1533, column: 8, scope: !7922)
!7926 = !DILocation(line: 1534, column: 11, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7922, file: !497, line: 1534, column: 11)
!7928 = !DILocation(line: 1534, column: 13, scope: !7927)
!7929 = !DILocation(line: 1534, column: 11, scope: !7922)
!7930 = !DILocation(line: 1537, column: 45, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7927, file: !497, line: 1535, column: 3)
!7932 = !DILocation(line: 1537, column: 56, scope: !7931)
!7933 = !DILocation(line: 1537, column: 3, scope: !7931)
!7934 = !DILocation(line: 1538, column: 10, scope: !7931)
!7935 = !DILocation(line: 1539, column: 14, scope: !7931)
!7936 = !DILocation(line: 1540, column: 3, scope: !7931)
!7937 = !DILocation(line: 1541, column: 25, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7927, file: !497, line: 1541, column: 16)
!7939 = !DILocation(line: 1541, column: 34, scope: !7938)
!7940 = !DILocation(line: 1541, column: 16, scope: !7938)
!7941 = !DILocation(line: 1541, column: 48, scope: !7938)
!7942 = !DILocation(line: 1541, column: 16, scope: !7927)
!7943 = !DILocation(line: 1544, column: 8, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !497, line: 1544, column: 8)
!7945 = distinct !DILexicalBlock(scope: !7938, file: !497, line: 1542, column: 3)
!7946 = !DILocation(line: 1544, column: 19, scope: !7944)
!7947 = !DILocation(line: 1544, column: 8, scope: !7945)
!7948 = !DILocation(line: 1546, column: 22, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7944, file: !497, line: 1545, column: 7)
!7950 = !DILocation(line: 1546, column: 13, scope: !7949)
!7951 = !DILocation(line: 1546, column: 11, scope: !7949)
!7952 = !DILocation(line: 1547, column: 12, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7949, file: !497, line: 1547, column: 12)
!7954 = !DILocation(line: 1547, column: 16, scope: !7953)
!7955 = !DILocation(line: 1547, column: 12, scope: !7949)
!7956 = !DILocation(line: 1548, column: 15, scope: !7953)
!7957 = !DILocation(line: 1548, column: 4, scope: !7953)
!7958 = !DILocation(line: 1549, column: 17, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7953, file: !497, line: 1549, column: 17)
!7960 = !DILocation(line: 1549, column: 24, scope: !7959)
!7961 = !DILocation(line: 1549, column: 21, scope: !7959)
!7962 = !DILocation(line: 1549, column: 17, scope: !7953)
!7963 = !DILocation(line: 1550, column: 15, scope: !7959)
!7964 = !DILocation(line: 1550, column: 4, scope: !7959)
!7965 = !DILocation(line: 1552, column: 17, scope: !7959)
!7966 = !DILocation(line: 1552, column: 23, scope: !7959)
!7967 = !DILocation(line: 1552, column: 21, scope: !7959)
!7968 = !DILocation(line: 1552, column: 15, scope: !7959)
!7969 = !DILocation(line: 1553, column: 7, scope: !7949)
!7970 = !DILocation(line: 1554, column: 3, scope: !7945)
!7971 = !DILocation(line: 1557, column: 45, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7938, file: !497, line: 1556, column: 3)
!7973 = !DILocation(line: 1557, column: 56, scope: !7972)
!7974 = !DILocation(line: 1557, column: 62, scope: !7972)
!7975 = !DILocation(line: 1557, column: 60, scope: !7972)
!7976 = !DILocation(line: 1557, column: 3, scope: !7972)
!7977 = !DILocation(line: 1558, column: 8, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7972, file: !497, line: 1558, column: 8)
!7979 = !DILocation(line: 1558, column: 19, scope: !7978)
!7980 = !DILocation(line: 1558, column: 23, scope: !7978)
!7981 = !DILocation(line: 1558, column: 26, scope: !7978)
!7982 = !DILocation(line: 1558, column: 34, scope: !7978)
!7983 = !DILocation(line: 1558, column: 44, scope: !7978)
!7984 = !DILocation(line: 1558, column: 48, scope: !7978)
!7985 = !DILocation(line: 1558, column: 8, scope: !7972)
!7986 = !DILocation(line: 1559, column: 7, scope: !7978)
!7987 = !DILocation(line: 1559, column: 25, scope: !7978)
!7988 = !DILocation(line: 1559, column: 29, scope: !7978)
!7989 = !DILocation(line: 1560, column: 10, scope: !7972)
!7990 = !DILocation(line: 1561, column: 17, scope: !7972)
!7991 = !DILocation(line: 1561, column: 14, scope: !7972)
!7992 = !DILocation(line: 1563, column: 6, scope: !7922)
!7993 = !DILocation(line: 1563, column: 14, scope: !7922)
!7994 = !DILocation(line: 1563, column: 26, scope: !7922)
!7995 = !DILocation(line: 1564, column: 11, scope: !7922)
!7996 = !DILocation(line: 1564, column: 13, scope: !7922)
!7997 = !DILocation(line: 1564, column: 8, scope: !7922)
!7998 = !DILocation(line: 1565, column: 17, scope: !7922)
!7999 = !DILocation(line: 1565, column: 19, scope: !7922)
!8000 = !DILocation(line: 1565, column: 14, scope: !7922)
!8001 = !DILocation(line: 1566, column: 6, scope: !7922)
!8002 = !DILocation(line: 1570, column: 19, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !8004, file: !497, line: 1570, column: 11)
!8004 = distinct !DILexicalBlock(scope: !7918, file: !497, line: 1568, column: 6)
!8005 = !DILocation(line: 1570, column: 11, scope: !8003)
!8006 = !DILocation(line: 1570, column: 29, scope: !8003)
!8007 = !DILocation(line: 1570, column: 11, scope: !8004)
!8008 = !DILocation(line: 1573, column: 8, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8010, file: !497, line: 1573, column: 8)
!8010 = distinct !DILexicalBlock(scope: !8003, file: !497, line: 1571, column: 3)
!8011 = !DILocation(line: 1573, column: 19, scope: !8009)
!8012 = !DILocation(line: 1573, column: 8, scope: !8010)
!8013 = !DILocation(line: 1575, column: 22, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8009, file: !497, line: 1574, column: 7)
!8015 = !DILocation(line: 1575, column: 13, scope: !8014)
!8016 = !DILocation(line: 1575, column: 11, scope: !8014)
!8017 = !DILocation(line: 1576, column: 12, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8014, file: !497, line: 1576, column: 12)
!8019 = !DILocation(line: 1576, column: 16, scope: !8018)
!8020 = !DILocation(line: 1576, column: 12, scope: !8014)
!8021 = !DILocation(line: 1577, column: 15, scope: !8018)
!8022 = !DILocation(line: 1577, column: 4, scope: !8018)
!8023 = !DILocation(line: 1578, column: 17, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8018, file: !497, line: 1578, column: 17)
!8025 = !DILocation(line: 1578, column: 24, scope: !8024)
!8026 = !DILocation(line: 1578, column: 21, scope: !8024)
!8027 = !DILocation(line: 1578, column: 17, scope: !8018)
!8028 = !DILocation(line: 1579, column: 15, scope: !8024)
!8029 = !DILocation(line: 1579, column: 4, scope: !8024)
!8030 = !DILocation(line: 1581, column: 17, scope: !8024)
!8031 = !DILocation(line: 1581, column: 23, scope: !8024)
!8032 = !DILocation(line: 1581, column: 21, scope: !8024)
!8033 = !DILocation(line: 1581, column: 15, scope: !8024)
!8034 = !DILocation(line: 1582, column: 7, scope: !8014)
!8035 = !DILocation(line: 1582, column: 15, scope: !8014)
!8036 = !DILocation(line: 1582, column: 27, scope: !8014)
!8037 = !DILocation(line: 1583, column: 7, scope: !8014)
!8038 = !DILocation(line: 1584, column: 3, scope: !8010)
!8039 = !DILocation(line: 1588, column: 30, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8003, file: !497, line: 1586, column: 3)
!8041 = !DILocation(line: 1588, column: 41, scope: !8040)
!8042 = !DILocation(line: 1588, column: 47, scope: !8040)
!8043 = !DILocation(line: 1588, column: 45, scope: !8040)
!8044 = !DILocation(line: 1587, column: 3, scope: !8040)
!8045 = !DILocation(line: 1589, column: 8, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8040, file: !497, line: 1589, column: 8)
!8047 = !DILocation(line: 1589, column: 19, scope: !8046)
!8048 = !DILocation(line: 1589, column: 23, scope: !8046)
!8049 = !DILocation(line: 1589, column: 26, scope: !8046)
!8050 = !DILocation(line: 1589, column: 34, scope: !8046)
!8051 = !DILocation(line: 1589, column: 44, scope: !8046)
!8052 = !DILocation(line: 1589, column: 48, scope: !8046)
!8053 = !DILocation(line: 1589, column: 8, scope: !8040)
!8054 = !DILocation(line: 1590, column: 7, scope: !8046)
!8055 = !DILocation(line: 1590, column: 25, scope: !8046)
!8056 = !DILocation(line: 1590, column: 29, scope: !8046)
!8057 = !DILocation(line: 1591, column: 10, scope: !8040)
!8058 = !DILocation(line: 1592, column: 17, scope: !8040)
!8059 = !DILocation(line: 1592, column: 14, scope: !8040)
!8060 = !DILocation(line: 1594, column: 11, scope: !8004)
!8061 = !DILocation(line: 1594, column: 8, scope: !8004)
!8062 = !DILocation(line: 1595, column: 14, scope: !8004)
!8063 = !DILocation(line: 1599, column: 7, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !7910, file: !497, line: 1599, column: 7)
!8065 = !DILocation(line: 1599, column: 18, scope: !8064)
!8066 = !DILocation(line: 1599, column: 7, scope: !7910)
!8067 = !DILocation(line: 1600, column: 6, scope: !8064)
!8068 = distinct !{!8068, !7906, !8069}
!8069 = !DILocation(line: 1664, column: 2, scope: !807)
!8070 = !DILocation(line: 1601, column: 22, scope: !7910)
!8071 = !DILocation(line: 1601, column: 31, scope: !7910)
!8072 = !DILocation(line: 1601, column: 12, scope: !7910)
!8073 = !DILocation(line: 1601, column: 10, scope: !7910)
!8074 = !DILocation(line: 1602, column: 7, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !7910, file: !497, line: 1602, column: 7)
!8076 = !DILocation(line: 1602, column: 15, scope: !8075)
!8077 = !DILocation(line: 1602, column: 7, scope: !7910)
!8078 = !DILocation(line: 1604, column: 11, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !497, line: 1604, column: 11)
!8080 = distinct !DILexicalBlock(scope: !8075, file: !497, line: 1603, column: 6)
!8081 = !DILocation(line: 1604, column: 17, scope: !8079)
!8082 = !DILocation(line: 1604, column: 11, scope: !8080)
!8083 = !DILocation(line: 1605, column: 3, scope: !8079)
!8084 = !DILocation(line: 1606, column: 11, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8080, file: !497, line: 1606, column: 11)
!8086 = !DILocation(line: 1606, column: 17, scope: !8085)
!8087 = !DILocation(line: 1606, column: 27, scope: !8085)
!8088 = !DILocation(line: 1606, column: 30, scope: !8085)
!8089 = !DILocation(line: 1606, column: 36, scope: !8085)
!8090 = !DILocation(line: 1606, column: 46, scope: !8085)
!8091 = !DILocation(line: 1606, column: 49, scope: !8085)
!8092 = !DILocation(line: 1606, column: 55, scope: !8085)
!8093 = !DILocation(line: 1606, column: 11, scope: !8080)
!8094 = !DILocation(line: 1609, column: 12, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8085, file: !497, line: 1607, column: 3)
!8096 = !DILocation(line: 1609, column: 18, scope: !8095)
!8097 = !DILocation(line: 1609, column: 32, scope: !8095)
!8098 = !DILocation(line: 1609, column: 30, scope: !8095)
!8099 = !DILocation(line: 1609, column: 14, scope: !8095)
!8100 = !DILocation(line: 1609, column: 4, scope: !8095)
!8101 = !DILocation(line: 1609, column: 10, scope: !8095)
!8102 = !DILocation(line: 1610, column: 8, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8095, file: !497, line: 1610, column: 8)
!8104 = !DILocation(line: 1610, column: 23, scope: !8103)
!8105 = !DILocation(line: 1610, column: 8, scope: !8095)
!8106 = !DILocation(line: 1611, column: 14, scope: !8103)
!8107 = !DILocation(line: 1611, column: 7, scope: !8103)
!8108 = !DILocation(line: 1613, column: 7, scope: !8103)
!8109 = !DILocation(line: 1613, column: 15, scope: !8103)
!8110 = !DILocation(line: 1613, column: 31, scope: !8103)
!8111 = !DILocation(line: 1614, column: 10, scope: !8095)
!8112 = !DILocation(line: 1614, column: 3, scope: !8095)
!8113 = !DILocation(line: 1616, column: 46, scope: !8080)
!8114 = !DILocation(line: 1616, column: 6, scope: !8080)
!8115 = !DILocation(line: 1617, column: 6, scope: !8080)
!8116 = !DILocation(line: 1619, column: 2, scope: !7910)
!8117 = !DILocation(line: 1620, column: 7, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !7910, file: !497, line: 1620, column: 7)
!8119 = !DILocation(line: 1620, column: 14, scope: !8118)
!8120 = !DILocation(line: 1620, column: 7, scope: !7910)
!8121 = !DILocation(line: 1622, column: 53, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8118, file: !497, line: 1621, column: 6)
!8123 = !DILocation(line: 1622, column: 6, scope: !8122)
!8124 = !DILocation(line: 1623, column: 6, scope: !8122)
!8125 = !DILocation(line: 1625, column: 6, scope: !7910)
!8126 = !DILocation(line: 1625, column: 2, scope: !7910)
!8127 = !DILocation(line: 1625, column: 15, scope: !7910)
!8128 = !DILocation(line: 1626, column: 11, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !7910, file: !497, line: 1626, column: 7)
!8130 = !DILocation(line: 1626, column: 19, scope: !8129)
!8131 = !DILocation(line: 1626, column: 7, scope: !8129)
!8132 = !DILocation(line: 1626, column: 24, scope: !8129)
!8133 = !DILocation(line: 1626, column: 7, scope: !7910)
!8134 = !DILocation(line: 1627, column: 10, scope: !8129)
!8135 = !DILocation(line: 1627, column: 6, scope: !8129)
!8136 = !DILocation(line: 1627, column: 21, scope: !8129)
!8137 = !DILocation(line: 1630, column: 7, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !7910, file: !497, line: 1630, column: 7)
!8139 = !DILocation(line: 1630, column: 15, scope: !8138)
!8140 = !DILocation(line: 1630, column: 7, scope: !7910)
!8141 = !DILocation(line: 1632, column: 13, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8138, file: !497, line: 1631, column: 6)
!8143 = !DILocation(line: 1633, column: 42, scope: !8142)
!8144 = !DILocation(line: 1633, column: 52, scope: !8142)
!8145 = !DILocation(line: 1633, column: 50, scope: !8142)
!8146 = !DILocation(line: 1633, column: 60, scope: !8142)
!8147 = !DILocation(line: 1633, column: 6, scope: !8142)
!8148 = !DILocation(line: 1634, column: 16, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8142, file: !497, line: 1634, column: 6)
!8150 = !DILocation(line: 1634, column: 14, scope: !8149)
!8151 = !DILocation(line: 1634, column: 12, scope: !8149)
!8152 = !DILocation(line: 1634, column: 25, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8149, file: !497, line: 1634, column: 6)
!8154 = !DILocation(line: 1634, column: 27, scope: !8153)
!8155 = !DILocation(line: 1634, column: 6, scope: !8149)
!8156 = !DILocation(line: 1635, column: 27, scope: !8153)
!8157 = !DILocation(line: 1635, column: 32, scope: !8153)
!8158 = !DILocation(line: 1635, column: 3, scope: !8153)
!8159 = !DILocation(line: 1635, column: 8, scope: !8153)
!8160 = !DILocation(line: 1635, column: 12, scope: !8153)
!8161 = !DILocation(line: 1635, column: 10, scope: !8153)
!8162 = !DILocation(line: 1635, column: 20, scope: !8153)
!8163 = !DILocation(line: 1635, column: 25, scope: !8153)
!8164 = !DILocation(line: 1634, column: 33, scope: !8153)
!8165 = !DILocation(line: 1634, column: 6, scope: !8153)
!8166 = distinct !{!8166, !8155, !8167}
!8167 = !DILocation(line: 1635, column: 33, scope: !8149)
!8168 = !DILocation(line: 1636, column: 13, scope: !8142)
!8169 = !DILocation(line: 1637, column: 6, scope: !8142)
!8170 = !DILocation(line: 1637, column: 11, scope: !8142)
!8171 = !DILocation(line: 1637, column: 20, scope: !8142)
!8172 = !DILocation(line: 1638, column: 17, scope: !8142)
!8173 = !DILocation(line: 1638, column: 25, scope: !8142)
!8174 = !DILocation(line: 1638, column: 14, scope: !8142)
!8175 = !DILocation(line: 1639, column: 10, scope: !8142)
!8176 = !DILocation(line: 1639, column: 8, scope: !8142)
!8177 = !DILocation(line: 1640, column: 6, scope: !8142)
!8178 = !DILocation(line: 1646, column: 42, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8138, file: !497, line: 1642, column: 6)
!8180 = !DILocation(line: 1646, column: 6, scope: !8179)
!8181 = !DILocation(line: 1647, column: 13, scope: !8179)
!8182 = !DILocation(line: 1648, column: 16, scope: !8179)
!8183 = !DILocation(line: 1648, column: 14, scope: !8179)
!8184 = !DILocation(line: 1649, column: 10, scope: !8179)
!8185 = !DILocation(line: 1649, column: 8, scope: !8179)
!8186 = !DILocation(line: 1652, column: 7, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !7910, file: !497, line: 1652, column: 7)
!8188 = !DILocation(line: 1652, column: 15, scope: !8187)
!8189 = !DILocation(line: 1652, column: 7, scope: !7910)
!8190 = !DILocation(line: 1655, column: 6, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8187, file: !497, line: 1653, column: 6)
!8192 = !DILocation(line: 1655, column: 17, scope: !8191)
!8193 = !DILocation(line: 1656, column: 17, scope: !8191)
!8194 = !DILocation(line: 1657, column: 6, scope: !8191)
!8195 = !DILocation(line: 1661, column: 19, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8187, file: !497, line: 1659, column: 6)
!8197 = !DILocation(line: 1661, column: 17, scope: !8196)
!8198 = !DILocation(line: 1662, column: 6, scope: !8196)
!8199 = !DILocation(line: 1662, column: 14, scope: !8196)
!8200 = !DILocation(line: 1662, column: 26, scope: !8196)
!8201 = !DILocation(line: 1667, column: 14, scope: !807)
!8202 = !DILocation(line: 1667, column: 6, scope: !807)
!8203 = !DILocation(line: 1667, column: 12, scope: !807)
!8204 = !DILocation(line: 1668, column: 10, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !807, file: !497, line: 1668, column: 10)
!8206 = !DILocation(line: 1668, column: 21, scope: !8205)
!8207 = !DILocation(line: 1668, column: 10, scope: !807)
!8208 = !DILocation(line: 1669, column: 9, scope: !8205)
!8209 = !DILocation(line: 1669, column: 2, scope: !8205)
!8210 = !DILocation(line: 1670, column: 12, scope: !807)
!8211 = !DILocation(line: 1670, column: 5, scope: !807)
!8212 = !DILocation(line: 1671, column: 5, scope: !807)
!8213 = distinct !DISubprogram(name: "hexit", scope: !497, file: !497, line: 1222, type: !8214, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!8214 = !DISubroutineType(types: !8215)
!8215 = !{!26, !7}
!8216 = !DILocalVariable(name: "c", arg: 1, scope: !8213, file: !497, line: 1222, type: !7)
!8217 = !DILocation(line: 1222, column: 13, scope: !8213)
!8218 = !DILocation(line: 1224, column: 10, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8213, file: !497, line: 1224, column: 10)
!8220 = !DILocation(line: 1224, column: 12, scope: !8219)
!8221 = !DILocation(line: 1224, column: 19, scope: !8219)
!8222 = !DILocation(line: 1224, column: 22, scope: !8219)
!8223 = !DILocation(line: 1224, column: 24, scope: !8219)
!8224 = !DILocation(line: 1224, column: 10, scope: !8213)
!8225 = !DILocation(line: 1225, column: 9, scope: !8219)
!8226 = !DILocation(line: 1225, column: 11, scope: !8219)
!8227 = !DILocation(line: 1225, column: 2, scope: !8219)
!8228 = !DILocation(line: 1226, column: 10, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8213, file: !497, line: 1226, column: 10)
!8230 = !DILocation(line: 1226, column: 12, scope: !8229)
!8231 = !DILocation(line: 1226, column: 19, scope: !8229)
!8232 = !DILocation(line: 1226, column: 22, scope: !8229)
!8233 = !DILocation(line: 1226, column: 24, scope: !8229)
!8234 = !DILocation(line: 1226, column: 10, scope: !8213)
!8235 = !DILocation(line: 1227, column: 9, scope: !8229)
!8236 = !DILocation(line: 1227, column: 11, scope: !8229)
!8237 = !DILocation(line: 1227, column: 17, scope: !8229)
!8238 = !DILocation(line: 1227, column: 2, scope: !8229)
!8239 = !DILocation(line: 1228, column: 10, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8213, file: !497, line: 1228, column: 10)
!8241 = !DILocation(line: 1228, column: 12, scope: !8240)
!8242 = !DILocation(line: 1228, column: 19, scope: !8240)
!8243 = !DILocation(line: 1228, column: 22, scope: !8240)
!8244 = !DILocation(line: 1228, column: 24, scope: !8240)
!8245 = !DILocation(line: 1228, column: 10, scope: !8213)
!8246 = !DILocation(line: 1229, column: 9, scope: !8240)
!8247 = !DILocation(line: 1229, column: 11, scope: !8240)
!8248 = !DILocation(line: 1229, column: 17, scope: !8240)
!8249 = !DILocation(line: 1229, column: 2, scope: !8240)
!8250 = !DILocation(line: 1230, column: 5, scope: !8213)
!8251 = !DILocation(line: 1231, column: 5, scope: !8213)
!8252 = distinct !DISubprogram(name: "httpd_close_conn", scope: !497, file: !497, line: 2470, type: !8253, scopeLine: 2471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!8253 = !DISubroutineType(types: !8254)
!8254 = !{null, !709, !636}
!8255 = !DILocalVariable(name: "hc", arg: 1, scope: !8252, file: !497, line: 2470, type: !709)
!8256 = !DILocation(line: 2470, column: 31, scope: !8252)
!8257 = !DILocalVariable(name: "nowP", arg: 2, scope: !8252, file: !497, line: 2470, type: !636)
!8258 = !DILocation(line: 2470, column: 51, scope: !8252)
!8259 = !DILocation(line: 2472, column: 21, scope: !8252)
!8260 = !DILocation(line: 2472, column: 25, scope: !8252)
!8261 = !DILocation(line: 2472, column: 5, scope: !8252)
!8262 = !DILocation(line: 2474, column: 10, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8252, file: !497, line: 2474, column: 10)
!8264 = !DILocation(line: 2474, column: 14, scope: !8263)
!8265 = !DILocation(line: 2474, column: 27, scope: !8263)
!8266 = !DILocation(line: 2474, column: 10, scope: !8252)
!8267 = !DILocation(line: 2476, column: 13, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8263, file: !497, line: 2475, column: 2)
!8269 = !DILocation(line: 2476, column: 17, scope: !8268)
!8270 = !DILocation(line: 2476, column: 33, scope: !8268)
!8271 = !DILocation(line: 2476, column: 37, scope: !8268)
!8272 = !DILocation(line: 2476, column: 42, scope: !8268)
!8273 = !DILocation(line: 2476, column: 2, scope: !8268)
!8274 = !DILocation(line: 2477, column: 2, scope: !8268)
!8275 = !DILocation(line: 2477, column: 6, scope: !8268)
!8276 = !DILocation(line: 2477, column: 19, scope: !8268)
!8277 = !DILocation(line: 2478, column: 2, scope: !8268)
!8278 = !DILocation(line: 2479, column: 10, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8252, file: !497, line: 2479, column: 10)
!8280 = !DILocation(line: 2479, column: 14, scope: !8279)
!8281 = !DILocation(line: 2479, column: 22, scope: !8279)
!8282 = !DILocation(line: 2479, column: 10, scope: !8252)
!8283 = !DILocation(line: 2481, column: 16, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8279, file: !497, line: 2480, column: 2)
!8285 = !DILocation(line: 2481, column: 20, scope: !8284)
!8286 = !DILocation(line: 2481, column: 9, scope: !8284)
!8287 = !DILocation(line: 2482, column: 2, scope: !8284)
!8288 = !DILocation(line: 2482, column: 6, scope: !8284)
!8289 = !DILocation(line: 2482, column: 14, scope: !8284)
!8290 = !DILocation(line: 2483, column: 2, scope: !8284)
!8291 = !DILocation(line: 2484, column: 5, scope: !8252)
!8292 = distinct !DISubprogram(name: "make_log_entry", scope: !497, file: !497, line: 3908, type: !8253, scopeLine: 3909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!8293 = !DILocalVariable(name: "hc", arg: 1, scope: !8292, file: !497, line: 3908, type: !709)
!8294 = !DILocation(line: 3908, column: 29, scope: !8292)
!8295 = !DILocalVariable(name: "nowP", arg: 2, scope: !8292, file: !497, line: 3908, type: !636)
!8296 = !DILocation(line: 3908, column: 49, scope: !8292)
!8297 = !DILocalVariable(name: "ru", scope: !8292, file: !497, line: 3910, type: !6)
!8298 = !DILocation(line: 3910, column: 11, scope: !8292)
!8299 = !DILocalVariable(name: "url", scope: !8292, file: !497, line: 3911, type: !8300)
!8300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2440, elements: !8301)
!8301 = !{!8302}
!8302 = !DISubrange(count: 305)
!8303 = !DILocation(line: 3911, column: 10, scope: !8292)
!8304 = !DILocalVariable(name: "bytes", scope: !8292, file: !497, line: 3912, type: !8305)
!8305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 320, elements: !8306)
!8306 = !{!8307}
!8307 = !DISubrange(count: 40)
!8308 = !DILocation(line: 3912, column: 10, scope: !8292)
!8309 = !DILocation(line: 3914, column: 10, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8292, file: !497, line: 3914, column: 10)
!8311 = !DILocation(line: 3914, column: 14, scope: !8310)
!8312 = !DILocation(line: 3914, column: 18, scope: !8310)
!8313 = !DILocation(line: 3914, column: 10, scope: !8292)
!8314 = !DILocation(line: 3915, column: 2, scope: !8310)
!8315 = !DILocation(line: 3924, column: 10, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8292, file: !497, line: 3924, column: 10)
!8317 = !DILocation(line: 3924, column: 14, scope: !8316)
!8318 = !DILocation(line: 3924, column: 28, scope: !8316)
!8319 = !DILocation(line: 3924, column: 10, scope: !8292)
!8320 = !DILocation(line: 3925, column: 7, scope: !8316)
!8321 = !DILocation(line: 3925, column: 11, scope: !8316)
!8322 = !DILocation(line: 3925, column: 5, scope: !8316)
!8323 = !DILocation(line: 3925, column: 2, scope: !8316)
!8324 = !DILocation(line: 3927, column: 5, scope: !8316)
!8325 = !DILocation(line: 3932, column: 10, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8292, file: !497, line: 3932, column: 10)
!8327 = !DILocation(line: 3932, column: 14, scope: !8326)
!8328 = !DILocation(line: 3932, column: 18, scope: !8326)
!8329 = !DILocation(line: 3932, column: 24, scope: !8326)
!8330 = !DILocation(line: 3932, column: 29, scope: !8326)
!8331 = !DILocation(line: 3932, column: 33, scope: !8326)
!8332 = !DILocation(line: 3932, column: 10, scope: !8292)
!8333 = !DILocation(line: 3933, column: 22, scope: !8326)
!8334 = !DILocation(line: 3935, column: 6, scope: !8326)
!8335 = !DILocation(line: 3935, column: 10, scope: !8326)
!8336 = !DILocation(line: 3935, column: 19, scope: !8326)
!8337 = !DILocation(line: 3935, column: 34, scope: !8326)
!8338 = !DILocation(line: 3935, column: 38, scope: !8326)
!8339 = !DILocation(line: 3935, column: 42, scope: !8326)
!8340 = !DILocation(line: 3935, column: 60, scope: !8326)
!8341 = !DILocation(line: 3935, column: 64, scope: !8326)
!8342 = !DILocation(line: 3936, column: 6, scope: !8326)
!8343 = !DILocation(line: 3936, column: 10, scope: !8326)
!8344 = !DILocation(line: 3933, column: 9, scope: !8326)
!8345 = !DILocation(line: 3933, column: 2, scope: !8326)
!8346 = !DILocation(line: 3938, column: 22, scope: !8326)
!8347 = !DILocation(line: 3939, column: 16, scope: !8326)
!8348 = !DILocation(line: 3939, column: 20, scope: !8326)
!8349 = !DILocation(line: 3938, column: 9, scope: !8326)
!8350 = !DILocation(line: 3941, column: 10, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8292, file: !497, line: 3941, column: 10)
!8352 = !DILocation(line: 3941, column: 14, scope: !8351)
!8353 = !DILocation(line: 3941, column: 25, scope: !8351)
!8354 = !DILocation(line: 3941, column: 10, scope: !8292)
!8355 = !DILocation(line: 3943, column: 6, scope: !8351)
!8356 = !DILocation(line: 3943, column: 48, scope: !8351)
!8357 = !DILocation(line: 3943, column: 52, scope: !8351)
!8358 = !DILocation(line: 3942, column: 9, scope: !8351)
!8359 = !DILocation(line: 3942, column: 2, scope: !8351)
!8360 = !DILocation(line: 3945, column: 9, scope: !8351)
!8361 = !DILocation(line: 3948, column: 10, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8292, file: !497, line: 3948, column: 10)
!8363 = !DILocation(line: 3948, column: 14, scope: !8362)
!8364 = !DILocation(line: 3948, column: 18, scope: !8362)
!8365 = !DILocation(line: 3948, column: 24, scope: !8362)
!8366 = !DILocation(line: 3948, column: 10, scope: !8292)
!8367 = !DILocalVariable(name: "now", scope: !8368, file: !497, line: 3950, type: !244)
!8368 = distinct !DILexicalBlock(scope: !8362, file: !497, line: 3949, column: 2)
!8369 = !DILocation(line: 3950, column: 9, scope: !8368)
!8370 = !DILocalVariable(name: "t", scope: !8368, file: !497, line: 3951, type: !8371)
!8371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8372, size: 64)
!8372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !8373, line: 75, size: 448, elements: !8374)
!8373 = !DIFile(filename: "/usr/include/time.h", directory: "")
!8374 = !{!8375, !8376, !8377, !8378, !8379, !8380, !8381, !8382, !8383, !8384, !8385}
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !8372, file: !8373, line: 76, baseType: !26, size: 32)
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !8372, file: !8373, line: 77, baseType: !26, size: 32, offset: 32)
!8377 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !8372, file: !8373, line: 78, baseType: !26, size: 32, offset: 64)
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !8372, file: !8373, line: 79, baseType: !26, size: 32, offset: 96)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !8372, file: !8373, line: 80, baseType: !26, size: 32, offset: 128)
!8380 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !8372, file: !8373, line: 81, baseType: !26, size: 32, offset: 160)
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !8372, file: !8373, line: 82, baseType: !26, size: 32, offset: 192)
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !8372, file: !8373, line: 83, baseType: !26, size: 32, offset: 224)
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !8372, file: !8373, line: 84, baseType: !26, size: 32, offset: 256)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !8372, file: !8373, line: 85, baseType: !14, size: 64, offset: 320)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !8372, file: !8373, line: 86, baseType: !6, size: 64, offset: 384)
!8386 = !DILocation(line: 3951, column: 13, scope: !8368)
!8387 = !DILocalVariable(name: "cernfmt_nozone", scope: !8368, file: !497, line: 3952, type: !88)
!8388 = !DILocation(line: 3952, column: 14, scope: !8368)
!8389 = !DILocalVariable(name: "date_nozone", scope: !8368, file: !497, line: 3953, type: !5678)
!8390 = !DILocation(line: 3953, column: 7, scope: !8368)
!8391 = !DILocalVariable(name: "zone", scope: !8368, file: !497, line: 3954, type: !26)
!8392 = !DILocation(line: 3954, column: 6, scope: !8368)
!8393 = !DILocalVariable(name: "sign", scope: !8368, file: !497, line: 3955, type: !7)
!8394 = !DILocation(line: 3955, column: 7, scope: !8368)
!8395 = !DILocalVariable(name: "date", scope: !8368, file: !497, line: 3956, type: !5678)
!8396 = !DILocation(line: 3956, column: 7, scope: !8368)
!8397 = !DILocation(line: 3959, column: 7, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8368, file: !497, line: 3959, column: 7)
!8399 = !DILocation(line: 3959, column: 12, scope: !8398)
!8400 = !DILocation(line: 3959, column: 7, scope: !8368)
!8401 = !DILocation(line: 3960, column: 12, scope: !8398)
!8402 = !DILocation(line: 3960, column: 18, scope: !8398)
!8403 = !DILocation(line: 3960, column: 10, scope: !8398)
!8404 = !DILocation(line: 3960, column: 6, scope: !8398)
!8405 = !DILocation(line: 3962, column: 12, scope: !8398)
!8406 = !DILocation(line: 3962, column: 10, scope: !8398)
!8407 = !DILocation(line: 3966, column: 6, scope: !8368)
!8408 = !DILocation(line: 3966, column: 4, scope: !8368)
!8409 = !DILocation(line: 3967, column: 19, scope: !8368)
!8410 = !DILocation(line: 3967, column: 53, scope: !8368)
!8411 = !DILocation(line: 3967, column: 69, scope: !8368)
!8412 = !DILocation(line: 3967, column: 9, scope: !8368)
!8413 = !DILocation(line: 3969, column: 9, scope: !8368)
!8414 = !DILocation(line: 3969, column: 12, scope: !8368)
!8415 = !DILocation(line: 3969, column: 22, scope: !8368)
!8416 = !DILocation(line: 3969, column: 7, scope: !8368)
!8417 = !DILocation(line: 3974, column: 7, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8368, file: !497, line: 3974, column: 7)
!8419 = !DILocation(line: 3974, column: 12, scope: !8418)
!8420 = !DILocation(line: 3974, column: 7, scope: !8368)
!8421 = !DILocation(line: 3975, column: 11, scope: !8418)
!8422 = !DILocation(line: 3975, column: 6, scope: !8418)
!8423 = !DILocation(line: 3978, column: 11, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8418, file: !497, line: 3977, column: 6)
!8425 = !DILocation(line: 3979, column: 14, scope: !8424)
!8426 = !DILocation(line: 3979, column: 13, scope: !8424)
!8427 = !DILocation(line: 3979, column: 11, scope: !8424)
!8428 = !DILocation(line: 3981, column: 11, scope: !8368)
!8429 = !DILocation(line: 3981, column: 16, scope: !8368)
!8430 = !DILocation(line: 3981, column: 23, scope: !8368)
!8431 = !DILocation(line: 3981, column: 31, scope: !8368)
!8432 = !DILocation(line: 3981, column: 36, scope: !8368)
!8433 = !DILocation(line: 3981, column: 29, scope: !8368)
!8434 = !DILocation(line: 3981, column: 7, scope: !8368)
!8435 = !DILocation(line: 3982, column: 22, scope: !8368)
!8436 = !DILocation(line: 3983, column: 19, scope: !8368)
!8437 = !DILocation(line: 3983, column: 32, scope: !8368)
!8438 = !DILocation(line: 3983, column: 38, scope: !8368)
!8439 = !DILocation(line: 3982, column: 9, scope: !8368)
!8440 = !DILocation(line: 3985, column: 18, scope: !8368)
!8441 = !DILocation(line: 3985, column: 22, scope: !8368)
!8442 = !DILocation(line: 3985, column: 26, scope: !8368)
!8443 = !DILocation(line: 3987, column: 19, scope: !8368)
!8444 = !DILocation(line: 3987, column: 23, scope: !8368)
!8445 = !DILocation(line: 3987, column: 6, scope: !8368)
!8446 = !DILocation(line: 3987, column: 38, scope: !8368)
!8447 = !DILocation(line: 3987, column: 42, scope: !8368)
!8448 = !DILocation(line: 3988, column: 24, scope: !8368)
!8449 = !DILocation(line: 3988, column: 28, scope: !8368)
!8450 = !DILocation(line: 3988, column: 6, scope: !8368)
!8451 = !DILocation(line: 3988, column: 38, scope: !8368)
!8452 = !DILocation(line: 3988, column: 43, scope: !8368)
!8453 = !DILocation(line: 3988, column: 47, scope: !8368)
!8454 = !DILocation(line: 3989, column: 6, scope: !8368)
!8455 = !DILocation(line: 3989, column: 10, scope: !8368)
!8456 = !DILocation(line: 3989, column: 18, scope: !8368)
!8457 = !DILocation(line: 3989, column: 25, scope: !8368)
!8458 = !DILocation(line: 3989, column: 29, scope: !8368)
!8459 = !DILocation(line: 3989, column: 39, scope: !8368)
!8460 = !DILocation(line: 3989, column: 43, scope: !8368)
!8461 = !DILocation(line: 3985, column: 9, scope: !8368)
!8462 = !DILocation(line: 3991, column: 17, scope: !8368)
!8463 = !DILocation(line: 3991, column: 21, scope: !8368)
!8464 = !DILocation(line: 3991, column: 25, scope: !8368)
!8465 = !DILocation(line: 3991, column: 9, scope: !8368)
!8466 = !DILocation(line: 3993, column: 2, scope: !8368)
!8467 = !DILocation(line: 3997, column: 19, scope: !8362)
!8468 = !DILocation(line: 3997, column: 23, scope: !8362)
!8469 = !DILocation(line: 3997, column: 6, scope: !8362)
!8470 = !DILocation(line: 3997, column: 38, scope: !8362)
!8471 = !DILocation(line: 3998, column: 24, scope: !8362)
!8472 = !DILocation(line: 3998, column: 28, scope: !8362)
!8473 = !DILocation(line: 3998, column: 6, scope: !8362)
!8474 = !DILocation(line: 3998, column: 38, scope: !8362)
!8475 = !DILocation(line: 3998, column: 43, scope: !8362)
!8476 = !DILocation(line: 3998, column: 47, scope: !8362)
!8477 = !DILocation(line: 3999, column: 6, scope: !8362)
!8478 = !DILocation(line: 3999, column: 10, scope: !8362)
!8479 = !DILocation(line: 3999, column: 18, scope: !8362)
!8480 = !DILocation(line: 3999, column: 25, scope: !8362)
!8481 = !DILocation(line: 3999, column: 29, scope: !8362)
!8482 = !DILocation(line: 3999, column: 39, scope: !8362)
!8483 = !DILocation(line: 3999, column: 43, scope: !8362)
!8484 = !DILocation(line: 3995, column: 2, scope: !8362)
!8485 = !DILocation(line: 4000, column: 5, scope: !8292)
!8486 = distinct !DISubprogram(name: "httpd_destroy_conn", scope: !497, file: !497, line: 2487, type: !852, scopeLine: 2488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!8487 = !DILocalVariable(name: "hc", arg: 1, scope: !8486, file: !497, line: 2487, type: !709)
!8488 = !DILocation(line: 2487, column: 33, scope: !8486)
!8489 = !DILocation(line: 2489, column: 10, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8486, file: !497, line: 2489, column: 10)
!8491 = !DILocation(line: 2489, column: 14, scope: !8490)
!8492 = !DILocation(line: 2489, column: 10, scope: !8486)
!8493 = !DILocation(line: 2491, column: 16, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8490, file: !497, line: 2490, column: 2)
!8495 = !DILocation(line: 2491, column: 20, scope: !8494)
!8496 = !DILocation(line: 2491, column: 2, scope: !8494)
!8497 = !DILocation(line: 2492, column: 16, scope: !8494)
!8498 = !DILocation(line: 2492, column: 20, scope: !8494)
!8499 = !DILocation(line: 2492, column: 2, scope: !8494)
!8500 = !DILocation(line: 2493, column: 16, scope: !8494)
!8501 = !DILocation(line: 2493, column: 20, scope: !8494)
!8502 = !DILocation(line: 2493, column: 2, scope: !8494)
!8503 = !DILocation(line: 2494, column: 16, scope: !8494)
!8504 = !DILocation(line: 2494, column: 20, scope: !8494)
!8505 = !DILocation(line: 2494, column: 2, scope: !8494)
!8506 = !DILocation(line: 2495, column: 16, scope: !8494)
!8507 = !DILocation(line: 2495, column: 20, scope: !8494)
!8508 = !DILocation(line: 2495, column: 2, scope: !8494)
!8509 = !DILocation(line: 2496, column: 16, scope: !8494)
!8510 = !DILocation(line: 2496, column: 20, scope: !8494)
!8511 = !DILocation(line: 2496, column: 2, scope: !8494)
!8512 = !DILocation(line: 2497, column: 16, scope: !8494)
!8513 = !DILocation(line: 2497, column: 20, scope: !8494)
!8514 = !DILocation(line: 2497, column: 2, scope: !8494)
!8515 = !DILocation(line: 2498, column: 16, scope: !8494)
!8516 = !DILocation(line: 2498, column: 20, scope: !8494)
!8517 = !DILocation(line: 2498, column: 2, scope: !8494)
!8518 = !DILocation(line: 2499, column: 16, scope: !8494)
!8519 = !DILocation(line: 2499, column: 20, scope: !8494)
!8520 = !DILocation(line: 2499, column: 2, scope: !8494)
!8521 = !DILocation(line: 2500, column: 16, scope: !8494)
!8522 = !DILocation(line: 2500, column: 20, scope: !8494)
!8523 = !DILocation(line: 2500, column: 2, scope: !8494)
!8524 = !DILocation(line: 2501, column: 16, scope: !8494)
!8525 = !DILocation(line: 2501, column: 20, scope: !8494)
!8526 = !DILocation(line: 2501, column: 2, scope: !8494)
!8527 = !DILocation(line: 2502, column: 16, scope: !8494)
!8528 = !DILocation(line: 2502, column: 20, scope: !8494)
!8529 = !DILocation(line: 2502, column: 2, scope: !8494)
!8530 = !DILocation(line: 2503, column: 16, scope: !8494)
!8531 = !DILocation(line: 2503, column: 20, scope: !8494)
!8532 = !DILocation(line: 2503, column: 2, scope: !8494)
!8533 = !DILocation(line: 2507, column: 2, scope: !8494)
!8534 = !DILocation(line: 2507, column: 6, scope: !8494)
!8535 = !DILocation(line: 2507, column: 18, scope: !8494)
!8536 = !DILocation(line: 2508, column: 2, scope: !8494)
!8537 = !DILocation(line: 2509, column: 5, scope: !8486)
!8538 = distinct !DISubprogram(name: "httpd_start_request", scope: !497, file: !497, line: 3895, type: !834, scopeLine: 3896, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!8539 = !DILocalVariable(name: "hc", arg: 1, scope: !8538, file: !497, line: 3895, type: !709)
!8540 = !DILocation(line: 3895, column: 34, scope: !8538)
!8541 = !DILocalVariable(name: "nowP", arg: 2, scope: !8538, file: !497, line: 3895, type: !636)
!8542 = !DILocation(line: 3895, column: 54, scope: !8538)
!8543 = !DILocalVariable(name: "r", scope: !8538, file: !497, line: 3897, type: !26)
!8544 = !DILocation(line: 3897, column: 9, scope: !8538)
!8545 = !DILocation(line: 3900, column: 31, scope: !8538)
!8546 = !DILocation(line: 3900, column: 35, scope: !8538)
!8547 = !DILocation(line: 3900, column: 9, scope: !8538)
!8548 = !DILocation(line: 3900, column: 7, scope: !8538)
!8549 = !DILocation(line: 3903, column: 12, scope: !8538)
!8550 = !DILocation(line: 3903, column: 5, scope: !8538)
!8551 = !DILocalVariable(name: "hc", arg: 1, scope: !833, file: !497, line: 3624, type: !709)
!8552 = !DILocation(line: 3624, column: 35, scope: !833)
!8553 = !DILocalVariable(name: "nowP", arg: 2, scope: !833, file: !497, line: 3624, type: !636)
!8554 = !DILocation(line: 3624, column: 55, scope: !833)
!8555 = !DILocalVariable(name: "i", scope: !833, file: !497, line: 3629, type: !26)
!8556 = !DILocation(line: 3629, column: 9, scope: !833)
!8557 = !DILocalVariable(name: "expnlen", scope: !833, file: !497, line: 3634, type: !264)
!8558 = !DILocation(line: 3634, column: 12, scope: !833)
!8559 = !DILocalVariable(name: "indxlen", scope: !833, file: !497, line: 3634, type: !264)
!8560 = !DILocation(line: 3634, column: 21, scope: !833)
!8561 = !DILocalVariable(name: "cp", scope: !833, file: !497, line: 3635, type: !6)
!8562 = !DILocation(line: 3635, column: 11, scope: !833)
!8563 = !DILocalVariable(name: "pi", scope: !833, file: !497, line: 3636, type: !6)
!8564 = !DILocation(line: 3636, column: 11, scope: !833)
!8565 = !DILocation(line: 3638, column: 23, scope: !833)
!8566 = !DILocation(line: 3638, column: 27, scope: !833)
!8567 = !DILocation(line: 3638, column: 15, scope: !833)
!8568 = !DILocation(line: 3638, column: 13, scope: !833)
!8569 = !DILocation(line: 3641, column: 16, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3641, column: 10)
!8571 = !DILocation(line: 3641, column: 20, scope: !8570)
!8572 = !DILocation(line: 3641, column: 35, scope: !8570)
!8573 = !DILocation(line: 3641, column: 39, scope: !8570)
!8574 = !DILocation(line: 3641, column: 10, scope: !8570)
!8575 = !DILocation(line: 3641, column: 44, scope: !8570)
!8576 = !DILocation(line: 3641, column: 10, scope: !833)
!8577 = !DILocation(line: 3643, column: 18, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8570, file: !497, line: 3642, column: 2)
!8579 = !DILocation(line: 3643, column: 27, scope: !8578)
!8580 = !DILocation(line: 3643, column: 44, scope: !8578)
!8581 = !DILocation(line: 3643, column: 56, scope: !8578)
!8582 = !DILocation(line: 3643, column: 60, scope: !8578)
!8583 = !DILocation(line: 3643, column: 2, scope: !8578)
!8584 = !DILocation(line: 3644, column: 2, scope: !8578)
!8585 = !DILocation(line: 3652, column: 14, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3652, column: 10)
!8587 = !DILocation(line: 3652, column: 18, scope: !8586)
!8588 = !DILocation(line: 3652, column: 21, scope: !8586)
!8589 = !DILocation(line: 3652, column: 29, scope: !8586)
!8590 = !DILocation(line: 3652, column: 10, scope: !833)
!8591 = !DILocation(line: 3657, column: 19, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8586, file: !497, line: 3653, column: 2)
!8593 = !DILocation(line: 3657, column: 23, scope: !8592)
!8594 = !DILocation(line: 3657, column: 6, scope: !8592)
!8595 = !DILocation(line: 3657, column: 38, scope: !8592)
!8596 = !DILocation(line: 3657, column: 42, scope: !8592)
!8597 = !DILocation(line: 3654, column: 2, scope: !8592)
!8598 = !DILocation(line: 3659, column: 6, scope: !8592)
!8599 = !DILocation(line: 3659, column: 15, scope: !8592)
!8600 = !DILocation(line: 3661, column: 6, scope: !8592)
!8601 = !DILocation(line: 3661, column: 10, scope: !8592)
!8602 = !DILocation(line: 3658, column: 2, scope: !8592)
!8603 = !DILocation(line: 3662, column: 2, scope: !8592)
!8604 = !DILocation(line: 3666, column: 10, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3666, column: 10)
!8606 = !DILocation(line: 3666, column: 10, scope: !833)
!8607 = !DILocation(line: 3669, column: 7, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8609, file: !497, line: 3669, column: 7)
!8609 = distinct !DILexicalBlock(scope: !8605, file: !497, line: 3667, column: 2)
!8610 = !DILocation(line: 3669, column: 11, scope: !8608)
!8611 = !DILocation(line: 3669, column: 23, scope: !8608)
!8612 = !DILocation(line: 3669, column: 7, scope: !8609)
!8613 = !DILocation(line: 3671, column: 22, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8608, file: !497, line: 3670, column: 6)
!8615 = !DILocation(line: 3671, column: 31, scope: !8614)
!8616 = !DILocation(line: 3671, column: 48, scope: !8614)
!8617 = !DILocation(line: 3671, column: 60, scope: !8614)
!8618 = !DILocation(line: 3671, column: 64, scope: !8614)
!8619 = !DILocation(line: 3671, column: 6, scope: !8614)
!8620 = !DILocation(line: 3672, column: 6, scope: !8614)
!8621 = !DILocation(line: 3679, column: 15, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8609, file: !497, line: 3679, column: 7)
!8623 = !DILocation(line: 3679, column: 19, scope: !8622)
!8624 = !DILocation(line: 3679, column: 7, scope: !8622)
!8625 = !DILocation(line: 3679, column: 38, scope: !8622)
!8626 = !DILocation(line: 3679, column: 43, scope: !8622)
!8627 = !DILocation(line: 3680, column: 15, scope: !8622)
!8628 = !DILocation(line: 3680, column: 19, scope: !8622)
!8629 = !DILocation(line: 3680, column: 7, scope: !8622)
!8630 = !DILocation(line: 3680, column: 39, scope: !8622)
!8631 = !DILocation(line: 3680, column: 44, scope: !8622)
!8632 = !DILocation(line: 3681, column: 7, scope: !8622)
!8633 = !DILocation(line: 3681, column: 11, scope: !8622)
!8634 = !DILocation(line: 3681, column: 32, scope: !8622)
!8635 = !DILocation(line: 3681, column: 36, scope: !8622)
!8636 = !DILocation(line: 3681, column: 24, scope: !8622)
!8637 = !DILocation(line: 3681, column: 51, scope: !8622)
!8638 = !DILocation(line: 3681, column: 56, scope: !8622)
!8639 = !DILocation(line: 3679, column: 7, scope: !8609)
!8640 = !DILocation(line: 3683, column: 24, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8622, file: !497, line: 3682, column: 6)
!8642 = !DILocation(line: 3683, column: 6, scope: !8641)
!8643 = !DILocation(line: 3684, column: 6, scope: !8641)
!8644 = !DILocation(line: 3688, column: 10, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8609, file: !497, line: 3688, column: 2)
!8646 = !DILocation(line: 3688, column: 8, scope: !8645)
!8647 = !DILocation(line: 3688, column: 15, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8645, file: !497, line: 3688, column: 2)
!8649 = !DILocation(line: 3688, column: 17, scope: !8648)
!8650 = !DILocation(line: 3688, column: 2, scope: !8645)
!8651 = !DILocation(line: 3692, column: 3, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8648, file: !497, line: 3689, column: 6)
!8653 = !DILocation(line: 3692, column: 11, scope: !8652)
!8654 = !DILocation(line: 3692, column: 37, scope: !8652)
!8655 = !DILocation(line: 3692, column: 25, scope: !8652)
!8656 = !DILocation(line: 3692, column: 17, scope: !8652)
!8657 = !DILocation(line: 3692, column: 15, scope: !8652)
!8658 = !DILocation(line: 3690, column: 6, scope: !8652)
!8659 = !DILocation(line: 3693, column: 13, scope: !8652)
!8660 = !DILocation(line: 3694, column: 24, scope: !8652)
!8661 = !DILocation(line: 3694, column: 16, scope: !8652)
!8662 = !DILocation(line: 3694, column: 14, scope: !8652)
!8663 = !DILocation(line: 3695, column: 11, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8652, file: !497, line: 3695, column: 11)
!8665 = !DILocation(line: 3695, column: 19, scope: !8664)
!8666 = !DILocation(line: 3695, column: 24, scope: !8664)
!8667 = !DILocation(line: 3695, column: 27, scope: !8664)
!8668 = !DILocation(line: 3695, column: 37, scope: !8664)
!8669 = !DILocation(line: 3695, column: 45, scope: !8664)
!8670 = !DILocation(line: 3695, column: 50, scope: !8664)
!8671 = !DILocation(line: 3695, column: 11, scope: !8652)
!8672 = !DILocation(line: 3696, column: 10, scope: !8664)
!8673 = !DILocation(line: 3696, column: 3, scope: !8664)
!8674 = !DILocation(line: 3697, column: 19, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8652, file: !497, line: 3697, column: 11)
!8676 = !DILocation(line: 3697, column: 11, scope: !8675)
!8677 = !DILocation(line: 3697, column: 37, scope: !8675)
!8678 = !DILocation(line: 3697, column: 11, scope: !8652)
!8679 = !DILocation(line: 3698, column: 3, scope: !8675)
!8680 = !DILocation(line: 3698, column: 16, scope: !8675)
!8681 = !DILocation(line: 3699, column: 13, scope: !8652)
!8682 = !DILocation(line: 3700, column: 17, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8652, file: !497, line: 3700, column: 11)
!8684 = !DILocation(line: 3700, column: 29, scope: !8683)
!8685 = !DILocation(line: 3700, column: 33, scope: !8683)
!8686 = !DILocation(line: 3700, column: 11, scope: !8683)
!8687 = !DILocation(line: 3700, column: 38, scope: !8683)
!8688 = !DILocation(line: 3700, column: 11, scope: !8652)
!8689 = !DILocation(line: 3701, column: 3, scope: !8683)
!8690 = !DILocation(line: 3702, column: 6, scope: !8652)
!8691 = !DILocation(line: 3688, column: 56, scope: !8648)
!8692 = !DILocation(line: 3688, column: 2, scope: !8648)
!8693 = distinct !{!8693, !8650, !8694}
!8694 = !DILocation(line: 3702, column: 6, scope: !8645)
!8695 = !DILocation(line: 3707, column: 11, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8609, file: !497, line: 3707, column: 7)
!8697 = !DILocation(line: 3707, column: 15, scope: !8696)
!8698 = !DILocation(line: 3707, column: 18, scope: !8696)
!8699 = !DILocation(line: 3707, column: 26, scope: !8696)
!8700 = !DILocation(line: 3707, column: 7, scope: !8609)
!8701 = !DILocation(line: 3712, column: 16, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8696, file: !497, line: 3708, column: 6)
!8703 = !DILocation(line: 3712, column: 20, scope: !8702)
!8704 = !DILocation(line: 3712, column: 3, scope: !8702)
!8705 = !DILocation(line: 3712, column: 35, scope: !8702)
!8706 = !DILocation(line: 3712, column: 39, scope: !8702)
!8707 = !DILocation(line: 3709, column: 6, scope: !8702)
!8708 = !DILocation(line: 3714, column: 3, scope: !8702)
!8709 = !DILocation(line: 3714, column: 12, scope: !8702)
!8710 = !DILocation(line: 3716, column: 3, scope: !8702)
!8711 = !DILocation(line: 3716, column: 7, scope: !8702)
!8712 = !DILocation(line: 3713, column: 6, scope: !8702)
!8713 = !DILocation(line: 3717, column: 6, scope: !8702)
!8714 = !DILocation(line: 3721, column: 19, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8609, file: !497, line: 3721, column: 7)
!8716 = !DILocation(line: 3721, column: 23, scope: !8715)
!8717 = !DILocation(line: 3721, column: 27, scope: !8715)
!8718 = !DILocation(line: 3721, column: 7, scope: !8715)
!8719 = !DILocation(line: 3721, column: 42, scope: !8715)
!8720 = !DILocation(line: 3721, column: 7, scope: !8609)
!8721 = !DILocation(line: 3722, column: 6, scope: !8715)
!8722 = !DILocation(line: 3725, column: 25, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8609, file: !497, line: 3725, column: 7)
!8724 = !DILocation(line: 3725, column: 9, scope: !8723)
!8725 = !DILocation(line: 3725, column: 7, scope: !8609)
!8726 = !DILocation(line: 3726, column: 6, scope: !8723)
!8727 = !DILocation(line: 3728, column: 13, scope: !8609)
!8728 = !DILocation(line: 3728, column: 9, scope: !8609)
!8729 = !DILocation(line: 3728, column: 2, scope: !8609)
!8730 = !DILabel(scope: !8609, name: "got_one", file: !497, line: 3740)
!8731 = !DILocation(line: 3740, column: 2, scope: !8609)
!8732 = !DILocation(line: 3744, column: 24, scope: !8609)
!8733 = !DILocation(line: 3744, column: 40, scope: !8609)
!8734 = !DILocation(line: 3744, column: 44, scope: !8609)
!8735 = !DILocation(line: 3744, column: 48, scope: !8609)
!8736 = !DILocation(line: 3744, column: 66, scope: !8609)
!8737 = !DILocation(line: 3744, column: 70, scope: !8609)
!8738 = !DILocation(line: 3744, column: 7, scope: !8609)
!8739 = !DILocation(line: 3744, column: 5, scope: !8609)
!8740 = !DILocation(line: 3745, column: 7, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8609, file: !497, line: 3745, column: 7)
!8742 = !DILocation(line: 3745, column: 10, scope: !8741)
!8743 = !DILocation(line: 3745, column: 23, scope: !8741)
!8744 = !DILocation(line: 3745, column: 26, scope: !8741)
!8745 = !DILocation(line: 3745, column: 32, scope: !8741)
!8746 = !DILocation(line: 3745, column: 7, scope: !8609)
!8747 = !DILocation(line: 3747, column: 22, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8741, file: !497, line: 3746, column: 6)
!8749 = !DILocation(line: 3747, column: 31, scope: !8748)
!8750 = !DILocation(line: 3747, column: 48, scope: !8748)
!8751 = !DILocation(line: 3747, column: 60, scope: !8748)
!8752 = !DILocation(line: 3747, column: 64, scope: !8748)
!8753 = !DILocation(line: 3747, column: 6, scope: !8748)
!8754 = !DILocation(line: 3748, column: 6, scope: !8748)
!8755 = !DILocation(line: 3750, column: 20, scope: !8609)
!8756 = !DILocation(line: 3750, column: 12, scope: !8609)
!8757 = !DILocation(line: 3750, column: 10, scope: !8609)
!8758 = !DILocation(line: 3751, column: 22, scope: !8609)
!8759 = !DILocation(line: 3751, column: 26, scope: !8609)
!8760 = !DILocation(line: 3751, column: 41, scope: !8609)
!8761 = !DILocation(line: 3751, column: 45, scope: !8609)
!8762 = !DILocation(line: 3751, column: 62, scope: !8609)
!8763 = !DILocation(line: 3751, column: 2, scope: !8609)
!8764 = !DILocation(line: 3752, column: 9, scope: !8609)
!8765 = !DILocation(line: 3755, column: 11, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8609, file: !497, line: 3755, column: 7)
!8767 = !DILocation(line: 3755, column: 15, scope: !8766)
!8768 = !DILocation(line: 3755, column: 18, scope: !8766)
!8769 = !DILocation(line: 3755, column: 26, scope: !8766)
!8770 = !DILocation(line: 3755, column: 7, scope: !8609)
!8771 = !DILocation(line: 3760, column: 16, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8766, file: !497, line: 3756, column: 6)
!8773 = !DILocation(line: 3760, column: 20, scope: !8772)
!8774 = !DILocation(line: 3760, column: 3, scope: !8772)
!8775 = !DILocation(line: 3760, column: 35, scope: !8772)
!8776 = !DILocation(line: 3760, column: 39, scope: !8772)
!8777 = !DILocation(line: 3757, column: 6, scope: !8772)
!8778 = !DILocation(line: 3762, column: 3, scope: !8772)
!8779 = !DILocation(line: 3762, column: 12, scope: !8772)
!8780 = !DILocation(line: 3764, column: 3, scope: !8772)
!8781 = !DILocation(line: 3764, column: 7, scope: !8772)
!8782 = !DILocation(line: 3761, column: 6, scope: !8772)
!8783 = !DILocation(line: 3765, column: 6, scope: !8772)
!8784 = !DILocation(line: 3767, column: 2, scope: !8609)
!8785 = !DILocation(line: 3771, column: 47, scope: !833)
!8786 = !DILocation(line: 3771, column: 5, scope: !833)
!8787 = !DILocation(line: 3772, column: 12, scope: !833)
!8788 = !DILocation(line: 3773, column: 19, scope: !833)
!8789 = !DILocation(line: 3773, column: 10, scope: !833)
!8790 = !DILocation(line: 3773, column: 8, scope: !833)
!8791 = !DILocation(line: 3774, column: 10, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3774, column: 10)
!8793 = !DILocation(line: 3774, column: 13, scope: !8792)
!8794 = !DILocation(line: 3774, column: 10, scope: !833)
!8795 = !DILocation(line: 3775, column: 9, scope: !8792)
!8796 = !DILocation(line: 3775, column: 2, scope: !8792)
!8797 = !DILocation(line: 3777, column: 3, scope: !8792)
!8798 = !DILocation(line: 3777, column: 6, scope: !8792)
!8799 = !DILocation(line: 3778, column: 22, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3778, column: 10)
!8801 = !DILocation(line: 3778, column: 26, scope: !8800)
!8802 = !DILocation(line: 3778, column: 10, scope: !8800)
!8803 = !DILocation(line: 3778, column: 36, scope: !8800)
!8804 = !DILocation(line: 3778, column: 10, scope: !833)
!8805 = !DILocation(line: 3779, column: 2, scope: !8800)
!8806 = !DILocation(line: 3782, column: 10, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3782, column: 10)
!8808 = !DILocation(line: 3782, column: 18, scope: !8807)
!8809 = !DILocation(line: 3782, column: 10, scope: !833)
!8810 = !DILocation(line: 3784, column: 15, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8812, file: !497, line: 3784, column: 7)
!8812 = distinct !DILexicalBlock(scope: !8807, file: !497, line: 3783, column: 2)
!8813 = !DILocation(line: 3784, column: 19, scope: !8811)
!8814 = !DILocation(line: 3784, column: 7, scope: !8811)
!8815 = !DILocation(line: 3784, column: 45, scope: !8811)
!8816 = !DILocation(line: 3784, column: 7, scope: !8812)
!8817 = !DILocation(line: 3789, column: 16, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8811, file: !497, line: 3785, column: 6)
!8819 = !DILocation(line: 3789, column: 20, scope: !8818)
!8820 = !DILocation(line: 3789, column: 3, scope: !8818)
!8821 = !DILocation(line: 3789, column: 35, scope: !8818)
!8822 = !DILocation(line: 3789, column: 39, scope: !8818)
!8823 = !DILocation(line: 3786, column: 6, scope: !8818)
!8824 = !DILocation(line: 3791, column: 3, scope: !8818)
!8825 = !DILocation(line: 3791, column: 12, scope: !8818)
!8826 = !DILocation(line: 3793, column: 3, scope: !8818)
!8827 = !DILocation(line: 3793, column: 7, scope: !8818)
!8828 = !DILocation(line: 3790, column: 6, scope: !8818)
!8829 = !DILocation(line: 3794, column: 6, scope: !8818)
!8830 = !DILocation(line: 3796, column: 2, scope: !8812)
!8831 = !DILocation(line: 3797, column: 15, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8807, file: !497, line: 3797, column: 15)
!8833 = !DILocation(line: 3797, column: 23, scope: !8832)
!8834 = !DILocation(line: 3797, column: 44, scope: !8832)
!8835 = !DILocation(line: 3798, column: 18, scope: !8832)
!8836 = !DILocation(line: 3798, column: 22, scope: !8832)
!8837 = !DILocation(line: 3798, column: 35, scope: !8832)
!8838 = !DILocation(line: 3798, column: 43, scope: !8832)
!8839 = !DILocation(line: 3798, column: 63, scope: !8832)
!8840 = !DILocation(line: 3798, column: 8, scope: !8832)
!8841 = !DILocation(line: 3798, column: 82, scope: !8832)
!8842 = !DILocation(line: 3798, column: 87, scope: !8832)
!8843 = !DILocation(line: 3799, column: 8, scope: !8832)
!8844 = !DILocation(line: 3799, column: 12, scope: !8832)
!8845 = !DILocation(line: 3799, column: 25, scope: !8832)
!8846 = !DILocation(line: 3799, column: 33, scope: !8832)
!8847 = !DILocation(line: 3799, column: 54, scope: !8832)
!8848 = !DILocation(line: 3797, column: 15, scope: !8807)
!8849 = !DILocation(line: 3804, column: 19, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8832, file: !497, line: 3800, column: 2)
!8851 = !DILocation(line: 3804, column: 23, scope: !8850)
!8852 = !DILocation(line: 3804, column: 6, scope: !8850)
!8853 = !DILocation(line: 3804, column: 38, scope: !8850)
!8854 = !DILocation(line: 3804, column: 42, scope: !8850)
!8855 = !DILocation(line: 3801, column: 2, scope: !8850)
!8856 = !DILocation(line: 3806, column: 6, scope: !8850)
!8857 = !DILocation(line: 3806, column: 15, scope: !8850)
!8858 = !DILocation(line: 3808, column: 6, scope: !8850)
!8859 = !DILocation(line: 3808, column: 10, scope: !8850)
!8860 = !DILocation(line: 3805, column: 2, scope: !8850)
!8861 = !DILocation(line: 3809, column: 2, scope: !8850)
!8862 = !DILocation(line: 3814, column: 28, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3814, column: 10)
!8864 = !DILocation(line: 3814, column: 12, scope: !8863)
!8865 = !DILocation(line: 3814, column: 10, scope: !833)
!8866 = !DILocation(line: 3815, column: 2, scope: !8863)
!8867 = !DILocation(line: 3818, column: 10, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3818, column: 10)
!8869 = !DILocation(line: 3818, column: 14, scope: !8868)
!8870 = !DILocation(line: 3818, column: 18, scope: !8868)
!8871 = !DILocation(line: 3818, column: 30, scope: !8868)
!8872 = !DILocation(line: 3818, column: 43, scope: !8868)
!8873 = !DILocation(line: 3819, column: 5, scope: !8868)
!8874 = !DILocation(line: 3819, column: 9, scope: !8868)
!8875 = !DILocation(line: 3819, column: 12, scope: !8868)
!8876 = !DILocation(line: 3819, column: 20, scope: !8868)
!8877 = !DILocation(line: 3819, column: 32, scope: !8868)
!8878 = !DILocation(line: 3820, column: 10, scope: !8868)
!8879 = !DILocation(line: 3820, column: 14, scope: !8868)
!8880 = !DILocation(line: 3820, column: 18, scope: !8868)
!8881 = !DILocation(line: 3820, column: 31, scope: !8868)
!8882 = !DILocation(line: 3820, column: 35, scope: !8868)
!8883 = !DILocation(line: 3820, column: 3, scope: !8868)
!8884 = !DILocation(line: 3818, column: 10, scope: !833)
!8885 = !DILocation(line: 3821, column: 14, scope: !8868)
!8886 = !DILocation(line: 3821, column: 9, scope: !8868)
!8887 = !DILocation(line: 3821, column: 2, scope: !8868)
!8888 = !DILocation(line: 3827, column: 10, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3827, column: 10)
!8890 = !DILocation(line: 3827, column: 14, scope: !8889)
!8891 = !DILocation(line: 3827, column: 17, scope: !8889)
!8892 = !DILocation(line: 3827, column: 25, scope: !8889)
!8893 = !DILocation(line: 3827, column: 10, scope: !833)
!8894 = !DILocation(line: 3831, column: 19, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8889, file: !497, line: 3828, column: 2)
!8896 = !DILocation(line: 3831, column: 23, scope: !8895)
!8897 = !DILocation(line: 3831, column: 6, scope: !8895)
!8898 = !DILocation(line: 3831, column: 38, scope: !8895)
!8899 = !DILocation(line: 3831, column: 42, scope: !8895)
!8900 = !DILocation(line: 3829, column: 2, scope: !8895)
!8901 = !DILocation(line: 3833, column: 6, scope: !8895)
!8902 = !DILocation(line: 3833, column: 15, scope: !8895)
!8903 = !DILocation(line: 3835, column: 6, scope: !8895)
!8904 = !DILocation(line: 3835, column: 10, scope: !8895)
!8905 = !DILocation(line: 3832, column: 2, scope: !8895)
!8906 = !DILocation(line: 3836, column: 2, scope: !8895)
!8907 = !DILocation(line: 3838, column: 10, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3838, column: 10)
!8909 = !DILocation(line: 3838, column: 14, scope: !8908)
!8910 = !DILocation(line: 3838, column: 26, scope: !8908)
!8911 = !DILocation(line: 3838, column: 10, scope: !833)
!8912 = !DILocation(line: 3842, column: 19, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8908, file: !497, line: 3839, column: 2)
!8914 = !DILocation(line: 3842, column: 23, scope: !8913)
!8915 = !DILocation(line: 3842, column: 6, scope: !8913)
!8916 = !DILocation(line: 3842, column: 38, scope: !8913)
!8917 = !DILocation(line: 3842, column: 42, scope: !8913)
!8918 = !DILocation(line: 3840, column: 2, scope: !8913)
!8919 = !DILocation(line: 3844, column: 6, scope: !8913)
!8920 = !DILocation(line: 3844, column: 15, scope: !8913)
!8921 = !DILocation(line: 3846, column: 6, scope: !8913)
!8922 = !DILocation(line: 3846, column: 10, scope: !8913)
!8923 = !DILocation(line: 3843, column: 2, scope: !8913)
!8924 = !DILocation(line: 3847, column: 2, scope: !8913)
!8925 = !DILocation(line: 3850, column: 10, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3850, column: 10)
!8927 = !DILocation(line: 3850, column: 14, scope: !8926)
!8928 = !DILocation(line: 3850, column: 21, scope: !8926)
!8929 = !DILocation(line: 3850, column: 35, scope: !8926)
!8930 = !DILocation(line: 3850, column: 38, scope: !8926)
!8931 = !DILocation(line: 3850, column: 42, scope: !8926)
!8932 = !DILocation(line: 3850, column: 49, scope: !8926)
!8933 = !DILocation(line: 3850, column: 10, scope: !833)
!8934 = !DILocation(line: 3853, column: 6, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8926, file: !497, line: 3851, column: 2)
!8936 = !DILocation(line: 3853, column: 15, scope: !8935)
!8937 = !DILocation(line: 3853, column: 32, scope: !8935)
!8938 = !DILocation(line: 3853, column: 62, scope: !8935)
!8939 = !DILocation(line: 3853, column: 66, scope: !8935)
!8940 = !DILocation(line: 3853, column: 44, scope: !8935)
!8941 = !DILocation(line: 3852, column: 2, scope: !8935)
!8942 = !DILocation(line: 3854, column: 2, scope: !8935)
!8943 = !DILocation(line: 3858, column: 10, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3858, column: 10)
!8945 = !DILocation(line: 3858, column: 14, scope: !8944)
!8946 = !DILocation(line: 3858, column: 24, scope: !8944)
!8947 = !DILocation(line: 3859, column: 5, scope: !8944)
!8948 = !DILocation(line: 3859, column: 9, scope: !8944)
!8949 = !DILocation(line: 3859, column: 25, scope: !8944)
!8950 = !DILocation(line: 3859, column: 31, scope: !8944)
!8951 = !DILocation(line: 3859, column: 34, scope: !8944)
!8952 = !DILocation(line: 3859, column: 38, scope: !8944)
!8953 = !DILocation(line: 3859, column: 57, scope: !8944)
!8954 = !DILocation(line: 3859, column: 61, scope: !8944)
!8955 = !DILocation(line: 3859, column: 64, scope: !8944)
!8956 = !DILocation(line: 3859, column: 54, scope: !8944)
!8957 = !DILocation(line: 3858, column: 10, scope: !833)
!8958 = !DILocation(line: 3860, column: 24, scope: !8944)
!8959 = !DILocation(line: 3860, column: 28, scope: !8944)
!8960 = !DILocation(line: 3860, column: 31, scope: !8944)
!8961 = !DILocation(line: 3860, column: 39, scope: !8944)
!8962 = !DILocation(line: 3860, column: 2, scope: !8944)
!8963 = !DILocation(line: 3860, column: 6, scope: !8944)
!8964 = !DILocation(line: 3860, column: 22, scope: !8944)
!8965 = !DILocation(line: 3862, column: 18, scope: !833)
!8966 = !DILocation(line: 3862, column: 5, scope: !833)
!8967 = !DILocation(line: 3864, column: 10, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !833, file: !497, line: 3864, column: 10)
!8969 = !DILocation(line: 3864, column: 14, scope: !8968)
!8970 = !DILocation(line: 3864, column: 21, scope: !8968)
!8971 = !DILocation(line: 3864, column: 10, scope: !833)
!8972 = !DILocation(line: 3867, column: 6, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8968, file: !497, line: 3865, column: 2)
!8974 = !DILocation(line: 3867, column: 15, scope: !8973)
!8975 = !DILocation(line: 3867, column: 27, scope: !8973)
!8976 = !DILocation(line: 3867, column: 31, scope: !8973)
!8977 = !DILocation(line: 3867, column: 46, scope: !8973)
!8978 = !DILocation(line: 3867, column: 50, scope: !8973)
!8979 = !DILocation(line: 3867, column: 56, scope: !8973)
!8980 = !DILocation(line: 3867, column: 60, scope: !8973)
!8981 = !DILocation(line: 3867, column: 63, scope: !8973)
!8982 = !DILocation(line: 3868, column: 6, scope: !8973)
!8983 = !DILocation(line: 3868, column: 10, scope: !8973)
!8984 = !DILocation(line: 3868, column: 13, scope: !8973)
!8985 = !DILocation(line: 3866, column: 2, scope: !8973)
!8986 = !DILocation(line: 3869, column: 2, scope: !8973)
!8987 = !DILocation(line: 3870, column: 15, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8968, file: !497, line: 3870, column: 15)
!8989 = !DILocation(line: 3870, column: 19, scope: !8988)
!8990 = !DILocation(line: 3870, column: 37, scope: !8988)
!8991 = !DILocation(line: 3870, column: 52, scope: !8988)
!8992 = !DILocation(line: 3871, column: 3, scope: !8988)
!8993 = !DILocation(line: 3871, column: 7, scope: !8988)
!8994 = !DILocation(line: 3871, column: 28, scope: !8988)
!8995 = !DILocation(line: 3871, column: 32, scope: !8988)
!8996 = !DILocation(line: 3871, column: 35, scope: !8988)
!8997 = !DILocation(line: 3871, column: 25, scope: !8988)
!8998 = !DILocation(line: 3870, column: 15, scope: !8968)
!8999 = !DILocation(line: 3874, column: 6, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8988, file: !497, line: 3872, column: 2)
!9001 = !DILocation(line: 3874, column: 15, scope: !9000)
!9002 = !DILocation(line: 3874, column: 28, scope: !9000)
!9003 = !DILocation(line: 3874, column: 32, scope: !9000)
!9004 = !DILocation(line: 3874, column: 47, scope: !9000)
!9005 = !DILocation(line: 3874, column: 51, scope: !9000)
!9006 = !DILocation(line: 3875, column: 6, scope: !9000)
!9007 = !DILocation(line: 3875, column: 10, scope: !9000)
!9008 = !DILocation(line: 3875, column: 13, scope: !9000)
!9009 = !DILocation(line: 3873, column: 2, scope: !9000)
!9010 = !DILocation(line: 3876, column: 2, scope: !9000)
!9011 = !DILocation(line: 3879, column: 30, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !8988, file: !497, line: 3878, column: 2)
!9013 = !DILocation(line: 3879, column: 34, scope: !9012)
!9014 = !DILocation(line: 3879, column: 50, scope: !9012)
!9015 = !DILocation(line: 3879, column: 54, scope: !9012)
!9016 = !DILocation(line: 3879, column: 59, scope: !9012)
!9017 = !DILocation(line: 3879, column: 21, scope: !9012)
!9018 = !DILocation(line: 3879, column: 2, scope: !9012)
!9019 = !DILocation(line: 3879, column: 6, scope: !9012)
!9020 = !DILocation(line: 3879, column: 19, scope: !9012)
!9021 = !DILocation(line: 3880, column: 7, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9012, file: !497, line: 3880, column: 7)
!9023 = !DILocation(line: 3880, column: 11, scope: !9022)
!9024 = !DILocation(line: 3880, column: 24, scope: !9022)
!9025 = !DILocation(line: 3880, column: 7, scope: !9012)
!9026 = !DILocation(line: 3882, column: 22, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9022, file: !497, line: 3881, column: 6)
!9028 = !DILocation(line: 3882, column: 31, scope: !9027)
!9029 = !DILocation(line: 3882, column: 48, scope: !9027)
!9030 = !DILocation(line: 3882, column: 60, scope: !9027)
!9031 = !DILocation(line: 3882, column: 64, scope: !9027)
!9032 = !DILocation(line: 3882, column: 6, scope: !9027)
!9033 = !DILocation(line: 3883, column: 6, scope: !9027)
!9034 = !DILocation(line: 3886, column: 6, scope: !9012)
!9035 = !DILocation(line: 3886, column: 15, scope: !9012)
!9036 = !DILocation(line: 3886, column: 27, scope: !9012)
!9037 = !DILocation(line: 3886, column: 31, scope: !9012)
!9038 = !DILocation(line: 3886, column: 46, scope: !9012)
!9039 = !DILocation(line: 3886, column: 50, scope: !9012)
!9040 = !DILocation(line: 3886, column: 56, scope: !9012)
!9041 = !DILocation(line: 3886, column: 60, scope: !9012)
!9042 = !DILocation(line: 3886, column: 63, scope: !9012)
!9043 = !DILocation(line: 3887, column: 6, scope: !9012)
!9044 = !DILocation(line: 3887, column: 10, scope: !9012)
!9045 = !DILocation(line: 3887, column: 13, scope: !9012)
!9046 = !DILocation(line: 3885, column: 2, scope: !9012)
!9047 = !DILocation(line: 3890, column: 5, scope: !833)
!9048 = !DILocation(line: 3891, column: 5, scope: !833)
!9049 = !DILocalVariable(name: "hc", arg: 1, scope: !851, file: !497, line: 1172, type: !709)
!9050 = !DILocation(line: 1172, column: 31, scope: !851)
!9051 = !DILocation(line: 1179, column: 10, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !851, file: !497, line: 1179, column: 10)
!9053 = !DILocation(line: 1179, column: 14, scope: !9052)
!9054 = !DILocation(line: 1179, column: 23, scope: !9052)
!9055 = !DILocation(line: 1179, column: 10, scope: !851)
!9056 = !DILocalVariable(name: "cp", scope: !9057, file: !497, line: 1181, type: !6)
!9057 = distinct !DILexicalBlock(scope: !9052, file: !497, line: 1180, column: 2)
!9058 = !DILocation(line: 1181, column: 8, scope: !9057)
!9059 = !DILocation(line: 1181, column: 21, scope: !9057)
!9060 = !DILocation(line: 1181, column: 25, scope: !9057)
!9061 = !DILocation(line: 1181, column: 13, scope: !9057)
!9062 = !DILocation(line: 1182, column: 7, scope: !9063)
!9063 = distinct !DILexicalBlock(scope: !9057, file: !497, line: 1182, column: 7)
!9064 = !DILocation(line: 1182, column: 10, scope: !9063)
!9065 = !DILocation(line: 1182, column: 7, scope: !9057)
!9066 = !DILocation(line: 1183, column: 7, scope: !9063)
!9067 = !DILocation(line: 1183, column: 10, scope: !9063)
!9068 = !DILocation(line: 1183, column: 6, scope: !9063)
!9069 = !DILocation(line: 1186, column: 14, scope: !9057)
!9070 = !DILocation(line: 1186, column: 18, scope: !9057)
!9071 = !DILocation(line: 1186, column: 6, scope: !9057)
!9072 = !DILocation(line: 1186, column: 31, scope: !9057)
!9073 = !DILocation(line: 1186, column: 45, scope: !9057)
!9074 = !DILocation(line: 1186, column: 49, scope: !9057)
!9075 = !DILocation(line: 1186, column: 37, scope: !9057)
!9076 = !DILocation(line: 1186, column: 35, scope: !9057)
!9077 = !DILocation(line: 1184, column: 2, scope: !9057)
!9078 = !DILocation(line: 1187, column: 22, scope: !9057)
!9079 = !DILocation(line: 1187, column: 32, scope: !9057)
!9080 = !DILocation(line: 1188, column: 16, scope: !9057)
!9081 = !DILocation(line: 1188, column: 20, scope: !9057)
!9082 = !DILocation(line: 1188, column: 32, scope: !9057)
!9083 = !DILocation(line: 1188, column: 36, scope: !9057)
!9084 = !DILocation(line: 1187, column: 9, scope: !9057)
!9085 = !DILocation(line: 1189, column: 2, scope: !9057)
!9086 = !DILocation(line: 1193, column: 39, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9052, file: !497, line: 1191, column: 2)
!9088 = !DILocation(line: 1193, column: 43, scope: !9087)
!9089 = !DILocation(line: 1193, column: 31, scope: !9087)
!9090 = !DILocation(line: 1193, column: 56, scope: !9087)
!9091 = !DILocation(line: 1192, column: 2, scope: !9087)
!9092 = !DILocation(line: 1194, column: 22, scope: !9087)
!9093 = !DILocation(line: 1194, column: 32, scope: !9087)
!9094 = !DILocation(line: 1195, column: 13, scope: !9087)
!9095 = !DILocation(line: 1195, column: 17, scope: !9087)
!9096 = !DILocation(line: 1194, column: 9, scope: !9087)
!9097 = !DILocation(line: 1198, column: 49, scope: !851)
!9098 = !DILocation(line: 1198, column: 41, scope: !851)
!9099 = !DILocation(line: 1198, column: 39, scope: !851)
!9100 = !DILocation(line: 1197, column: 5, scope: !851)
!9101 = !DILocation(line: 1199, column: 25, scope: !851)
!9102 = !DILocation(line: 1199, column: 33, scope: !851)
!9103 = !DILocation(line: 1200, column: 27, scope: !851)
!9104 = !DILocation(line: 1199, column: 12, scope: !851)
!9105 = !DILocation(line: 1201, column: 20, scope: !851)
!9106 = !DILocation(line: 1201, column: 29, scope: !851)
!9107 = !DILocation(line: 1201, column: 42, scope: !851)
!9108 = !DILocation(line: 1201, column: 50, scope: !851)
!9109 = !DILocation(line: 1201, column: 62, scope: !851)
!9110 = !DILocation(line: 1201, column: 5, scope: !851)
!9111 = !DILocation(line: 1202, column: 5, scope: !851)
!9112 = distinct !DISubprogram(name: "auth_check", scope: !497, file: !497, line: 998, type: !872, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!9113 = !DILocalVariable(name: "hc", arg: 1, scope: !9112, file: !497, line: 998, type: !709)
!9114 = !DILocation(line: 998, column: 25, scope: !9112)
!9115 = !DILocalVariable(name: "dirname", arg: 2, scope: !9112, file: !497, line: 998, type: !6)
!9116 = !DILocation(line: 998, column: 35, scope: !9112)
!9117 = !DILocation(line: 1000, column: 10, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9112, file: !497, line: 1000, column: 10)
!9119 = !DILocation(line: 1000, column: 14, scope: !9118)
!9120 = !DILocation(line: 1000, column: 18, scope: !9118)
!9121 = !DILocation(line: 1000, column: 10, scope: !9112)
!9122 = !DILocalVariable(name: "topdir", scope: !9123, file: !497, line: 1002, type: !6)
!9123 = distinct !DILexicalBlock(scope: !9118, file: !497, line: 1001, column: 2)
!9124 = !DILocation(line: 1002, column: 8, scope: !9123)
!9125 = !DILocation(line: 1003, column: 7, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9123, file: !497, line: 1003, column: 7)
!9127 = !DILocation(line: 1003, column: 11, scope: !9126)
!9128 = !DILocation(line: 1003, column: 15, scope: !9126)
!9129 = !DILocation(line: 1003, column: 21, scope: !9126)
!9130 = !DILocation(line: 1003, column: 24, scope: !9126)
!9131 = !DILocation(line: 1003, column: 28, scope: !9126)
!9132 = !DILocation(line: 1003, column: 39, scope: !9126)
!9133 = !DILocation(line: 1003, column: 7, scope: !9123)
!9134 = !DILocation(line: 1004, column: 15, scope: !9126)
!9135 = !DILocation(line: 1004, column: 19, scope: !9126)
!9136 = !DILocation(line: 1004, column: 13, scope: !9126)
!9137 = !DILocation(line: 1004, column: 6, scope: !9126)
!9138 = !DILocation(line: 1006, column: 13, scope: !9126)
!9139 = !DILocation(line: 1007, column: 24, scope: !9123)
!9140 = !DILocation(line: 1007, column: 28, scope: !9123)
!9141 = !DILocation(line: 1007, column: 11, scope: !9123)
!9142 = !DILocation(line: 1007, column: 2, scope: !9123)
!9143 = !DILocation(line: 1010, column: 6, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9123, file: !497, line: 1008, column: 6)
!9145 = !DILocation(line: 1012, column: 6, scope: !9144)
!9146 = !DILocation(line: 1014, column: 2, scope: !9123)
!9147 = !DILocation(line: 1015, column: 25, scope: !9112)
!9148 = !DILocation(line: 1015, column: 29, scope: !9112)
!9149 = !DILocation(line: 1015, column: 12, scope: !9112)
!9150 = !DILocation(line: 1015, column: 5, scope: !9112)
!9151 = !DILocation(line: 1016, column: 5, scope: !9112)
!9152 = distinct !DISubprogram(name: "check_referrer", scope: !497, file: !497, line: 4005, type: !707, scopeLine: 4006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!9153 = !DILocalVariable(name: "hc", arg: 1, scope: !9152, file: !497, line: 4005, type: !709)
!9154 = !DILocation(line: 4005, column: 29, scope: !9152)
!9155 = !DILocalVariable(name: "r", scope: !9152, file: !497, line: 4007, type: !26)
!9156 = !DILocation(line: 4007, column: 9, scope: !9152)
!9157 = !DILocalVariable(name: "cp", scope: !9152, file: !497, line: 4008, type: !6)
!9158 = !DILocation(line: 4008, column: 11, scope: !9152)
!9159 = !DILocation(line: 4011, column: 10, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9152, file: !497, line: 4011, column: 10)
!9161 = !DILocation(line: 4011, column: 14, scope: !9160)
!9162 = !DILocation(line: 4011, column: 18, scope: !9160)
!9163 = !DILocation(line: 4011, column: 30, scope: !9160)
!9164 = !DILocation(line: 4011, column: 10, scope: !9152)
!9165 = !DILocation(line: 4012, column: 2, scope: !9160)
!9166 = !DILocation(line: 4014, column: 32, scope: !9152)
!9167 = !DILocation(line: 4014, column: 9, scope: !9152)
!9168 = !DILocation(line: 4014, column: 7, scope: !9152)
!9169 = !DILocation(line: 4016, column: 12, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9152, file: !497, line: 4016, column: 10)
!9171 = !DILocation(line: 4016, column: 10, scope: !9152)
!9172 = !DILocation(line: 4018, column: 7, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9174, file: !497, line: 4018, column: 7)
!9174 = distinct !DILexicalBlock(scope: !9170, file: !497, line: 4017, column: 2)
!9175 = !DILocation(line: 4018, column: 11, scope: !9173)
!9176 = !DILocation(line: 4018, column: 15, scope: !9173)
!9177 = !DILocation(line: 4018, column: 21, scope: !9173)
!9178 = !DILocation(line: 4018, column: 24, scope: !9173)
!9179 = !DILocation(line: 4018, column: 28, scope: !9173)
!9180 = !DILocation(line: 4018, column: 37, scope: !9173)
!9181 = !DILocation(line: 4018, column: 7, scope: !9174)
!9182 = !DILocation(line: 4019, column: 11, scope: !9173)
!9183 = !DILocation(line: 4019, column: 15, scope: !9173)
!9184 = !DILocation(line: 4019, column: 9, scope: !9173)
!9185 = !DILocation(line: 4019, column: 6, scope: !9173)
!9186 = !DILocation(line: 4021, column: 11, scope: !9173)
!9187 = !DILocation(line: 4021, column: 15, scope: !9173)
!9188 = !DILocation(line: 4021, column: 19, scope: !9173)
!9189 = !DILocation(line: 4021, column: 9, scope: !9173)
!9190 = !DILocation(line: 4022, column: 7, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9174, file: !497, line: 4022, column: 7)
!9192 = !DILocation(line: 4022, column: 10, scope: !9191)
!9193 = !DILocation(line: 4022, column: 7, scope: !9174)
!9194 = !DILocation(line: 4023, column: 9, scope: !9191)
!9195 = !DILocation(line: 4023, column: 6, scope: !9191)
!9196 = !DILocation(line: 4026, column: 19, scope: !9174)
!9197 = !DILocation(line: 4026, column: 23, scope: !9174)
!9198 = !DILocation(line: 4026, column: 6, scope: !9174)
!9199 = !DILocation(line: 4026, column: 38, scope: !9174)
!9200 = !DILocation(line: 4026, column: 42, scope: !9174)
!9201 = !DILocation(line: 4026, column: 46, scope: !9174)
!9202 = !DILocation(line: 4026, column: 58, scope: !9174)
!9203 = !DILocation(line: 4026, column: 62, scope: !9174)
!9204 = !DILocation(line: 4024, column: 2, scope: !9174)
!9205 = !DILocation(line: 4028, column: 6, scope: !9174)
!9206 = !DILocation(line: 4028, column: 15, scope: !9174)
!9207 = !DILocation(line: 4030, column: 6, scope: !9174)
!9208 = !DILocation(line: 4030, column: 10, scope: !9174)
!9209 = !DILocation(line: 4027, column: 2, scope: !9174)
!9210 = !DILocation(line: 4031, column: 2, scope: !9174)
!9211 = !DILocation(line: 4032, column: 12, scope: !9152)
!9212 = !DILocation(line: 4032, column: 5, scope: !9152)
!9213 = !DILocation(line: 4033, column: 5, scope: !9152)
!9214 = !DILocalVariable(name: "hc", arg: 1, scope: !916, file: !497, line: 2706, type: !709)
!9215 = !DILocation(line: 2706, column: 17, scope: !916)
!9216 = !DILocalVariable(name: "dirp", scope: !916, file: !497, line: 2708, type: !609)
!9217 = !DILocation(line: 2708, column: 10, scope: !916)
!9218 = !DILocalVariable(name: "de", scope: !916, file: !497, line: 2709, type: !9219)
!9219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9220, size: 64)
!9220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !9221, line: 112, size: 8384, elements: !9222)
!9221 = !DIFile(filename: "/usr/include/sys/dirent.h", directory: "")
!9222 = !{!9223, !9224, !9225, !9226, !9227, !9228}
!9223 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !9220, file: !9221, line: 112, baseType: !339, size: 64)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "d_seekoff", scope: !9220, file: !9221, line: 112, baseType: !339, size: 64, offset: 64)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !9220, file: !9221, line: 112, baseType: !136, size: 16, offset: 128)
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "d_namlen", scope: !9220, file: !9221, line: 112, baseType: !136, size: 16, offset: 144)
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !9220, file: !9221, line: 112, baseType: !119, size: 8, offset: 160)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !9220, file: !9221, line: 112, baseType: !9229, size: 8192, offset: 168)
!9229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 8192, elements: !9230)
!9230 = !{!9231}
!9231 = !DISubrange(count: 1024)
!9232 = !DILocation(line: 2709, column: 20, scope: !916)
!9233 = !DILocalVariable(name: "namlen", scope: !916, file: !497, line: 2710, type: !26)
!9234 = !DILocation(line: 2710, column: 9, scope: !916)
!9235 = !DILocalVariable(name: "nnames", scope: !916, file: !497, line: 2712, type: !26)
!9236 = !DILocation(line: 2712, column: 9, scope: !916)
!9237 = !DILocalVariable(name: "fp", scope: !916, file: !497, line: 2721, type: !517)
!9238 = !DILocation(line: 2721, column: 11, scope: !916)
!9239 = !DILocalVariable(name: "i", scope: !916, file: !497, line: 2722, type: !26)
!9240 = !DILocation(line: 2722, column: 9, scope: !916)
!9241 = !DILocalVariable(name: "r", scope: !916, file: !497, line: 2722, type: !26)
!9242 = !DILocation(line: 2722, column: 12, scope: !916)
!9243 = !DILocalVariable(name: "sb", scope: !916, file: !497, line: 2723, type: !773)
!9244 = !DILocation(line: 2723, column: 17, scope: !916)
!9245 = !DILocalVariable(name: "lsb", scope: !916, file: !497, line: 2724, type: !773)
!9246 = !DILocation(line: 2724, column: 17, scope: !916)
!9247 = !DILocalVariable(name: "modestr", scope: !916, file: !497, line: 2725, type: !9248)
!9248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !9249)
!9249 = !{!9250}
!9250 = !DISubrange(count: 20)
!9251 = !DILocation(line: 2725, column: 10, scope: !916)
!9252 = !DILocalVariable(name: "linkprefix", scope: !916, file: !497, line: 2726, type: !6)
!9253 = !DILocation(line: 2726, column: 11, scope: !916)
!9254 = !DILocalVariable(name: "lnk", scope: !916, file: !497, line: 2727, type: !976)
!9255 = !DILocation(line: 2727, column: 10, scope: !916)
!9256 = !DILocalVariable(name: "linklen", scope: !916, file: !497, line: 2728, type: !26)
!9257 = !DILocation(line: 2728, column: 9, scope: !916)
!9258 = !DILocalVariable(name: "fileclass", scope: !916, file: !497, line: 2729, type: !6)
!9259 = !DILocation(line: 2729, column: 11, scope: !916)
!9260 = !DILocalVariable(name: "now", scope: !916, file: !497, line: 2730, type: !244)
!9261 = !DILocation(line: 2730, column: 12, scope: !916)
!9262 = !DILocalVariable(name: "timestr", scope: !916, file: !497, line: 2731, type: !6)
!9263 = !DILocation(line: 2731, column: 11, scope: !916)
!9264 = !DILocalVariable(name: "client_data", scope: !916, file: !497, line: 2732, type: !650)
!9265 = !DILocation(line: 2732, column: 16, scope: !916)
!9266 = !DILocation(line: 2734, column: 21, scope: !916)
!9267 = !DILocation(line: 2734, column: 25, scope: !916)
!9268 = !DILocation(line: 2734, column: 12, scope: !916)
!9269 = !DILocation(line: 2734, column: 10, scope: !916)
!9270 = !DILocation(line: 2735, column: 10, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !916, file: !497, line: 2735, column: 10)
!9272 = !DILocation(line: 2735, column: 15, scope: !9271)
!9273 = !DILocation(line: 2735, column: 10, scope: !916)
!9274 = !DILocation(line: 2737, column: 41, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9271, file: !497, line: 2736, column: 2)
!9276 = !DILocation(line: 2737, column: 45, scope: !9275)
!9277 = !DILocation(line: 2737, column: 2, scope: !9275)
!9278 = !DILocation(line: 2738, column: 18, scope: !9275)
!9279 = !DILocation(line: 2738, column: 27, scope: !9275)
!9280 = !DILocation(line: 2738, column: 44, scope: !9275)
!9281 = !DILocation(line: 2738, column: 56, scope: !9275)
!9282 = !DILocation(line: 2738, column: 60, scope: !9275)
!9283 = !DILocation(line: 2738, column: 2, scope: !9275)
!9284 = !DILocation(line: 2739, column: 2, scope: !9275)
!9285 = !DILocation(line: 2742, column: 10, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !916, file: !497, line: 2742, column: 10)
!9287 = !DILocation(line: 2742, column: 14, scope: !9286)
!9288 = !DILocation(line: 2742, column: 21, scope: !9286)
!9289 = !DILocation(line: 2742, column: 10, scope: !916)
!9290 = !DILocation(line: 2744, column: 12, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9286, file: !497, line: 2743, column: 2)
!9292 = !DILocation(line: 2744, column: 2, scope: !9291)
!9293 = !DILocation(line: 2746, column: 6, scope: !9291)
!9294 = !DILocation(line: 2746, column: 15, scope: !9291)
!9295 = !DILocation(line: 2747, column: 6, scope: !9291)
!9296 = !DILocation(line: 2747, column: 10, scope: !9291)
!9297 = !DILocation(line: 2747, column: 13, scope: !9291)
!9298 = !DILocation(line: 2745, column: 2, scope: !9291)
!9299 = !DILocation(line: 2748, column: 2, scope: !9291)
!9300 = !DILocation(line: 2749, column: 15, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9286, file: !497, line: 2749, column: 15)
!9302 = !DILocation(line: 2749, column: 19, scope: !9301)
!9303 = !DILocation(line: 2749, column: 26, scope: !9301)
!9304 = !DILocation(line: 2749, column: 15, scope: !9286)
!9305 = !DILocation(line: 2751, column: 7, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9307, file: !497, line: 2751, column: 7)
!9307 = distinct !DILexicalBlock(scope: !9301, file: !497, line: 2750, column: 2)
!9308 = !DILocation(line: 2751, column: 11, scope: !9306)
!9309 = !DILocation(line: 2751, column: 15, scope: !9306)
!9310 = !DILocation(line: 2751, column: 25, scope: !9306)
!9311 = !DILocation(line: 2751, column: 30, scope: !9306)
!9312 = !DILocation(line: 2751, column: 33, scope: !9306)
!9313 = !DILocation(line: 2751, column: 37, scope: !9306)
!9314 = !DILocation(line: 2751, column: 41, scope: !9306)
!9315 = !DILocation(line: 2751, column: 54, scope: !9306)
!9316 = !DILocation(line: 2751, column: 58, scope: !9306)
!9317 = !DILocation(line: 2751, column: 62, scope: !9306)
!9318 = !DILocation(line: 2751, column: 51, scope: !9306)
!9319 = !DILocation(line: 2751, column: 7, scope: !9307)
!9320 = !DILocation(line: 2753, column: 16, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9306, file: !497, line: 2752, column: 6)
!9322 = !DILocation(line: 2753, column: 6, scope: !9321)
!9323 = !DILocation(line: 2755, column: 3, scope: !9321)
!9324 = !DILocation(line: 2755, column: 12, scope: !9321)
!9325 = !DILocation(line: 2755, column: 35, scope: !9321)
!9326 = !DILocation(line: 2756, column: 3, scope: !9321)
!9327 = !DILocation(line: 2756, column: 7, scope: !9321)
!9328 = !DILocation(line: 2754, column: 6, scope: !9321)
!9329 = !DILocation(line: 2757, column: 6, scope: !9321)
!9330 = !DILocation(line: 2759, column: 4, scope: !9307)
!9331 = !DILocation(line: 2759, column: 8, scope: !9307)
!9332 = !DILocation(line: 2759, column: 12, scope: !9307)
!9333 = !DILocation(line: 2759, column: 2, scope: !9307)
!9334 = !DILocation(line: 2760, column: 6, scope: !9307)
!9335 = !DILocation(line: 2760, column: 4, scope: !9307)
!9336 = !DILocation(line: 2761, column: 7, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9307, file: !497, line: 2761, column: 7)
!9338 = !DILocation(line: 2761, column: 9, scope: !9337)
!9339 = !DILocation(line: 2761, column: 7, scope: !9307)
!9340 = !DILocation(line: 2763, column: 6, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9337, file: !497, line: 2762, column: 6)
!9342 = !DILocation(line: 2764, column: 16, scope: !9341)
!9343 = !DILocation(line: 2764, column: 6, scope: !9341)
!9344 = !DILocation(line: 2766, column: 3, scope: !9341)
!9345 = !DILocation(line: 2766, column: 12, scope: !9341)
!9346 = !DILocation(line: 2766, column: 29, scope: !9341)
!9347 = !DILocation(line: 2766, column: 41, scope: !9341)
!9348 = !DILocation(line: 2766, column: 45, scope: !9341)
!9349 = !DILocation(line: 2765, column: 6, scope: !9341)
!9350 = !DILocation(line: 2767, column: 6, scope: !9341)
!9351 = !DILocation(line: 2769, column: 7, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9307, file: !497, line: 2769, column: 7)
!9353 = !DILocation(line: 2769, column: 9, scope: !9352)
!9354 = !DILocation(line: 2769, column: 7, scope: !9307)
!9355 = !DILocation(line: 2772, column: 18, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9352, file: !497, line: 2770, column: 6)
!9357 = !DILocation(line: 2773, column: 22, scope: !9356)
!9358 = !DILocation(line: 2773, column: 26, scope: !9356)
!9359 = !DILocation(line: 2773, column: 6, scope: !9356)
!9360 = !DILocation(line: 2775, column: 3, scope: !9356)
!9361 = !DILocation(line: 2775, column: 12, scope: !9356)
!9362 = !DILocation(line: 2776, column: 15, scope: !9356)
!9363 = !DILocation(line: 2776, column: 19, scope: !9356)
!9364 = !DILocation(line: 2776, column: 22, scope: !9356)
!9365 = !DILocation(line: 2774, column: 6, scope: !9356)
!9366 = !DILocation(line: 2777, column: 28, scope: !9356)
!9367 = !DILocation(line: 2777, column: 6, scope: !9356)
!9368 = !DILocation(line: 2781, column: 13, scope: !9356)
!9369 = !DILocation(line: 2789, column: 19, scope: !9356)
!9370 = !DILocation(line: 2789, column: 23, scope: !9356)
!9371 = !DILocation(line: 2789, column: 11, scope: !9356)
!9372 = !DILocation(line: 2789, column: 9, scope: !9356)
!9373 = !DILocation(line: 2790, column: 11, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9356, file: !497, line: 2790, column: 11)
!9375 = !DILocation(line: 2790, column: 14, scope: !9374)
!9376 = !DILocation(line: 2790, column: 11, scope: !9356)
!9377 = !DILocation(line: 2792, column: 3, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9374, file: !497, line: 2791, column: 3)
!9379 = !DILocation(line: 2794, column: 7, scope: !9378)
!9380 = !DILocation(line: 2794, column: 16, scope: !9378)
!9381 = !DILocation(line: 2794, column: 33, scope: !9378)
!9382 = !DILocation(line: 2794, column: 45, scope: !9378)
!9383 = !DILocation(line: 2794, column: 49, scope: !9378)
!9384 = !DILocation(line: 2793, column: 3, scope: !9378)
!9385 = !DILocation(line: 2795, column: 25, scope: !9378)
!9386 = !DILocation(line: 2795, column: 3, scope: !9378)
!9387 = !DILocation(line: 2796, column: 13, scope: !9378)
!9388 = !DILocation(line: 2796, column: 3, scope: !9378)
!9389 = !DILocation(line: 2797, column: 3, scope: !9378)
!9390 = !DILocation(line: 2800, column: 22, scope: !9356)
!9391 = !DILocation(line: 2817, column: 3, scope: !9356)
!9392 = !DILocation(line: 2817, column: 7, scope: !9356)
!9393 = !DILocation(line: 2817, column: 19, scope: !9356)
!9394 = !DILocation(line: 2817, column: 23, scope: !9356)
!9395 = !DILocation(line: 2800, column: 13, scope: !9356)
!9396 = !DILocation(line: 2820, column: 13, scope: !9356)
!9397 = !DILocation(line: 2821, column: 6, scope: !9356)
!9398 = !DILocation(line: 2821, column: 30, scope: !9356)
!9399 = !DILocation(line: 2821, column: 21, scope: !9356)
!9400 = !DILocation(line: 2821, column: 19, scope: !9356)
!9401 = !DILocation(line: 2821, column: 39, scope: !9356)
!9402 = !DILocation(line: 2823, column: 8, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9404, file: !497, line: 2823, column: 8)
!9404 = distinct !DILexicalBlock(scope: !9356, file: !497, line: 2822, column: 3)
!9405 = !DILocation(line: 2823, column: 18, scope: !9403)
!9406 = !DILocation(line: 2823, column: 15, scope: !9403)
!9407 = !DILocation(line: 2823, column: 8, scope: !9404)
!9408 = !DILocation(line: 2825, column: 12, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9410, file: !497, line: 2825, column: 12)
!9410 = distinct !DILexicalBlock(scope: !9403, file: !497, line: 2824, column: 7)
!9411 = !DILocation(line: 2825, column: 21, scope: !9409)
!9412 = !DILocation(line: 2825, column: 12, scope: !9410)
!9413 = !DILocation(line: 2827, column: 13, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9409, file: !497, line: 2826, column: 4)
!9415 = !DILocation(line: 2828, column: 12, scope: !9414)
!9416 = !DILocation(line: 2828, column: 10, scope: !9414)
!9417 = !DILocation(line: 2829, column: 15, scope: !9414)
!9418 = !DILocation(line: 2829, column: 13, scope: !9414)
!9419 = !DILocation(line: 2830, column: 4, scope: !9414)
!9420 = !DILocation(line: 2833, column: 13, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9409, file: !497, line: 2832, column: 4)
!9422 = !DILocation(line: 2834, column: 12, scope: !9421)
!9423 = !DILocation(line: 2834, column: 10, scope: !9421)
!9424 = !DILocation(line: 2835, column: 15, scope: !9421)
!9425 = !DILocation(line: 2835, column: 13, scope: !9421)
!9426 = !DILocation(line: 2837, column: 12, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9410, file: !497, line: 2837, column: 12)
!9428 = !DILocation(line: 2837, column: 18, scope: !9427)
!9429 = !DILocation(line: 2837, column: 31, scope: !9427)
!9430 = !DILocation(line: 2837, column: 34, scope: !9427)
!9431 = !DILocation(line: 2837, column: 43, scope: !9427)
!9432 = !DILocation(line: 2837, column: 12, scope: !9410)
!9433 = !DILocation(line: 2839, column: 4, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9427, file: !497, line: 2838, column: 4)
!9435 = !DILocation(line: 2840, column: 4, scope: !9434)
!9436 = !DILocation(line: 2842, column: 15, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9410, file: !497, line: 2842, column: 7)
!9438 = !DILocation(line: 2842, column: 13, scope: !9437)
!9439 = !DILocation(line: 2842, column: 20, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9437, file: !497, line: 2842, column: 7)
!9441 = !DILocation(line: 2842, column: 24, scope: !9440)
!9442 = !DILocation(line: 2842, column: 22, scope: !9440)
!9443 = !DILocation(line: 2842, column: 7, scope: !9437)
!9444 = !DILocation(line: 2843, column: 19, scope: !9440)
!9445 = !DILocation(line: 2843, column: 25, scope: !9440)
!9446 = !DILocation(line: 2843, column: 27, scope: !9440)
!9447 = !DILocation(line: 2843, column: 4, scope: !9440)
!9448 = !DILocation(line: 2843, column: 13, scope: !9440)
!9449 = !DILocation(line: 2843, column: 16, scope: !9440)
!9450 = !DILocation(line: 2842, column: 34, scope: !9440)
!9451 = !DILocation(line: 2842, column: 7, scope: !9440)
!9452 = distinct !{!9452, !9443, !9453}
!9453 = !DILocation(line: 2843, column: 47, scope: !9437)
!9454 = !DILocation(line: 2844, column: 7, scope: !9410)
!9455 = !DILocation(line: 2845, column: 12, scope: !9404)
!9456 = !DILocation(line: 2845, column: 10, scope: !9404)
!9457 = !DILocation(line: 2846, column: 10, scope: !9404)
!9458 = !DILocation(line: 2847, column: 3, scope: !9404)
!9459 = !DILocation(line: 2847, column: 12, scope: !9404)
!9460 = !DILocation(line: 2847, column: 20, scope: !9404)
!9461 = !DILocation(line: 2847, column: 28, scope: !9404)
!9462 = !DILocation(line: 2848, column: 3, scope: !9404)
!9463 = distinct !{!9463, !9397, !9464}
!9464 = !DILocation(line: 2849, column: 3, scope: !9356)
!9465 = !DILocation(line: 2850, column: 16, scope: !9356)
!9466 = !DILocation(line: 2850, column: 6, scope: !9356)
!9467 = !DILocation(line: 2853, column: 13, scope: !9356)
!9468 = !DILocation(line: 2853, column: 23, scope: !9356)
!9469 = !DILocation(line: 2853, column: 6, scope: !9356)
!9470 = !DILocation(line: 2856, column: 14, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9356, file: !497, line: 2856, column: 6)
!9472 = !DILocation(line: 2856, column: 12, scope: !9471)
!9473 = !DILocation(line: 2856, column: 19, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9471, file: !497, line: 2856, column: 6)
!9475 = !DILocation(line: 2856, column: 23, scope: !9474)
!9476 = !DILocation(line: 2856, column: 21, scope: !9474)
!9477 = !DILocation(line: 2856, column: 6, scope: !9471)
!9478 = !DILocation(line: 2860, column: 15, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9474, file: !497, line: 2857, column: 3)
!9480 = !DILocation(line: 2860, column: 19, scope: !9479)
!9481 = !DILocation(line: 2860, column: 7, scope: !9479)
!9482 = !DILocation(line: 2860, column: 34, scope: !9479)
!9483 = !DILocation(line: 2860, column: 48, scope: !9479)
!9484 = !DILocation(line: 2860, column: 57, scope: !9479)
!9485 = !DILocation(line: 2860, column: 40, scope: !9479)
!9486 = !DILocation(line: 2860, column: 38, scope: !9479)
!9487 = !DILocation(line: 2858, column: 3, scope: !9479)
!9488 = !DILocation(line: 2863, column: 15, scope: !9479)
!9489 = !DILocation(line: 2863, column: 19, scope: !9479)
!9490 = !DILocation(line: 2863, column: 7, scope: !9479)
!9491 = !DILocation(line: 2863, column: 34, scope: !9479)
!9492 = !DILocation(line: 2863, column: 48, scope: !9479)
!9493 = !DILocation(line: 2863, column: 57, scope: !9479)
!9494 = !DILocation(line: 2863, column: 40, scope: !9479)
!9495 = !DILocation(line: 2863, column: 38, scope: !9479)
!9496 = !DILocation(line: 2861, column: 3, scope: !9479)
!9497 = !DILocation(line: 2864, column: 8, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9479, file: !497, line: 2864, column: 8)
!9499 = !DILocation(line: 2864, column: 12, scope: !9498)
!9500 = !DILocation(line: 2864, column: 28, scope: !9498)
!9501 = !DILocation(line: 2864, column: 36, scope: !9498)
!9502 = !DILocation(line: 2865, column: 16, scope: !9498)
!9503 = !DILocation(line: 2865, column: 20, scope: !9498)
!9504 = !DILocation(line: 2865, column: 8, scope: !9498)
!9505 = !DILocation(line: 2865, column: 40, scope: !9498)
!9506 = !DILocation(line: 2864, column: 8, scope: !9479)
!9507 = !DILocation(line: 2867, column: 14, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9498, file: !497, line: 2866, column: 7)
!9509 = !DILocation(line: 2868, column: 14, scope: !9508)
!9510 = !DILocation(line: 2869, column: 7, scope: !9508)
!9511 = !DILocation(line: 2872, column: 27, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9498, file: !497, line: 2871, column: 7)
!9513 = !DILocation(line: 2872, column: 33, scope: !9512)
!9514 = !DILocation(line: 2873, column: 13, scope: !9512)
!9515 = !DILocation(line: 2873, column: 17, scope: !9512)
!9516 = !DILocation(line: 2873, column: 31, scope: !9512)
!9517 = !DILocation(line: 2873, column: 40, scope: !9512)
!9518 = !DILocation(line: 2872, column: 14, scope: !9512)
!9519 = !DILocation(line: 2874, column: 20, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9512, file: !497, line: 2874, column: 12)
!9521 = !DILocation(line: 2874, column: 24, scope: !9520)
!9522 = !DILocation(line: 2874, column: 12, scope: !9520)
!9523 = !DILocation(line: 2874, column: 44, scope: !9520)
!9524 = !DILocation(line: 2874, column: 12, scope: !9512)
!9525 = !DILocation(line: 2875, column: 24, scope: !9520)
!9526 = !DILocation(line: 2875, column: 31, scope: !9520)
!9527 = !DILocation(line: 2876, column: 14, scope: !9520)
!9528 = !DILocation(line: 2876, column: 23, scope: !9520)
!9529 = !DILocation(line: 2875, column: 11, scope: !9520)
!9530 = !DILocation(line: 2875, column: 4, scope: !9520)
!9531 = !DILocation(line: 2878, column: 24, scope: !9520)
!9532 = !DILocation(line: 2878, column: 31, scope: !9520)
!9533 = !DILocation(line: 2879, column: 16, scope: !9520)
!9534 = !DILocation(line: 2879, column: 20, scope: !9520)
!9535 = !DILocation(line: 2879, column: 34, scope: !9520)
!9536 = !DILocation(line: 2879, column: 43, scope: !9520)
!9537 = !DILocation(line: 2878, column: 11, scope: !9520)
!9538 = !DILocation(line: 2882, column: 44, scope: !9479)
!9539 = !DILocation(line: 2882, column: 36, scope: !9479)
!9540 = !DILocation(line: 2882, column: 34, scope: !9479)
!9541 = !DILocation(line: 2882, column: 52, scope: !9479)
!9542 = !DILocation(line: 2881, column: 3, scope: !9479)
!9543 = !DILocation(line: 2883, column: 14, scope: !9479)
!9544 = !DILocation(line: 2883, column: 24, scope: !9479)
!9545 = !DILocation(line: 2883, column: 37, scope: !9479)
!9546 = !DILocation(line: 2883, column: 3, scope: !9479)
!9547 = !DILocation(line: 2885, column: 14, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9479, file: !497, line: 2885, column: 8)
!9549 = !DILocation(line: 2885, column: 8, scope: !9548)
!9550 = !DILocation(line: 2885, column: 26, scope: !9548)
!9551 = !DILocation(line: 2885, column: 30, scope: !9548)
!9552 = !DILocation(line: 2885, column: 40, scope: !9548)
!9553 = !DILocation(line: 2885, column: 33, scope: !9548)
!9554 = !DILocation(line: 2885, column: 53, scope: !9548)
!9555 = !DILocation(line: 2885, column: 8, scope: !9479)
!9556 = !DILocation(line: 2886, column: 7, scope: !9548)
!9557 = !DILocation(line: 2888, column: 14, scope: !9479)
!9558 = !DILocation(line: 2889, column: 3, scope: !9479)
!9559 = !DILocation(line: 2889, column: 10, scope: !9479)
!9560 = !DILocation(line: 2891, column: 16, scope: !9479)
!9561 = !DILocation(line: 2891, column: 12, scope: !9479)
!9562 = !DILocation(line: 2891, column: 24, scope: !9479)
!9563 = !DILocation(line: 2891, column: 3, scope: !9479)
!9564 = !DILocation(line: 2893, column: 22, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9479, file: !497, line: 2892, column: 7)
!9566 = !DILocation(line: 2893, column: 33, scope: !9565)
!9567 = !DILocation(line: 2893, column: 40, scope: !9565)
!9568 = !DILocation(line: 2894, column: 22, scope: !9565)
!9569 = !DILocation(line: 2894, column: 33, scope: !9565)
!9570 = !DILocation(line: 2894, column: 40, scope: !9565)
!9571 = !DILocation(line: 2895, column: 22, scope: !9565)
!9572 = !DILocation(line: 2895, column: 33, scope: !9565)
!9573 = !DILocation(line: 2895, column: 40, scope: !9565)
!9574 = !DILocation(line: 2896, column: 22, scope: !9565)
!9575 = !DILocation(line: 2896, column: 33, scope: !9565)
!9576 = !DILocation(line: 2896, column: 40, scope: !9565)
!9577 = !DILocation(line: 2897, column: 22, scope: !9565)
!9578 = !DILocation(line: 2897, column: 33, scope: !9565)
!9579 = !DILocation(line: 2897, column: 40, scope: !9565)
!9580 = !DILocation(line: 2898, column: 22, scope: !9565)
!9581 = !DILocation(line: 2898, column: 33, scope: !9565)
!9582 = !DILocation(line: 2898, column: 40, scope: !9565)
!9583 = !DILocation(line: 2899, column: 22, scope: !9565)
!9584 = !DILocation(line: 2899, column: 33, scope: !9565)
!9585 = !DILocation(line: 2900, column: 27, scope: !9565)
!9586 = !DILocation(line: 2900, column: 33, scope: !9565)
!9587 = !DILocation(line: 2900, column: 17, scope: !9565)
!9588 = !DILocation(line: 2900, column: 15, scope: !9565)
!9589 = !DILocation(line: 2901, column: 12, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9565, file: !497, line: 2901, column: 12)
!9591 = !DILocation(line: 2901, column: 20, scope: !9590)
!9592 = !DILocation(line: 2901, column: 12, scope: !9565)
!9593 = !DILocation(line: 2903, column: 8, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9590, file: !497, line: 2902, column: 4)
!9595 = !DILocation(line: 2903, column: 4, scope: !9594)
!9596 = !DILocation(line: 2903, column: 17, scope: !9594)
!9597 = !DILocation(line: 2904, column: 15, scope: !9594)
!9598 = !DILocation(line: 2905, column: 4, scope: !9594)
!9599 = !DILocation(line: 2906, column: 7, scope: !9565)
!9600 = !DILocation(line: 2907, column: 22, scope: !9565)
!9601 = !DILocation(line: 2907, column: 33, scope: !9565)
!9602 = !DILocation(line: 2907, column: 40, scope: !9565)
!9603 = !DILocation(line: 2912, column: 22, scope: !9479)
!9604 = !DILocation(line: 2912, column: 18, scope: !9479)
!9605 = !DILocation(line: 2912, column: 30, scope: !9479)
!9606 = !DILocation(line: 2912, column: 16, scope: !9479)
!9607 = !DILocation(line: 2912, column: 3, scope: !9479)
!9608 = !DILocation(line: 2912, column: 14, scope: !9479)
!9609 = !DILocation(line: 2913, column: 22, scope: !9479)
!9610 = !DILocation(line: 2913, column: 18, scope: !9479)
!9611 = !DILocation(line: 2913, column: 30, scope: !9479)
!9612 = !DILocation(line: 2913, column: 16, scope: !9479)
!9613 = !DILocation(line: 2913, column: 3, scope: !9479)
!9614 = !DILocation(line: 2913, column: 14, scope: !9479)
!9615 = !DILocation(line: 2914, column: 22, scope: !9479)
!9616 = !DILocation(line: 2914, column: 18, scope: !9479)
!9617 = !DILocation(line: 2914, column: 30, scope: !9479)
!9618 = !DILocation(line: 2914, column: 16, scope: !9479)
!9619 = !DILocation(line: 2914, column: 3, scope: !9479)
!9620 = !DILocation(line: 2914, column: 14, scope: !9479)
!9621 = !DILocation(line: 2915, column: 3, scope: !9479)
!9622 = !DILocation(line: 2915, column: 14, scope: !9479)
!9623 = !DILocation(line: 2924, column: 9, scope: !9479)
!9624 = !DILocation(line: 2924, column: 7, scope: !9479)
!9625 = !DILocation(line: 2925, column: 25, scope: !9479)
!9626 = !DILocation(line: 2925, column: 13, scope: !9479)
!9627 = !DILocation(line: 2925, column: 11, scope: !9479)
!9628 = !DILocation(line: 2926, column: 17, scope: !9479)
!9629 = !DILocation(line: 2926, column: 3, scope: !9479)
!9630 = !DILocation(line: 2926, column: 15, scope: !9479)
!9631 = !DILocation(line: 2927, column: 17, scope: !9479)
!9632 = !DILocation(line: 2927, column: 3, scope: !9479)
!9633 = !DILocation(line: 2927, column: 15, scope: !9479)
!9634 = !DILocation(line: 2928, column: 17, scope: !9479)
!9635 = !DILocation(line: 2928, column: 3, scope: !9479)
!9636 = !DILocation(line: 2928, column: 15, scope: !9479)
!9637 = !DILocation(line: 2929, column: 3, scope: !9479)
!9638 = !DILocation(line: 2929, column: 15, scope: !9479)
!9639 = !DILocation(line: 2930, column: 17, scope: !9479)
!9640 = !DILocation(line: 2930, column: 3, scope: !9479)
!9641 = !DILocation(line: 2930, column: 15, scope: !9479)
!9642 = !DILocation(line: 2931, column: 17, scope: !9479)
!9643 = !DILocation(line: 2931, column: 3, scope: !9479)
!9644 = !DILocation(line: 2931, column: 15, scope: !9479)
!9645 = !DILocation(line: 2932, column: 3, scope: !9479)
!9646 = !DILocation(line: 2932, column: 15, scope: !9479)
!9647 = !DILocation(line: 2933, column: 8, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9479, file: !497, line: 2933, column: 8)
!9649 = !DILocation(line: 2933, column: 18, scope: !9648)
!9650 = !DILocation(line: 2933, column: 12, scope: !9648)
!9651 = !DILocation(line: 2933, column: 27, scope: !9648)
!9652 = !DILocation(line: 2933, column: 8, scope: !9479)
!9653 = !DILocation(line: 2935, column: 7, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9648, file: !497, line: 2934, column: 7)
!9655 = !DILocation(line: 2935, column: 19, scope: !9654)
!9656 = !DILocation(line: 2936, column: 21, scope: !9654)
!9657 = !DILocation(line: 2936, column: 7, scope: !9654)
!9658 = !DILocation(line: 2936, column: 19, scope: !9654)
!9659 = !DILocation(line: 2937, column: 21, scope: !9654)
!9660 = !DILocation(line: 2937, column: 7, scope: !9654)
!9661 = !DILocation(line: 2937, column: 19, scope: !9654)
!9662 = !DILocation(line: 2938, column: 21, scope: !9654)
!9663 = !DILocation(line: 2938, column: 7, scope: !9654)
!9664 = !DILocation(line: 2938, column: 19, scope: !9654)
!9665 = !DILocation(line: 2939, column: 21, scope: !9654)
!9666 = !DILocation(line: 2939, column: 7, scope: !9654)
!9667 = !DILocation(line: 2939, column: 19, scope: !9654)
!9668 = !DILocation(line: 2940, column: 7, scope: !9654)
!9669 = !DILocation(line: 2943, column: 21, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9648, file: !497, line: 2942, column: 7)
!9671 = !DILocation(line: 2943, column: 7, scope: !9670)
!9672 = !DILocation(line: 2943, column: 19, scope: !9670)
!9673 = !DILocation(line: 2944, column: 21, scope: !9670)
!9674 = !DILocation(line: 2944, column: 7, scope: !9670)
!9675 = !DILocation(line: 2944, column: 19, scope: !9670)
!9676 = !DILocation(line: 2945, column: 7, scope: !9670)
!9677 = !DILocation(line: 2945, column: 19, scope: !9670)
!9678 = !DILocation(line: 2946, column: 21, scope: !9670)
!9679 = !DILocation(line: 2946, column: 7, scope: !9670)
!9680 = !DILocation(line: 2946, column: 19, scope: !9670)
!9681 = !DILocation(line: 2947, column: 21, scope: !9670)
!9682 = !DILocation(line: 2947, column: 7, scope: !9670)
!9683 = !DILocation(line: 2947, column: 19, scope: !9670)
!9684 = !DILocation(line: 2949, column: 3, scope: !9479)
!9685 = !DILocation(line: 2949, column: 15, scope: !9479)
!9686 = !DILocation(line: 2952, column: 15, scope: !9479)
!9687 = !DILocation(line: 2952, column: 12, scope: !9479)
!9688 = !DILocation(line: 2952, column: 23, scope: !9479)
!9689 = !DILocation(line: 2952, column: 3, scope: !9479)
!9690 = !DILocation(line: 2954, column: 32, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9479, file: !497, line: 2953, column: 7)
!9692 = !DILocation(line: 2954, column: 39, scope: !9691)
!9693 = !DILocation(line: 2955, column: 32, scope: !9691)
!9694 = !DILocation(line: 2955, column: 39, scope: !9691)
!9695 = !DILocation(line: 2956, column: 32, scope: !9691)
!9696 = !DILocation(line: 2956, column: 39, scope: !9691)
!9697 = !DILocation(line: 2958, column: 24, scope: !9691)
!9698 = !DILocation(line: 2958, column: 21, scope: !9691)
!9699 = !DILocation(line: 2958, column: 32, scope: !9691)
!9700 = !DILocation(line: 2958, column: 19, scope: !9691)
!9701 = !DILocation(line: 2958, column: 17, scope: !9691)
!9702 = !DILocation(line: 2959, column: 7, scope: !9691)
!9703 = !DILocation(line: 2963, column: 20, scope: !9479)
!9704 = !DILocation(line: 2965, column: 7, scope: !9479)
!9705 = !DILocation(line: 2965, column: 27, scope: !9479)
!9706 = !DILocation(line: 2965, column: 16, scope: !9479)
!9707 = !DILocation(line: 2965, column: 53, scope: !9479)
!9708 = !DILocation(line: 2966, column: 7, scope: !9479)
!9709 = !DILocation(line: 2966, column: 16, scope: !9479)
!9710 = !DILocation(line: 2966, column: 26, scope: !9479)
!9711 = !DILocation(line: 2967, column: 7, scope: !9479)
!9712 = !DILocation(line: 2967, column: 16, scope: !9479)
!9713 = !DILocation(line: 2967, column: 20, scope: !9479)
!9714 = !DILocation(line: 2967, column: 32, scope: !9479)
!9715 = !DILocation(line: 2967, column: 37, scope: !9479)
!9716 = !DILocation(line: 2963, column: 11, scope: !9479)
!9717 = !DILocation(line: 2968, column: 3, scope: !9479)
!9718 = !DILocation(line: 2856, column: 31, scope: !9474)
!9719 = !DILocation(line: 2856, column: 6, scope: !9474)
!9720 = distinct !{!9720, !9477, !9721}
!9721 = !DILocation(line: 2968, column: 3, scope: !9471)
!9722 = !DILocation(line: 2970, column: 22, scope: !9356)
!9723 = !DILocation(line: 2970, column: 13, scope: !9356)
!9724 = !DILocation(line: 2971, column: 21, scope: !9356)
!9725 = !DILocation(line: 2971, column: 13, scope: !9356)
!9726 = !DILocation(line: 2972, column: 6, scope: !9356)
!9727 = !DILocation(line: 2976, column: 12, scope: !9307)
!9728 = !DILocation(line: 2976, column: 2, scope: !9307)
!9729 = !DILocation(line: 2977, column: 75, scope: !9307)
!9730 = !DILocation(line: 2977, column: 78, scope: !9307)
!9731 = !DILocation(line: 2977, column: 82, scope: !9307)
!9732 = !DILocation(line: 2977, column: 2, scope: !9307)
!9733 = !DILocation(line: 2980, column: 18, scope: !9307)
!9734 = !DILocation(line: 2980, column: 14, scope: !9307)
!9735 = !DILocation(line: 2980, column: 16, scope: !9307)
!9736 = !DILocation(line: 2981, column: 7, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9307, file: !497, line: 2981, column: 7)
!9738 = !DILocation(line: 2981, column: 90, scope: !9737)
!9739 = !DILocation(line: 2981, column: 7, scope: !9307)
!9740 = !DILocation(line: 2983, column: 6, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9737, file: !497, line: 2982, column: 6)
!9742 = !DILocation(line: 2984, column: 6, scope: !9741)
!9743 = !DILocation(line: 2987, column: 2, scope: !9307)
!9744 = !DILocation(line: 2987, column: 6, scope: !9307)
!9745 = !DILocation(line: 2987, column: 13, scope: !9307)
!9746 = !DILocation(line: 2988, column: 2, scope: !9307)
!9747 = !DILocation(line: 2988, column: 6, scope: !9307)
!9748 = !DILocation(line: 2988, column: 17, scope: !9307)
!9749 = !DILocation(line: 2989, column: 2, scope: !9307)
!9750 = !DILocation(line: 2989, column: 6, scope: !9307)
!9751 = !DILocation(line: 2989, column: 20, scope: !9307)
!9752 = !DILocation(line: 2990, column: 2, scope: !9307)
!9753 = !DILocation(line: 2993, column: 12, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9301, file: !497, line: 2992, column: 2)
!9755 = !DILocation(line: 2993, column: 2, scope: !9754)
!9756 = !DILocation(line: 2995, column: 6, scope: !9754)
!9757 = !DILocation(line: 2995, column: 15, scope: !9754)
!9758 = !DILocation(line: 2995, column: 32, scope: !9754)
!9759 = !DILocation(line: 2995, column: 62, scope: !9754)
!9760 = !DILocation(line: 2995, column: 66, scope: !9754)
!9761 = !DILocation(line: 2995, column: 44, scope: !9754)
!9762 = !DILocation(line: 2994, column: 2, scope: !9754)
!9763 = !DILocation(line: 2996, column: 2, scope: !9754)
!9764 = !DILocation(line: 2999, column: 5, scope: !916)
!9765 = !DILocation(line: 3000, column: 5, scope: !916)
!9766 = distinct !DISubprogram(name: "cgi", scope: !497, file: !497, line: 3574, type: !707, scopeLine: 3575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!9767 = !DILocalVariable(name: "hc", arg: 1, scope: !9766, file: !497, line: 3574, type: !709)
!9768 = !DILocation(line: 3574, column: 18, scope: !9766)
!9769 = !DILocalVariable(name: "r", scope: !9766, file: !497, line: 3576, type: !26)
!9770 = !DILocation(line: 3576, column: 9, scope: !9766)
!9771 = !DILocalVariable(name: "client_data", scope: !9766, file: !497, line: 3577, type: !650)
!9772 = !DILocation(line: 3577, column: 16, scope: !9766)
!9773 = !DILocation(line: 3579, column: 10, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9766, file: !497, line: 3579, column: 10)
!9775 = !DILocation(line: 3579, column: 14, scope: !9774)
!9776 = !DILocation(line: 3579, column: 18, scope: !9774)
!9777 = !DILocation(line: 3579, column: 28, scope: !9774)
!9778 = !DILocation(line: 3579, column: 33, scope: !9774)
!9779 = !DILocation(line: 3579, column: 36, scope: !9774)
!9780 = !DILocation(line: 3579, column: 40, scope: !9774)
!9781 = !DILocation(line: 3579, column: 44, scope: !9774)
!9782 = !DILocation(line: 3579, column: 57, scope: !9774)
!9783 = !DILocation(line: 3579, column: 61, scope: !9774)
!9784 = !DILocation(line: 3579, column: 65, scope: !9774)
!9785 = !DILocation(line: 3579, column: 54, scope: !9774)
!9786 = !DILocation(line: 3579, column: 10, scope: !9766)
!9787 = !DILocation(line: 3582, column: 6, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9774, file: !497, line: 3580, column: 2)
!9789 = !DILocation(line: 3582, column: 15, scope: !9788)
!9790 = !DILocation(line: 3582, column: 38, scope: !9788)
!9791 = !DILocation(line: 3583, column: 6, scope: !9788)
!9792 = !DILocation(line: 3583, column: 10, scope: !9788)
!9793 = !DILocation(line: 3581, column: 2, scope: !9788)
!9794 = !DILocation(line: 3584, column: 2, scope: !9788)
!9795 = !DILocation(line: 3586, column: 7, scope: !9766)
!9796 = !DILocation(line: 3586, column: 11, scope: !9766)
!9797 = !DILocation(line: 3586, column: 15, scope: !9766)
!9798 = !DILocation(line: 3586, column: 5, scope: !9766)
!9799 = !DILocation(line: 3587, column: 25, scope: !9766)
!9800 = !DILocation(line: 3587, column: 29, scope: !9766)
!9801 = !DILocation(line: 3587, column: 5, scope: !9766)
!9802 = !DILocation(line: 3588, column: 9, scope: !9766)
!9803 = !DILocation(line: 3588, column: 7, scope: !9766)
!9804 = !DILocation(line: 3589, column: 10, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9766, file: !497, line: 3589, column: 10)
!9806 = !DILocation(line: 3589, column: 12, scope: !9805)
!9807 = !DILocation(line: 3589, column: 10, scope: !9766)
!9808 = !DILocation(line: 3591, column: 2, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9805, file: !497, line: 3590, column: 2)
!9810 = !DILocation(line: 3593, column: 6, scope: !9809)
!9811 = !DILocation(line: 3593, column: 15, scope: !9809)
!9812 = !DILocation(line: 3593, column: 32, scope: !9809)
!9813 = !DILocation(line: 3593, column: 44, scope: !9809)
!9814 = !DILocation(line: 3593, column: 48, scope: !9809)
!9815 = !DILocation(line: 3592, column: 2, scope: !9809)
!9816 = !DILocation(line: 3594, column: 2, scope: !9809)
!9817 = !DILocation(line: 3596, column: 10, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9766, file: !497, line: 3596, column: 10)
!9819 = !DILocation(line: 3596, column: 12, scope: !9818)
!9820 = !DILocation(line: 3596, column: 10, scope: !9766)
!9821 = !DILocation(line: 3599, column: 14, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9818, file: !497, line: 3597, column: 2)
!9823 = !DILocation(line: 3600, column: 18, scope: !9822)
!9824 = !DILocation(line: 3600, column: 22, scope: !9822)
!9825 = !DILocation(line: 3600, column: 2, scope: !9822)
!9826 = !DILocation(line: 3601, column: 13, scope: !9822)
!9827 = !DILocation(line: 3601, column: 2, scope: !9822)
!9828 = !DILocation(line: 3602, column: 2, scope: !9822)
!9829 = !DILocation(line: 3605, column: 68, scope: !9766)
!9830 = !DILocation(line: 3605, column: 71, scope: !9766)
!9831 = !DILocation(line: 3605, column: 75, scope: !9766)
!9832 = !DILocation(line: 3605, column: 5, scope: !9766)
!9833 = !DILocation(line: 3608, column: 21, scope: !9766)
!9834 = !DILocation(line: 3608, column: 17, scope: !9766)
!9835 = !DILocation(line: 3608, column: 19, scope: !9766)
!9836 = !DILocation(line: 3609, column: 10, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9766, file: !497, line: 3609, column: 10)
!9838 = !DILocation(line: 3609, column: 93, scope: !9837)
!9839 = !DILocation(line: 3609, column: 10, scope: !9766)
!9840 = !DILocation(line: 3611, column: 2, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9837, file: !497, line: 3610, column: 2)
!9842 = !DILocation(line: 3612, column: 2, scope: !9841)
!9843 = !DILocation(line: 3615, column: 5, scope: !9766)
!9844 = !DILocation(line: 3615, column: 9, scope: !9766)
!9845 = !DILocation(line: 3615, column: 16, scope: !9766)
!9846 = !DILocation(line: 3616, column: 5, scope: !9766)
!9847 = !DILocation(line: 3616, column: 9, scope: !9766)
!9848 = !DILocation(line: 3616, column: 20, scope: !9766)
!9849 = !DILocation(line: 3617, column: 5, scope: !9766)
!9850 = !DILocation(line: 3617, column: 9, scope: !9766)
!9851 = !DILocation(line: 3617, column: 23, scope: !9766)
!9852 = !DILocation(line: 3619, column: 5, scope: !9766)
!9853 = !DILocation(line: 3620, column: 5, scope: !9766)
!9854 = distinct !DISubprogram(name: "figure_mime", scope: !497, file: !497, line: 2568, type: !852, scopeLine: 2569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!9855 = !DILocalVariable(name: "hc", arg: 1, scope: !9854, file: !497, line: 2568, type: !709)
!9856 = !DILocation(line: 2568, column: 26, scope: !9854)
!9857 = !DILocalVariable(name: "prev_dot", scope: !9854, file: !497, line: 2570, type: !6)
!9858 = !DILocation(line: 2570, column: 11, scope: !9854)
!9859 = !DILocalVariable(name: "dot", scope: !9854, file: !497, line: 2571, type: !6)
!9860 = !DILocation(line: 2571, column: 11, scope: !9854)
!9861 = !DILocalVariable(name: "ext", scope: !9854, file: !497, line: 2572, type: !6)
!9862 = !DILocation(line: 2572, column: 11, scope: !9854)
!9863 = !DILocalVariable(name: "me_indexes", scope: !9854, file: !497, line: 2573, type: !9864)
!9864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 3200, elements: !5679)
!9865 = !DILocation(line: 2573, column: 9, scope: !9854)
!9866 = !DILocalVariable(name: "n_me_indexes", scope: !9854, file: !497, line: 2573, type: !26)
!9867 = !DILocation(line: 2573, column: 26, scope: !9854)
!9868 = !DILocalVariable(name: "ext_len", scope: !9854, file: !497, line: 2574, type: !264)
!9869 = !DILocation(line: 2574, column: 12, scope: !9854)
!9870 = !DILocalVariable(name: "encodings_len", scope: !9854, file: !497, line: 2574, type: !264)
!9871 = !DILocation(line: 2574, column: 21, scope: !9854)
!9872 = !DILocalVariable(name: "i", scope: !9854, file: !497, line: 2575, type: !26)
!9873 = !DILocation(line: 2575, column: 9, scope: !9854)
!9874 = !DILocalVariable(name: "top", scope: !9854, file: !497, line: 2575, type: !26)
!9875 = !DILocation(line: 2575, column: 12, scope: !9854)
!9876 = !DILocalVariable(name: "bot", scope: !9854, file: !497, line: 2575, type: !26)
!9877 = !DILocation(line: 2575, column: 17, scope: !9854)
!9878 = !DILocalVariable(name: "mid", scope: !9854, file: !497, line: 2575, type: !26)
!9879 = !DILocation(line: 2575, column: 22, scope: !9854)
!9880 = !DILocalVariable(name: "r", scope: !9854, file: !497, line: 2576, type: !26)
!9881 = !DILocation(line: 2576, column: 9, scope: !9854)
!9882 = !DILocalVariable(name: "default_type", scope: !9854, file: !497, line: 2577, type: !6)
!9883 = !DILocation(line: 2577, column: 11, scope: !9854)
!9884 = !DILocation(line: 2580, column: 18, scope: !9854)
!9885 = !DILocation(line: 2581, column: 23, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9854, file: !497, line: 2581, column: 5)
!9887 = !DILocation(line: 2581, column: 27, scope: !9886)
!9888 = !DILocation(line: 2581, column: 47, scope: !9886)
!9889 = !DILocation(line: 2581, column: 51, scope: !9886)
!9890 = !DILocation(line: 2581, column: 40, scope: !9886)
!9891 = !DILocation(line: 2581, column: 20, scope: !9886)
!9892 = !DILocation(line: 2581, column: 11, scope: !9886)
!9893 = !DILocation(line: 2583, column: 14, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9895, file: !497, line: 2583, column: 2)
!9895 = distinct !DILexicalBlock(scope: !9896, file: !497, line: 2582, column: 2)
!9896 = distinct !DILexicalBlock(scope: !9886, file: !497, line: 2581, column: 5)
!9897 = !DILocation(line: 2583, column: 23, scope: !9894)
!9898 = !DILocation(line: 2583, column: 12, scope: !9894)
!9899 = !DILocation(line: 2583, column: 8, scope: !9894)
!9900 = !DILocation(line: 2583, column: 28, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9894, file: !497, line: 2583, column: 2)
!9902 = !DILocation(line: 2583, column: 35, scope: !9901)
!9903 = !DILocation(line: 2583, column: 39, scope: !9901)
!9904 = !DILocation(line: 2583, column: 32, scope: !9901)
!9905 = !DILocation(line: 2583, column: 52, scope: !9901)
!9906 = !DILocation(line: 2583, column: 56, scope: !9901)
!9907 = !DILocation(line: 2583, column: 55, scope: !9901)
!9908 = !DILocation(line: 2583, column: 60, scope: !9901)
!9909 = !DILocation(line: 0, scope: !9901)
!9910 = !DILocation(line: 2583, column: 2, scope: !9894)
!9911 = !DILocation(line: 2583, column: 68, scope: !9901)
!9912 = !DILocation(line: 2583, column: 2, scope: !9901)
!9913 = distinct !{!9913, !9910, !9914}
!9914 = !DILocation(line: 2584, column: 6, scope: !9894)
!9915 = !DILocation(line: 2585, column: 7, scope: !9916)
!9916 = distinct !DILexicalBlock(scope: !9895, file: !497, line: 2585, column: 7)
!9917 = !DILocation(line: 2585, column: 13, scope: !9916)
!9918 = !DILocation(line: 2585, column: 17, scope: !9916)
!9919 = !DILocation(line: 2585, column: 11, scope: !9916)
!9920 = !DILocation(line: 2585, column: 7, scope: !9895)
!9921 = !DILocation(line: 2590, column: 17, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9916, file: !497, line: 2586, column: 6)
!9923 = !DILocation(line: 2590, column: 6, scope: !9922)
!9924 = !DILocation(line: 2590, column: 10, scope: !9922)
!9925 = !DILocation(line: 2590, column: 15, scope: !9922)
!9926 = !DILocation(line: 2591, column: 6, scope: !9922)
!9927 = !DILocation(line: 2593, column: 8, scope: !9895)
!9928 = !DILocation(line: 2593, column: 12, scope: !9895)
!9929 = !DILocation(line: 2593, column: 6, scope: !9895)
!9930 = !DILocation(line: 2594, column: 12, scope: !9895)
!9931 = !DILocation(line: 2594, column: 23, scope: !9895)
!9932 = !DILocation(line: 2594, column: 21, scope: !9895)
!9933 = !DILocation(line: 2594, column: 10, scope: !9895)
!9934 = !DILocation(line: 2598, column: 10, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9895, file: !497, line: 2598, column: 2)
!9936 = !DILocation(line: 2598, column: 8, scope: !9935)
!9937 = !DILocation(line: 2598, column: 15, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9935, file: !497, line: 2598, column: 2)
!9939 = !DILocation(line: 2598, column: 17, scope: !9938)
!9940 = !DILocation(line: 2598, column: 2, scope: !9935)
!9941 = !DILocation(line: 2600, column: 11, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9943, file: !497, line: 2600, column: 11)
!9943 = distinct !DILexicalBlock(scope: !9938, file: !497, line: 2599, column: 6)
!9944 = !DILocation(line: 2600, column: 30, scope: !9942)
!9945 = !DILocation(line: 2600, column: 22, scope: !9942)
!9946 = !DILocation(line: 2600, column: 33, scope: !9942)
!9947 = !DILocation(line: 2600, column: 19, scope: !9942)
!9948 = !DILocation(line: 2600, column: 41, scope: !9942)
!9949 = !DILocation(line: 2600, column: 57, scope: !9942)
!9950 = !DILocation(line: 2600, column: 70, scope: !9942)
!9951 = !DILocation(line: 2600, column: 62, scope: !9942)
!9952 = !DILocation(line: 2600, column: 73, scope: !9942)
!9953 = !DILocation(line: 2600, column: 78, scope: !9942)
!9954 = !DILocation(line: 2600, column: 44, scope: !9942)
!9955 = !DILocation(line: 2600, column: 88, scope: !9942)
!9956 = !DILocation(line: 2600, column: 11, scope: !9943)
!9957 = !DILocation(line: 2602, column: 8, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9959, file: !497, line: 2602, column: 8)
!9959 = distinct !DILexicalBlock(scope: !9942, file: !497, line: 2601, column: 3)
!9960 = !DILocation(line: 2602, column: 21, scope: !9958)
!9961 = !DILocation(line: 2602, column: 8, scope: !9959)
!9962 = !DILocation(line: 2604, column: 34, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9958, file: !497, line: 2603, column: 7)
!9964 = !DILocation(line: 2604, column: 18, scope: !9963)
!9965 = !DILocation(line: 2604, column: 7, scope: !9963)
!9966 = !DILocation(line: 2604, column: 32, scope: !9963)
!9967 = !DILocation(line: 2605, column: 7, scope: !9963)
!9968 = !DILocation(line: 2606, column: 7, scope: !9963)
!9969 = !DILocation(line: 2607, column: 3, scope: !9959)
!9970 = !DILocation(line: 2609, column: 6, scope: !9943)
!9971 = !DILocation(line: 2598, column: 30, scope: !9938)
!9972 = !DILocation(line: 2598, column: 2, scope: !9938)
!9973 = distinct !{!9973, !9940, !9974}
!9974 = !DILocation(line: 2609, column: 6, scope: !9935)
!9975 = !DILocation(line: 2611, column: 2, scope: !9895)
!9976 = !DILabel(scope: !9895, name: "next", file: !497, line: 2613)
!9977 = !DILocation(line: 2613, column: 2, scope: !9895)
!9978 = !DILocation(line: 2614, column: 2, scope: !9895)
!9979 = !DILocation(line: 2581, column: 80, scope: !9896)
!9980 = !DILocation(line: 2581, column: 78, scope: !9896)
!9981 = !DILocation(line: 2581, column: 5, scope: !9896)
!9982 = distinct !{!9982, !9983, !9984}
!9983 = !DILocation(line: 2581, column: 5, scope: !9886)
!9984 = !DILocation(line: 2614, column: 2, scope: !9886)
!9985 = !DILocation(line: 2617, column: 9, scope: !9854)
!9986 = !DILocation(line: 2618, column: 9, scope: !9854)
!9987 = !DILocation(line: 2619, column: 5, scope: !9854)
!9988 = !DILocation(line: 2619, column: 13, scope: !9854)
!9989 = !DILocation(line: 2619, column: 20, scope: !9854)
!9990 = !DILocation(line: 2619, column: 17, scope: !9854)
!9991 = !DILocation(line: 2621, column: 10, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9854, file: !497, line: 2620, column: 2)
!9993 = !DILocation(line: 2621, column: 16, scope: !9992)
!9994 = !DILocation(line: 2621, column: 14, scope: !9992)
!9995 = !DILocation(line: 2621, column: 22, scope: !9992)
!9996 = !DILocation(line: 2621, column: 6, scope: !9992)
!9997 = !DILocation(line: 2622, column: 19, scope: !9992)
!9998 = !DILocation(line: 2622, column: 32, scope: !9992)
!9999 = !DILocation(line: 2622, column: 24, scope: !9992)
!10000 = !DILocation(line: 2622, column: 37, scope: !9992)
!10001 = !DILocation(line: 2622, column: 42, scope: !9992)
!10002 = !DILocation(line: 2622, column: 6, scope: !9992)
!10003 = !DILocation(line: 2622, column: 4, scope: !9992)
!10004 = !DILocation(line: 2623, column: 7, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9992, file: !497, line: 2623, column: 7)
!10006 = !DILocation(line: 2623, column: 9, scope: !10005)
!10007 = !DILocation(line: 2623, column: 7, scope: !9992)
!10008 = !DILocation(line: 2624, column: 12, scope: !10005)
!10009 = !DILocation(line: 2624, column: 16, scope: !10005)
!10010 = !DILocation(line: 2624, column: 10, scope: !10005)
!10011 = !DILocation(line: 2624, column: 6, scope: !10005)
!10012 = !DILocation(line: 2625, column: 12, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10005, file: !497, line: 2625, column: 12)
!10014 = !DILocation(line: 2625, column: 14, scope: !10013)
!10015 = !DILocation(line: 2625, column: 12, scope: !10005)
!10016 = !DILocation(line: 2626, column: 12, scope: !10013)
!10017 = !DILocation(line: 2626, column: 16, scope: !10013)
!10018 = !DILocation(line: 2626, column: 10, scope: !10013)
!10019 = !DILocation(line: 2626, column: 6, scope: !10013)
!10020 = !DILocation(line: 2628, column: 11, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10013, file: !497, line: 2628, column: 11)
!10022 = !DILocation(line: 2628, column: 29, scope: !10021)
!10023 = !DILocation(line: 2628, column: 21, scope: !10021)
!10024 = !DILocation(line: 2628, column: 34, scope: !10021)
!10025 = !DILocation(line: 2628, column: 19, scope: !10021)
!10026 = !DILocation(line: 2628, column: 11, scope: !10013)
!10027 = !DILocation(line: 2629, column: 9, scope: !10021)
!10028 = !DILocation(line: 2629, column: 13, scope: !10021)
!10029 = !DILocation(line: 2629, column: 7, scope: !10021)
!10030 = !DILocation(line: 2629, column: 3, scope: !10021)
!10031 = !DILocation(line: 2630, column: 16, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10021, file: !497, line: 2630, column: 16)
!10033 = !DILocation(line: 2630, column: 34, scope: !10032)
!10034 = !DILocation(line: 2630, column: 26, scope: !10032)
!10035 = !DILocation(line: 2630, column: 39, scope: !10032)
!10036 = !DILocation(line: 2630, column: 24, scope: !10032)
!10037 = !DILocation(line: 2630, column: 16, scope: !10021)
!10038 = !DILocation(line: 2631, column: 9, scope: !10032)
!10039 = !DILocation(line: 2631, column: 13, scope: !10032)
!10040 = !DILocation(line: 2631, column: 7, scope: !10032)
!10041 = !DILocation(line: 2631, column: 3, scope: !10032)
!10042 = !DILocation(line: 2634, column: 22, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10032, file: !497, line: 2633, column: 3)
!10044 = !DILocation(line: 2634, column: 14, scope: !10043)
!10045 = !DILocation(line: 2634, column: 27, scope: !10043)
!10046 = !DILocation(line: 2634, column: 3, scope: !10043)
!10047 = !DILocation(line: 2634, column: 7, scope: !10043)
!10048 = !DILocation(line: 2634, column: 12, scope: !10043)
!10049 = !DILocation(line: 2635, column: 3, scope: !10043)
!10050 = distinct !{!10050, !9987, !10051}
!10051 = !DILocation(line: 2637, column: 2, scope: !9854)
!10052 = !DILocation(line: 2638, column: 16, scope: !9854)
!10053 = !DILocation(line: 2638, column: 5, scope: !9854)
!10054 = !DILocation(line: 2638, column: 9, scope: !9854)
!10055 = !DILocation(line: 2638, column: 14, scope: !9854)
!10056 = !DILabel(scope: !9854, name: "done", file: !497, line: 2640)
!10057 = !DILocation(line: 2640, column: 5, scope: !9854)
!10058 = !DILocation(line: 2643, column: 5, scope: !9854)
!10059 = !DILocation(line: 2643, column: 9, scope: !9854)
!10060 = !DILocation(line: 2643, column: 22, scope: !9854)
!10061 = !DILocation(line: 2644, column: 19, scope: !9854)
!10062 = !DILocation(line: 2645, column: 15, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !9854, file: !497, line: 2645, column: 5)
!10064 = !DILocation(line: 2645, column: 28, scope: !10063)
!10065 = !DILocation(line: 2645, column: 13, scope: !10063)
!10066 = !DILocation(line: 2645, column: 11, scope: !10063)
!10067 = !DILocation(line: 2645, column: 33, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10063, file: !497, line: 2645, column: 5)
!10069 = !DILocation(line: 2645, column: 35, scope: !10068)
!10070 = !DILocation(line: 2645, column: 5, scope: !10063)
!10071 = !DILocation(line: 2648, column: 7, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10068, file: !497, line: 2646, column: 2)
!10073 = !DILocation(line: 2648, column: 11, scope: !10072)
!10074 = !DILocation(line: 2648, column: 23, scope: !10072)
!10075 = !DILocation(line: 2648, column: 27, scope: !10072)
!10076 = !DILocation(line: 2649, column: 6, scope: !10072)
!10077 = !DILocation(line: 2649, column: 41, scope: !10072)
!10078 = !DILocation(line: 2649, column: 30, scope: !10072)
!10079 = !DILocation(line: 2649, column: 22, scope: !10072)
!10080 = !DILocation(line: 2649, column: 45, scope: !10072)
!10081 = !DILocation(line: 2649, column: 20, scope: !10072)
!10082 = !DILocation(line: 2649, column: 53, scope: !10072)
!10083 = !DILocation(line: 2647, column: 2, scope: !10072)
!10084 = !DILocation(line: 2650, column: 7, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10072, file: !497, line: 2650, column: 7)
!10086 = !DILocation(line: 2650, column: 11, scope: !10085)
!10087 = !DILocation(line: 2650, column: 24, scope: !10085)
!10088 = !DILocation(line: 2650, column: 7, scope: !10072)
!10089 = !DILocation(line: 2652, column: 13, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10085, file: !497, line: 2651, column: 6)
!10091 = !DILocation(line: 2653, column: 6, scope: !10090)
!10092 = !DILocation(line: 2654, column: 6, scope: !10090)
!10093 = !DILocation(line: 2655, column: 9, scope: !10072)
!10094 = !DILocation(line: 2656, column: 38, scope: !10072)
!10095 = !DILocation(line: 2656, column: 27, scope: !10072)
!10096 = !DILocation(line: 2656, column: 19, scope: !10072)
!10097 = !DILocation(line: 2656, column: 42, scope: !10072)
!10098 = !DILocation(line: 2656, column: 16, scope: !10072)
!10099 = !DILocation(line: 2657, column: 2, scope: !10072)
!10100 = !DILocation(line: 2645, column: 41, scope: !10068)
!10101 = !DILocation(line: 2645, column: 5, scope: !10068)
!10102 = distinct !{!10102, !10070, !10103}
!10103 = !DILocation(line: 2657, column: 2, scope: !10063)
!10104 = !DILocation(line: 2659, column: 5, scope: !9854)
!10105 = distinct !DISubprogram(name: "cgi_child", scope: !497, file: !497, line: 3376, type: !852, scopeLine: 3377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!10106 = !DILocalVariable(name: "hc", arg: 1, scope: !10105, file: !497, line: 3376, type: !709)
!10107 = !DILocation(line: 3376, column: 24, scope: !10105)
!10108 = !DILocalVariable(name: "r", scope: !10105, file: !497, line: 3378, type: !26)
!10109 = !DILocation(line: 3378, column: 9, scope: !10105)
!10110 = !DILocalVariable(name: "argp", scope: !10105, file: !497, line: 3379, type: !635)
!10111 = !DILocation(line: 3379, column: 12, scope: !10105)
!10112 = !DILocalVariable(name: "envp", scope: !10105, file: !497, line: 3380, type: !635)
!10113 = !DILocation(line: 3380, column: 12, scope: !10105)
!10114 = !DILocalVariable(name: "binary", scope: !10105, file: !497, line: 3381, type: !6)
!10115 = !DILocation(line: 3381, column: 11, scope: !10105)
!10116 = !DILocalVariable(name: "directory", scope: !10105, file: !497, line: 3382, type: !6)
!10117 = !DILocation(line: 3382, column: 11, scope: !10105)
!10118 = !DILocation(line: 3391, column: 19, scope: !10105)
!10119 = !DILocation(line: 3391, column: 23, scope: !10105)
!10120 = !DILocation(line: 3391, column: 12, scope: !10105)
!10121 = !DILocation(line: 3399, column: 5, scope: !10105)
!10122 = !DILocation(line: 3408, column: 10, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10105, file: !497, line: 3408, column: 10)
!10124 = !DILocation(line: 3408, column: 14, scope: !10123)
!10125 = !DILocation(line: 3408, column: 22, scope: !10123)
!10126 = !DILocation(line: 3408, column: 38, scope: !10123)
!10127 = !DILocation(line: 3408, column: 41, scope: !10123)
!10128 = !DILocation(line: 3408, column: 45, scope: !10123)
!10129 = !DILocation(line: 3408, column: 53, scope: !10123)
!10130 = !DILocation(line: 3408, column: 70, scope: !10123)
!10131 = !DILocation(line: 3408, column: 73, scope: !10123)
!10132 = !DILocation(line: 3408, column: 77, scope: !10123)
!10133 = !DILocation(line: 3408, column: 85, scope: !10123)
!10134 = !DILocation(line: 3408, column: 10, scope: !10105)
!10135 = !DILocalVariable(name: "newfd", scope: !10136, file: !497, line: 3410, type: !26)
!10136 = distinct !DILexicalBlock(scope: !10123, file: !497, line: 3409, column: 2)
!10137 = !DILocation(line: 3410, column: 6, scope: !10136)
!10138 = !DILocation(line: 3410, column: 20, scope: !10136)
!10139 = !DILocation(line: 3410, column: 24, scope: !10136)
!10140 = !DILocation(line: 3410, column: 14, scope: !10136)
!10141 = !DILocation(line: 3411, column: 7, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10136, file: !497, line: 3411, column: 7)
!10143 = !DILocation(line: 3411, column: 13, scope: !10142)
!10144 = !DILocation(line: 3411, column: 7, scope: !10136)
!10145 = !DILocation(line: 3412, column: 20, scope: !10142)
!10146 = !DILocation(line: 3412, column: 6, scope: !10142)
!10147 = !DILocation(line: 3412, column: 10, scope: !10142)
!10148 = !DILocation(line: 3412, column: 18, scope: !10142)
!10149 = !DILocation(line: 3416, column: 2, scope: !10136)
!10150 = !DILocation(line: 3419, column: 23, scope: !10105)
!10151 = !DILocation(line: 3419, column: 12, scope: !10105)
!10152 = !DILocation(line: 3419, column: 10, scope: !10105)
!10153 = !DILocation(line: 3422, column: 23, scope: !10105)
!10154 = !DILocation(line: 3422, column: 12, scope: !10105)
!10155 = !DILocation(line: 3422, column: 10, scope: !10105)
!10156 = !DILocation(line: 3428, column: 10, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10105, file: !497, line: 3428, column: 10)
!10158 = !DILocation(line: 3428, column: 14, scope: !10157)
!10159 = !DILocation(line: 3428, column: 21, scope: !10157)
!10160 = !DILocation(line: 3428, column: 36, scope: !10157)
!10161 = !DILocation(line: 3428, column: 39, scope: !10157)
!10162 = !DILocation(line: 3428, column: 43, scope: !10157)
!10163 = !DILocation(line: 3428, column: 54, scope: !10157)
!10164 = !DILocation(line: 3428, column: 58, scope: !10157)
!10165 = !DILocation(line: 3428, column: 52, scope: !10157)
!10166 = !DILocation(line: 3428, column: 10, scope: !10105)
!10167 = !DILocalVariable(name: "p", scope: !10168, file: !497, line: 3430, type: !10169)
!10168 = distinct !DILexicalBlock(scope: !10157, file: !497, line: 3429, column: 2)
!10169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 64, elements: !367)
!10170 = !DILocation(line: 3430, column: 6, scope: !10168)
!10171 = !DILocation(line: 3432, column: 13, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10168, file: !497, line: 3432, column: 7)
!10173 = !DILocation(line: 3432, column: 7, scope: !10172)
!10174 = !DILocation(line: 3432, column: 17, scope: !10172)
!10175 = !DILocation(line: 3432, column: 7, scope: !10168)
!10176 = !DILocation(line: 3434, column: 6, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10172, file: !497, line: 3433, column: 6)
!10178 = !DILocation(line: 3435, column: 22, scope: !10177)
!10179 = !DILocation(line: 3435, column: 31, scope: !10177)
!10180 = !DILocation(line: 3435, column: 48, scope: !10177)
!10181 = !DILocation(line: 3435, column: 60, scope: !10177)
!10182 = !DILocation(line: 3435, column: 64, scope: !10177)
!10183 = !DILocation(line: 3435, column: 6, scope: !10177)
!10184 = !DILocation(line: 3436, column: 28, scope: !10177)
!10185 = !DILocation(line: 3436, column: 6, scope: !10177)
!10186 = !DILocation(line: 3437, column: 6, scope: !10177)
!10187 = !DILocation(line: 3439, column: 6, scope: !10168)
!10188 = !DILocation(line: 3439, column: 4, scope: !10168)
!10189 = !DILocation(line: 3440, column: 7, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10168, file: !497, line: 3440, column: 7)
!10191 = !DILocation(line: 3440, column: 9, scope: !10190)
!10192 = !DILocation(line: 3440, column: 7, scope: !10168)
!10193 = !DILocation(line: 3442, column: 6, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10190, file: !497, line: 3441, column: 6)
!10195 = !DILocation(line: 3443, column: 22, scope: !10194)
!10196 = !DILocation(line: 3443, column: 31, scope: !10194)
!10197 = !DILocation(line: 3443, column: 48, scope: !10194)
!10198 = !DILocation(line: 3443, column: 60, scope: !10194)
!10199 = !DILocation(line: 3443, column: 64, scope: !10194)
!10200 = !DILocation(line: 3443, column: 6, scope: !10194)
!10201 = !DILocation(line: 3444, column: 28, scope: !10194)
!10202 = !DILocation(line: 3444, column: 6, scope: !10194)
!10203 = !DILocation(line: 3445, column: 6, scope: !10194)
!10204 = !DILocation(line: 3447, column: 7, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10168, file: !497, line: 3447, column: 7)
!10206 = !DILocation(line: 3447, column: 9, scope: !10205)
!10207 = !DILocation(line: 3447, column: 7, scope: !10168)
!10208 = !DILocation(line: 3450, column: 18, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10205, file: !497, line: 3448, column: 6)
!10210 = !DILocation(line: 3451, column: 20, scope: !10209)
!10211 = !DILocation(line: 3451, column: 13, scope: !10209)
!10212 = !DILocation(line: 3452, column: 27, scope: !10209)
!10213 = !DILocation(line: 3452, column: 31, scope: !10209)
!10214 = !DILocation(line: 3452, column: 6, scope: !10209)
!10215 = !DILocation(line: 3453, column: 6, scope: !10209)
!10216 = !DILocation(line: 3456, column: 16, scope: !10168)
!10217 = !DILocation(line: 3456, column: 9, scope: !10168)
!10218 = !DILocation(line: 3457, column: 7, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10168, file: !497, line: 3457, column: 7)
!10220 = !DILocation(line: 3457, column: 12, scope: !10219)
!10221 = !DILocation(line: 3457, column: 7, scope: !10168)
!10222 = !DILocation(line: 3459, column: 19, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10219, file: !497, line: 3458, column: 6)
!10224 = !DILocation(line: 3459, column: 13, scope: !10223)
!10225 = !DILocation(line: 3460, column: 20, scope: !10223)
!10226 = !DILocation(line: 3460, column: 13, scope: !10223)
!10227 = !DILocation(line: 3461, column: 6, scope: !10223)
!10228 = !DILocation(line: 3462, column: 2, scope: !10168)
!10229 = !DILocation(line: 3466, column: 7, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10231, file: !497, line: 3466, column: 7)
!10231 = distinct !DILexicalBlock(scope: !10157, file: !497, line: 3464, column: 2)
!10232 = !DILocation(line: 3466, column: 11, scope: !10230)
!10233 = !DILocation(line: 3466, column: 19, scope: !10230)
!10234 = !DILocation(line: 3466, column: 7, scope: !10231)
!10235 = !DILocation(line: 3467, column: 19, scope: !10230)
!10236 = !DILocation(line: 3467, column: 23, scope: !10230)
!10237 = !DILocation(line: 3467, column: 13, scope: !10230)
!10238 = !DILocation(line: 3467, column: 6, scope: !10230)
!10239 = !DILocation(line: 3473, column: 19, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10105, file: !497, line: 3473, column: 10)
!10241 = !DILocation(line: 3473, column: 10, scope: !10240)
!10242 = !DILocation(line: 3473, column: 40, scope: !10240)
!10243 = !DILocation(line: 3473, column: 45, scope: !10240)
!10244 = !DILocation(line: 3473, column: 48, scope: !10240)
!10245 = !DILocation(line: 3473, column: 52, scope: !10240)
!10246 = !DILocation(line: 3473, column: 10, scope: !10105)
!10247 = !DILocalVariable(name: "p", scope: !10248, file: !497, line: 3475, type: !10169)
!10248 = distinct !DILexicalBlock(scope: !10240, file: !497, line: 3474, column: 2)
!10249 = !DILocation(line: 3475, column: 6, scope: !10248)
!10250 = !DILocation(line: 3477, column: 13, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10248, file: !497, line: 3477, column: 7)
!10252 = !DILocation(line: 3477, column: 7, scope: !10251)
!10253 = !DILocation(line: 3477, column: 17, scope: !10251)
!10254 = !DILocation(line: 3477, column: 7, scope: !10248)
!10255 = !DILocation(line: 3479, column: 6, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10251, file: !497, line: 3478, column: 6)
!10257 = !DILocation(line: 3480, column: 22, scope: !10256)
!10258 = !DILocation(line: 3480, column: 31, scope: !10256)
!10259 = !DILocation(line: 3480, column: 48, scope: !10256)
!10260 = !DILocation(line: 3480, column: 60, scope: !10256)
!10261 = !DILocation(line: 3480, column: 64, scope: !10256)
!10262 = !DILocation(line: 3480, column: 6, scope: !10256)
!10263 = !DILocation(line: 3481, column: 28, scope: !10256)
!10264 = !DILocation(line: 3481, column: 6, scope: !10256)
!10265 = !DILocation(line: 3482, column: 6, scope: !10256)
!10266 = !DILocation(line: 3484, column: 6, scope: !10248)
!10267 = !DILocation(line: 3484, column: 4, scope: !10248)
!10268 = !DILocation(line: 3485, column: 7, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10248, file: !497, line: 3485, column: 7)
!10270 = !DILocation(line: 3485, column: 9, scope: !10269)
!10271 = !DILocation(line: 3485, column: 7, scope: !10248)
!10272 = !DILocation(line: 3487, column: 6, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10269, file: !497, line: 3486, column: 6)
!10274 = !DILocation(line: 3488, column: 22, scope: !10273)
!10275 = !DILocation(line: 3488, column: 31, scope: !10273)
!10276 = !DILocation(line: 3488, column: 48, scope: !10273)
!10277 = !DILocation(line: 3488, column: 60, scope: !10273)
!10278 = !DILocation(line: 3488, column: 64, scope: !10273)
!10279 = !DILocation(line: 3488, column: 6, scope: !10273)
!10280 = !DILocation(line: 3489, column: 28, scope: !10273)
!10281 = !DILocation(line: 3489, column: 6, scope: !10273)
!10282 = !DILocation(line: 3490, column: 6, scope: !10273)
!10283 = !DILocation(line: 3492, column: 7, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10248, file: !497, line: 3492, column: 7)
!10285 = !DILocation(line: 3492, column: 9, scope: !10284)
!10286 = !DILocation(line: 3492, column: 7, scope: !10248)
!10287 = !DILocation(line: 3495, column: 18, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10284, file: !497, line: 3493, column: 6)
!10289 = !DILocation(line: 3496, column: 20, scope: !10288)
!10290 = !DILocation(line: 3496, column: 13, scope: !10288)
!10291 = !DILocation(line: 3497, column: 28, scope: !10288)
!10292 = !DILocation(line: 3497, column: 32, scope: !10288)
!10293 = !DILocation(line: 3497, column: 6, scope: !10288)
!10294 = !DILocation(line: 3498, column: 6, scope: !10288)
!10295 = !DILocation(line: 3501, column: 16, scope: !10248)
!10296 = !DILocation(line: 3501, column: 9, scope: !10248)
!10297 = !DILocation(line: 3502, column: 7, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10248, file: !497, line: 3502, column: 7)
!10299 = !DILocation(line: 3502, column: 12, scope: !10298)
!10300 = !DILocation(line: 3502, column: 7, scope: !10248)
!10301 = !DILocation(line: 3503, column: 19, scope: !10298)
!10302 = !DILocation(line: 3503, column: 13, scope: !10298)
!10303 = !DILocation(line: 3503, column: 6, scope: !10298)
!10304 = !DILocation(line: 3504, column: 7, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10248, file: !497, line: 3504, column: 7)
!10306 = !DILocation(line: 3504, column: 12, scope: !10305)
!10307 = !DILocation(line: 3504, column: 7, scope: !10248)
!10308 = !DILocation(line: 3505, column: 19, scope: !10305)
!10309 = !DILocation(line: 3505, column: 13, scope: !10305)
!10310 = !DILocation(line: 3505, column: 6, scope: !10305)
!10311 = !DILocation(line: 3506, column: 7, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10248, file: !497, line: 3506, column: 7)
!10313 = !DILocation(line: 3506, column: 12, scope: !10312)
!10314 = !DILocation(line: 3506, column: 29, scope: !10312)
!10315 = !DILocation(line: 3506, column: 32, scope: !10312)
!10316 = !DILocation(line: 3506, column: 37, scope: !10312)
!10317 = !DILocation(line: 3506, column: 7, scope: !10248)
!10318 = !DILocation(line: 3507, column: 20, scope: !10312)
!10319 = !DILocation(line: 3507, column: 13, scope: !10312)
!10320 = !DILocation(line: 3507, column: 6, scope: !10312)
!10321 = !DILocation(line: 3508, column: 2, scope: !10248)
!10322 = !DILocation(line: 3512, column: 7, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10324, file: !497, line: 3512, column: 7)
!10324 = distinct !DILexicalBlock(scope: !10240, file: !497, line: 3510, column: 2)
!10325 = !DILocation(line: 3512, column: 11, scope: !10323)
!10326 = !DILocation(line: 3512, column: 19, scope: !10323)
!10327 = !DILocation(line: 3512, column: 7, scope: !10324)
!10328 = !DILocation(line: 3513, column: 19, scope: !10323)
!10329 = !DILocation(line: 3513, column: 23, scope: !10323)
!10330 = !DILocation(line: 3513, column: 13, scope: !10323)
!10331 = !DILocation(line: 3513, column: 6, scope: !10323)
!10332 = !DILocation(line: 3514, column: 7, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10324, file: !497, line: 3514, column: 7)
!10334 = !DILocation(line: 3514, column: 11, scope: !10333)
!10335 = !DILocation(line: 3514, column: 19, scope: !10333)
!10336 = !DILocation(line: 3514, column: 7, scope: !10324)
!10337 = !DILocation(line: 3515, column: 19, scope: !10333)
!10338 = !DILocation(line: 3515, column: 23, scope: !10333)
!10339 = !DILocation(line: 3515, column: 13, scope: !10333)
!10340 = !DILocation(line: 3515, column: 6, scope: !10333)
!10341 = !DILocation(line: 3533, column: 12, scope: !10105)
!10342 = !DILocation(line: 3540, column: 25, scope: !10105)
!10343 = !DILocation(line: 3540, column: 29, scope: !10105)
!10344 = !DILocation(line: 3540, column: 17, scope: !10105)
!10345 = !DILocation(line: 3540, column: 15, scope: !10105)
!10346 = !DILocation(line: 3541, column: 10, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10105, file: !497, line: 3541, column: 10)
!10348 = !DILocation(line: 3541, column: 20, scope: !10347)
!10349 = !DILocation(line: 3541, column: 10, scope: !10105)
!10350 = !DILocation(line: 3542, column: 11, scope: !10347)
!10351 = !DILocation(line: 3542, column: 15, scope: !10347)
!10352 = !DILocation(line: 3542, column: 9, scope: !10347)
!10353 = !DILocation(line: 3542, column: 2, scope: !10347)
!10354 = !DILocation(line: 3545, column: 20, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10347, file: !497, line: 3544, column: 2)
!10356 = !DILocation(line: 3545, column: 11, scope: !10355)
!10357 = !DILocation(line: 3545, column: 9, scope: !10355)
!10358 = !DILocation(line: 3546, column: 7, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10355, file: !497, line: 3546, column: 7)
!10360 = !DILocation(line: 3546, column: 14, scope: !10359)
!10361 = !DILocation(line: 3546, column: 7, scope: !10355)
!10362 = !DILocation(line: 3547, column: 15, scope: !10359)
!10363 = !DILocation(line: 3547, column: 19, scope: !10359)
!10364 = !DILocation(line: 3547, column: 13, scope: !10359)
!10365 = !DILocation(line: 3547, column: 6, scope: !10359)
!10366 = !DILocation(line: 3550, column: 13, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10359, file: !497, line: 3549, column: 6)
!10368 = !DILocation(line: 3550, column: 16, scope: !10367)
!10369 = !DILocation(line: 3551, column: 20, scope: !10367)
!10370 = !DILocation(line: 3551, column: 13, scope: !10367)
!10371 = !DILocation(line: 3557, column: 12, scope: !10105)
!10372 = !DILocation(line: 3563, column: 20, scope: !10105)
!10373 = !DILocation(line: 3563, column: 28, scope: !10105)
!10374 = !DILocation(line: 3563, column: 34, scope: !10105)
!10375 = !DILocation(line: 3563, column: 12, scope: !10105)
!10376 = !DILocation(line: 3566, column: 43, scope: !10105)
!10377 = !DILocation(line: 3566, column: 47, scope: !10105)
!10378 = !DILocation(line: 3566, column: 5, scope: !10105)
!10379 = !DILocation(line: 3567, column: 21, scope: !10105)
!10380 = !DILocation(line: 3567, column: 30, scope: !10105)
!10381 = !DILocation(line: 3567, column: 47, scope: !10105)
!10382 = !DILocation(line: 3567, column: 59, scope: !10105)
!10383 = !DILocation(line: 3567, column: 63, scope: !10105)
!10384 = !DILocation(line: 3567, column: 5, scope: !10105)
!10385 = !DILocation(line: 3568, column: 27, scope: !10105)
!10386 = !DILocation(line: 3568, column: 5, scope: !10105)
!10387 = !DILocation(line: 3569, column: 5, scope: !10105)
!10388 = distinct !DISubprogram(name: "cgi_kill", scope: !497, file: !497, line: 2674, type: !648, scopeLine: 2675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!10389 = !DILocalVariable(name: "client_data", arg: 1, scope: !10388, file: !497, line: 2674, type: !650)
!10390 = !DILocation(line: 2674, column: 22, scope: !10388)
!10391 = !DILocalVariable(name: "nowP", arg: 2, scope: !10388, file: !497, line: 2674, type: !636)
!10392 = !DILocation(line: 2674, column: 51, scope: !10388)
!10393 = !DILocalVariable(name: "pid", scope: !10388, file: !497, line: 2676, type: !392)
!10394 = !DILocation(line: 2676, column: 11, scope: !10388)
!10395 = !DILocation(line: 2678, column: 31, scope: !10388)
!10396 = !DILocation(line: 2678, column: 9, scope: !10388)
!10397 = !DILocation(line: 2679, column: 16, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10388, file: !497, line: 2679, column: 10)
!10399 = !DILocation(line: 2679, column: 10, scope: !10398)
!10400 = !DILocation(line: 2679, column: 30, scope: !10398)
!10401 = !DILocation(line: 2679, column: 10, scope: !10388)
!10402 = !DILocation(line: 2681, column: 48, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10398, file: !497, line: 2680, column: 2)
!10404 = !DILocation(line: 2681, column: 2, scope: !10403)
!10405 = !DILocation(line: 2683, column: 19, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10403, file: !497, line: 2683, column: 7)
!10407 = !DILocation(line: 2683, column: 7, scope: !10406)
!10408 = !DILocation(line: 2683, column: 64, scope: !10406)
!10409 = !DILocation(line: 2683, column: 7, scope: !10403)
!10410 = !DILocation(line: 2685, column: 6, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10406, file: !497, line: 2684, column: 6)
!10412 = !DILocation(line: 2686, column: 6, scope: !10411)
!10413 = !DILocation(line: 2688, column: 2, scope: !10403)
!10414 = !DILocation(line: 2689, column: 5, scope: !10388)
!10415 = distinct !DISubprogram(name: "cgi_kill2", scope: !497, file: !497, line: 2664, type: !648, scopeLine: 2665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!10416 = !DILocalVariable(name: "client_data", arg: 1, scope: !10415, file: !497, line: 2664, type: !650)
!10417 = !DILocation(line: 2664, column: 23, scope: !10415)
!10418 = !DILocalVariable(name: "nowP", arg: 2, scope: !10415, file: !497, line: 2664, type: !636)
!10419 = !DILocation(line: 2664, column: 52, scope: !10415)
!10420 = !DILocalVariable(name: "pid", scope: !10415, file: !497, line: 2666, type: !392)
!10421 = !DILocation(line: 2666, column: 11, scope: !10415)
!10422 = !DILocation(line: 2668, column: 31, scope: !10415)
!10423 = !DILocation(line: 2668, column: 9, scope: !10415)
!10424 = !DILocation(line: 2669, column: 16, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10415, file: !497, line: 2669, column: 10)
!10426 = !DILocation(line: 2669, column: 10, scope: !10425)
!10427 = !DILocation(line: 2669, column: 31, scope: !10425)
!10428 = !DILocation(line: 2669, column: 10, scope: !10415)
!10429 = !DILocation(line: 2670, column: 53, scope: !10425)
!10430 = !DILocation(line: 2670, column: 2, scope: !10425)
!10431 = !DILocation(line: 2671, column: 5, scope: !10415)
!10432 = !DILocalVariable(name: "hc", arg: 1, scope: !935, file: !497, line: 3049, type: !709)
!10433 = !DILocation(line: 3049, column: 24, scope: !935)
!10434 = !DILocalVariable(name: "envn", scope: !935, file: !497, line: 3052, type: !26)
!10435 = !DILocation(line: 3052, column: 9, scope: !935)
!10436 = !DILocalVariable(name: "cp", scope: !935, file: !497, line: 3053, type: !6)
!10437 = !DILocation(line: 3053, column: 11, scope: !935)
!10438 = !DILocalVariable(name: "buf", scope: !935, file: !497, line: 3054, type: !671)
!10439 = !DILocation(line: 3054, column: 10, scope: !935)
!10440 = !DILocation(line: 3056, column: 10, scope: !935)
!10441 = !DILocation(line: 3057, column: 20, scope: !935)
!10442 = !DILocation(line: 3057, column: 14, scope: !935)
!10443 = !DILocation(line: 3057, column: 5, scope: !935)
!10444 = !DILocation(line: 3057, column: 18, scope: !935)
!10445 = !DILocation(line: 3061, column: 20, scope: !935)
!10446 = !DILocation(line: 3061, column: 14, scope: !935)
!10447 = !DILocation(line: 3061, column: 5, scope: !935)
!10448 = !DILocation(line: 3061, column: 18, scope: !935)
!10449 = !DILocation(line: 3062, column: 10, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3062, column: 10)
!10451 = !DILocation(line: 3062, column: 14, scope: !10450)
!10452 = !DILocation(line: 3062, column: 18, scope: !10450)
!10453 = !DILocation(line: 3062, column: 24, scope: !10450)
!10454 = !DILocation(line: 3062, column: 27, scope: !10450)
!10455 = !DILocation(line: 3062, column: 31, scope: !10450)
!10456 = !DILocation(line: 3062, column: 40, scope: !10450)
!10457 = !DILocation(line: 3062, column: 53, scope: !10450)
!10458 = !DILocation(line: 3062, column: 56, scope: !10450)
!10459 = !DILocation(line: 3062, column: 60, scope: !10450)
!10460 = !DILocation(line: 3062, column: 72, scope: !10450)
!10461 = !DILocation(line: 3062, column: 10, scope: !935)
!10462 = !DILocation(line: 3063, column: 7, scope: !10450)
!10463 = !DILocation(line: 3063, column: 11, scope: !10450)
!10464 = !DILocation(line: 3063, column: 5, scope: !10450)
!10465 = !DILocation(line: 3063, column: 2, scope: !10450)
!10466 = !DILocation(line: 3064, column: 15, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10450, file: !497, line: 3064, column: 15)
!10468 = !DILocation(line: 3064, column: 19, scope: !10467)
!10469 = !DILocation(line: 3064, column: 27, scope: !10467)
!10470 = !DILocation(line: 3064, column: 40, scope: !10467)
!10471 = !DILocation(line: 3064, column: 43, scope: !10467)
!10472 = !DILocation(line: 3064, column: 47, scope: !10467)
!10473 = !DILocation(line: 3064, column: 58, scope: !10467)
!10474 = !DILocation(line: 3064, column: 15, scope: !10450)
!10475 = !DILocation(line: 3065, column: 7, scope: !10467)
!10476 = !DILocation(line: 3065, column: 11, scope: !10467)
!10477 = !DILocation(line: 3065, column: 5, scope: !10467)
!10478 = !DILocation(line: 3065, column: 2, scope: !10467)
!10479 = !DILocation(line: 3066, column: 15, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10467, file: !497, line: 3066, column: 15)
!10481 = !DILocation(line: 3066, column: 19, scope: !10480)
!10482 = !DILocation(line: 3066, column: 27, scope: !10480)
!10483 = !DILocation(line: 3066, column: 40, scope: !10480)
!10484 = !DILocation(line: 3066, column: 43, scope: !10480)
!10485 = !DILocation(line: 3066, column: 47, scope: !10480)
!10486 = !DILocation(line: 3066, column: 58, scope: !10480)
!10487 = !DILocation(line: 3066, column: 15, scope: !10467)
!10488 = !DILocation(line: 3067, column: 7, scope: !10480)
!10489 = !DILocation(line: 3067, column: 11, scope: !10480)
!10490 = !DILocation(line: 3067, column: 5, scope: !10480)
!10491 = !DILocation(line: 3067, column: 2, scope: !10480)
!10492 = !DILocation(line: 3069, column: 7, scope: !10480)
!10493 = !DILocation(line: 3069, column: 11, scope: !10480)
!10494 = !DILocation(line: 3069, column: 15, scope: !10480)
!10495 = !DILocation(line: 3069, column: 5, scope: !10480)
!10496 = !DILocation(line: 3070, column: 10, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3070, column: 10)
!10498 = !DILocation(line: 3070, column: 13, scope: !10497)
!10499 = !DILocation(line: 3070, column: 10, scope: !935)
!10500 = !DILocation(line: 3071, column: 46, scope: !10497)
!10501 = !DILocation(line: 3071, column: 17, scope: !10497)
!10502 = !DILocation(line: 3071, column: 11, scope: !10497)
!10503 = !DILocation(line: 3071, column: 2, scope: !10497)
!10504 = !DILocation(line: 3071, column: 15, scope: !10497)
!10505 = !DILocation(line: 3072, column: 14, scope: !935)
!10506 = !DILocation(line: 3072, column: 5, scope: !935)
!10507 = !DILocation(line: 3072, column: 18, scope: !935)
!10508 = !DILocation(line: 3073, column: 52, scope: !935)
!10509 = !DILocation(line: 3073, column: 56, scope: !935)
!10510 = !DILocation(line: 3073, column: 20, scope: !935)
!10511 = !DILocation(line: 3073, column: 14, scope: !935)
!10512 = !DILocation(line: 3073, column: 5, scope: !935)
!10513 = !DILocation(line: 3073, column: 18, scope: !935)
!10514 = !DILocation(line: 3074, column: 25, scope: !935)
!10515 = !DILocation(line: 3074, column: 55, scope: !935)
!10516 = !DILocation(line: 3074, column: 59, scope: !935)
!10517 = !DILocation(line: 3074, column: 63, scope: !935)
!10518 = !DILocation(line: 3074, column: 49, scope: !935)
!10519 = !DILocation(line: 3074, column: 12, scope: !935)
!10520 = !DILocation(line: 3075, column: 49, scope: !935)
!10521 = !DILocation(line: 3075, column: 20, scope: !935)
!10522 = !DILocation(line: 3075, column: 14, scope: !935)
!10523 = !DILocation(line: 3075, column: 5, scope: !935)
!10524 = !DILocation(line: 3075, column: 18, scope: !935)
!10525 = !DILocation(line: 3077, column: 41, scope: !935)
!10526 = !DILocation(line: 3077, column: 45, scope: !935)
!10527 = !DILocation(line: 3077, column: 23, scope: !935)
!10528 = !DILocation(line: 3076, column: 20, scope: !935)
!10529 = !DILocation(line: 3076, column: 14, scope: !935)
!10530 = !DILocation(line: 3076, column: 5, scope: !935)
!10531 = !DILocation(line: 3076, column: 18, scope: !935)
!10532 = !DILocation(line: 3078, column: 10, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3078, column: 10)
!10534 = !DILocation(line: 3078, column: 14, scope: !10533)
!10535 = !DILocation(line: 3078, column: 26, scope: !10533)
!10536 = !DILocation(line: 3078, column: 10, scope: !935)
!10537 = !DILocalVariable(name: "cp2", scope: !10538, file: !497, line: 3080, type: !6)
!10538 = distinct !DILexicalBlock(scope: !10533, file: !497, line: 3079, column: 2)
!10539 = !DILocation(line: 3080, column: 8, scope: !10538)
!10540 = !DILocalVariable(name: "l", scope: !10538, file: !497, line: 3081, type: !264)
!10541 = !DILocation(line: 3081, column: 9, scope: !10538)
!10542 = !DILocation(line: 3082, column: 45, scope: !10538)
!10543 = !DILocation(line: 3082, column: 49, scope: !10538)
!10544 = !DILocation(line: 3082, column: 17, scope: !10538)
!10545 = !DILocation(line: 3082, column: 11, scope: !10538)
!10546 = !DILocation(line: 3082, column: 2, scope: !10538)
!10547 = !DILocation(line: 3082, column: 15, scope: !10538)
!10548 = !DILocation(line: 3083, column: 14, scope: !10538)
!10549 = !DILocation(line: 3083, column: 18, scope: !10538)
!10550 = !DILocation(line: 3083, column: 22, scope: !10538)
!10551 = !DILocation(line: 3083, column: 6, scope: !10538)
!10552 = !DILocation(line: 3083, column: 38, scope: !10538)
!10553 = !DILocation(line: 3083, column: 42, scope: !10538)
!10554 = !DILocation(line: 3083, column: 30, scope: !10538)
!10555 = !DILocation(line: 3083, column: 28, scope: !10538)
!10556 = !DILocation(line: 3083, column: 53, scope: !10538)
!10557 = !DILocation(line: 3083, column: 4, scope: !10538)
!10558 = !DILocation(line: 3084, column: 8, scope: !10538)
!10559 = !DILocation(line: 3084, column: 6, scope: !10538)
!10560 = !DILocation(line: 3085, column: 7, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10538, file: !497, line: 3085, column: 7)
!10562 = !DILocation(line: 3085, column: 11, scope: !10561)
!10563 = !DILocation(line: 3085, column: 7, scope: !10538)
!10564 = !DILocation(line: 3087, column: 26, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10561, file: !497, line: 3086, column: 6)
!10566 = !DILocation(line: 3087, column: 31, scope: !10565)
!10567 = !DILocation(line: 3087, column: 42, scope: !10565)
!10568 = !DILocation(line: 3087, column: 46, scope: !10565)
!10569 = !DILocation(line: 3087, column: 50, scope: !10565)
!10570 = !DILocation(line: 3087, column: 55, scope: !10565)
!10571 = !DILocation(line: 3087, column: 59, scope: !10565)
!10572 = !DILocation(line: 3087, column: 13, scope: !10565)
!10573 = !DILocation(line: 3088, column: 54, scope: !10565)
!10574 = !DILocation(line: 3088, column: 21, scope: !10565)
!10575 = !DILocation(line: 3088, column: 15, scope: !10565)
!10576 = !DILocation(line: 3088, column: 6, scope: !10565)
!10577 = !DILocation(line: 3088, column: 19, scope: !10565)
!10578 = !DILocation(line: 3089, column: 6, scope: !10565)
!10579 = !DILocation(line: 3090, column: 2, scope: !10538)
!10580 = !DILocation(line: 3092, column: 29, scope: !935)
!10581 = !DILocation(line: 3092, column: 33, scope: !935)
!10582 = !DILocation(line: 3092, column: 21, scope: !935)
!10583 = !DILocation(line: 3092, column: 53, scope: !935)
!10584 = !DILocation(line: 3093, column: 7, scope: !935)
!10585 = !DILocation(line: 3093, column: 11, scope: !935)
!10586 = !DILocation(line: 3091, column: 20, scope: !935)
!10587 = !DILocation(line: 3091, column: 14, scope: !935)
!10588 = !DILocation(line: 3091, column: 5, scope: !935)
!10589 = !DILocation(line: 3091, column: 18, scope: !935)
!10590 = !DILocation(line: 3094, column: 10, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3094, column: 10)
!10592 = !DILocation(line: 3094, column: 14, scope: !10591)
!10593 = !DILocation(line: 3094, column: 23, scope: !10591)
!10594 = !DILocation(line: 3094, column: 10, scope: !935)
!10595 = !DILocation(line: 3095, column: 47, scope: !10591)
!10596 = !DILocation(line: 3095, column: 51, scope: !10591)
!10597 = !DILocation(line: 3095, column: 17, scope: !10591)
!10598 = !DILocation(line: 3095, column: 11, scope: !10591)
!10599 = !DILocation(line: 3095, column: 2, scope: !10591)
!10600 = !DILocation(line: 3095, column: 15, scope: !10591)
!10601 = !DILocation(line: 3097, column: 33, scope: !935)
!10602 = !DILocation(line: 3097, column: 37, scope: !935)
!10603 = !DILocation(line: 3097, column: 20, scope: !935)
!10604 = !DILocation(line: 3096, column: 20, scope: !935)
!10605 = !DILocation(line: 3096, column: 14, scope: !935)
!10606 = !DILocation(line: 3096, column: 5, scope: !935)
!10607 = !DILocation(line: 3096, column: 18, scope: !935)
!10608 = !DILocation(line: 3098, column: 10, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3098, column: 10)
!10610 = !DILocation(line: 3098, column: 14, scope: !10609)
!10611 = !DILocation(line: 3098, column: 26, scope: !10609)
!10612 = !DILocation(line: 3098, column: 10, scope: !935)
!10613 = !DILocation(line: 3100, column: 47, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10609, file: !497, line: 3099, column: 2)
!10615 = !DILocation(line: 3100, column: 51, scope: !10614)
!10616 = !DILocation(line: 3100, column: 17, scope: !10614)
!10617 = !DILocation(line: 3100, column: 11, scope: !10614)
!10618 = !DILocation(line: 3100, column: 2, scope: !10614)
!10619 = !DILocation(line: 3100, column: 15, scope: !10614)
!10620 = !DILocation(line: 3101, column: 48, scope: !10614)
!10621 = !DILocation(line: 3101, column: 52, scope: !10614)
!10622 = !DILocation(line: 3101, column: 17, scope: !10614)
!10623 = !DILocation(line: 3101, column: 11, scope: !10614)
!10624 = !DILocation(line: 3101, column: 2, scope: !10614)
!10625 = !DILocation(line: 3101, column: 15, scope: !10614)
!10626 = !DILocation(line: 3102, column: 2, scope: !10614)
!10627 = !DILocation(line: 3103, column: 10, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3103, column: 10)
!10629 = !DILocation(line: 3103, column: 14, scope: !10628)
!10630 = !DILocation(line: 3103, column: 27, scope: !10628)
!10631 = !DILocation(line: 3103, column: 10, scope: !935)
!10632 = !DILocation(line: 3104, column: 50, scope: !10628)
!10633 = !DILocation(line: 3104, column: 54, scope: !10628)
!10634 = !DILocation(line: 3104, column: 17, scope: !10628)
!10635 = !DILocation(line: 3104, column: 11, scope: !10628)
!10636 = !DILocation(line: 3104, column: 2, scope: !10628)
!10637 = !DILocation(line: 3104, column: 15, scope: !10628)
!10638 = !DILocation(line: 3105, column: 10, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3105, column: 10)
!10640 = !DILocation(line: 3105, column: 14, scope: !10639)
!10641 = !DILocation(line: 3105, column: 24, scope: !10639)
!10642 = !DILocation(line: 3105, column: 10, scope: !935)
!10643 = !DILocation(line: 3106, column: 46, scope: !10639)
!10644 = !DILocation(line: 3106, column: 50, scope: !10639)
!10645 = !DILocation(line: 3106, column: 17, scope: !10639)
!10646 = !DILocation(line: 3106, column: 11, scope: !10639)
!10647 = !DILocation(line: 3106, column: 2, scope: !10639)
!10648 = !DILocation(line: 3106, column: 15, scope: !10639)
!10649 = !DILocation(line: 3107, column: 10, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3107, column: 10)
!10651 = !DILocation(line: 3107, column: 14, scope: !10650)
!10652 = !DILocation(line: 3107, column: 25, scope: !10650)
!10653 = !DILocation(line: 3107, column: 10, scope: !935)
!10654 = !DILocation(line: 3108, column: 55, scope: !10650)
!10655 = !DILocation(line: 3108, column: 59, scope: !10650)
!10656 = !DILocation(line: 3108, column: 17, scope: !10650)
!10657 = !DILocation(line: 3108, column: 11, scope: !10650)
!10658 = !DILocation(line: 3108, column: 2, scope: !10650)
!10659 = !DILocation(line: 3108, column: 15, scope: !10650)
!10660 = !DILocation(line: 3109, column: 10, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3109, column: 10)
!10662 = !DILocation(line: 3109, column: 14, scope: !10661)
!10663 = !DILocation(line: 3109, column: 25, scope: !10661)
!10664 = !DILocation(line: 3109, column: 10, scope: !935)
!10665 = !DILocation(line: 3110, column: 55, scope: !10661)
!10666 = !DILocation(line: 3110, column: 59, scope: !10661)
!10667 = !DILocation(line: 3110, column: 17, scope: !10661)
!10668 = !DILocation(line: 3110, column: 11, scope: !10661)
!10669 = !DILocation(line: 3110, column: 2, scope: !10661)
!10670 = !DILocation(line: 3110, column: 15, scope: !10661)
!10671 = !DILocation(line: 3111, column: 10, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3111, column: 10)
!10673 = !DILocation(line: 3111, column: 14, scope: !10672)
!10674 = !DILocation(line: 3111, column: 24, scope: !10672)
!10675 = !DILocation(line: 3111, column: 10, scope: !935)
!10676 = !DILocation(line: 3112, column: 46, scope: !10672)
!10677 = !DILocation(line: 3112, column: 50, scope: !10672)
!10678 = !DILocation(line: 3112, column: 17, scope: !10672)
!10679 = !DILocation(line: 3112, column: 11, scope: !10672)
!10680 = !DILocation(line: 3112, column: 2, scope: !10672)
!10681 = !DILocation(line: 3112, column: 15, scope: !10672)
!10682 = !DILocation(line: 3113, column: 10, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3113, column: 10)
!10684 = !DILocation(line: 3113, column: 14, scope: !10683)
!10685 = !DILocation(line: 3113, column: 29, scope: !10683)
!10686 = !DILocation(line: 3113, column: 10, scope: !935)
!10687 = !DILocation(line: 3114, column: 47, scope: !10683)
!10688 = !DILocation(line: 3114, column: 51, scope: !10683)
!10689 = !DILocation(line: 3114, column: 17, scope: !10683)
!10690 = !DILocation(line: 3114, column: 11, scope: !10683)
!10691 = !DILocation(line: 3114, column: 2, scope: !10683)
!10692 = !DILocation(line: 3114, column: 15, scope: !10683)
!10693 = !DILocation(line: 3115, column: 10, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3115, column: 10)
!10695 = !DILocation(line: 3115, column: 14, scope: !10694)
!10696 = !DILocation(line: 3115, column: 25, scope: !10694)
!10697 = !DILocation(line: 3115, column: 10, scope: !935)
!10698 = !DILocation(line: 3116, column: 44, scope: !10694)
!10699 = !DILocation(line: 3116, column: 48, scope: !10694)
!10700 = !DILocation(line: 3116, column: 17, scope: !10694)
!10701 = !DILocation(line: 3116, column: 11, scope: !10694)
!10702 = !DILocation(line: 3116, column: 2, scope: !10694)
!10703 = !DILocation(line: 3116, column: 15, scope: !10694)
!10704 = !DILocation(line: 3117, column: 10, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3117, column: 10)
!10706 = !DILocation(line: 3117, column: 14, scope: !10705)
!10707 = !DILocation(line: 3117, column: 28, scope: !10705)
!10708 = !DILocation(line: 3117, column: 10, scope: !935)
!10709 = !DILocation(line: 3120, column: 6, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10705, file: !497, line: 3118, column: 2)
!10711 = !DILocation(line: 3120, column: 47, scope: !10710)
!10712 = !DILocation(line: 3120, column: 51, scope: !10710)
!10713 = !DILocation(line: 3119, column: 9, scope: !10710)
!10714 = !DILocation(line: 3121, column: 49, scope: !10710)
!10715 = !DILocation(line: 3121, column: 17, scope: !10710)
!10716 = !DILocation(line: 3121, column: 11, scope: !10710)
!10717 = !DILocation(line: 3121, column: 2, scope: !10710)
!10718 = !DILocation(line: 3121, column: 15, scope: !10710)
!10719 = !DILocation(line: 3122, column: 2, scope: !10710)
!10720 = !DILocation(line: 3123, column: 10, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3123, column: 10)
!10722 = !DILocation(line: 3123, column: 14, scope: !10721)
!10723 = !DILocation(line: 3123, column: 28, scope: !10721)
!10724 = !DILocation(line: 3123, column: 10, scope: !935)
!10725 = !DILocation(line: 3124, column: 46, scope: !10721)
!10726 = !DILocation(line: 3124, column: 50, scope: !10721)
!10727 = !DILocation(line: 3124, column: 17, scope: !10721)
!10728 = !DILocation(line: 3124, column: 11, scope: !10721)
!10729 = !DILocation(line: 3124, column: 2, scope: !10721)
!10730 = !DILocation(line: 3124, column: 15, scope: !10721)
!10731 = !DILocation(line: 3125, column: 10, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3125, column: 10)
!10733 = !DILocation(line: 3125, column: 14, scope: !10732)
!10734 = !DILocation(line: 3125, column: 31, scope: !10732)
!10735 = !DILocation(line: 3125, column: 10, scope: !935)
!10736 = !DILocation(line: 3126, column: 17, scope: !10732)
!10737 = !DILocation(line: 3126, column: 11, scope: !10732)
!10738 = !DILocation(line: 3126, column: 2, scope: !10732)
!10739 = !DILocation(line: 3126, column: 15, scope: !10732)
!10740 = !DILocation(line: 3128, column: 10, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !935, file: !497, line: 3128, column: 10)
!10742 = !DILocation(line: 3128, column: 25, scope: !10741)
!10743 = !DILocation(line: 3128, column: 10, scope: !935)
!10744 = !DILocation(line: 3129, column: 37, scope: !10741)
!10745 = !DILocation(line: 3129, column: 17, scope: !10741)
!10746 = !DILocation(line: 3129, column: 11, scope: !10741)
!10747 = !DILocation(line: 3129, column: 2, scope: !10741)
!10748 = !DILocation(line: 3129, column: 15, scope: !10741)
!10749 = !DILocation(line: 3130, column: 49, scope: !935)
!10750 = !DILocation(line: 3130, column: 53, scope: !935)
!10751 = !DILocation(line: 3130, column: 57, scope: !935)
!10752 = !DILocation(line: 3130, column: 20, scope: !935)
!10753 = !DILocation(line: 3130, column: 14, scope: !935)
!10754 = !DILocation(line: 3130, column: 5, scope: !935)
!10755 = !DILocation(line: 3130, column: 18, scope: !935)
!10756 = !DILocation(line: 3132, column: 10, scope: !935)
!10757 = !DILocation(line: 3132, column: 5, scope: !935)
!10758 = !DILocation(line: 3132, column: 16, scope: !935)
!10759 = !DILocation(line: 3133, column: 5, scope: !935)
!10760 = distinct !DISubprogram(name: "make_argp", scope: !497, file: !497, line: 3142, type: !936, scopeLine: 3143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!10761 = !DILocalVariable(name: "hc", arg: 1, scope: !10760, file: !497, line: 3142, type: !709)
!10762 = !DILocation(line: 3142, column: 24, scope: !10760)
!10763 = !DILocalVariable(name: "argp", scope: !10760, file: !497, line: 3144, type: !635)
!10764 = !DILocation(line: 3144, column: 12, scope: !10760)
!10765 = !DILocalVariable(name: "argn", scope: !10760, file: !497, line: 3145, type: !26)
!10766 = !DILocation(line: 3145, column: 9, scope: !10760)
!10767 = !DILocalVariable(name: "cp1", scope: !10760, file: !497, line: 3146, type: !6)
!10768 = !DILocation(line: 3146, column: 11, scope: !10760)
!10769 = !DILocalVariable(name: "cp2", scope: !10760, file: !497, line: 3147, type: !6)
!10770 = !DILocation(line: 3147, column: 11, scope: !10760)
!10771 = !DILocation(line: 3153, column: 12, scope: !10760)
!10772 = !DILocation(line: 3153, column: 10, scope: !10760)
!10773 = !DILocation(line: 3154, column: 10, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10760, file: !497, line: 3154, column: 10)
!10775 = !DILocation(line: 3154, column: 15, scope: !10774)
!10776 = !DILocation(line: 3154, column: 10, scope: !10760)
!10777 = !DILocation(line: 3155, column: 2, scope: !10774)
!10778 = !DILocation(line: 3157, column: 24, scope: !10760)
!10779 = !DILocation(line: 3157, column: 28, scope: !10760)
!10780 = !DILocation(line: 3157, column: 15, scope: !10760)
!10781 = !DILocation(line: 3157, column: 5, scope: !10760)
!10782 = !DILocation(line: 3157, column: 13, scope: !10760)
!10783 = !DILocation(line: 3158, column: 10, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10760, file: !497, line: 3158, column: 10)
!10785 = !DILocation(line: 3158, column: 18, scope: !10784)
!10786 = !DILocation(line: 3158, column: 10, scope: !10760)
!10787 = !DILocation(line: 3159, column: 4, scope: !10784)
!10788 = !DILocation(line: 3159, column: 2, scope: !10784)
!10789 = !DILocation(line: 3161, column: 12, scope: !10784)
!10790 = !DILocation(line: 3161, column: 16, scope: !10784)
!10791 = !DILocation(line: 3161, column: 2, scope: !10784)
!10792 = !DILocation(line: 3161, column: 10, scope: !10784)
!10793 = !DILocation(line: 3163, column: 10, scope: !10760)
!10794 = !DILocation(line: 3169, column: 18, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10760, file: !497, line: 3169, column: 10)
!10796 = !DILocation(line: 3169, column: 22, scope: !10795)
!10797 = !DILocation(line: 3169, column: 10, scope: !10795)
!10798 = !DILocation(line: 3169, column: 35, scope: !10795)
!10799 = !DILocation(line: 3169, column: 10, scope: !10760)
!10800 = !DILocation(line: 3171, column: 20, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10802, file: !497, line: 3171, column: 2)
!10802 = distinct !DILexicalBlock(scope: !10795, file: !497, line: 3170, column: 2)
!10803 = !DILocation(line: 3171, column: 24, scope: !10801)
!10804 = !DILocation(line: 3171, column: 18, scope: !10801)
!10805 = !DILocation(line: 3171, column: 12, scope: !10801)
!10806 = !DILocation(line: 3171, column: 8, scope: !10801)
!10807 = !DILocation(line: 3171, column: 32, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10801, file: !497, line: 3171, column: 2)
!10809 = !DILocation(line: 3171, column: 31, scope: !10808)
!10810 = !DILocation(line: 3171, column: 36, scope: !10808)
!10811 = !DILocation(line: 3171, column: 2, scope: !10801)
!10812 = !DILocation(line: 3173, column: 12, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10814, file: !497, line: 3173, column: 11)
!10814 = distinct !DILexicalBlock(scope: !10808, file: !497, line: 3172, column: 6)
!10815 = !DILocation(line: 3173, column: 11, scope: !10813)
!10816 = !DILocation(line: 3173, column: 16, scope: !10813)
!10817 = !DILocation(line: 3173, column: 11, scope: !10814)
!10818 = !DILocation(line: 3175, column: 4, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10813, file: !497, line: 3174, column: 3)
!10820 = !DILocation(line: 3175, column: 8, scope: !10819)
!10821 = !DILocation(line: 3176, column: 14, scope: !10819)
!10822 = !DILocation(line: 3176, column: 19, scope: !10819)
!10823 = !DILocation(line: 3176, column: 3, scope: !10819)
!10824 = !DILocation(line: 3177, column: 18, scope: !10819)
!10825 = !DILocation(line: 3177, column: 3, scope: !10819)
!10826 = !DILocation(line: 3177, column: 12, scope: !10819)
!10827 = !DILocation(line: 3177, column: 16, scope: !10819)
!10828 = !DILocation(line: 3178, column: 9, scope: !10819)
!10829 = !DILocation(line: 3178, column: 13, scope: !10819)
!10830 = !DILocation(line: 3178, column: 7, scope: !10819)
!10831 = !DILocation(line: 3179, column: 3, scope: !10819)
!10832 = !DILocation(line: 3180, column: 6, scope: !10814)
!10833 = !DILocation(line: 3171, column: 45, scope: !10808)
!10834 = !DILocation(line: 3171, column: 2, scope: !10808)
!10835 = distinct !{!10835, !10811, !10836}
!10836 = !DILocation(line: 3180, column: 6, scope: !10801)
!10837 = !DILocation(line: 3181, column: 7, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10802, file: !497, line: 3181, column: 7)
!10839 = !DILocation(line: 3181, column: 14, scope: !10838)
!10840 = !DILocation(line: 3181, column: 11, scope: !10838)
!10841 = !DILocation(line: 3181, column: 7, scope: !10802)
!10842 = !DILocation(line: 3183, column: 17, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10838, file: !497, line: 3182, column: 6)
!10844 = !DILocation(line: 3183, column: 22, scope: !10843)
!10845 = !DILocation(line: 3183, column: 6, scope: !10843)
!10846 = !DILocation(line: 3184, column: 21, scope: !10843)
!10847 = !DILocation(line: 3184, column: 6, scope: !10843)
!10848 = !DILocation(line: 3184, column: 15, scope: !10843)
!10849 = !DILocation(line: 3184, column: 19, scope: !10843)
!10850 = !DILocation(line: 3185, column: 6, scope: !10843)
!10851 = !DILocation(line: 3186, column: 2, scope: !10802)
!10852 = !DILocation(line: 3188, column: 5, scope: !10760)
!10853 = !DILocation(line: 3188, column: 10, scope: !10760)
!10854 = !DILocation(line: 3188, column: 16, scope: !10760)
!10855 = !DILocation(line: 3189, column: 12, scope: !10760)
!10856 = !DILocation(line: 3189, column: 5, scope: !10760)
!10857 = !DILocation(line: 3190, column: 5, scope: !10760)
!10858 = distinct !DISubprogram(name: "cgi_interpose_input", scope: !497, file: !497, line: 3200, type: !10859, scopeLine: 3201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!10859 = !DISubroutineType(types: !10860)
!10860 = !{null, !709, !26}
!10861 = !DILocalVariable(name: "hc", arg: 1, scope: !10858, file: !497, line: 3200, type: !709)
!10862 = !DILocation(line: 3200, column: 34, scope: !10858)
!10863 = !DILocalVariable(name: "wfd", arg: 2, scope: !10858, file: !497, line: 3200, type: !26)
!10864 = !DILocation(line: 3200, column: 42, scope: !10858)
!10865 = !DILocalVariable(name: "c", scope: !10858, file: !497, line: 3202, type: !264)
!10866 = !DILocation(line: 3202, column: 12, scope: !10858)
!10867 = !DILocalVariable(name: "r", scope: !10858, file: !497, line: 3203, type: !10868)
!10868 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !10869, line: 31, baseType: !10870)
!10869 = !DIFile(filename: "/usr/include/sys/_types/_ssize_t.h", directory: "")
!10870 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_ssize_t", file: !23, line: 119, baseType: !14)
!10871 = !DILocation(line: 3203, column: 13, scope: !10858)
!10872 = !DILocalVariable(name: "buf", scope: !10858, file: !497, line: 3204, type: !9229)
!10873 = !DILocation(line: 3204, column: 10, scope: !10858)
!10874 = !DILocation(line: 3206, column: 9, scope: !10858)
!10875 = !DILocation(line: 3206, column: 13, scope: !10858)
!10876 = !DILocation(line: 3206, column: 24, scope: !10858)
!10877 = !DILocation(line: 3206, column: 28, scope: !10858)
!10878 = !DILocation(line: 3206, column: 22, scope: !10858)
!10879 = !DILocation(line: 3206, column: 7, scope: !10858)
!10880 = !DILocation(line: 3207, column: 10, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10858, file: !497, line: 3207, column: 10)
!10882 = !DILocation(line: 3207, column: 12, scope: !10881)
!10883 = !DILocation(line: 3207, column: 10, scope: !10858)
!10884 = !DILocation(line: 3209, column: 26, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10886, file: !497, line: 3209, column: 7)
!10886 = distinct !DILexicalBlock(scope: !10881, file: !497, line: 3208, column: 2)
!10887 = !DILocation(line: 3209, column: 33, scope: !10885)
!10888 = !DILocation(line: 3209, column: 37, scope: !10885)
!10889 = !DILocation(line: 3209, column: 46, scope: !10885)
!10890 = !DILocation(line: 3209, column: 50, scope: !10885)
!10891 = !DILocation(line: 3209, column: 65, scope: !10885)
!10892 = !DILocation(line: 3209, column: 7, scope: !10885)
!10893 = !DILocation(line: 3209, column: 72, scope: !10885)
!10894 = !DILocation(line: 3209, column: 69, scope: !10885)
!10895 = !DILocation(line: 3209, column: 7, scope: !10886)
!10896 = !DILocation(line: 3210, column: 6, scope: !10885)
!10897 = !DILocation(line: 3211, column: 2, scope: !10886)
!10898 = !DILocation(line: 3212, column: 5, scope: !10858)
!10899 = !DILocation(line: 3212, column: 13, scope: !10858)
!10900 = !DILocation(line: 3212, column: 17, scope: !10858)
!10901 = !DILocation(line: 3212, column: 21, scope: !10858)
!10902 = !DILocation(line: 3212, column: 15, scope: !10858)
!10903 = !DILocation(line: 3214, column: 12, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10858, file: !497, line: 3213, column: 2)
!10905 = !DILocation(line: 3214, column: 16, scope: !10904)
!10906 = !DILocation(line: 3214, column: 25, scope: !10904)
!10907 = !DILocation(line: 3214, column: 30, scope: !10904)
!10908 = !DILocation(line: 3214, column: 6, scope: !10904)
!10909 = !DILocation(line: 3214, column: 4, scope: !10904)
!10910 = !DILocation(line: 3215, column: 7, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10904, file: !497, line: 3215, column: 7)
!10912 = !DILocation(line: 3215, column: 9, scope: !10911)
!10913 = !DILocation(line: 3215, column: 13, scope: !10911)
!10914 = !DILocation(line: 3215, column: 18, scope: !10911)
!10915 = !DILocation(line: 3215, column: 24, scope: !10911)
!10916 = !DILocation(line: 3215, column: 33, scope: !10911)
!10917 = !DILocation(line: 3215, column: 36, scope: !10911)
!10918 = !DILocation(line: 3215, column: 42, scope: !10911)
!10919 = !DILocation(line: 3215, column: 7, scope: !10904)
!10920 = !DILocation(line: 3217, column: 6, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10911, file: !497, line: 3216, column: 6)
!10922 = !DILocation(line: 3218, column: 6, scope: !10921)
!10923 = distinct !{!10923, !10898, !10924}
!10924 = !DILocation(line: 3225, column: 2, scope: !10858)
!10925 = !DILocation(line: 3220, column: 7, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10904, file: !497, line: 3220, column: 7)
!10927 = !DILocation(line: 3220, column: 9, scope: !10926)
!10928 = !DILocation(line: 3220, column: 7, scope: !10904)
!10929 = !DILocation(line: 3221, column: 6, scope: !10926)
!10930 = !DILocation(line: 3222, column: 26, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10904, file: !497, line: 3222, column: 7)
!10932 = !DILocation(line: 3222, column: 31, scope: !10931)
!10933 = !DILocation(line: 3222, column: 36, scope: !10931)
!10934 = !DILocation(line: 3222, column: 7, scope: !10931)
!10935 = !DILocation(line: 3222, column: 43, scope: !10931)
!10936 = !DILocation(line: 3222, column: 40, scope: !10931)
!10937 = !DILocation(line: 3222, column: 7, scope: !10904)
!10938 = !DILocation(line: 3223, column: 6, scope: !10931)
!10939 = !DILocation(line: 3224, column: 7, scope: !10904)
!10940 = !DILocation(line: 3224, column: 4, scope: !10904)
!10941 = !DILocation(line: 3226, column: 29, scope: !10858)
!10942 = !DILocation(line: 3226, column: 5, scope: !10858)
!10943 = !DILocation(line: 3227, column: 5, scope: !10858)
!10944 = distinct !DISubprogram(name: "cgi_interpose_output", scope: !497, file: !497, line: 3261, type: !10859, scopeLine: 3262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!10945 = !DILocalVariable(name: "hc", arg: 1, scope: !10944, file: !497, line: 3261, type: !709)
!10946 = !DILocation(line: 3261, column: 35, scope: !10944)
!10947 = !DILocalVariable(name: "rfd", arg: 2, scope: !10944, file: !497, line: 3261, type: !26)
!10948 = !DILocation(line: 3261, column: 43, scope: !10944)
!10949 = !DILocalVariable(name: "r", scope: !10944, file: !497, line: 3263, type: !26)
!10950 = !DILocation(line: 3263, column: 9, scope: !10944)
!10951 = !DILocalVariable(name: "buf", scope: !10944, file: !497, line: 3264, type: !9229)
!10952 = !DILocation(line: 3264, column: 10, scope: !10944)
!10953 = !DILocalVariable(name: "headers_size", scope: !10944, file: !497, line: 3265, type: !264)
!10954 = !DILocation(line: 3265, column: 12, scope: !10944)
!10955 = !DILocalVariable(name: "headers_len", scope: !10944, file: !497, line: 3265, type: !264)
!10956 = !DILocation(line: 3265, column: 26, scope: !10944)
!10957 = !DILocalVariable(name: "headers", scope: !10944, file: !497, line: 3266, type: !6)
!10958 = !DILocation(line: 3266, column: 11, scope: !10944)
!10959 = !DILocalVariable(name: "br", scope: !10944, file: !497, line: 3267, type: !6)
!10960 = !DILocation(line: 3267, column: 11, scope: !10944)
!10961 = !DILocalVariable(name: "status", scope: !10944, file: !497, line: 3268, type: !26)
!10962 = !DILocation(line: 3268, column: 9, scope: !10944)
!10963 = !DILocalVariable(name: "title", scope: !10944, file: !497, line: 3269, type: !6)
!10964 = !DILocation(line: 3269, column: 11, scope: !10944)
!10965 = !DILocalVariable(name: "cp", scope: !10944, file: !497, line: 3270, type: !6)
!10966 = !DILocation(line: 3270, column: 11, scope: !10944)
!10967 = !DILocation(line: 3275, column: 25, scope: !10944)
!10968 = !DILocation(line: 3275, column: 29, scope: !10944)
!10969 = !DILocation(line: 3275, column: 5, scope: !10944)
!10970 = !DILocation(line: 3278, column: 18, scope: !10944)
!10971 = !DILocation(line: 3279, column: 5, scope: !10944)
!10972 = !DILocation(line: 3280, column: 17, scope: !10944)
!10973 = !DILocation(line: 3281, column: 5, scope: !10944)
!10974 = !DILocation(line: 3283, column: 12, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !497, line: 3282, column: 2)
!10976 = distinct !DILexicalBlock(scope: !10977, file: !497, line: 3281, column: 5)
!10977 = distinct !DILexicalBlock(scope: !10944, file: !497, line: 3281, column: 5)
!10978 = !DILocation(line: 3283, column: 17, scope: !10975)
!10979 = !DILocation(line: 3283, column: 6, scope: !10975)
!10980 = !DILocation(line: 3283, column: 4, scope: !10975)
!10981 = !DILocation(line: 3284, column: 7, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10975, file: !497, line: 3284, column: 7)
!10983 = !DILocation(line: 3284, column: 9, scope: !10982)
!10984 = !DILocation(line: 3284, column: 13, scope: !10982)
!10985 = !DILocation(line: 3284, column: 18, scope: !10982)
!10986 = !DILocation(line: 3284, column: 24, scope: !10982)
!10987 = !DILocation(line: 3284, column: 33, scope: !10982)
!10988 = !DILocation(line: 3284, column: 36, scope: !10982)
!10989 = !DILocation(line: 3284, column: 42, scope: !10982)
!10990 = !DILocation(line: 3284, column: 7, scope: !10975)
!10991 = !DILocation(line: 3286, column: 6, scope: !10992)
!10992 = distinct !DILexicalBlock(scope: !10982, file: !497, line: 3285, column: 6)
!10993 = !DILocation(line: 3287, column: 6, scope: !10992)
!10994 = distinct !{!10994, !10995, !10996}
!10995 = !DILocation(line: 3281, column: 5, scope: !10977)
!10996 = !DILocation(line: 3301, column: 2, scope: !10977)
!10997 = !DILocation(line: 3289, column: 7, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10975, file: !497, line: 3289, column: 7)
!10999 = !DILocation(line: 3289, column: 9, scope: !10998)
!11000 = !DILocation(line: 3289, column: 7, scope: !10975)
!11001 = !DILocation(line: 3291, column: 13, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10998, file: !497, line: 3290, column: 6)
!11003 = !DILocation(line: 3291, column: 21, scope: !11002)
!11004 = !DILocation(line: 3291, column: 9, scope: !11002)
!11005 = !DILocation(line: 3292, column: 6, scope: !11002)
!11006 = !DILocation(line: 3294, column: 46, scope: !10975)
!11007 = !DILocation(line: 3294, column: 60, scope: !10975)
!11008 = !DILocation(line: 3294, column: 58, scope: !10975)
!11009 = !DILocation(line: 3294, column: 2, scope: !10975)
!11010 = !DILocation(line: 3295, column: 9, scope: !10975)
!11011 = !DILocation(line: 3296, column: 17, scope: !10975)
!11012 = !DILocation(line: 3296, column: 14, scope: !10975)
!11013 = !DILocation(line: 3297, column: 2, scope: !10975)
!11014 = !DILocation(line: 3297, column: 10, scope: !10975)
!11015 = !DILocation(line: 3297, column: 23, scope: !10975)
!11016 = !DILocation(line: 3298, column: 22, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !10975, file: !497, line: 3298, column: 7)
!11018 = !DILocation(line: 3298, column: 14, scope: !11017)
!11019 = !DILocation(line: 3298, column: 12, scope: !11017)
!11020 = !DILocation(line: 3298, column: 54, scope: !11017)
!11021 = !DILocation(line: 3298, column: 67, scope: !11017)
!11022 = !DILocation(line: 3299, column: 22, scope: !11017)
!11023 = !DILocation(line: 3299, column: 14, scope: !11017)
!11024 = !DILocation(line: 3299, column: 12, scope: !11017)
!11025 = !DILocation(line: 3299, column: 46, scope: !11017)
!11026 = !DILocation(line: 3298, column: 7, scope: !10975)
!11027 = !DILocation(line: 3300, column: 6, scope: !11017)
!11028 = !DILocation(line: 3281, column: 5, scope: !10976)
!11029 = !DILocation(line: 3304, column: 10, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !10944, file: !497, line: 3304, column: 10)
!11031 = !DILocation(line: 3304, column: 21, scope: !11030)
!11032 = !DILocation(line: 3304, column: 10, scope: !10944)
!11033 = !DILocation(line: 3305, column: 2, scope: !11030)
!11034 = !DILocation(line: 3311, column: 12, scope: !10944)
!11035 = !DILocation(line: 3312, column: 19, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !10944, file: !497, line: 3312, column: 10)
!11037 = !DILocation(line: 3312, column: 10, scope: !11036)
!11038 = !DILocation(line: 3312, column: 41, scope: !11036)
!11039 = !DILocation(line: 3312, column: 10, scope: !10944)
!11040 = !DILocation(line: 3314, column: 7, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11036, file: !497, line: 3313, column: 2)
!11042 = !DILocation(line: 3314, column: 5, scope: !11041)
!11043 = !DILocation(line: 3315, column: 17, scope: !11041)
!11044 = !DILocation(line: 3315, column: 8, scope: !11041)
!11045 = !DILocation(line: 3315, column: 5, scope: !11041)
!11046 = !DILocation(line: 3316, column: 17, scope: !11041)
!11047 = !DILocation(line: 3316, column: 11, scope: !11041)
!11048 = !DILocation(line: 3316, column: 9, scope: !11041)
!11049 = !DILocation(line: 3317, column: 2, scope: !11041)
!11050 = !DILocation(line: 3318, column: 25, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !10944, file: !497, line: 3318, column: 10)
!11052 = !DILocation(line: 3318, column: 17, scope: !11051)
!11053 = !DILocation(line: 3318, column: 15, scope: !11051)
!11054 = !DILocation(line: 3318, column: 50, scope: !11051)
!11055 = !DILocation(line: 3318, column: 63, scope: !11051)
!11056 = !DILocation(line: 3319, column: 3, scope: !11051)
!11057 = !DILocation(line: 3319, column: 8, scope: !11051)
!11058 = !DILocation(line: 3319, column: 6, scope: !11051)
!11059 = !DILocation(line: 3319, column: 11, scope: !11051)
!11060 = !DILocation(line: 3320, column: 5, scope: !11051)
!11061 = !DILocation(line: 3320, column: 11, scope: !11051)
!11062 = !DILocation(line: 3320, column: 8, scope: !11051)
!11063 = !DILocation(line: 3320, column: 19, scope: !11051)
!11064 = !DILocation(line: 3320, column: 24, scope: !11051)
!11065 = !DILocation(line: 3320, column: 26, scope: !11051)
!11066 = !DILocation(line: 3320, column: 22, scope: !11051)
!11067 = !DILocation(line: 3320, column: 30, scope: !11051)
!11068 = !DILocation(line: 3318, column: 10, scope: !10944)
!11069 = !DILocation(line: 3321, column: 9, scope: !11051)
!11070 = !DILocation(line: 3321, column: 2, scope: !11051)
!11071 = !DILocation(line: 3322, column: 25, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !10944, file: !497, line: 3322, column: 10)
!11073 = !DILocation(line: 3322, column: 17, scope: !11072)
!11074 = !DILocation(line: 3322, column: 15, scope: !11072)
!11075 = !DILocation(line: 3322, column: 48, scope: !11072)
!11076 = !DILocation(line: 3322, column: 61, scope: !11072)
!11077 = !DILocation(line: 3323, column: 3, scope: !11072)
!11078 = !DILocation(line: 3323, column: 8, scope: !11072)
!11079 = !DILocation(line: 3323, column: 6, scope: !11072)
!11080 = !DILocation(line: 3323, column: 11, scope: !11072)
!11081 = !DILocation(line: 3324, column: 5, scope: !11072)
!11082 = !DILocation(line: 3324, column: 11, scope: !11072)
!11083 = !DILocation(line: 3324, column: 8, scope: !11072)
!11084 = !DILocation(line: 3324, column: 19, scope: !11072)
!11085 = !DILocation(line: 3324, column: 24, scope: !11072)
!11086 = !DILocation(line: 3324, column: 26, scope: !11072)
!11087 = !DILocation(line: 3324, column: 22, scope: !11072)
!11088 = !DILocation(line: 3324, column: 30, scope: !11072)
!11089 = !DILocation(line: 3322, column: 10, scope: !10944)
!11090 = !DILocation(line: 3326, column: 5, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11072, file: !497, line: 3325, column: 2)
!11092 = !DILocation(line: 3327, column: 16, scope: !11091)
!11093 = !DILocation(line: 3327, column: 8, scope: !11091)
!11094 = !DILocation(line: 3327, column: 5, scope: !11091)
!11095 = !DILocation(line: 3328, column: 17, scope: !11091)
!11096 = !DILocation(line: 3328, column: 11, scope: !11091)
!11097 = !DILocation(line: 3328, column: 9, scope: !11091)
!11098 = !DILocation(line: 3329, column: 2, scope: !11091)
!11099 = !DILocation(line: 3332, column: 14, scope: !10944)
!11100 = !DILocation(line: 3332, column: 5, scope: !10944)
!11101 = !DILocation(line: 3334, column: 20, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !10944, file: !497, line: 3333, column: 2)
!11103 = !DILocation(line: 3334, column: 18, scope: !11102)
!11104 = !DILocation(line: 3334, column: 32, scope: !11102)
!11105 = !DILocation(line: 3335, column: 20, scope: !11102)
!11106 = !DILocation(line: 3335, column: 18, scope: !11102)
!11107 = !DILocation(line: 3335, column: 33, scope: !11102)
!11108 = !DILocation(line: 3336, column: 20, scope: !11102)
!11109 = !DILocation(line: 3336, column: 18, scope: !11102)
!11110 = !DILocation(line: 3336, column: 33, scope: !11102)
!11111 = !DILocation(line: 3337, column: 20, scope: !11102)
!11112 = !DILocation(line: 3337, column: 18, scope: !11102)
!11113 = !DILocation(line: 3337, column: 39, scope: !11102)
!11114 = !DILocation(line: 3339, column: 20, scope: !11102)
!11115 = !DILocation(line: 3339, column: 18, scope: !11102)
!11116 = !DILocation(line: 3339, column: 33, scope: !11102)
!11117 = !DILocation(line: 3341, column: 20, scope: !11102)
!11118 = !DILocation(line: 3341, column: 18, scope: !11102)
!11119 = !DILocation(line: 3341, column: 33, scope: !11102)
!11120 = !DILocation(line: 3342, column: 20, scope: !11102)
!11121 = !DILocation(line: 3342, column: 18, scope: !11102)
!11122 = !DILocation(line: 3342, column: 33, scope: !11102)
!11123 = !DILocation(line: 3343, column: 20, scope: !11102)
!11124 = !DILocation(line: 3343, column: 18, scope: !11102)
!11125 = !DILocation(line: 3343, column: 39, scope: !11102)
!11126 = !DILocation(line: 3344, column: 20, scope: !11102)
!11127 = !DILocation(line: 3344, column: 18, scope: !11102)
!11128 = !DILocation(line: 3344, column: 33, scope: !11102)
!11129 = !DILocation(line: 3345, column: 20, scope: !11102)
!11130 = !DILocation(line: 3345, column: 18, scope: !11102)
!11131 = !DILocation(line: 3345, column: 33, scope: !11102)
!11132 = !DILocation(line: 3346, column: 20, scope: !11102)
!11133 = !DILocation(line: 3346, column: 18, scope: !11102)
!11134 = !DILocation(line: 3346, column: 33, scope: !11102)
!11135 = !DILocation(line: 3347, column: 20, scope: !11102)
!11136 = !DILocation(line: 3347, column: 18, scope: !11102)
!11137 = !DILocation(line: 3347, column: 39, scope: !11102)
!11138 = !DILocation(line: 3348, column: 17, scope: !11102)
!11139 = !DILocation(line: 3348, column: 32, scope: !11102)
!11140 = !DILocation(line: 3350, column: 25, scope: !10944)
!11141 = !DILocation(line: 3350, column: 69, scope: !10944)
!11142 = !DILocation(line: 3350, column: 77, scope: !10944)
!11143 = !DILocation(line: 3350, column: 12, scope: !10944)
!11144 = !DILocation(line: 3351, column: 31, scope: !10944)
!11145 = !DILocation(line: 3351, column: 35, scope: !10944)
!11146 = !DILocation(line: 3351, column: 44, scope: !10944)
!11147 = !DILocation(line: 3351, column: 57, scope: !10944)
!11148 = !DILocation(line: 3351, column: 49, scope: !10944)
!11149 = !DILocation(line: 3351, column: 12, scope: !10944)
!11150 = !DILocation(line: 3354, column: 31, scope: !10944)
!11151 = !DILocation(line: 3354, column: 35, scope: !10944)
!11152 = !DILocation(line: 3354, column: 44, scope: !10944)
!11153 = !DILocation(line: 3354, column: 53, scope: !10944)
!11154 = !DILocation(line: 3354, column: 12, scope: !10944)
!11155 = !DILocation(line: 3357, column: 5, scope: !10944)
!11156 = !DILocation(line: 3359, column: 12, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11158, file: !497, line: 3358, column: 2)
!11158 = distinct !DILexicalBlock(scope: !11159, file: !497, line: 3357, column: 5)
!11159 = distinct !DILexicalBlock(scope: !10944, file: !497, line: 3357, column: 5)
!11160 = !DILocation(line: 3359, column: 17, scope: !11157)
!11161 = !DILocation(line: 3359, column: 6, scope: !11157)
!11162 = !DILocation(line: 3359, column: 4, scope: !11157)
!11163 = !DILocation(line: 3360, column: 7, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11157, file: !497, line: 3360, column: 7)
!11165 = !DILocation(line: 3360, column: 9, scope: !11164)
!11166 = !DILocation(line: 3360, column: 13, scope: !11164)
!11167 = !DILocation(line: 3360, column: 18, scope: !11164)
!11168 = !DILocation(line: 3360, column: 24, scope: !11164)
!11169 = !DILocation(line: 3360, column: 33, scope: !11164)
!11170 = !DILocation(line: 3360, column: 36, scope: !11164)
!11171 = !DILocation(line: 3360, column: 42, scope: !11164)
!11172 = !DILocation(line: 3360, column: 7, scope: !11157)
!11173 = !DILocation(line: 3362, column: 6, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11164, file: !497, line: 3361, column: 6)
!11175 = !DILocation(line: 3363, column: 6, scope: !11174)
!11176 = distinct !{!11176, !11177, !11178}
!11177 = !DILocation(line: 3357, column: 5, scope: !11159)
!11178 = !DILocation(line: 3369, column: 2, scope: !11159)
!11179 = !DILocation(line: 3365, column: 7, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11157, file: !497, line: 3365, column: 7)
!11181 = !DILocation(line: 3365, column: 9, scope: !11180)
!11182 = !DILocation(line: 3365, column: 7, scope: !11157)
!11183 = !DILocation(line: 3366, column: 6, scope: !11180)
!11184 = !DILocation(line: 3367, column: 26, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11157, file: !497, line: 3367, column: 7)
!11186 = !DILocation(line: 3367, column: 30, scope: !11185)
!11187 = !DILocation(line: 3367, column: 39, scope: !11185)
!11188 = !DILocation(line: 3367, column: 44, scope: !11185)
!11189 = !DILocation(line: 3367, column: 7, scope: !11185)
!11190 = !DILocation(line: 3367, column: 51, scope: !11185)
!11191 = !DILocation(line: 3367, column: 48, scope: !11185)
!11192 = !DILocation(line: 3367, column: 7, scope: !11157)
!11193 = !DILocation(line: 3368, column: 6, scope: !11185)
!11194 = !DILocation(line: 3357, column: 5, scope: !11158)
!11195 = !DILocation(line: 3370, column: 15, scope: !10944)
!11196 = !DILocation(line: 3370, column: 19, scope: !10944)
!11197 = !DILocation(line: 3370, column: 5, scope: !10944)
!11198 = !DILocation(line: 3371, column: 5, scope: !10944)
!11199 = distinct !DISubprogram(name: "post_post_garbage_hack", scope: !497, file: !497, line: 3239, type: !852, scopeLine: 3240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!11200 = !DILocalVariable(name: "hc", arg: 1, scope: !11199, file: !497, line: 3239, type: !709)
!11201 = !DILocation(line: 3239, column: 37, scope: !11199)
!11202 = !DILocalVariable(name: "buf", scope: !11199, file: !497, line: 3241, type: !11203)
!11203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 16, elements: !367)
!11204 = !DILocation(line: 3241, column: 10, scope: !11199)
!11205 = !DILocation(line: 3246, column: 10, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11199, file: !497, line: 3246, column: 10)
!11207 = !DILocation(line: 3246, column: 10, scope: !11199)
!11208 = !DILocation(line: 3247, column: 20, scope: !11206)
!11209 = !DILocation(line: 3247, column: 24, scope: !11206)
!11210 = !DILocation(line: 3247, column: 2, scope: !11206)
!11211 = !DILocation(line: 3249, column: 18, scope: !11199)
!11212 = !DILocation(line: 3249, column: 22, scope: !11199)
!11213 = !DILocation(line: 3249, column: 31, scope: !11199)
!11214 = !DILocation(line: 3249, column: 12, scope: !11199)
!11215 = !DILocation(line: 3250, column: 5, scope: !11199)
!11216 = !DILocalVariable(name: "fmt", arg: 1, scope: !943, file: !497, line: 3006, type: !6)
!11217 = !DILocation(line: 3006, column: 18, scope: !943)
!11218 = !DILocalVariable(name: "arg", arg: 2, scope: !943, file: !497, line: 3006, type: !6)
!11219 = !DILocation(line: 3006, column: 29, scope: !943)
!11220 = !DILocalVariable(name: "cp", scope: !943, file: !497, line: 3008, type: !6)
!11221 = !DILocation(line: 3008, column: 11, scope: !943)
!11222 = !DILocalVariable(name: "size", scope: !943, file: !497, line: 3009, type: !264)
!11223 = !DILocation(line: 3009, column: 12, scope: !943)
!11224 = !DILocation(line: 3013, column: 20, scope: !943)
!11225 = !DILocation(line: 3013, column: 12, scope: !943)
!11226 = !DILocation(line: 3013, column: 36, scope: !943)
!11227 = !DILocation(line: 3013, column: 28, scope: !943)
!11228 = !DILocation(line: 3013, column: 26, scope: !943)
!11229 = !DILocation(line: 3013, column: 10, scope: !943)
!11230 = !DILocation(line: 3014, column: 10, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !943, file: !497, line: 3014, column: 10)
!11232 = !DILocation(line: 3014, column: 17, scope: !11231)
!11233 = !DILocation(line: 3014, column: 15, scope: !11231)
!11234 = !DILocation(line: 3014, column: 10, scope: !943)
!11235 = !DILocation(line: 3015, column: 36, scope: !11231)
!11236 = !DILocation(line: 3015, column: 2, scope: !11231)
!11237 = !DILocation(line: 3016, column: 25, scope: !943)
!11238 = !DILocation(line: 3016, column: 30, scope: !943)
!11239 = !DILocation(line: 3016, column: 38, scope: !943)
!11240 = !DILocation(line: 3016, column: 43, scope: !943)
!11241 = !DILocation(line: 3016, column: 12, scope: !943)
!11242 = !DILocation(line: 3017, column: 18, scope: !943)
!11243 = !DILocation(line: 3017, column: 10, scope: !943)
!11244 = !DILocation(line: 3017, column: 8, scope: !943)
!11245 = !DILocation(line: 3018, column: 10, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !943, file: !497, line: 3018, column: 10)
!11247 = !DILocation(line: 3018, column: 13, scope: !11246)
!11248 = !DILocation(line: 3018, column: 10, scope: !943)
!11249 = !DILocation(line: 3020, column: 2, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11246, file: !497, line: 3019, column: 2)
!11251 = !DILocation(line: 3021, column: 2, scope: !11250)
!11252 = !DILocation(line: 3023, column: 12, scope: !943)
!11253 = !DILocation(line: 3023, column: 5, scope: !943)
!11254 = distinct !DISubprogram(name: "name_compare", scope: !497, file: !497, line: 2697, type: !5142, scopeLine: 2698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!11255 = !DILocalVariable(name: "v1", arg: 1, scope: !11254, file: !497, line: 2697, type: !599)
!11256 = !DILocation(line: 2697, column: 27, scope: !11254)
!11257 = !DILocalVariable(name: "v2", arg: 2, scope: !11254, file: !497, line: 2697, type: !599)
!11258 = !DILocation(line: 2697, column: 43, scope: !11254)
!11259 = !DILocalVariable(name: "c1", scope: !11254, file: !497, line: 2699, type: !664)
!11260 = !DILocation(line: 2699, column: 18, scope: !11254)
!11261 = !DILocation(line: 2699, column: 38, scope: !11254)
!11262 = !DILocation(line: 2699, column: 23, scope: !11254)
!11263 = !DILocalVariable(name: "c2", scope: !11254, file: !497, line: 2700, type: !664)
!11264 = !DILocation(line: 2700, column: 18, scope: !11254)
!11265 = !DILocation(line: 2700, column: 38, scope: !11254)
!11266 = !DILocation(line: 2700, column: 23, scope: !11254)
!11267 = !DILocation(line: 2701, column: 21, scope: !11254)
!11268 = !DILocation(line: 2701, column: 20, scope: !11254)
!11269 = !DILocation(line: 2701, column: 26, scope: !11254)
!11270 = !DILocation(line: 2701, column: 25, scope: !11254)
!11271 = !DILocation(line: 2701, column: 12, scope: !11254)
!11272 = !DILocation(line: 2701, column: 5, scope: !11254)
!11273 = distinct !DISubprogram(name: "strencode", scope: !497, file: !497, line: 1257, type: !11274, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!11274 = !DISubroutineType(types: !11275)
!11275 = !{null, !6, !26, !6}
!11276 = !DILocalVariable(name: "to", arg: 1, scope: !11273, file: !497, line: 1257, type: !6)
!11277 = !DILocation(line: 1257, column: 18, scope: !11273)
!11278 = !DILocalVariable(name: "tosize", arg: 2, scope: !11273, file: !497, line: 1257, type: !26)
!11279 = !DILocation(line: 1257, column: 26, scope: !11273)
!11280 = !DILocalVariable(name: "from", arg: 3, scope: !11273, file: !497, line: 1257, type: !6)
!11281 = !DILocation(line: 1257, column: 40, scope: !11273)
!11282 = !DILocalVariable(name: "tolen", scope: !11273, file: !497, line: 1259, type: !26)
!11283 = !DILocation(line: 1259, column: 9, scope: !11273)
!11284 = !DILocation(line: 1261, column: 17, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11273, file: !497, line: 1261, column: 5)
!11286 = !DILocation(line: 1261, column: 11, scope: !11285)
!11287 = !DILocation(line: 1261, column: 23, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11285, file: !497, line: 1261, column: 5)
!11289 = !DILocation(line: 1261, column: 22, scope: !11288)
!11290 = !DILocation(line: 1261, column: 28, scope: !11288)
!11291 = !DILocation(line: 1261, column: 36, scope: !11288)
!11292 = !DILocation(line: 1261, column: 39, scope: !11288)
!11293 = !DILocation(line: 1261, column: 45, scope: !11288)
!11294 = !DILocation(line: 1261, column: 51, scope: !11288)
!11295 = !DILocation(line: 1261, column: 49, scope: !11288)
!11296 = !DILocation(line: 0, scope: !11288)
!11297 = !DILocation(line: 1261, column: 5, scope: !11285)
!11298 = !DILocation(line: 1263, column: 16, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11300, file: !497, line: 1263, column: 7)
!11300 = distinct !DILexicalBlock(scope: !11288, file: !497, line: 1262, column: 2)
!11301 = !DILocation(line: 1263, column: 15, scope: !11299)
!11302 = !DILocation(line: 1263, column: 7, scope: !11299)
!11303 = !DILocation(line: 1263, column: 22, scope: !11299)
!11304 = !DILocation(line: 1263, column: 43, scope: !11299)
!11305 = !DILocation(line: 1263, column: 42, scope: !11299)
!11306 = !DILocation(line: 1263, column: 25, scope: !11299)
!11307 = !DILocation(line: 1263, column: 50, scope: !11299)
!11308 = !DILocation(line: 1263, column: 7, scope: !11300)
!11309 = !DILocation(line: 1265, column: 13, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11299, file: !497, line: 1264, column: 6)
!11311 = !DILocation(line: 1265, column: 12, scope: !11310)
!11312 = !DILocation(line: 1265, column: 7, scope: !11310)
!11313 = !DILocation(line: 1265, column: 10, scope: !11310)
!11314 = !DILocation(line: 1266, column: 6, scope: !11310)
!11315 = !DILocation(line: 1267, column: 6, scope: !11310)
!11316 = !DILocation(line: 1268, column: 6, scope: !11310)
!11317 = !DILocation(line: 1271, column: 13, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11299, file: !497, line: 1270, column: 6)
!11319 = !DILocation(line: 1272, column: 9, scope: !11318)
!11320 = !DILocation(line: 1273, column: 12, scope: !11318)
!11321 = !DILocation(line: 1275, column: 2, scope: !11300)
!11322 = !DILocation(line: 1261, column: 59, scope: !11288)
!11323 = !DILocation(line: 1261, column: 5, scope: !11288)
!11324 = distinct !{!11324, !11297, !11325}
!11325 = !DILocation(line: 1275, column: 2, scope: !11285)
!11326 = !DILocation(line: 1276, column: 6, scope: !11273)
!11327 = !DILocation(line: 1276, column: 9, scope: !11273)
!11328 = !DILocation(line: 1277, column: 5, scope: !11273)
!11329 = !DILocalVariable(name: "hc", arg: 1, scope: !911, file: !497, line: 4038, type: !709)
!11330 = !DILocation(line: 4038, column: 36, scope: !911)
!11331 = !DILocalVariable(name: "hs", scope: !911, file: !497, line: 4040, type: !499)
!11332 = !DILocation(line: 4040, column: 19, scope: !911)
!11333 = !DILocalVariable(name: "cp1", scope: !911, file: !497, line: 4041, type: !6)
!11334 = !DILocation(line: 4041, column: 11, scope: !911)
!11335 = !DILocalVariable(name: "cp2", scope: !911, file: !497, line: 4042, type: !6)
!11336 = !DILocation(line: 4042, column: 11, scope: !911)
!11337 = !DILocalVariable(name: "cp3", scope: !911, file: !497, line: 4043, type: !6)
!11338 = !DILocation(line: 4043, column: 11, scope: !911)
!11339 = !DILocalVariable(name: "lp", scope: !911, file: !497, line: 4046, type: !6)
!11340 = !DILocation(line: 4046, column: 11, scope: !911)
!11341 = !DILocation(line: 4048, column: 10, scope: !911)
!11342 = !DILocation(line: 4048, column: 14, scope: !911)
!11343 = !DILocation(line: 4048, column: 8, scope: !911)
!11344 = !DILocation(line: 4051, column: 10, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !911, file: !497, line: 4051, column: 10)
!11346 = !DILocation(line: 4051, column: 14, scope: !11345)
!11347 = !DILocation(line: 4051, column: 23, scope: !11345)
!11348 = !DILocation(line: 4051, column: 36, scope: !11345)
!11349 = !DILocation(line: 4051, column: 39, scope: !11345)
!11350 = !DILocation(line: 4051, column: 43, scope: !11345)
!11351 = !DILocation(line: 4051, column: 55, scope: !11345)
!11352 = !DILocation(line: 4051, column: 63, scope: !11345)
!11353 = !DILocation(line: 4052, column: 19, scope: !11345)
!11354 = !DILocation(line: 4052, column: 23, scope: !11345)
!11355 = !DILocation(line: 4052, column: 11, scope: !11345)
!11356 = !DILocation(line: 4052, column: 9, scope: !11345)
!11357 = !DILocation(line: 4052, column: 42, scope: !11345)
!11358 = !DILocation(line: 4051, column: 10, scope: !911)
!11359 = !DILocation(line: 4055, column: 7, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11361, file: !497, line: 4055, column: 7)
!11361 = distinct !DILexicalBlock(scope: !11345, file: !497, line: 4053, column: 2)
!11362 = !DILocation(line: 4055, column: 11, scope: !11360)
!11363 = !DILocation(line: 4055, column: 30, scope: !11360)
!11364 = !DILocation(line: 4055, column: 40, scope: !11360)
!11365 = !DILocation(line: 4055, column: 44, scope: !11360)
!11366 = !DILocation(line: 4055, column: 57, scope: !11360)
!11367 = !DILocation(line: 4055, column: 61, scope: !11360)
!11368 = !DILocation(line: 4055, column: 33, scope: !11360)
!11369 = !DILocation(line: 4055, column: 7, scope: !11361)
!11370 = !DILocation(line: 4056, column: 6, scope: !11360)
!11371 = !DILocation(line: 4058, column: 2, scope: !11361)
!11372 = !DILocation(line: 4062, column: 9, scope: !911)
!11373 = !DILocation(line: 4063, column: 17, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !911, file: !497, line: 4063, column: 5)
!11375 = !DILocation(line: 4063, column: 15, scope: !11374)
!11376 = !DILocation(line: 4063, column: 11, scope: !11374)
!11377 = !DILocation(line: 4063, column: 23, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11374, file: !497, line: 4063, column: 5)
!11379 = !DILocation(line: 4063, column: 22, scope: !11378)
!11380 = !DILocation(line: 4063, column: 27, scope: !11378)
!11381 = !DILocation(line: 4063, column: 34, scope: !11378)
!11382 = !DILocation(line: 4063, column: 38, scope: !11378)
!11383 = !DILocation(line: 4063, column: 37, scope: !11378)
!11384 = !DILocation(line: 4063, column: 42, scope: !11378)
!11385 = !DILocation(line: 4063, column: 49, scope: !11378)
!11386 = !DILocation(line: 4063, column: 53, scope: !11378)
!11387 = !DILocation(line: 4063, column: 52, scope: !11378)
!11388 = !DILocation(line: 4063, column: 57, scope: !11378)
!11389 = !DILocation(line: 0, scope: !11378)
!11390 = !DILocation(line: 4063, column: 5, scope: !11374)
!11391 = !DILocation(line: 4064, column: 2, scope: !11378)
!11392 = !DILocation(line: 4063, column: 66, scope: !11378)
!11393 = !DILocation(line: 4063, column: 5, scope: !11378)
!11394 = distinct !{!11394, !11390, !11395}
!11395 = !DILocation(line: 4064, column: 2, scope: !11374)
!11396 = !DILocation(line: 4065, column: 49, scope: !911)
!11397 = !DILocation(line: 4065, column: 55, scope: !911)
!11398 = !DILocation(line: 4065, column: 53, scope: !911)
!11399 = !DILocation(line: 4065, column: 5, scope: !911)
!11400 = !DILocation(line: 4066, column: 17, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !911, file: !497, line: 4066, column: 5)
!11402 = !DILocation(line: 4066, column: 15, scope: !11401)
!11403 = !DILocation(line: 4066, column: 11, scope: !11401)
!11404 = !DILocation(line: 4066, column: 26, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11401, file: !497, line: 4066, column: 5)
!11406 = !DILocation(line: 4066, column: 32, scope: !11405)
!11407 = !DILocation(line: 4066, column: 30, scope: !11405)
!11408 = !DILocation(line: 4066, column: 5, scope: !11401)
!11409 = !DILocation(line: 4067, column: 16, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11405, file: !497, line: 4067, column: 7)
!11411 = !DILocation(line: 4067, column: 15, scope: !11410)
!11412 = !DILocation(line: 4067, column: 7, scope: !11410)
!11413 = !DILocation(line: 4067, column: 7, scope: !11405)
!11414 = !DILocation(line: 4068, column: 22, scope: !11410)
!11415 = !DILocation(line: 4068, column: 21, scope: !11410)
!11416 = !DILocation(line: 4068, column: 13, scope: !11410)
!11417 = !DILocation(line: 4068, column: 7, scope: !11410)
!11418 = !DILocation(line: 4068, column: 11, scope: !11410)
!11419 = !DILocation(line: 4068, column: 6, scope: !11410)
!11420 = !DILocation(line: 4070, column: 14, scope: !11410)
!11421 = !DILocation(line: 4070, column: 13, scope: !11410)
!11422 = !DILocation(line: 4070, column: 7, scope: !11410)
!11423 = !DILocation(line: 4070, column: 11, scope: !11410)
!11424 = !DILocation(line: 4067, column: 19, scope: !11410)
!11425 = !DILocation(line: 4066, column: 37, scope: !11405)
!11426 = !DILocation(line: 4066, column: 44, scope: !11405)
!11427 = !DILocation(line: 4066, column: 5, scope: !11405)
!11428 = distinct !{!11428, !11408, !11429}
!11429 = !DILocation(line: 4070, column: 14, scope: !11401)
!11430 = !DILocation(line: 4071, column: 6, scope: !911)
!11431 = !DILocation(line: 4071, column: 10, scope: !911)
!11432 = !DILocation(line: 4074, column: 10, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !911, file: !497, line: 4074, column: 10)
!11434 = !DILocation(line: 4074, column: 14, scope: !11433)
!11435 = !DILocation(line: 4074, column: 28, scope: !11433)
!11436 = !DILocation(line: 4074, column: 10, scope: !911)
!11437 = !DILocation(line: 4075, column: 7, scope: !11433)
!11438 = !DILocation(line: 4075, column: 11, scope: !11433)
!11439 = !DILocation(line: 4075, column: 5, scope: !11433)
!11440 = !DILocation(line: 4075, column: 2, scope: !11433)
!11441 = !DILocation(line: 4079, column: 9, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !497, line: 4079, column: 7)
!11443 = distinct !DILexicalBlock(scope: !11433, file: !497, line: 4077, column: 2)
!11444 = !DILocation(line: 4079, column: 13, scope: !11442)
!11445 = !DILocation(line: 4079, column: 7, scope: !11443)
!11446 = !DILocation(line: 4082, column: 11, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11442, file: !497, line: 4080, column: 6)
!11448 = !DILocation(line: 4082, column: 15, scope: !11447)
!11449 = !DILocation(line: 4082, column: 9, scope: !11447)
!11450 = !DILocation(line: 4083, column: 11, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11447, file: !497, line: 4083, column: 11)
!11452 = !DILocation(line: 4083, column: 14, scope: !11451)
!11453 = !DILocation(line: 4083, column: 11, scope: !11447)
!11454 = !DILocation(line: 4085, column: 3, scope: !11451)
!11455 = !DILocation(line: 4086, column: 6, scope: !11447)
!11456 = !DILocation(line: 4090, column: 11, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11442, file: !497, line: 4088, column: 6)
!11458 = !DILocation(line: 4090, column: 15, scope: !11457)
!11459 = !DILocation(line: 4090, column: 9, scope: !11457)
!11460 = !DILocation(line: 4091, column: 11, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11457, file: !497, line: 4091, column: 11)
!11462 = !DILocation(line: 4091, column: 14, scope: !11461)
!11463 = !DILocation(line: 4091, column: 11, scope: !11457)
!11464 = !DILocation(line: 4097, column: 3, scope: !11461)
!11465 = !DILocation(line: 4104, column: 19, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !911, file: !497, line: 4104, column: 10)
!11467 = !DILocation(line: 4104, column: 23, scope: !11466)
!11468 = !DILocation(line: 4104, column: 12, scope: !11466)
!11469 = !DILocation(line: 4104, column: 33, scope: !11466)
!11470 = !DILocation(line: 4104, column: 43, scope: !11466)
!11471 = !DILocation(line: 4104, column: 47, scope: !11466)
!11472 = !DILocation(line: 4104, column: 60, scope: !11466)
!11473 = !DILocation(line: 4104, column: 64, scope: !11466)
!11474 = !DILocation(line: 4104, column: 36, scope: !11466)
!11475 = !DILocation(line: 4104, column: 10, scope: !911)
!11476 = !DILocation(line: 4105, column: 2, scope: !11466)
!11477 = !DILocation(line: 4107, column: 5, scope: !911)
!11478 = !DILocation(line: 4108, column: 5, scope: !911)
!11479 = !DILocalVariable(name: "hc", arg: 1, scope: !871, file: !497, line: 1021, type: !709)
!11480 = !DILocation(line: 1021, column: 26, scope: !871)
!11481 = !DILocalVariable(name: "dirname", arg: 2, scope: !871, file: !497, line: 1021, type: !6)
!11482 = !DILocation(line: 1021, column: 36, scope: !871)
!11483 = !DILocalVariable(name: "sb", scope: !871, file: !497, line: 1025, type: !773)
!11484 = !DILocation(line: 1025, column: 17, scope: !871)
!11485 = !DILocalVariable(name: "authinfo", scope: !871, file: !497, line: 1026, type: !5687)
!11486 = !DILocation(line: 1026, column: 10, scope: !871)
!11487 = !DILocalVariable(name: "authpass", scope: !871, file: !497, line: 1027, type: !6)
!11488 = !DILocation(line: 1027, column: 11, scope: !871)
!11489 = !DILocalVariable(name: "colon", scope: !871, file: !497, line: 1028, type: !6)
!11490 = !DILocation(line: 1028, column: 11, scope: !871)
!11491 = !DILocalVariable(name: "l", scope: !871, file: !497, line: 1029, type: !26)
!11492 = !DILocation(line: 1029, column: 9, scope: !871)
!11493 = !DILocalVariable(name: "fp", scope: !871, file: !497, line: 1030, type: !517)
!11494 = !DILocation(line: 1030, column: 11, scope: !871)
!11495 = !DILocalVariable(name: "line", scope: !871, file: !497, line: 1031, type: !5687)
!11496 = !DILocation(line: 1031, column: 10, scope: !871)
!11497 = !DILocalVariable(name: "cryp", scope: !871, file: !497, line: 1032, type: !6)
!11498 = !DILocation(line: 1032, column: 11, scope: !871)
!11499 = !DILocation(line: 1043, column: 35, scope: !871)
!11500 = !DILocation(line: 1043, column: 27, scope: !871)
!11501 = !DILocation(line: 1043, column: 45, scope: !871)
!11502 = !DILocation(line: 1043, column: 49, scope: !871)
!11503 = !DILocation(line: 1042, column: 5, scope: !871)
!11504 = !DILocation(line: 1044, column: 25, scope: !871)
!11505 = !DILocation(line: 1044, column: 35, scope: !871)
!11506 = !DILocation(line: 1044, column: 57, scope: !871)
!11507 = !DILocation(line: 1044, column: 12, scope: !871)
!11508 = !DILocation(line: 1047, column: 16, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !871, file: !497, line: 1047, column: 10)
!11510 = !DILocation(line: 1047, column: 10, scope: !11509)
!11511 = !DILocation(line: 1047, column: 32, scope: !11509)
!11512 = !DILocation(line: 1047, column: 10, scope: !871)
!11513 = !DILocation(line: 1049, column: 2, scope: !11509)
!11514 = !DILocation(line: 1052, column: 10, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !871, file: !497, line: 1052, column: 10)
!11516 = !DILocation(line: 1052, column: 14, scope: !11515)
!11517 = !DILocation(line: 1052, column: 31, scope: !11515)
!11518 = !DILocation(line: 1052, column: 39, scope: !11515)
!11519 = !DILocation(line: 1053, column: 12, scope: !11515)
!11520 = !DILocation(line: 1053, column: 16, scope: !11515)
!11521 = !DILocation(line: 1053, column: 3, scope: !11515)
!11522 = !DILocation(line: 1053, column: 45, scope: !11515)
!11523 = !DILocation(line: 1052, column: 10, scope: !871)
!11524 = !DILocation(line: 1056, column: 21, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11515, file: !497, line: 1054, column: 2)
!11526 = !DILocation(line: 1056, column: 25, scope: !11525)
!11527 = !DILocation(line: 1056, column: 2, scope: !11525)
!11528 = !DILocation(line: 1057, column: 2, scope: !11525)
!11529 = !DILocation(line: 1062, column: 4, scope: !871)
!11530 = !DILocation(line: 1062, column: 8, scope: !871)
!11531 = !DILocation(line: 1062, column: 44, scope: !871)
!11532 = !DILocation(line: 1061, column: 9, scope: !871)
!11533 = !DILocation(line: 1061, column: 7, scope: !871)
!11534 = !DILocation(line: 1064, column: 14, scope: !871)
!11535 = !DILocation(line: 1064, column: 5, scope: !871)
!11536 = !DILocation(line: 1064, column: 17, scope: !871)
!11537 = !DILocation(line: 1066, column: 24, scope: !871)
!11538 = !DILocation(line: 1066, column: 16, scope: !871)
!11539 = !DILocation(line: 1066, column: 14, scope: !871)
!11540 = !DILocation(line: 1067, column: 10, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !871, file: !497, line: 1067, column: 10)
!11542 = !DILocation(line: 1067, column: 19, scope: !11541)
!11543 = !DILocation(line: 1067, column: 10, scope: !871)
!11544 = !DILocation(line: 1070, column: 21, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11541, file: !497, line: 1068, column: 2)
!11546 = !DILocation(line: 1070, column: 25, scope: !11545)
!11547 = !DILocation(line: 1070, column: 2, scope: !11545)
!11548 = !DILocation(line: 1071, column: 2, scope: !11545)
!11549 = !DILocation(line: 1073, column: 14, scope: !871)
!11550 = !DILocation(line: 1073, column: 17, scope: !871)
!11551 = !DILocation(line: 1075, column: 21, scope: !871)
!11552 = !DILocation(line: 1075, column: 13, scope: !871)
!11553 = !DILocation(line: 1075, column: 11, scope: !871)
!11554 = !DILocation(line: 1076, column: 10, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !871, file: !497, line: 1076, column: 10)
!11556 = !DILocation(line: 1076, column: 16, scope: !11555)
!11557 = !DILocation(line: 1076, column: 10, scope: !871)
!11558 = !DILocation(line: 1077, column: 3, scope: !11555)
!11559 = !DILocation(line: 1077, column: 9, scope: !11555)
!11560 = !DILocation(line: 1077, column: 2, scope: !11555)
!11561 = !DILocation(line: 1080, column: 10, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !871, file: !497, line: 1080, column: 10)
!11563 = !DILocation(line: 1080, column: 26, scope: !11562)
!11564 = !DILocation(line: 1080, column: 31, scope: !11562)
!11565 = !DILocation(line: 1081, column: 11, scope: !11562)
!11566 = !DILocation(line: 1081, column: 21, scope: !11562)
!11567 = !DILocation(line: 1081, column: 3, scope: !11562)
!11568 = !DILocation(line: 1081, column: 36, scope: !11562)
!11569 = !DILocation(line: 1081, column: 41, scope: !11562)
!11570 = !DILocation(line: 1082, column: 6, scope: !11562)
!11571 = !DILocation(line: 1082, column: 18, scope: !11562)
!11572 = !DILocation(line: 1082, column: 15, scope: !11562)
!11573 = !DILocation(line: 1082, column: 28, scope: !11562)
!11574 = !DILocation(line: 1083, column: 11, scope: !11562)
!11575 = !DILocation(line: 1083, column: 21, scope: !11562)
!11576 = !DILocation(line: 1083, column: 3, scope: !11562)
!11577 = !DILocation(line: 1083, column: 32, scope: !11562)
!11578 = !DILocation(line: 1080, column: 10, scope: !871)
!11579 = !DILocation(line: 1086, column: 22, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11581, file: !497, line: 1086, column: 7)
!11581 = distinct !DILexicalBlock(scope: !11562, file: !497, line: 1084, column: 2)
!11582 = !DILocation(line: 1086, column: 32, scope: !11580)
!11583 = !DILocation(line: 1086, column: 15, scope: !11580)
!11584 = !DILocation(line: 1086, column: 44, scope: !11580)
!11585 = !DILocation(line: 1086, column: 7, scope: !11580)
!11586 = !DILocation(line: 1086, column: 55, scope: !11580)
!11587 = !DILocation(line: 1086, column: 7, scope: !11581)
!11588 = !DILocation(line: 1090, column: 4, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11580, file: !497, line: 1087, column: 6)
!11590 = !DILocation(line: 1090, column: 8, scope: !11589)
!11591 = !DILocation(line: 1090, column: 21, scope: !11589)
!11592 = !DILocation(line: 1090, column: 25, scope: !11589)
!11593 = !DILocation(line: 1090, column: 48, scope: !11589)
!11594 = !DILocation(line: 1090, column: 40, scope: !11589)
!11595 = !DILocation(line: 1089, column: 6, scope: !11589)
!11596 = !DILocation(line: 1091, column: 13, scope: !11589)
!11597 = !DILocation(line: 1092, column: 6, scope: !11589)
!11598 = !DILocation(line: 1097, column: 25, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11580, file: !497, line: 1095, column: 6)
!11600 = !DILocation(line: 1097, column: 29, scope: !11599)
!11601 = !DILocation(line: 1097, column: 6, scope: !11599)
!11602 = !DILocation(line: 1098, column: 6, scope: !11599)
!11603 = !DILocation(line: 1103, column: 17, scope: !871)
!11604 = !DILocation(line: 1103, column: 10, scope: !871)
!11605 = !DILocation(line: 1103, column: 8, scope: !871)
!11606 = !DILocation(line: 1104, column: 10, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !871, file: !497, line: 1104, column: 10)
!11608 = !DILocation(line: 1104, column: 13, scope: !11607)
!11609 = !DILocation(line: 1104, column: 10, scope: !871)
!11610 = !DILocation(line: 1109, column: 19, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11607, file: !497, line: 1105, column: 2)
!11612 = !DILocation(line: 1109, column: 23, scope: !11611)
!11613 = !DILocation(line: 1109, column: 6, scope: !11611)
!11614 = !DILocation(line: 1109, column: 38, scope: !11611)
!11615 = !DILocation(line: 1107, column: 2, scope: !11611)
!11616 = !DILocation(line: 1111, column: 6, scope: !11611)
!11617 = !DILocation(line: 1111, column: 15, scope: !11611)
!11618 = !DILocation(line: 1113, column: 6, scope: !11611)
!11619 = !DILocation(line: 1113, column: 10, scope: !11611)
!11620 = !DILocation(line: 1110, column: 2, scope: !11611)
!11621 = !DILocation(line: 1114, column: 2, scope: !11611)
!11622 = !DILocation(line: 1118, column: 5, scope: !871)
!11623 = !DILocation(line: 1118, column: 20, scope: !871)
!11624 = !DILocation(line: 1118, column: 40, scope: !871)
!11625 = !DILocation(line: 1118, column: 13, scope: !871)
!11626 = !DILocation(line: 1118, column: 45, scope: !871)
!11627 = !DILocation(line: 1121, column: 14, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !871, file: !497, line: 1119, column: 2)
!11629 = !DILocation(line: 1121, column: 6, scope: !11628)
!11630 = !DILocation(line: 1121, column: 4, scope: !11628)
!11631 = !DILocation(line: 1122, column: 12, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11628, file: !497, line: 1122, column: 7)
!11633 = !DILocation(line: 1122, column: 14, scope: !11632)
!11634 = !DILocation(line: 1122, column: 7, scope: !11632)
!11635 = !DILocation(line: 1122, column: 19, scope: !11632)
!11636 = !DILocation(line: 1122, column: 7, scope: !11628)
!11637 = !DILocation(line: 1123, column: 11, scope: !11632)
!11638 = !DILocation(line: 1123, column: 13, scope: !11632)
!11639 = !DILocation(line: 1123, column: 6, scope: !11632)
!11640 = !DILocation(line: 1123, column: 18, scope: !11632)
!11641 = !DILocation(line: 1125, column: 17, scope: !11628)
!11642 = !DILocation(line: 1125, column: 9, scope: !11628)
!11643 = !DILocation(line: 1125, column: 7, scope: !11628)
!11644 = !DILocation(line: 1126, column: 7, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11628, file: !497, line: 1126, column: 7)
!11646 = !DILocation(line: 1126, column: 12, scope: !11645)
!11647 = !DILocation(line: 1126, column: 7, scope: !11628)
!11648 = !DILocation(line: 1127, column: 6, scope: !11645)
!11649 = distinct !{!11649, !11622, !11650}
!11650 = !DILocation(line: 1160, column: 2, scope: !871)
!11651 = !DILocation(line: 1128, column: 7, scope: !11628)
!11652 = !DILocation(line: 1128, column: 10, scope: !11628)
!11653 = !DILocation(line: 1130, column: 15, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11628, file: !497, line: 1130, column: 7)
!11655 = !DILocation(line: 1130, column: 21, scope: !11654)
!11656 = !DILocation(line: 1130, column: 7, scope: !11654)
!11657 = !DILocation(line: 1130, column: 32, scope: !11654)
!11658 = !DILocation(line: 1130, column: 7, scope: !11628)
!11659 = !DILocation(line: 1133, column: 21, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11654, file: !497, line: 1131, column: 6)
!11661 = !DILocation(line: 1133, column: 13, scope: !11660)
!11662 = !DILocation(line: 1135, column: 26, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11660, file: !497, line: 1135, column: 11)
!11664 = !DILocation(line: 1135, column: 36, scope: !11663)
!11665 = !DILocation(line: 1135, column: 19, scope: !11663)
!11666 = !DILocation(line: 1135, column: 44, scope: !11663)
!11667 = !DILocation(line: 1135, column: 11, scope: !11663)
!11668 = !DILocation(line: 1135, column: 51, scope: !11663)
!11669 = !DILocation(line: 1135, column: 11, scope: !11660)
!11670 = !DILocation(line: 1139, column: 8, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11663, file: !497, line: 1136, column: 3)
!11672 = !DILocation(line: 1139, column: 12, scope: !11671)
!11673 = !DILocation(line: 1139, column: 25, scope: !11671)
!11674 = !DILocation(line: 1139, column: 29, scope: !11671)
!11675 = !DILocation(line: 1139, column: 52, scope: !11671)
!11676 = !DILocation(line: 1139, column: 44, scope: !11671)
!11677 = !DILocation(line: 1138, column: 3, scope: !11671)
!11678 = !DILocation(line: 1140, column: 10, scope: !11671)
!11679 = !DILocation(line: 1143, column: 48, scope: !11671)
!11680 = !DILocation(line: 1143, column: 40, scope: !11671)
!11681 = !DILocation(line: 1142, column: 3, scope: !11671)
!11682 = !DILocation(line: 1144, column: 10, scope: !11671)
!11683 = !DILocation(line: 1145, column: 18, scope: !11671)
!11684 = !DILocation(line: 1145, column: 13, scope: !11671)
!11685 = !DILocation(line: 1147, column: 40, scope: !11671)
!11686 = !DILocation(line: 1147, column: 32, scope: !11671)
!11687 = !DILocation(line: 1146, column: 3, scope: !11671)
!11688 = !DILocation(line: 1148, column: 10, scope: !11671)
!11689 = !DILocation(line: 1149, column: 55, scope: !11671)
!11690 = !DILocation(line: 1149, column: 47, scope: !11671)
!11691 = !DILocation(line: 1149, column: 3, scope: !11671)
!11692 = !DILocation(line: 1150, column: 10, scope: !11671)
!11693 = !DILocation(line: 1151, column: 3, scope: !11671)
!11694 = !DILocation(line: 1156, column: 22, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11663, file: !497, line: 1154, column: 3)
!11696 = !DILocation(line: 1156, column: 26, scope: !11695)
!11697 = !DILocation(line: 1156, column: 3, scope: !11695)
!11698 = !DILocation(line: 1157, column: 3, scope: !11695)
!11699 = !DILocation(line: 1163, column: 20, scope: !871)
!11700 = !DILocation(line: 1163, column: 12, scope: !871)
!11701 = !DILocation(line: 1164, column: 24, scope: !871)
!11702 = !DILocation(line: 1164, column: 28, scope: !871)
!11703 = !DILocation(line: 1164, column: 5, scope: !871)
!11704 = !DILocation(line: 1165, column: 5, scope: !871)
!11705 = !DILocation(line: 1166, column: 5, scope: !871)
!11706 = !DILocalVariable(name: "hc", arg: 1, scope: !892, file: !497, line: 897, type: !709)
!11707 = !DILocation(line: 897, column: 32, scope: !892)
!11708 = !DILocalVariable(name: "realm", arg: 2, scope: !892, file: !497, line: 897, type: !6)
!11709 = !DILocation(line: 897, column: 42, scope: !892)
!11710 = !DILocation(line: 904, column: 49, scope: !892)
!11711 = !DILocation(line: 904, column: 41, scope: !892)
!11712 = !DILocation(line: 904, column: 39, scope: !892)
!11713 = !DILocation(line: 904, column: 57, scope: !892)
!11714 = !DILocation(line: 903, column: 5, scope: !892)
!11715 = !DILocation(line: 905, column: 25, scope: !892)
!11716 = !DILocation(line: 905, column: 33, scope: !892)
!11717 = !DILocation(line: 905, column: 71, scope: !892)
!11718 = !DILocation(line: 905, column: 12, scope: !892)
!11719 = !DILocation(line: 906, column: 21, scope: !892)
!11720 = !DILocation(line: 906, column: 30, scope: !892)
!11721 = !DILocation(line: 906, column: 43, scope: !892)
!11722 = !DILocation(line: 906, column: 51, scope: !892)
!11723 = !DILocation(line: 906, column: 63, scope: !892)
!11724 = !DILocation(line: 906, column: 67, scope: !892)
!11725 = !DILocation(line: 906, column: 5, scope: !892)
!11726 = !DILocation(line: 910, column: 10, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !892, file: !497, line: 910, column: 10)
!11728 = !DILocation(line: 910, column: 14, scope: !11727)
!11729 = !DILocation(line: 910, column: 21, scope: !11727)
!11730 = !DILocation(line: 910, column: 10, scope: !892)
!11731 = !DILocation(line: 911, column: 2, scope: !11727)
!11732 = !DILocation(line: 911, column: 6, scope: !11727)
!11733 = !DILocation(line: 911, column: 20, scope: !11727)
!11734 = !DILocation(line: 912, column: 5, scope: !892)
!11735 = distinct !DISubprogram(name: "b64_decode", scope: !497, file: !497, line: 951, type: !11736, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !496, retainedNodes: !4)
!11736 = !DISubroutineType(types: !11737)
!11737 = !{!26, !88, !56, !26}
!11738 = !DILocalVariable(name: "str", arg: 1, scope: !11735, file: !497, line: 951, type: !88)
!11739 = !DILocation(line: 951, column: 25, scope: !11735)
!11740 = !DILocalVariable(name: "space", arg: 2, scope: !11735, file: !497, line: 951, type: !56)
!11741 = !DILocation(line: 951, column: 45, scope: !11735)
!11742 = !DILocalVariable(name: "size", arg: 3, scope: !11735, file: !497, line: 951, type: !26)
!11743 = !DILocation(line: 951, column: 56, scope: !11735)
!11744 = !DILocalVariable(name: "cp", scope: !11735, file: !497, line: 953, type: !88)
!11745 = !DILocation(line: 953, column: 17, scope: !11735)
!11746 = !DILocalVariable(name: "space_idx", scope: !11735, file: !497, line: 954, type: !26)
!11747 = !DILocation(line: 954, column: 9, scope: !11735)
!11748 = !DILocalVariable(name: "phase", scope: !11735, file: !497, line: 954, type: !26)
!11749 = !DILocation(line: 954, column: 20, scope: !11735)
!11750 = !DILocalVariable(name: "d", scope: !11735, file: !497, line: 955, type: !26)
!11751 = !DILocation(line: 955, column: 9, scope: !11735)
!11752 = !DILocalVariable(name: "prev_d", scope: !11735, file: !497, line: 955, type: !26)
!11753 = !DILocation(line: 955, column: 12, scope: !11735)
!11754 = !DILocalVariable(name: "c", scope: !11735, file: !497, line: 956, type: !57)
!11755 = !DILocation(line: 956, column: 19, scope: !11735)
!11756 = !DILocation(line: 958, column: 15, scope: !11735)
!11757 = !DILocation(line: 959, column: 11, scope: !11735)
!11758 = !DILocation(line: 960, column: 16, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11735, file: !497, line: 960, column: 5)
!11760 = !DILocation(line: 960, column: 14, scope: !11759)
!11761 = !DILocation(line: 960, column: 11, scope: !11759)
!11762 = !DILocation(line: 960, column: 22, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11759, file: !497, line: 960, column: 5)
!11764 = !DILocation(line: 960, column: 21, scope: !11763)
!11765 = !DILocation(line: 960, column: 25, scope: !11763)
!11766 = !DILocation(line: 960, column: 5, scope: !11759)
!11767 = !DILocation(line: 962, column: 47, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11763, file: !497, line: 961, column: 2)
!11769 = !DILocation(line: 962, column: 46, scope: !11768)
!11770 = !DILocation(line: 962, column: 23, scope: !11768)
!11771 = !DILocation(line: 962, column: 6, scope: !11768)
!11772 = !DILocation(line: 962, column: 4, scope: !11768)
!11773 = !DILocation(line: 963, column: 7, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11768, file: !497, line: 963, column: 7)
!11775 = !DILocation(line: 963, column: 9, scope: !11774)
!11776 = !DILocation(line: 963, column: 7, scope: !11768)
!11777 = !DILocation(line: 965, column: 15, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11774, file: !497, line: 964, column: 6)
!11779 = !DILocation(line: 965, column: 6, scope: !11778)
!11780 = !DILocation(line: 968, column: 3, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11778, file: !497, line: 966, column: 3)
!11782 = !DILocation(line: 969, column: 3, scope: !11781)
!11783 = !DILocation(line: 971, column: 11, scope: !11781)
!11784 = !DILocation(line: 971, column: 18, scope: !11781)
!11785 = !DILocation(line: 971, column: 31, scope: !11781)
!11786 = !DILocation(line: 971, column: 33, scope: !11781)
!11787 = !DILocation(line: 971, column: 42, scope: !11781)
!11788 = !DILocation(line: 971, column: 25, scope: !11781)
!11789 = !DILocation(line: 971, column: 7, scope: !11781)
!11790 = !DILocation(line: 971, column: 5, scope: !11781)
!11791 = !DILocation(line: 972, column: 8, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11781, file: !497, line: 972, column: 8)
!11793 = !DILocation(line: 972, column: 20, scope: !11792)
!11794 = !DILocation(line: 972, column: 18, scope: !11792)
!11795 = !DILocation(line: 972, column: 8, scope: !11781)
!11796 = !DILocation(line: 973, column: 28, scope: !11792)
!11797 = !DILocation(line: 973, column: 7, scope: !11792)
!11798 = !DILocation(line: 973, column: 22, scope: !11792)
!11799 = !DILocation(line: 973, column: 26, scope: !11792)
!11800 = !DILocation(line: 974, column: 3, scope: !11781)
!11801 = !DILocation(line: 975, column: 3, scope: !11781)
!11802 = !DILocation(line: 977, column: 13, scope: !11781)
!11803 = !DILocation(line: 977, column: 20, scope: !11781)
!11804 = !DILocation(line: 977, column: 28, scope: !11781)
!11805 = !DILocation(line: 977, column: 41, scope: !11781)
!11806 = !DILocation(line: 977, column: 43, scope: !11781)
!11807 = !DILocation(line: 977, column: 52, scope: !11781)
!11808 = !DILocation(line: 977, column: 35, scope: !11781)
!11809 = !DILocation(line: 977, column: 7, scope: !11781)
!11810 = !DILocation(line: 977, column: 5, scope: !11781)
!11811 = !DILocation(line: 978, column: 8, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11781, file: !497, line: 978, column: 8)
!11813 = !DILocation(line: 978, column: 20, scope: !11812)
!11814 = !DILocation(line: 978, column: 18, scope: !11812)
!11815 = !DILocation(line: 978, column: 8, scope: !11781)
!11816 = !DILocation(line: 979, column: 28, scope: !11812)
!11817 = !DILocation(line: 979, column: 7, scope: !11812)
!11818 = !DILocation(line: 979, column: 22, scope: !11812)
!11819 = !DILocation(line: 979, column: 26, scope: !11812)
!11820 = !DILocation(line: 980, column: 3, scope: !11781)
!11821 = !DILocation(line: 981, column: 3, scope: !11781)
!11822 = !DILocation(line: 983, column: 13, scope: !11781)
!11823 = !DILocation(line: 983, column: 20, scope: !11781)
!11824 = !DILocation(line: 983, column: 29, scope: !11781)
!11825 = !DILocation(line: 983, column: 38, scope: !11781)
!11826 = !DILocation(line: 983, column: 36, scope: !11781)
!11827 = !DILocation(line: 983, column: 7, scope: !11781)
!11828 = !DILocation(line: 983, column: 5, scope: !11781)
!11829 = !DILocation(line: 984, column: 8, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11781, file: !497, line: 984, column: 8)
!11831 = !DILocation(line: 984, column: 20, scope: !11830)
!11832 = !DILocation(line: 984, column: 18, scope: !11830)
!11833 = !DILocation(line: 984, column: 8, scope: !11781)
!11834 = !DILocation(line: 985, column: 28, scope: !11830)
!11835 = !DILocation(line: 985, column: 7, scope: !11830)
!11836 = !DILocation(line: 985, column: 22, scope: !11830)
!11837 = !DILocation(line: 985, column: 26, scope: !11830)
!11838 = !DILocation(line: 986, column: 9, scope: !11781)
!11839 = !DILocation(line: 987, column: 3, scope: !11781)
!11840 = !DILocation(line: 989, column: 15, scope: !11778)
!11841 = !DILocation(line: 989, column: 13, scope: !11778)
!11842 = !DILocation(line: 990, column: 6, scope: !11778)
!11843 = !DILocation(line: 991, column: 2, scope: !11768)
!11844 = !DILocation(line: 960, column: 34, scope: !11763)
!11845 = !DILocation(line: 960, column: 5, scope: !11763)
!11846 = distinct !{!11846, !11766, !11847}
!11847 = !DILocation(line: 991, column: 2, scope: !11759)
!11848 = !DILocation(line: 992, column: 12, scope: !11735)
!11849 = !DILocation(line: 992, column: 5, scope: !11735)
!11850 = distinct !DISubprogram(name: "httpd_read_fully", scope: !497, file: !497, line: 4216, type: !11851, scopeLine: 4217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!11851 = !DISubroutineType(types: !11852)
!11852 = !{!26, !26, !70, !264}
!11853 = !DILocalVariable(name: "fd", arg: 1, scope: !11850, file: !497, line: 4216, type: !26)
!11854 = !DILocation(line: 4216, column: 23, scope: !11850)
!11855 = !DILocalVariable(name: "buf", arg: 2, scope: !11850, file: !497, line: 4216, type: !70)
!11856 = !DILocation(line: 4216, column: 33, scope: !11850)
!11857 = !DILocalVariable(name: "nbytes", arg: 3, scope: !11850, file: !497, line: 4216, type: !264)
!11858 = !DILocation(line: 4216, column: 45, scope: !11850)
!11859 = !DILocalVariable(name: "nread", scope: !11850, file: !497, line: 4218, type: !26)
!11860 = !DILocation(line: 4218, column: 9, scope: !11850)
!11861 = !DILocation(line: 4220, column: 11, scope: !11850)
!11862 = !DILocation(line: 4221, column: 5, scope: !11850)
!11863 = !DILocation(line: 4221, column: 13, scope: !11850)
!11864 = !DILocation(line: 4221, column: 21, scope: !11850)
!11865 = !DILocation(line: 4221, column: 19, scope: !11850)
!11866 = !DILocalVariable(name: "r", scope: !11867, file: !497, line: 4223, type: !26)
!11867 = distinct !DILexicalBlock(scope: !11850, file: !497, line: 4222, column: 2)
!11868 = !DILocation(line: 4223, column: 6, scope: !11867)
!11869 = !DILocation(line: 4225, column: 12, scope: !11867)
!11870 = !DILocation(line: 4225, column: 24, scope: !11867)
!11871 = !DILocation(line: 4225, column: 30, scope: !11867)
!11872 = !DILocation(line: 4225, column: 28, scope: !11867)
!11873 = !DILocation(line: 4225, column: 37, scope: !11867)
!11874 = !DILocation(line: 4225, column: 46, scope: !11867)
!11875 = !DILocation(line: 4225, column: 44, scope: !11867)
!11876 = !DILocation(line: 4225, column: 6, scope: !11867)
!11877 = !DILocation(line: 4225, column: 4, scope: !11867)
!11878 = !DILocation(line: 4226, column: 7, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11867, file: !497, line: 4226, column: 7)
!11880 = !DILocation(line: 4226, column: 9, scope: !11879)
!11881 = !DILocation(line: 4226, column: 13, scope: !11879)
!11882 = !DILocation(line: 4226, column: 18, scope: !11879)
!11883 = !DILocation(line: 4226, column: 24, scope: !11879)
!11884 = !DILocation(line: 4226, column: 33, scope: !11879)
!11885 = !DILocation(line: 4226, column: 36, scope: !11879)
!11886 = !DILocation(line: 4226, column: 42, scope: !11879)
!11887 = !DILocation(line: 4226, column: 7, scope: !11867)
!11888 = !DILocation(line: 4228, column: 6, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11879, file: !497, line: 4227, column: 6)
!11890 = !DILocation(line: 4229, column: 6, scope: !11889)
!11891 = distinct !{!11891, !11862, !11892}
!11892 = !DILocation(line: 4236, column: 2, scope: !11850)
!11893 = !DILocation(line: 4231, column: 7, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11867, file: !497, line: 4231, column: 7)
!11895 = !DILocation(line: 4231, column: 9, scope: !11894)
!11896 = !DILocation(line: 4231, column: 7, scope: !11867)
!11897 = !DILocation(line: 4232, column: 13, scope: !11894)
!11898 = !DILocation(line: 4232, column: 6, scope: !11894)
!11899 = !DILocation(line: 4233, column: 7, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11867, file: !497, line: 4233, column: 7)
!11901 = !DILocation(line: 4233, column: 9, scope: !11900)
!11902 = !DILocation(line: 4233, column: 7, scope: !11867)
!11903 = !DILocation(line: 4234, column: 6, scope: !11900)
!11904 = !DILocation(line: 4235, column: 11, scope: !11867)
!11905 = !DILocation(line: 4235, column: 8, scope: !11867)
!11906 = !DILocation(line: 4238, column: 12, scope: !11850)
!11907 = !DILocation(line: 4238, column: 5, scope: !11850)
!11908 = !DILocation(line: 4239, column: 5, scope: !11850)
!11909 = distinct !DISubprogram(name: "httpd_logstats", scope: !497, file: !497, line: 4272, type: !3781, scopeLine: 4273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !496, retainedNodes: !4)
!11910 = !DILocalVariable(name: "secs", arg: 1, scope: !11909, file: !497, line: 4272, type: !14)
!11911 = !DILocation(line: 4272, column: 22, scope: !11909)
!11912 = !DILocation(line: 4274, column: 10, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11909, file: !497, line: 4274, column: 10)
!11914 = !DILocation(line: 4274, column: 26, scope: !11913)
!11915 = !DILocation(line: 4274, column: 10, scope: !11909)
!11916 = !DILocation(line: 4277, column: 6, scope: !11913)
!11917 = !DILocation(line: 4277, column: 39, scope: !11913)
!11918 = !DILocation(line: 4278, column: 14, scope: !11913)
!11919 = !DILocation(line: 4278, column: 6, scope: !11913)
!11920 = !DILocation(line: 4278, column: 31, scope: !11913)
!11921 = !DILocation(line: 4278, column: 29, scope: !11913)
!11922 = !DILocation(line: 4275, column: 2, scope: !11913)
!11923 = !DILocation(line: 4279, column: 5, scope: !11909)
